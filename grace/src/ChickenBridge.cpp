/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-10-14 14:29
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-04-21 on dhcp218a.music.uiuc.edu (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include "Enumerations.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);

  //printf("message='%s'\n" , s.toUTF8());

  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleMessage(CommandIDs::ConsolePrintText, s, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleMessage(CommandIDs::ConsolePrintText, s, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleMessage(CommandIDs::ConsolePrintError, s, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleMessage(CommandIDs::ConsolePrintError, s, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleMessage(CommandIDs::ConsolePrintError, s, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) 
{
  SchemeThread* sch=((GraceApp *)GraceApp::getInstance())->schemeProcess;
  // dont need a lock becuase we are in the thread
  if (sch->capturemode)
  {
    // if score capture is true AND we are under a process callback then
    // processtime will be >= 0 else it will be 0
    time=time+sch->processtime;
    ((GraceApp *)GraceApp::getInstance())->
      midiOutPort->sendNote(time, dur, key, vel, chan, true);
  }
  else
   ((GraceApp *)GraceApp::getInstance())->
      midiOutPort->sendNote(time, dur, key, vel, chan, false);
}

void mp_data(int type, double time, float chan, float data1, float data2)
{
  SchemeThread* sch=((GraceApp *)GraceApp::getInstance())->schemeProcess;
  if (sch->capturemode)
  {
    // if score capture is true AND we are under a process callback then
    // processtime will be >= 0 else it will be 0
    time=time+sch->processtime;
    ((GraceApp *)GraceApp::getInstance())->
      midiOutPort->sendData(type, time, chan, data1, data2, true) ;
  }
  else
  {
    ((GraceApp *)GraceApp::getInstance())->
      midiOutPort->sendData(type, time, chan, data1, data2, false) ;
  }
}

void mp_message(MidiMessage *m) 
{
  SchemeThread* sch=((GraceApp *)GraceApp::getInstance())->schemeProcess;
  if (sch->capturemode)
  {
    // if score capture is true AND we are under a process callback then
    // processtime will be >= 0 else it will be 0
    m->setTimeStamp(m->getTimeStamp()+sch->processtime);
    ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m, true) ;
  }
  else 
  {
   ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m,false) ;
  }
}

void mp_tuning(int div)
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiOutTuning + div, true);
}

void mp_playseq()
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiSeqPlay, true);
}

void mp_saveseq()
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiSeqSave, true);
}

void mp_copyseq()
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiSeqCopyToTrack, true);
}

void mp_plotseq()
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiSeqPlot, true);
}

void mp_clearseq()
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiSeqClear, true);
}

void mp_recordseq(bool b)
{
 int val = (b) ? CaptureModes::RecordMidiOut : CaptureModes::Off;
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiSeqRecordMidiOut + val, true);
}

void mp_setchannelmask(int m)
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiInChannelMask, m, true);
}

void mp_setmessagemask(int m)
{
 ((GraceApp *)GraceApp::getInstance())->getConsole()->
   postConsoleMessage( CommandIDs::MidiInMessageMask, m, true);
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst)
{
  MYFLT buf[len];
  char typ = (type==2) ? 'f' : 'i';
  String str = String::empty;
  int pos=-1;
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_stringp( w ) )) {
      pos=i;  // position of string parameter
      str = String(C_c_string(w), C_header_size(w));
      buf[i++] = 0.0; // pad the pars values
      //printf("stringpar=%s\n", str.toUTF8());
    }								  
    else {
      buf[i++] = 0.0;
    }
  }
  SchemeThread* sch=((GraceApp *)GraceApp::getInstance())->schemeProcess;
  CsoundScoreEv* ev=new CsoundScoreEv(typ,len,buf,str,pos);
  ((GraceApp *)GraceApp::getInstance())->
    getCsoundPort()->sendScoreEvent( ev, true, sch->capturemode);
}

void cs_record_mode(bool b) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->setRecordMode(b);
}

void cs_record_start(float f) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->setRecordStart(f);
}

void cs_trace_mode(bool b) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->setTraceMode(b);
}

void cs_clear_score() {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}

void cs_print_score(float start, float end) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->printScore(start,end);
}

void cs_play_score(float start, float end, float shift) {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->playScore(start,end,shift);
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[1032];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,54,56,54,55,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,54,56,56,57,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,54,56,57,57,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,54,57,48,53,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,55,50,51,49,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,55,50,50,48,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,55,50,50,57,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,55,49,54,55,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,55,50,49,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,55,50,52,57,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,55,50,54,52,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,7),40,100,111,49,48,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,14),40,115,104,101,108,108,32,99,109,100,49,49,53,41,0,0,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,49,56,41,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,49,57,41,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,50,48,41,0,0,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,50,49,41,0,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,50,50,41,0,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,50,51,41,0,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,49,50,52,41,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,50,53,41,0,0,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,11),40,116,97,105,108,32,108,49,50,55,41,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,51,55,41,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,51,56,32,112,111,115,49,51,57,32,118,97,108,49,52,48,41};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,22),40,100,111,49,52,52,32,105,49,52,54,32,106,49,52,55,32,116,49,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,15),40,114,101,118,101,114,115,101,33,32,108,49,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,49,53,56,32,98,49,53,57,41,0,0,0,0,0,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,49,54,48,32,98,49,54,49,41,0,0,0,0,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,49,53,52,32,46,32,111,98,106,49,53,53,41,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,25),40,100,111,49,54,55,32,116,97,105,108,49,54,57,32,105,49,55,48,32,102,49,55,49,41,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,22),40,108,105,115,116,45,105,110,100,101,120,32,112,49,54,53,32,108,49,54,54,41,0,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,25),40,100,111,49,55,56,32,116,97,105,108,49,56,48,32,120,49,56,49,32,102,49,56,50,41,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,21),40,108,105,115,116,45,102,105,110,100,32,112,49,55,54,32,108,49,55,55,41,0,0,0,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,23),40,100,111,49,56,57,32,116,97,105,108,49,57,49,32,102,108,97,103,49,57,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,18),40,101,118,101,114,121,63,32,102,49,56,55,32,108,49,56,56,41,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,57,55,32,112,114,111,112,49,57,56,32,46,32,100,101,102,49,57,57,41,0,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,12),40,100,111,50,48,53,32,102,50,48,55,41,0,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,50,48,51,32,98,50,48,52,41};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,50,52,51,50,52,54,32,97,50,52,50,50,52,55,32,97,50,52,49,50,52,56,32,97,50,52,48,50,52,57,32,97,50,51,57,50,53,48,32,97,50,51,56,50,53,49,41,0,0,0,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,50,53,56,50,54,49,32,97,50,53,55,50,54,50,32,97,50,53,54,50,54,51,32,97,50,53,53,50,54,52,32,97,50,53,52,50,54,53,32,97,50,53,51,50,54,54,41,0,0,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,16),40,116,98,58,105,110,116,32,97,50,54,55,50,55,48,41};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,29),40,116,98,58,113,117,97,110,116,105,122,101,32,97,50,55,50,50,55,53,32,97,50,55,49,50,55,54,41,0,0,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,44),40,116,98,58,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,97,50,56,48,50,56,51,32,97,50,55,57,50,56,52,32,97,50,55,56,50,56,53,41,0,0,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,26),40,116,98,58,99,101,110,116,115,45,62,115,99,97,108,101,114,32,97,50,56,55,50,57,48,41,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,26),40,116,98,58,115,99,97,108,101,114,45,62,99,101,110,116,115,32,97,50,57,50,50,57,53,41,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,44),40,116,98,58,101,120,112,108,115,101,103,32,97,50,57,57,51,48,50,32,97,50,57,56,51,48,51,32,97,50,57,55,51,48,52,32,97,50,57,54,51,48,53,41,0,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,43),40,116,98,58,103,101,111,115,101,103,32,97,51,49,48,51,49,51,32,97,51,48,57,51,49,52,32,97,51,48,56,51,49,53,32,97,51,48,55,51,49,54,41,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,51,49,56,51,50,49,41,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,45,115,101,116,33,32,97,51,51,50,51,51,53,41,0,0,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,51,51,54,51,51,57,41,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,51,52,48,51,52,51,41,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,11),40,116,98,58,114,97,110,108,111,119,41,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,104,105,103,104,41,0,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,51,54,56,51,55,49,32,97,51,54,55,51,55,50,41,0,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,51,55,52,51,55,55,41,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,51,56,54,51,56,57,41,0,0,0,0,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,51,57,52,51,57,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,112,105,110,107,41,0,0,0,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,13),40,116,98,58,114,97,110,98,114,111,119,110,41,0,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,15),40,108,111,103,49,48,32,97,52,49,51,52,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,14),40,108,111,103,50,32,97,52,49,56,52,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,12),40,97,56,51,53,56,32,122,52,50,57,41,0,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,52,50,51,32,120,49,52,50,52,32,120,50,52,50,53,32,121,49,52,50,54,32,121,50,52,50,55,32,46,32,98,52,50,56,41,0,0,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,12),40,97,56,51,57,56,32,122,52,52,49,41,0,0,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,12),40,97,56,52,50,52,32,122,52,52,50,41,0,0,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,52,51,48,32,120,49,52,51,49,32,120,50,52,51,50,32,105,49,52,51,51,32,46,32,97,114,103,115,52,51,52,41,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,52,52,52,41,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,12),40,97,56,53,49,56,32,120,52,52,54,41,0,0,0,0};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,12),40,102,108,111,97,116,32,110,52,52,53,41,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,12),40,97,56,53,55,52,32,120,52,52,56,41,0,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,16),40,112,108,117,115,32,46,32,97,114,103,115,52,52,55,41};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,12),40,97,56,54,52,51,32,120,52,53,48,41,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,17),40,116,105,109,101,115,32,46,32,97,114,103,115,52,52,57,41,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,12),40,97,56,54,57,56,32,120,52,53,51,41,0,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,24),40,109,105,110,117,115,32,97,114,103,52,53,49,32,46,32,97,114,103,115,52,53,50,41};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,12),40,97,56,55,52,49,32,120,52,53,54,41,0,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,25),40,100,105,118,105,100,101,32,97,114,103,52,53,52,32,46,32,97,114,103,115,52,53,53,41,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,12),40,97,56,55,54,54,32,110,52,53,57,41,0,0,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,52,53,55,32,115,116,101,112,115,52,53,56,41,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,12),40,97,56,55,57,48,32,118,52,54,51,41,0,0,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,118,97,108,117,101,52,54,48,32,112,108,97,99,101,115,52,54,49,41,0,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,12),40,97,56,56,51,54,32,120,53,48,52,41,0,0,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,52,54,52,32,46,32,97,114,103,115,52,54,53,41,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,23),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,53,48,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,21),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,53,48,57,41,0,0,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,15),40,100,111,53,49,56,32,116,97,105,108,53,50,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,32),40,105,110,116,101,114,112,49,32,120,53,49,48,32,99,111,111,114,100,115,53,49,49,32,98,97,115,101,53,49,50,41};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,53,50,56,32,46,32,97,114,103,115,53,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,40),40,116,101,110,100,101,110,99,121,32,120,53,51,49,32,108,111,119,53,51,50,32,104,105,103,104,53,51,51,32,46,32,97,114,103,115,53,51,52,41};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,33),40,102,105,116,49,32,110,117,109,53,52,55,32,108,98,53,52,56,32,117,98,53,52,57,32,109,111,100,101,53,53,48,41,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,12),40,97,57,51,57,49,32,110,53,53,53,41,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,34),40,102,105,116,32,110,117,109,53,52,48,32,108,98,53,52,49,32,117,98,53,52,50,32,46,32,109,111,100,101,53,52,51,41,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,27),40,100,111,53,54,55,32,105,53,54,57,32,107,53,55,48,32,108,53,55,49,32,116,53,55,50,41,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,32,108,101,110,53,53,57,32,107,101,121,110,117,109,53,54,48,32,46,32,97,114,103,115,53,54,49,41,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,14),40,114,97,110,32,46,32,110,117,109,53,55,57,41,0,0,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,53,56,49,32,98,53,56,50,41,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,53,56,51,41};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,53,56,52,32,46,32,97,114,103,115,53,56,53,41,0,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,30),40,118,97,114,121,49,32,118,97,108,54,51,49,32,118,97,114,105,54,51,50,32,109,111,100,101,54,51,51,41,0,0,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,12),40,97,57,57,50,48,32,118,54,51,56,41,0,0,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,31),40,118,97,114,121,32,118,97,108,54,50,55,32,118,97,114,105,54,50,56,32,46,32,109,111,100,101,54,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,22),40,100,111,54,52,52,32,105,54,52,54,32,106,54,52,55,32,118,54,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,15),40,115,104,117,102,102,108,101,33,32,108,54,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,19),40,115,104,117,102,102,108,101,32,46,32,97,114,103,115,54,53,51,41,0,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,54,53,52,41,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,54,57,55,41,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,54,57,56,41,0,0,0,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,54,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,55,48,48,41,0,0,0,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,12),40,100,111,55,49,50,32,105,55,49,52,41,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,15),40,100,111,55,50,56,32,116,97,105,108,55,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,17),40,100,111,55,50,52,32,105,55,50,54,32,110,55,50,55,41,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,30),40,115,101,103,115,32,110,117,109,55,48,49,32,115,117,109,55,48,50,32,46,32,97,114,103,115,55,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,8),40,97,49,48,54,48,56,41};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,8),40,97,49,48,54,50,51,41};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,55,56,49,32,111,99,116,55,56,50,32,101,114,114,55,56,51,41,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,8),40,97,49,48,54,51,56,41};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,8),40,97,49,48,54,54,48,41};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,55,56,57,32,100,111,99,116,55,57,48,32,101,114,114,63,55,57,49,41,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,39),40,100,111,55,57,52,32,116,97,105,108,55,57,54,32,100,101,102,111,55,57,55,32,116,104,105,115,55,57,56,32,114,101,115,108,55,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,55,57,50,41,0,0,0,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,39),40,100,111,56,48,56,32,116,97,105,108,56,49,48,32,100,101,102,111,56,49,49,32,116,104,105,115,56,49,50,32,114,101,115,108,56,49,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,56,48,54,41,0,0,0,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,39),40,100,111,56,50,52,32,116,97,105,108,56,50,54,32,100,101,102,111,56,50,55,32,116,104,105,115,56,50,56,32,114,101,115,108,56,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,56,50,50,41,0,0,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,9),40,112,99,32,120,56,51,56,41,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,23),40,100,111,56,52,52,32,116,97,105,108,56,52,54,32,108,97,115,116,56,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,17),40,105,110,118,107,101,121,115,32,107,101,121,115,56,52,49,41,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,13),40,97,49,49,50,50,49,32,122,56,53,49,41,0,0,0,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,13),40,105,110,118,101,114,116,32,120,56,51,57,41,0,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,23),40,100,111,56,53,57,32,116,97,105,108,56,54,49,32,108,97,115,116,56,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,28),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,56,53,54,32,111,114,105,103,56,53,55,41,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,13),40,97,49,49,51,55,52,32,122,56,54,54,41,0,0,0,0,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,21),40,116,114,97,110,115,112,111,115,101,32,120,56,53,50,32,121,56,53,51,41,0,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,18),40,97,49,49,52,51,55,32,97,56,54,57,32,98,56,55,48,41,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,18),40,97,49,49,52,57,53,32,97,56,55,49,32,98,56,55,50,41,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,32),40,115,99,97,108,101,45,111,114,100,101,114,32,115,99,97,108,101,56,54,55,32,46,32,109,111,100,101,56,54,56,41};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,48),40,109,97,107,101,45,115,112,101,99,116,114,117,109,32,116,105,109,101,57,53,56,32,115,105,122,101,57,53,57,32,102,114,101,113,115,57,54,48,32,97,109,112,115,57,54,49,41};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,16),40,115,112,101,99,116,114,117,109,63,32,120,57,54,50,41};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,116,105,109,101,32,120,57,54,54,41,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,32),40,115,112,101,99,116,114,117,109,45,115,105,122,101,45,115,101,116,33,32,120,57,54,57,32,118,97,108,57,55,48,41};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,115,105,122,101,32,120,57,55,50,41,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,33),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,45,115,101,116,33,32,120,57,55,53,32,118,97,108,57,55,54,41,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,21),40,115,112,101,99,116,114,117,109,45,102,114,101,113,115,32,120,57,55,56,41,0,0,0,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,32),40,115,112,101,99,116,114,117,109,45,97,109,112,115,45,115,101,116,33,32,120,57,56,49,32,118,97,108,57,56,50,41};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,20),40,115,112,101,99,116,114,117,109,45,97,109,112,115,32,120,57,56,52,41,0,0,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,27),40,115,112,101,99,116,114,117,109,45,99,111,112,121,32,115,112,101,99,116,114,117,109,57,57,52,41,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,14),40,100,111,49,48,48,49,32,105,49,48,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,28),40,115,112,101,99,116,114,117,109,45,112,97,105,114,115,32,115,112,101,99,116,114,117,109,57,57,53,41,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,31),40,115,112,101,99,116,114,117,109,45,109,105,110,102,114,101,113,32,115,112,101,99,116,114,117,109,49,48,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,31),40,115,112,101,99,116,114,117,109,45,109,97,120,102,114,101,113,32,115,112,101,99,116,114,117,109,49,48,48,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,14),40,97,49,49,55,57,49,32,97,49,48,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,105,110,97,109,112,32,115,112,101,99,116,114,117,109,49,48,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,14),40,97,49,49,56,50,50,32,97,49,48,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,97,120,97,109,112,32,115,112,101,99,116,114,117,109,49,48,49,54,41,0,0,0,0,0,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,8),40,100,111,49,48,51,56,41};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,8),40,100,111,49,48,52,50,41};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,56,53,50,32,104,49,48,51,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,57,50,52,32,107,49,48,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,57,53,55,32,104,49,48,53,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,15),40,102,95,49,49,57,54,55,32,104,49,48,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,20),40,97,49,50,48,50,49,32,97,49,48,53,53,32,98,49,48,53,54,41,0,0,0,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,20),40,97,49,50,48,51,54,32,97,49,48,53,55,32,98,49,48,53,56,41,0,0,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,39),40,115,112,101,99,116,114,117,109,45,107,101,121,115,32,115,112,101,99,116,114,117,109,49,48,55,48,32,46,32,97,114,103,115,49,48,55,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,35),40,100,111,49,51,50,57,32,116,97,105,108,49,51,51,49,32,115,105,122,101,49,51,51,50,32,97,109,112,108,49,51,51,51,41,0,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,26),40,100,111,49,51,48,55,32,105,49,51,48,57,32,102,49,51,49,48,32,120,49,51,49,49,41,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,24),40,100,111,49,51,48,49,32,110,101,103,49,51,48,51,32,112,111,115,49,51,48,52,41};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,24),40,102,95,56,51,50,50,32,97,52,48,55,52,49,48,32,97,52,48,54,52,49,49,41};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,26),40,100,111,49,50,56,57,32,107,49,50,57,49,32,102,49,50,57,50,32,97,49,50,57,51,41,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,46),40,102,109,45,115,112,101,99,116,114,117,109,32,99,97,114,114,105,101,114,49,50,56,49,32,109,114,97,116,105,111,49,50,56,50,32,105,110,100,101,120,49,50,56,51,41,0,0,0,0,0,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,47),40,100,111,49,51,54,55,32,102,114,101,113,115,49,51,54,57,32,97,109,112,115,49,51,55,48,32,108,97,115,116,102,49,51,55,49,32,108,97,115,116,97,49,51,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,41),40,115,112,101,99,116,114,117,109,45,97,100,100,33,32,115,112,101,99,49,51,54,52,32,102,114,101,113,49,51,54,53,32,97,109,112,49,51,54,54,41,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,16),40,103,101,116,102,114,101,113,115,32,115,49,51,57,52,41};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,15),40,103,101,116,97,109,112,115,32,115,49,51,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,36),40,115,117,109,115,45,97,110,100,45,100,105,102,102,115,32,115,49,51,57,54,32,102,49,49,51,57,55,32,102,50,49,51,57,57,41,0,0,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,15),40,100,111,49,52,49,48,32,108,49,49,52,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,15),40,100,111,49,52,48,55,32,108,50,49,52,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,15),40,100,111,49,52,49,55,32,108,49,49,52,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,15),40,100,111,49,52,50,50,32,115,50,49,52,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,33),40,114,109,45,115,112,101,99,116,114,117,109,32,115,112,101,99,49,49,51,56,57,32,115,112,101,99,50,49,51,57,48,41,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,44),40,100,111,49,52,50,57,32,109,97,120,102,49,52,51,49,32,109,105,110,102,49,52,51,50,32,116,97,105,108,49,52,51,51,32,102,108,105,112,49,52,51,52,41,0,0,0,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,25),40,115,112,101,99,116,114,117,109,45,102,108,105,112,33,32,115,112,101,99,49,52,50,56,41,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,52,56,32,116,97,105,108,49,52,53,48,41,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,53,51,32,116,97,105,108,49,52,53,53,41,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,26),40,100,111,49,51,53,49,32,116,97,105,108,49,51,53,51,32,97,109,112,108,49,51,53,52,41,0,0};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,20),40,97,49,51,57,49,50,32,97,49,51,52,55,32,98,49,51,52,56,41,0,0,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,20),40,97,49,51,57,50,54,32,97,49,51,52,53,32,98,49,51,52,54,41,0,0,0,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,55,53,32,116,97,105,108,49,52,55,55,41,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,56,48,32,116,97,105,108,49,52,56,50,41,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,17),40,100,111,49,52,54,54,32,116,97,105,108,49,52,54,56,41,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,48),40,115,112,101,99,116,114,117,109,45,114,101,115,99,97,108,101,33,32,115,112,101,99,49,52,51,56,32,109,111,100,101,49,52,51,57,32,46,32,97,114,103,115,49,52,52,48,41};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,12),40,114,104,100,114,32,112,49,53,50,49,41,0,0,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,12),40,114,100,97,116,32,112,49,53,48,48,41,0,0,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,26),40,100,111,49,53,48,51,32,105,49,53,48,53,32,97,49,53,48,54,32,102,49,53,48,55,41,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,26),40,100,111,49,53,51,52,32,108,105,110,101,49,53,51,54,32,115,112,101,99,49,53,51,55,41,0,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,8),40,100,111,49,53,50,52,41};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,8),40,97,49,52,57,48,55,41};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,30),40,105,109,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,105,108,101,49,53,49,55,41,0,0,0,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,36),40,100,111,49,53,53,57,32,102,114,101,113,115,49,53,54,49,32,97,109,112,115,49,53,54,50,32,115,105,122,101,49,53,54,51,41,0,0,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,27),40,100,111,49,53,53,51,32,116,97,105,108,49,53,53,53,32,99,111,117,110,116,49,53,53,54,41,0,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,8),40,97,49,53,48,52,50,41};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,17),40,100,111,49,53,52,55,32,116,97,105,108,49,53,52,57,41,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,41),40,101,120,112,111,114,116,45,115,112,101,97,114,45,102,114,97,109,101,115,32,102,114,97,109,101,115,49,53,52,51,32,102,105,108,101,49,53,52,52,41,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,75),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,49,53,57,53,32,108,101,110,103,116,104,49,53,57,54,32,115,116,114,101,97,109,49,53,57,55,32,100,101,102,97,117,108,116,49,53,57,56,32,111,109,105,116,49,53,57,57,32,114,101,112,115,49,54,48,48,41,0,0,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,33),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,49,54,48,50,32,118,97,108,49,54,48,51,41,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,49,54,48,53,41,0,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,49,54,49,49,41,0,0,0,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,49,54,49,55,41,0,0,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,32),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,49,54,50,54,32,118,97,108,49,54,50,55,41};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,111,109,105,116,32,120,49,54,50,57,41,0,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,114,101,112,115,32,120,49,54,51,53,41,0,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,16),40,112,97,116,116,101,114,110,63,32,120,49,54,54,49,41};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,49,54,54,53,41,0,0,0,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,33),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,49,54,54,56,32,118,97,108,49,54,54,57,41,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,49,54,55,49,41,0,0,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,49,54,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,49,54,56,48,32,118,97,108,49,54,56,49,41,0,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,49,54,56,51,41,0,0,0,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,49,54,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,49,54,57,50,32,118,97,108,49,54,57,51,41,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,15),40,102,95,49,53,52,56,53,32,120,49,54,57,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,49,54,57,56,32,118,97,108,49,54,57,57,41,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,49,55,48,49,41,0,0,0,0,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,49,55,52,48,32,118,97,108,49,55,52,49,41,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,49,55,52,51,41,0,0,0,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,14),40,97,49,53,56,54,51,32,120,49,55,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,98),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,49,55,54,51,32,100,97,116,97,49,55,54,52,32,102,111,114,49,55,54,53,32,114,101,112,49,55,54,54,32,102,108,97,103,115,49,55,54,55,32,108,101,110,49,55,54,56,32,100,112,101,114,49,55,54,57,32,103,101,116,114,49,55,55,48,32,109,97,112,114,49,55,55,49,41,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,12),40,101,111,112,63,32,120,49,55,57,56,41,0,0,0,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,12),40,101,111,100,63,32,120,49,55,57,57,41,0,0,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,20),40,100,111,49,56,48,52,32,105,49,56,48,54,32,101,49,56,48,55,41,0,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,26),40,100,111,49,56,49,49,32,110,49,56,49,51,32,101,49,56,49,52,32,102,49,56,49,53,41,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,32,111,98,106,49,56,48,48,32,46,32,97,114,103,115,49,56,48,49,41,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,8),40,100,111,49,56,51,57,41};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,26),40,100,111,49,56,51,53,32,100,121,110,63,49,56,51,55,32,115,116,111,112,49,56,51,56,41,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,16),40,110,101,120,116,45,49,32,111,98,106,49,56,50,49,41};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,56,53,57,41,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,56,54,48,32,111,98,106,49,56,54,49,41,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,14),40,97,49,54,52,51,57,32,120,49,56,55,48,41,0,0,0,0,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,56,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,23),40,97,49,54,53,51,51,32,102,110,49,57,50,50,32,111,98,106,49,57,50,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,56,55,57,32,46,32,97,114,103,115,49,56,56,48,41};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,57,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,57,52,57,41,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,57,53,50,32,118,97,108,49,57,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,23),40,97,49,54,57,54,51,32,102,110,50,48,53,48,32,111,98,106,50,48,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,57,55,56,32,46,32,97,114,103,115,49,57,55,57,41,0,0,0,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,50,48,53,57,41,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,23),40,97,49,55,54,51,48,32,102,110,50,49,50,49,32,111,98,106,50,49,50,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,50,48,55,56,32,46,32,97,114,103,115,50,48,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,50,49,50,56,41,0,0,0,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,23),40,97,49,55,57,49,55,32,102,110,50,49,55,54,32,111,98,106,50,49,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,50,49,51,51,32,46,32,97,114,103,115,50,49,51,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,26),40,100,111,50,49,56,55,32,105,50,49,56,57,32,106,50,49,57,48,32,118,50,49,57,49,41,0,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,50,49,56,51,41,0,0,0,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,23),40,97,49,56,50,54,50,32,102,110,50,50,55,49,32,111,98,106,50,50,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,50,49,57,57,32,46,32,97,114,103,115,50,50,48,48,41,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,14),40,100,111,50,50,56,55,32,105,50,50,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,50,50,56,50,32,115,116,97,114,116,50,50,56,51,32,115,116,101,112,50,50,56,52,32,119,105,100,116,104,50,50,56,53,32,101,110,100,50,50,56,54,41,0,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,50,50,56,48,41,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,50,51,49,52,41,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,50,51,49,55,32,118,97,108,50,51,49,56,41,0,0,0,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,50,51,50,48,41,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,50,51,50,54,41,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,50,51,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,50,51,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,50,51,52,49,32,118,97,108,50,51,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,50,51,52,52,41,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,14),40,97,49,57,49,52,55,32,105,50,52,50,55,41,0,0,0,0,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,23),40,97,49,57,49,52,49,32,102,110,50,52,50,53,32,111,98,106,50,52,50,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,17),40,97,49,57,51,55,56,32,105,116,101,109,50,51,56,48,41,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,50,52,51,56,41,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,50,51,55,48,32,46,32,97,114,103,115,50,51,55,49,41,0,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,37),40,100,111,50,53,50,53,32,116,97,105,108,50,53,50,55,32,105,110,100,101,120,50,53,50,56,32,116,111,116,97,108,50,53,50,57,41,0,0,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,49,57,32,116,97,105,108,50,53,50,49,41,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,50,53,49,53,32,102,105,120,63,50,53,49,54,41,0,0,0,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,27),40,100,111,50,53,52,55,32,116,97,105,108,50,53,52,57,32,105,110,100,101,120,50,53,53,48,41,0,0,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,50,53,52,53,32,114,50,53,52,54,41,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,53,54,32,116,97,105,108,50,53,53,56,41,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,17),40,100,111,50,53,53,50,32,105,116,101,109,50,53,53,52,41,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,50,53,51,53,41,0,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,23),40,97,50,48,52,54,49,32,102,110,50,54,56,52,32,111,98,106,50,54,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,14),40,97,50,48,50,49,53,32,115,50,53,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,8),40,100,111,50,53,55,56,41};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,41),40,100,111,50,54,48,48,32,116,97,105,108,50,54,48,50,32,111,114,100,101,114,50,54,48,51,32,108,105,115,50,54,48,52,32,112,50,54,48,53,41,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,50,54,49,50,32,46,32,97,114,103,115,50,54,49,51,41,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,48,57,32,116,97,105,108,50,55,49,49,41,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,33),40,100,111,50,54,57,57,32,116,97,105,108,50,55,48,49,32,111,117,116,50,55,48,50,32,115,117,109,50,55,48,51,41,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,50,54,57,55,32,111,117,116,112,117,116,115,50,54,57,56,41,0,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,17),40,100,111,50,55,51,57,32,108,97,115,116,50,55,52,49,41,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,26),40,100,111,50,55,49,53,32,105,50,55,49,55,32,106,50,55,49,56,32,102,50,55,49,57,41,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,35),40,100,111,50,55,51,48,32,116,97,105,108,50,55,51,50,32,112,97,115,116,50,55,51,51,32,105,116,101,109,50,55,51,52,41,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,50,54,57,52,41};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,50,55,53,57,41};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,14),40,97,50,49,51,51,51,32,110,50,56,50,53,41,0,0,0,0,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,23),40,97,50,49,51,50,55,32,102,110,50,56,50,51,32,111,98,106,50,56,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,28),40,97,50,49,53,55,57,32,105,116,101,109,50,56,51,53,32,46,32,97,114,103,115,50,56,51,54,41,0,0,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,50,56,51,52,41,0,0,0,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,50,55,56,48,32,46,32,97,114,103,115,50,55,56,49,41};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,56,57,32,116,97,105,108,50,56,57,49,41,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,56,56,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,14),40,97,50,50,48,48,54,32,120,50,57,53,53,41,0,0,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,31),40,97,100,100,45,111,117,116,99,111,109,101,32,112,114,101,118,50,57,53,50,32,110,101,120,116,50,57,53,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,14),40,97,50,50,48,53,52,32,122,50,57,54,51,41,0,0,0,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,14),40,97,50,50,48,54,52,32,122,50,57,54,50,41,0,0,0,0,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,27),40,98,101,102,111,114,101,63,32,120,50,57,53,55,32,121,50,57,53,56,32,108,50,57,53,57,41,0,0,0};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,16),40,97,50,50,49,54,50,32,114,111,119,51,48,56,54,41};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,54,48,32,105,51,48,54,50,32,109,51,48,54,51,41,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,53,51,32,108,51,48,53,53,41,0,0,0,0,0,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,52,54,32,105,51,48,52,56,32,109,51,48,52,57,41,0,0,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,52,48,32,105,51,48,52,50,32,109,51,48,52,51,41,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,54,54,32,120,50,57,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,17),40,100,111,51,48,51,52,32,116,97,105,108,51,48,51,54,41,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,20),40,100,111,51,48,50,52,32,105,51,48,50,54,32,109,51,48,50,55,41,0,0,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,49,57,32,108,51,48,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,49,52,32,105,51,48,49,54,41,0,0,0,0,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,20),40,97,50,50,52,53,56,32,120,51,48,49,48,32,121,51,48,49,49,41,0,0,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,14),40,100,111,51,48,48,49,32,101,51,48,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,20),40,100,111,50,57,57,53,32,101,50,57,57,55,32,115,50,57,57,56,41,0,0,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,25),40,100,111,50,57,56,55,32,116,97,105,108,50,57,56,57,32,108,101,110,50,57,57,48,41,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,20),40,97,50,50,54,48,55,32,120,50,57,56,53,32,121,50,57,56,54,41,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,29),40,100,111,50,57,55,52,32,112,114,101,118,50,57,55,54,32,106,50,57,55,55,32,120,50,57,55,56,41,0,0,0,0,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,55,49,32,105,50,57,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,35),40,109,97,114,107,111,118,45,97,110,97,108,121,122,101,32,115,101,113,50,56,57,55,32,46,32,97,114,103,115,50,56,57,56,41,0,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,51,49,51,48,32,115,116,114,105,110,103,51,49,51,49,32,112,111,115,105,116,105,111,110,51,49,51,50,41,0,0,0,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,51,49,51,55,41,0,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,51,49,52,51,41,0,0,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,51,49,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,51,49,53,56,41,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,51,49,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,51,49,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,51,49,54,51,32,116,121,112,101,51,49,54,52,32,112,97,116,116,101,114,110,51,49,54,53,32,112,97,114,115,101,114,51,49,54,54,32,101,109,105,116,101,114,51,49,54,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,51,49,55,50,41,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,51,50,49,54,32,100,101,102,51,50,49,55,41,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,51,50,49,57,41,0,0,0,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,51,50,50,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,51,50,50,50,41,0,0,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,51,50,50,51,41,0,0,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,51,50,50,52,32,105,51,50,50,53,41,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,51,50,50,57,41,0,0,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,51,50,51,49,32,112,111,115,105,116,105,111,110,51,50,51,50,41,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,51,50,51,55,41,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,51,50,52,51,41,0,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,51,50,53,49,32,112,97,114,115,101,100,51,50,53,50,32,112,111,115,105,116,105,111,110,51,50,53,51,41,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,51,50,53,52,41,0,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,51,50,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,51,50,54,52,41,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,51,50,55,48,41,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,51,50,56,48,41,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,51,50,56,49,32,116,121,112,51,50,56,50,41,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,51,50,56,52,32,105,110,102,111,51,50,56,53,41,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,51,50,56,55,32,100,97,116,97,51,50,56,56,32,105,110,102,111,51,50,56,57,41,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,51,50,57,48,32,100,97,116,97,51,50,57,49,32,105,110,102,111,51,50,57,50,41,0,0,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,51,50,57,53,32,105,110,102,111,51,50,57,54,32,101,114,114,102,51,50,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,51,50,57,56,32,105,110,102,111,51,50,57,57,32,101,114,114,102,51,51,48,48,41,0,0,0,0,0};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,15),40,33,61,32,46,32,110,117,109,115,51,51,48,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,27),40,102,95,50,51,55,53,53,32,97,114,103,115,51,51,49,51,32,101,114,114,102,51,51,49,52,41,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,51,51,49,50,41,0,0,0,0,0};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,50,50,32,116,97,105,108,51,51,50,52,41,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,36),40,102,95,50,51,55,54,51,32,117,110,105,116,51,51,49,54,32,105,110,102,111,51,51,49,55,32,101,114,114,102,51,51,49,56,41,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,51,51,49,53,41,0,0,0,0,0,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,8),40,97,50,51,57,54,49,41};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,26),40,97,50,51,57,55,49,32,97,51,51,53,52,32,98,51,51,53,53,32,99,51,51,53,54,41,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,8),40,97,50,52,48,54,55,41};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,26),40,97,50,52,48,56,49,32,97,51,51,55,48,32,98,51,51,55,49,32,99,51,51,55,50,41,0,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,14),40,100,111,51,51,54,53,32,105,51,51,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,8),40,97,50,52,49,51,52,41};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,26),40,97,50,52,49,52,56,32,97,51,51,57,50,32,98,51,51,57,51,32,99,51,51,57,52,41,0,0};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,14),40,100,111,51,51,56,55,32,105,51,51,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,8),40,97,50,52,50,50,51,41};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,26),40,97,50,52,50,50,57,32,97,51,52,49,49,32,98,51,52,49,50,32,99,51,52,49,51,41,0,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,8),40,100,111,51,52,48,55,41};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,8),40,97,50,52,50,54,50,41};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,26),40,97,50,52,50,54,56,32,97,51,52,50,57,32,98,51,52,51,48,32,99,51,52,51,49,41,0,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,51,51,52,49,32,116,111,107,101,110,115,51,51,52,50,32,102,111,114,99,101,45,97,110,100,51,51,52,51,32,108,101,118,101,108,51,51,52,52,32,116,114,97,99,101,51,51,52,53,32,101,114,114,102,51,51,52,54,41,0,0,0,0,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,51,54,48,54,41,0,0,0,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,51,54,49,48,41,0,0};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,51,54,49,57,41,0,0,0,0};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,51,54,50,48,32,116,121,112,50,51,54,50,49,41,0,0,0,0,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,17),40,100,111,51,54,55,48,32,116,111,107,115,51,54,55,50,41,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,51,54,54,54,32,116,121,112,51,54,54,55,41,0,0,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,51,54,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,29),40,100,111,51,55,48,54,32,119,50,51,55,48,56,32,111,107,51,55,48,57,32,108,105,51,55,49,48,41,0,0,0,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,8),40,100,111,51,55,48,52,41};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,51,54,57,57,41,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,51,56,54,53,32,101,114,114,102,51,56,54,54,41,0,0,0,0,0,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,14),40,100,111,52,48,56,51,32,102,52,48,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,14),40,100,111,52,48,55,54,32,102,52,48,55,56,41,0,0,0,0,0,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,8),40,97,50,51,56,51,50,41};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,44),40,97,50,51,56,51,57,32,115,117,99,99,101,115,115,51,51,51,54,32,114,101,115,117,108,116,115,51,51,51,55,32,114,101,109,97,105,110,115,51,51,51,56,41,0,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,17),40,97,50,51,56,50,54,32,101,114,114,102,51,51,51,52,41,0};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,52,48,54,48,32,114,117,108,101,52,48,54,49,32,116,111,107,101,110,115,52,48,54,50,32,116,114,97,99,101,63,52,48,54,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,17),40,100,111,52,49,48,51,32,116,97,105,108,52,49,48,53,41,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,27),40,112,114,105,110,116,101,114,32,116,104,105,110,103,52,49,48,49,32,108,101,118,52,49,48,50,41,0,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,17),40,100,111,52,49,49,49,32,116,97,105,108,52,49,49,51,41,0};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,52,48,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,52,49,49,56,41,0,0,0,0};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,52,49,50,48,41,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,52,49,50,53,41,0,0,0,0,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,52,49,50,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,52,50,53,55,32,120,52,50,53,56,41};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,52,50,53,57,41,0,0,0,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,52,50,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,52,50,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,52,50,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,52,50,55,49,41,0,0,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,52,50,55,50,32,120,52,50,55,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,52,50,55,52,41,0,0,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,52,50,55,55,41,0,0,0,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,52,50,56,48,41,0,0,0,0,0,0};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,14),40,100,111,52,50,56,53,32,97,52,50,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,52,50,56,51,41,0,0,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,14),40,100,111,52,50,57,55,32,108,52,50,57,57,41,0,0,0,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,52,50,57,53,32,97,99,99,101,115,115,111,114,52,50,57,54,41};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,52,50,57,50,32,99,108,97,117,115,101,115,52,50,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,52,51,48,51,32,111,112,115,52,51,48,52,41};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,52,51,48,53,41,0,0,0,0,0,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,52,51,48,54,32,118,97,108,52,51,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,50,57,32,116,97,105,108,52,51,51,49,41,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,50,52,32,116,97,105,108,52,51,50,54,41,0};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,20),40,100,111,52,51,49,52,32,104,52,51,49,54,32,108,52,51,49,55,41,0,0,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,52,51,48,56,32,102,111,114,109,115,52,51,48,57,32,97,114,103,115,52,51,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,52,51,52,51,32,99,108,97,117,115,101,115,52,51,52,52,32,111,112,115,52,51,52,53,41,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,17),40,100,111,52,51,54,51,32,110,101,120,116,52,51,54,53,41,0};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,52,51,52,57,32,99,108,97,117,115,101,115,52,51,53,48,32,111,112,115,52,51,53,49,41,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,8),40,97,50,55,52,57,53,41};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,30),40,97,50,55,53,49,51,32,99,108,97,117,115,101,52,52,52,52,32,105,103,110,111,114,101,52,52,52,53,41,0,0,0,0,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,52,52,52,49,32,99,108,97,117,115,101,115,52,52,52,50,32,111,112,115,52,52,52,51,41,0,0,0,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,17),40,100,111,52,52,54,50,32,110,101,120,116,52,52,54,52,41,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,52,52,55,32,99,108,97,117,115,101,115,52,52,52,56,32,111,112,115,52,52,52,57,41};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,17),40,100,111,52,53,50,57,32,110,101,120,116,52,53,51,49,41,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,53,49,57,32,99,108,97,117,115,101,115,52,53,50,48,32,111,112,115,52,53,50,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,26),40,100,111,52,53,54,55,32,110,101,101,100,52,53,54,57,32,110,101,120,116,52,53,55,48,41,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,52,53,53,55,32,99,108,97,117,115,101,115,52,53,53,56,32,111,112,115,52,53,53,57,41,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,8),40,100,111,52,54,49,49,41};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,52,54,48,50,32,99,108,97,117,115,101,115,52,54,48,51,32,111,112,115,52,54,48,52,41};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,52,54,50,49,32,99,108,97,117,115,101,115,52,54,50,50,32,111,112,115,52,54,50,51,41,0,0,0,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,52,54,51,53,32,99,108,97,117,115,101,115,52,54,51,54,32,111,112,115,52,54,51,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,52,55,48,50,32,116,121,112,101,52,55,48,51,32,97,99,99,52,55,48,52,32,104,101,97,100,52,55,48,53,41,0,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,52,55,48,54,41};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,52,55,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,14),40,100,111,52,54,53,52,32,97,52,54,53,54,41,0,0,0,0,0,0};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,14),40,100,111,52,54,54,50,32,99,52,54,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,52,54,56,49,32,99,108,97,117,115,101,115,52,54,56,50,32,111,112,115,52,54,56,51,41,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,52,55,56,50,41,0,0,0,0,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,52,55,56,51,32,99,108,97,117,115,101,115,52,55,56,52,32,111,112,115,52,55,56,53,41,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,52,56,48,52,32,99,108,97,117,115,101,115,52,56,48,53,32,111,112,115,52,56,48,54,41,0,0,0,0,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,52,56,50,48,32,99,108,97,117,115,101,115,52,56,50,49,32,111,112,115,52,56,50,50,41,0,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,8),40,97,50,57,51,56,54,41};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,20),40,97,50,57,51,57,57,32,97,52,56,52,55,32,98,52,56,52,56,41,0,0,0,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,38),40,100,111,52,56,52,48,32,111,112,52,56,52,50,32,99,108,97,117,115,101,52,56,52,51,32,114,101,109,97,105,110,115,52,56,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,52,56,51,52,32,99,108,97,117,115,101,115,52,56,51,53,32,111,112,115,52,56,51,54,41,0,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,8),40,97,50,57,53,53,48,41};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,20),40,97,50,57,53,54,52,32,97,52,56,55,54,32,98,52,56,55,55,41,0,0,0,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,8),40,97,50,57,54,50,56,41};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,20),40,97,50,57,54,51,52,32,97,52,56,55,51,32,98,52,56,55,52,41,0,0,0,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,52,56,54,48,32,99,108,97,117,115,101,115,52,56,54,49,32,111,112,115,52,56,54,50,41,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,52,57,48,51,32,116,121,112,101,52,57,48,52,41,0,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,8),40,97,50,57,55,55,54,41};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,20),40,97,50,57,55,56,53,32,97,52,57,49,54,32,98,52,57,49,55,41,0,0,0,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,47),40,100,111,52,57,48,55,32,111,112,52,57,48,57,32,99,108,97,117,115,101,52,57,49,48,32,114,101,109,97,105,110,115,52,57,49,49,32,98,111,100,121,52,57,49,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,52,57,50,57,32,102,111,114,109,115,52,57,51,48,32,111,112,115,52,57,51,49,41,0,0,0,0,0,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,49,57,56,32,97,53,49,48,56,53,49,49,49,32,97,53,49,48,55,53,49,49,50,32,97,53,49,48,54,53,49,49,51,32,97,53,49,48,53,53,49,49,52,32,97,53,49,48,52,53,49,49,53,41,0,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,52,57,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,57,49,50,32,97,53,49,50,52,53,49,50,56,32,97,53,49,50,51,53,49,50,57,41,0,0,0,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,53,49,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,57,52,51,32,97,53,50,48,51,53,50,48,54,32,97,53,50,48,50,53,50,48,55,32,97,53,50,48,49,53,50,48,56,32,97,53,50,48,48,53,50,48,57,32,97,53,49,57,57,53,50,49,48,41,0,0,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,53,49,51,49,41};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,51,56,50,32,97,53,50,49,56,53,50,50,50,32,97,53,50,49,55,53,50,50,51,41,0,0,0,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,53,50,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,52,49,54,32,97,53,51,51,52,53,51,51,55,32,97,53,51,51,51,53,51,51,56,32,97,53,51,51,50,53,51,51,57,32,97,53,51,51,49,53,51,52,48,32,97,53,51,51,48,53,51,52,49,41,0,0,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,53,50,50,53,41,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,29),40,102,95,51,50,49,51,48,32,97,53,51,53,48,53,51,53,52,32,97,53,51,52,57,53,51,53,53,41,0,0,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,53,51,52,56,41,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,59),40,102,95,51,50,49,54,52,32,97,53,52,54,54,53,52,54,57,32,97,53,52,54,53,53,52,55,48,32,97,53,52,54,52,53,52,55,49,32,97,53,52,54,51,53,52,55,50,32,97,53,52,54,50,53,52,55,51,41,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,53,51,53,55,41,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,29),40,102,95,51,50,56,55,56,32,97,53,52,56,50,53,52,56,54,32,97,53,52,56,49,53,52,56,55,41,0,0,0,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,53,52,56,48,41};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,59),40,102,95,51,50,57,48,57,32,97,53,53,54,49,53,53,54,52,32,97,53,53,54,48,53,53,54,53,32,97,53,53,53,57,53,53,54,54,32,97,53,53,53,56,53,53,54,55,32,97,53,53,53,55,53,53,54,56,41,0,0,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,53,52,56,57,41,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,51,52,56,32,97,53,53,55,54,53,53,56,48,32,97,53,53,55,53,53,53,56,49,41,0,0,0,0,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,53,53,55,52,41};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,51,55,57,32,97,53,54,53,53,53,54,53,56,32,97,53,54,53,52,53,54,53,57,32,97,53,54,53,51,53,54,54,48,32,97,53,54,53,50,53,54,54,49,32,97,53,54,53,49,53,54,54,50,41,0,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,53,53,56,51,41,0,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,29),40,102,95,51,51,56,49,56,32,97,53,54,55,48,53,54,55,52,32,97,53,54,54,57,53,54,55,53,41,0,0,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,53,54,54,56,41,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,59),40,102,95,51,51,56,52,57,32,97,53,55,52,57,53,55,53,50,32,97,53,55,52,56,53,55,53,51,32,97,53,55,52,55,53,55,53,52,32,97,53,55,52,54,53,55,53,53,32,97,53,55,52,53,53,55,53,54,41,0,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,53,54,55,55,41,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,51,49,48,32,97,53,55,55,50,53,55,55,54,41,0,0,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,53,55,55,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,51,50,53,32,97,53,55,56,48,53,55,56,52,41,0,0,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,53,55,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,51,52,48,32,97,53,55,56,56,53,55,57,50,41,0,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,53,55,56,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,51,53,53,32,97,53,55,57,56,53,56,48,50,32,97,53,55,57,55,53,56,48,51,41,0,0,0,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,53,55,57,53,32,116,53,55,57,54,41,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,51,55,52,32,97,53,56,48,55,53,56,49,49,41,0,0,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,53,56,48,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,51,56,57,32,97,53,56,49,54,53,56,50,48,32,97,53,56,49,53,53,56,50,49,41,0,0,0,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,53,56,49,51,32,99,53,56,49,52,41,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,52,48,56,32,97,53,56,50,54,53,56,51,48,32,97,53,56,50,53,53,56,51,49,41,0,0,0,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,53,56,50,52,41,0,0,0,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,52,50,55,32,97,53,56,51,55,53,56,52,49,32,97,53,56,51,54,53,56,52,50,32,97,53,56,51,53,53,56,52,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,53,56,51,51,32,107,53,56,51,52,41,0};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,52,53,48,32,97,53,56,52,56,53,56,53,50,32,97,53,56,52,55,53,56,53,51,41,0,0,0,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,53,56,52,54,41,0,0,0,0,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,52,54,57,32,97,53,56,53,57,53,56,54,51,32,97,53,56,53,56,53,56,54,52,32,97,53,56,53,55,53,56,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,53,56,53,53,32,118,53,56,53,54,41,0};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,53,48,49,32,97,53,56,55,50,53,56,55,54,32,97,53,56,55,49,53,56,55,55,41,0,0,0,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,53,49,55,32,97,53,56,56,48,53,56,56,52,32,97,53,56,55,57,53,56,56,53,41,0,0,0,0,0};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,53,56,54,56,41,0,0,0,0,0,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,53,52,56,32,97,53,56,57,51,53,56,57,55,32,97,53,56,57,50,53,56,57,56,32,97,53,56,57,49,53,56,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,53,54,56,32,97,53,57,48,51,53,57,48,55,32,97,53,57,48,50,53,57,48,56,32,97,53,57,48,49,53,57,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,53,56,56,55,32,118,53,56,56,56,41,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,29),40,102,95,51,52,53,57,52,32,97,53,57,49,52,53,57,49,56,32,97,53,57,49,51,53,57,49,57,41,0,0,0,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,53,57,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,39),40,102,95,51,52,54,49,51,32,97,53,57,50,53,53,57,50,57,32,97,53,57,50,52,53,57,51,48,32,97,53,57,50,51,53,57,51,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,53,57,50,49,32,118,53,57,50,50,41,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,54,51,54,32,97,53,57,52,51,53,57,52,54,32,97,53,57,52,50,53,57,52,55,32,97,53,57,52,49,53,57,52,56,32,97,53,57,52,48,53,57,52,57,32,97,53,57,51,57,53,57,53,48,41,0,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,53,57,51,52,32,100,117,114,53,57,51,53,32,107,101,121,53,57,51,54,32,97,109,112,53,57,51,55,32,99,104,97,110,53,57,51,56,41,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,54,54,52,32,97,53,57,54,48,53,57,54,51,32,97,53,57,53,57,53,57,54,52,32,97,53,57,53,56,53,57,54,53,32,97,53,57,53,55,53,57,54,54,32,97,53,57,53,54,53,57,54,55,41,0,0,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,53,57,53,49,32,100,117,114,53,57,53,50,32,107,101,121,53,57,53,51,32,97,109,112,53,57,53,52,32,99,104,97,110,53,57,53,53,41,0,0,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,54,57,50,32,97,53,57,55,53,53,57,55,56,32,97,53,57,55,52,53,57,55,57,32,97,53,57,55,51,53,57,56,48,32,97,53,57,55,50,53,57,56,49,32,97,53,57,55,49,53,57,56,50,41,0,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,53,57,54,56,32,107,101,121,53,57,54,57,32,99,104,97,110,53,57,55,48,41,0,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,55,50,48,32,97,53,57,57,49,53,57,57,52,32,97,53,57,57,48,53,57,57,53,32,97,53,57,56,57,53,57,57,54,32,97,53,57,56,56,53,57,57,55,32,97,53,57,56,55,53,57,57,56,41,0,0,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,53,57,56,51,32,107,101,121,53,57,56,52,32,118,101,108,53,57,56,53,32,99,104,97,110,53,57,56,54,41,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,55,52,56,32,97,54,48,48,55,54,48,49,48,32,97,54,48,48,54,54,48,49,49,32,97,54,48,48,53,54,48,49,50,32,97,54,48,48,52,54,48,49,51,32,97,54,48,48,51,54,48,49,52,41,0,0,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,53,57,57,57,32,107,101,121,54,48,48,48,32,118,97,108,54,48,48,49,32,99,104,97,110,54,48,48,50,41,0,0,0,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,55,55,54,32,97,54,48,50,51,54,48,50,54,32,97,54,48,50,50,54,48,50,55,32,97,54,48,50,49,54,48,50,56,32,97,54,48,50,48,54,48,50,57,32,97,54,48,49,57,54,48,51,48,41,0,0,0};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,54,48,49,53,32,110,117,109,54,48,49,54,32,118,97,108,54,48,49,55,32,99,104,97,110,54,48,49,56,41,0,0,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,56,48,52,32,97,54,48,51,56,54,48,52,49,32,97,54,48,51,55,54,48,52,50,32,97,54,48,51,54,54,48,52,51,32,97,54,48,51,53,54,48,52,52,32,97,54,48,51,52,54,48,52,53,41,0,0,0};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,54,48,51,49,32,118,97,108,54,48,51,50,32,99,104,97,110,54,48,51,51,41,0,0,0};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,56,51,50,32,97,54,48,53,51,54,48,53,54,32,97,54,48,53,50,54,48,53,55,32,97,54,48,53,49,54,48,53,56,32,97,54,48,53,48,54,48,53,57,32,97,54,48,52,57,54,48,54,48,41,0,0,0};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,54,48,52,54,32,118,97,108,54,48,52,55,32,99,104,97,110,54,48,52,56,41,0,0,0,0};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,59),40,102,95,51,52,56,54,48,32,97,54,48,54,56,54,48,55,49,32,97,54,48,54,55,54,48,55,50,32,97,54,48,54,54,54,48,55,51,32,97,54,48,54,53,54,48,55,52,32,97,54,48,54,52,54,48,55,53,41,0,0,0};
static C_char C_TLS li544[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,54,48,54,49,32,118,97,108,54,48,54,50,32,99,104,97,110,54,48,54,51,41,0,0,0};
static C_char C_TLS li545[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,56,56,56,32,97,54,48,55,55,54,48,56,49,41,0,0,0};
static C_char C_TLS li546[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,54,48,55,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li547[] C_aligned={C_lihdr(0,0,17),40,97,51,52,57,50,49,32,37,101,114,114,54,48,57,48,41,0};
static C_char C_TLS li548[] C_aligned={C_lihdr(0,0,8),40,97,51,52,57,52,49,41};
static C_char C_TLS li549[] C_aligned={C_lihdr(0,0,18),40,97,51,52,57,49,53,32,37,99,111,110,116,54,48,56,57,41,0,0};
static C_char C_TLS li550[] C_aligned={C_lihdr(0,0,17),40,97,51,52,57,48,57,32,37,109,115,103,54,48,56,56,41,0};
static C_char C_TLS li551[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,57,52,55,32,97,54,48,56,52,54,48,56,55,41,0,0,0};
static C_char C_TLS li552[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,57,53,50,32,97,54,48,57,51,54,48,57,54,41,0,0,0};
static C_char C_TLS li553[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,54,48,56,51,41,0,0,0,0,0};
static C_char C_TLS li554[] C_aligned={C_lihdr(0,0,19),40,102,95,51,52,57,54,51,32,97,54,49,48,52,54,49,48,55,41,0,0,0};
static C_char C_TLS li555[] C_aligned={C_lihdr(0,0,14),40,100,111,54,48,57,57,32,97,54,49,48,49,41,0,0,0,0,0,0};
static C_char C_TLS li556[] C_aligned={C_lihdr(0,0,23),40,109,112,58,105,110,99,104,97,110,115,32,46,32,97,114,103,115,54,48,57,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li557[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,48,55,52,32,97,54,49,49,54,54,49,49,57,41,0,0,0};
static C_char C_TLS li558[] C_aligned={C_lihdr(0,0,14),40,100,111,54,49,49,49,32,97,54,49,49,51,41,0,0,0,0,0,0};
static C_char C_TLS li559[] C_aligned={C_lihdr(0,0,23),40,109,112,58,105,110,116,121,112,101,115,32,46,32,97,114,103,115,54,49,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li560[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,49,57,56,32,97,54,49,50,51,54,49,50,54,41,0,0,0};
static C_char C_TLS li561[] C_aligned={C_lihdr(0,0,22),40,109,112,58,116,117,110,105,110,103,32,46,32,97,114,103,115,54,49,50,49,41,0,0,0,0,0,0};
static C_char C_TLS li562[] C_aligned={C_lihdr(0,0,9),40,102,95,51,53,50,50,56,41,0};
static C_char C_TLS li563[] C_aligned={C_lihdr(0,0,12),40,109,112,58,112,108,97,121,115,101,113,41,0,0,0,0};
static C_char C_TLS li564[] C_aligned={C_lihdr(0,0,9),40,102,95,51,53,50,51,57,41,0};
static C_char C_TLS li565[] C_aligned={C_lihdr(0,0,12),40,109,112,58,115,97,118,101,115,101,113,41,0,0,0,0};
static C_char C_TLS li566[] C_aligned={C_lihdr(0,0,9),40,102,95,51,53,50,53,48,41,0};
static C_char C_TLS li567[] C_aligned={C_lihdr(0,0,12),40,109,112,58,99,111,112,121,115,101,113,41,0,0,0,0};
static C_char C_TLS li568[] C_aligned={C_lihdr(0,0,9),40,102,95,51,53,50,54,49,41,0};
static C_char C_TLS li569[] C_aligned={C_lihdr(0,0,12),40,109,112,58,112,108,111,116,115,101,113,41,0,0,0,0};
static C_char C_TLS li570[] C_aligned={C_lihdr(0,0,9),40,102,95,51,53,50,55,50,41,0};
static C_char C_TLS li571[] C_aligned={C_lihdr(0,0,13),40,109,112,58,99,108,101,97,114,115,101,113,41,0,0,0,0,0};
static C_char C_TLS li572[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,50,56,54,32,97,54,49,52,53,54,49,52,56,41,0,0,0};
static C_char C_TLS li573[] C_aligned={C_lihdr(0,0,25),40,109,112,58,114,101,99,111,114,100,115,101,113,32,46,32,97,114,103,115,54,49,52,51,41,0};
static C_char C_TLS li574[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,51,54,54,32,97,54,50,50,53,54,50,50,56,41,0,0,0};
static C_char C_TLS li575[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,51,56,48,32,97,54,50,51,51,54,50,51,54,41,0,0,0};
static C_char C_TLS li576[] C_aligned={C_lihdr(0,0,19),40,102,95,51,53,51,56,50,32,97,54,50,50,57,54,50,51,50,41,0,0,0};
static C_char C_TLS li577[] C_aligned={C_lihdr(0,0,19),40,99,115,58,114,101,99,111,114,100,32,118,97,108,54,50,50,52,41,0,0,0};
static C_char C_TLS li578[] C_aligned={C_lihdr(0,0,9),40,102,95,51,53,52,48,51,41,0};
static C_char C_TLS li579[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li580[] C_aligned={C_lihdr(0,0,39),40,102,95,51,53,52,50,55,32,97,54,50,52,51,54,50,52,54,32,97,54,50,52,50,54,50,52,55,32,97,54,50,52,49,54,50,52,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li581[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,54,50,52,48,41,0};
static C_char C_TLS li582[] C_aligned={C_lihdr(0,0,39),40,102,95,51,53,52,56,52,32,97,54,50,53,52,54,50,53,55,32,97,54,50,53,51,54,50,53,56,32,97,54,50,53,50,54,50,53,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li583[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,54,50,53,49,41,0};
static C_char C_TLS li584[] C_aligned={C_lihdr(0,0,29),40,102,95,51,53,53,51,55,32,97,54,51,48,50,54,51,48,53,32,97,54,51,48,49,54,51,48,54,41,0,0,0,0,0};
static C_char C_TLS li585[] C_aligned={C_lihdr(0,0,21),40,99,115,58,112,114,105,110,116,32,46,32,97,114,103,115,54,50,54,50,41,0,0,0,0,0};
static C_char C_TLS li586[] C_aligned={C_lihdr(0,0,39),40,102,95,51,53,55,55,56,32,97,54,51,56,49,54,51,56,52,32,97,54,51,56,48,54,51,56,53,32,97,54,51,55,57,54,51,56,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li587[] C_aligned={C_lihdr(0,0,20),40,99,115,58,112,108,97,121,32,46,32,97,114,103,115,54,51,49,49,41,0,0,0,0};
static C_char C_TLS li588[] C_aligned={C_lihdr(0,0,14),40,100,111,54,52,50,48,32,120,54,52,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li589[] C_aligned={C_lihdr(0,0,26),40,100,111,54,52,48,54,32,101,54,52,49,55,32,118,54,52,49,56,32,121,54,52,49,57,41,0,0};
static C_char C_TLS li590[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,54,52,48,53,41,0,0};
static C_char C_TLS li591[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,54,52,51,49,54,52,51,53,41,0};
static C_char C_TLS li592[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,54,52,51,55,54,52,52,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li593[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li594[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,54,52,52,53,54,52,52,56,32,97,54,52,52,52,54,52,52,57,32,97,54,52,52,51,54,52,53,48,41};
static C_char C_TLS li595[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li596[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,54,52,54,53,54,52,54,56,41,0,0};
static C_char C_TLS li597[] C_aligned={C_lihdr(0,0,19),40,102,95,51,54,53,50,49,32,97,54,52,55,54,54,52,56,48,41,0,0,0};
static C_char C_TLS li598[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,54,52,55,53,41};
static C_char C_TLS li599[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li600[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li601[] C_aligned={C_lihdr(0,0,14),40,100,111,54,53,48,53,32,112,54,53,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li602[] C_aligned={C_lihdr(0,0,14),40,100,111,54,53,48,48,32,112,54,53,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li603[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,54,52,56,54,32,115,116,97,114,116,54,52,57,50,32,105,100,54,52,57,51,41,0,0,0};
static C_char C_TLS li604[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,54,52,56,57,32,37,115,116,97,114,116,54,52,56,52,54,53,49,52,41,0,0,0};
static C_char C_TLS li605[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,54,52,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li606[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,54,52,56,50,32,46,32,97,114,103,115,54,52,56,51,41,0,0,0,0};
static C_char C_TLS li607[] C_aligned={C_lihdr(0,0,5),40,110,111,119,41,0,0,0,0,0};
static C_char C_TLS li608[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li609[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li610[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li611[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li612[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li613[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li614[] C_aligned={C_lihdr(0,0,17),40,100,111,54,53,50,55,32,116,97,105,108,54,53,50,57,41,0};
static C_char C_TLS li615[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,54,53,50,54,41,0,0,0};
static C_char C_TLS li616[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li617[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li618[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,54,53,51,52,32,99,108,97,117,115,101,115,54,53,51,53,32,111,112,115,54,53,51,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li619[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,54,53,54,52,32,115,116,111,112,54,53,54,53,41,0,0,0,0};
static C_char C_TLS li620[] C_aligned={C_lihdr(0,0,31),40,97,51,55,50,49,48,32,102,111,114,109,97,108,115,54,53,56,53,32,46,32,98,111,100,121,54,53,56,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li621[] C_aligned={C_lihdr(0,0,17),40,97,51,55,50,51,57,32,97,114,103,115,54,53,56,52,41,0};
static C_char C_TLS li622[] C_aligned={C_lihdr(0,0,16),40,100,111,54,53,53,55,32,111,112,115,54,53,53,57,41};
static C_char C_TLS li623[] C_aligned={C_lihdr(0,0,17),40,97,51,55,51,48,56,32,97,114,103,115,52,57,52,50,41,0};
static C_char C_TLS li624[] C_aligned={C_lihdr(0,0,16),40,97,51,55,52,53,48,32,115,121,109,52,50,53,53,41};
static C_char C_TLS li625[] C_aligned={C_lihdr(0,0,16),40,97,51,55,52,53,51,32,115,121,109,52,50,53,51,41};
static C_char C_TLS li626[] C_aligned={C_lihdr(0,0,24),40,97,51,55,52,56,50,32,118,97,108,52,50,53,49,32,115,121,109,52,50,53,50,41};
static C_char C_TLS li627[] C_aligned={C_lihdr(0,0,17),40,97,51,55,52,57,54,32,97,114,103,115,52,50,53,48,41,0};
static C_char C_TLS li628[] C_aligned={C_lihdr(0,0,26),40,97,51,55,53,49,48,32,97,114,103,115,52,48,53,53,32,101,114,114,102,52,48,53,54,41,0,0};
static C_char C_TLS li629[] C_aligned={C_lihdr(0,0,35),40,97,51,55,53,50,52,32,117,110,105,116,52,48,53,55,32,105,110,102,111,52,48,53,56,32,101,114,114,102,52,48,53,57,41,0,0,0};
static C_char C_TLS li630[] C_aligned={C_lihdr(0,0,26),40,97,51,55,54,51,48,32,97,114,103,115,52,48,48,52,32,101,114,114,102,52,48,48,53,41,0,0};
static C_char C_TLS li631[] C_aligned={C_lihdr(0,0,17),40,100,111,52,48,49,54,32,114,101,115,116,52,48,49,56,41,0};
static C_char C_TLS li632[] C_aligned={C_lihdr(0,0,26),40,100,111,52,48,52,50,32,97,114,103,115,52,48,52,52,32,116,97,105,108,52,48,52,53,41,0,0};
static C_char C_TLS li633[] C_aligned={C_lihdr(0,0,35),40,97,51,55,54,54,57,32,117,110,105,116,52,48,48,57,32,105,110,102,111,52,48,49,48,32,101,114,114,102,52,48,49,49,41,0,0,0};
static C_char C_TLS li634[] C_aligned={C_lihdr(0,0,26),40,97,51,56,48,56,55,32,97,114,103,115,51,57,57,55,32,101,114,114,102,51,57,57,56,41,0,0};
static C_char C_TLS li635[] C_aligned={C_lihdr(0,0,26),40,97,51,56,50,51,50,32,97,114,103,115,51,57,56,51,32,101,114,114,102,51,57,56,52,41,0,0};
static C_char C_TLS li636[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,53,53,32,116,97,105,108,51,57,53,55,41,0};
static C_char C_TLS li637[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,52,56,32,116,97,105,108,51,57,53,48,41,0};
static C_char C_TLS li638[] C_aligned={C_lihdr(0,0,20),40,100,111,51,57,51,54,32,99,108,97,117,115,101,115,51,57,51,56,41,0,0,0,0};
static C_char C_TLS li639[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,51,51,32,116,97,105,108,51,57,51,53,41,0};
static C_char C_TLS li640[] C_aligned={C_lihdr(0,0,35),40,97,51,56,50,55,56,32,117,110,105,116,51,57,57,51,32,105,110,102,111,51,57,57,52,32,101,114,114,102,51,57,57,53,41,0,0,0};
static C_char C_TLS li641[] C_aligned={C_lihdr(0,0,26),40,97,51,56,55,51,50,32,97,114,103,115,51,56,52,57,32,101,114,114,102,51,56,53,48,41,0,0};
static C_char C_TLS li642[] C_aligned={C_lihdr(0,0,35),40,97,51,56,56,48,48,32,117,110,105,116,51,56,54,49,32,105,110,102,111,51,56,54,50,32,101,114,114,102,51,56,54,51,41,0,0,0};
static C_char C_TLS li643[] C_aligned={C_lihdr(0,0,26),40,97,51,56,57,57,49,32,97,114,103,115,51,56,51,55,32,101,114,114,102,51,56,51,56,41,0,0};
static C_char C_TLS li644[] C_aligned={C_lihdr(0,0,35),40,97,51,57,48,49,55,32,117,110,105,116,51,56,52,50,32,105,110,102,111,51,56,52,51,32,101,114,114,102,51,56,52,52,41,0,0,0};
static C_char C_TLS li645[] C_aligned={C_lihdr(0,0,26),40,97,51,57,49,48,53,32,97,114,103,115,51,56,49,53,32,101,114,114,102,51,56,49,54,41,0,0};
static C_char C_TLS li646[] C_aligned={C_lihdr(0,0,17),40,100,111,51,56,50,51,32,105,116,101,114,51,56,50,53,41,0};
static C_char C_TLS li647[] C_aligned={C_lihdr(0,0,35),40,97,51,57,49,52,56,32,117,110,105,116,51,56,49,55,32,105,110,102,111,51,56,49,56,32,101,114,114,102,51,56,49,57,41,0,0,0};
static C_char C_TLS li648[] C_aligned={C_lihdr(0,0,26),40,97,51,57,51,56,53,32,97,114,103,115,51,56,49,50,32,101,114,114,102,51,56,49,51,41,0,0};
static C_char C_TLS li649[] C_aligned={C_lihdr(0,0,26),40,97,51,57,52,55,49,32,97,114,103,115,51,56,48,52,32,101,114,114,102,51,56,48,53,41,0,0};
static C_char C_TLS li650[] C_aligned={C_lihdr(0,0,14),40,97,51,57,53,50,51,32,101,51,56,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li651[] C_aligned={C_lihdr(0,0,35),40,97,51,57,53,49,52,32,117,110,105,116,51,56,48,54,32,105,110,102,111,51,56,48,55,32,101,114,114,102,51,56,48,56,41,0,0,0};
static C_char C_TLS li652[] C_aligned={C_lihdr(0,0,26),40,97,51,57,53,55,51,32,97,114,103,115,51,55,57,55,32,101,114,114,102,51,55,57,56,41,0,0};
static C_char C_TLS li653[] C_aligned={C_lihdr(0,0,14),40,97,51,57,54,49,52,32,101,51,56,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li654[] C_aligned={C_lihdr(0,0,35),40,97,51,57,54,48,56,32,117,110,105,116,51,55,57,57,32,105,110,102,111,51,56,48,48,32,101,114,114,102,51,56,48,49,41,0,0,0};
static C_char C_TLS li655[] C_aligned={C_lihdr(0,0,35),40,97,51,57,54,54,56,32,117,110,105,116,51,55,57,48,32,105,110,102,111,51,55,57,49,32,101,114,114,102,51,55,57,50,41,0,0,0};
static C_char C_TLS li656[] C_aligned={C_lihdr(0,0,35),40,97,51,57,55,50,57,32,117,110,105,116,51,55,56,52,32,105,110,102,111,51,55,56,53,32,101,114,114,102,51,55,56,54,41,0,0,0};
static C_char C_TLS li657[] C_aligned={C_lihdr(0,0,26),40,97,51,57,55,56,51,32,97,114,103,115,51,55,55,56,32,101,114,114,102,51,55,55,57,41,0,0};
static C_char C_TLS li658[] C_aligned={C_lihdr(0,0,35),40,97,51,57,56,49,51,32,117,110,105,116,51,55,56,48,32,105,110,102,111,51,55,56,49,32,101,114,114,102,51,55,56,50,41,0,0,0};
static C_char C_TLS li659[] C_aligned={C_lihdr(0,0,26),40,97,52,48,48,51,50,32,97,114,103,115,51,55,55,49,32,101,114,114,102,51,55,55,50,41,0,0};
static C_char C_TLS li660[] C_aligned={C_lihdr(0,0,26),40,97,52,48,48,53,56,32,97,114,103,115,51,55,53,56,32,101,114,114,102,51,55,53,57,41,0,0};
static C_char C_TLS li661[] C_aligned={C_lihdr(0,0,27),40,97,52,48,49,53,51,32,115,116,114,51,55,54,56,32,46,32,97,114,103,115,51,55,54,57,41,0,0,0};
static C_char C_TLS li662[] C_aligned={C_lihdr(0,0,35),40,97,52,48,49,51,51,32,117,110,105,116,51,55,54,51,32,105,110,102,111,51,55,54,52,32,101,114,114,102,51,55,54,53,41,0,0,0};
static C_char C_TLS li663[] C_aligned={C_lihdr(0,0,26),40,97,52,48,50,55,49,32,97,114,103,115,51,55,53,49,32,101,114,114,102,51,55,53,50,41,0,0};
static C_char C_TLS li664[] C_aligned={C_lihdr(0,0,35),40,97,52,48,50,57,51,32,117,110,105,116,51,55,53,51,32,105,110,102,111,51,55,53,52,32,101,114,114,102,51,55,53,53,41,0,0,0};
static C_char C_TLS li665[] C_aligned={C_lihdr(0,0,26),40,97,52,48,51,52,54,32,97,114,103,115,51,55,51,55,32,101,114,114,102,51,55,51,56,41,0,0};
static C_char C_TLS li666[] C_aligned={C_lihdr(0,0,17),40,100,111,51,55,52,52,32,97,114,103,115,51,55,52,54,41,0};
static C_char C_TLS li667[] C_aligned={C_lihdr(0,0,35),40,97,52,48,51,54,56,32,117,110,105,116,51,55,51,57,32,105,110,102,111,51,55,52,48,32,101,114,114,102,51,55,52,49,41,0,0,0};
static C_char C_TLS li668[] C_aligned={C_lihdr(0,0,26),40,97,52,48,53,48,48,32,97,114,103,115,51,55,51,48,32,101,114,114,102,51,55,51,49,41,0,0};
static C_char C_TLS li669[] C_aligned={C_lihdr(0,0,35),40,97,52,48,53,50,54,32,117,110,105,116,51,55,51,50,32,105,110,102,111,51,55,51,51,32,101,114,114,102,51,55,51,52,41,0,0,0};
static C_char C_TLS li670[] C_aligned={C_lihdr(0,0,26),40,97,52,48,54,51,54,32,97,114,103,115,51,55,50,54,32,101,114,114,102,51,55,50,55,41,0,0};
static C_char C_TLS li671[] C_aligned={C_lihdr(0,0,26),40,97,52,48,55,57,50,32,97,114,103,115,51,54,56,57,32,101,114,114,102,51,54,57,48,41,0,0};
static C_char C_TLS li672[] C_aligned={C_lihdr(0,0,35),40,97,52,48,56,49,48,32,117,110,105,116,51,54,57,49,32,105,110,102,111,51,54,57,50,32,101,114,114,102,51,54,57,51,41,0,0,0};
static C_char C_TLS li673[] C_aligned={C_lihdr(0,0,26),40,97,52,48,56,54,51,32,97,114,103,115,51,54,56,51,32,101,114,114,102,51,54,56,52,41,0,0};
static C_char C_TLS li674[] C_aligned={C_lihdr(0,0,26),40,97,52,49,48,49,53,32,97,114,103,115,51,54,56,48,32,101,114,114,102,51,54,56,49,41,0,0};
static C_char C_TLS li675[] C_aligned={C_lihdr(0,0,26),40,97,52,49,49,53,52,32,97,114,103,115,51,54,55,55,32,101,114,114,102,51,54,55,56,41,0,0};
static C_char C_TLS li676[] C_aligned={C_lihdr(0,0,26),40,97,52,49,50,55,52,32,97,114,103,115,51,54,53,54,32,101,114,114,102,51,54,53,55,41,0,0};
static C_char C_TLS li677[] C_aligned={C_lihdr(0,0,35),40,97,52,49,51,48,53,32,117,110,105,116,51,54,53,57,32,105,110,102,111,51,54,54,48,32,101,114,114,102,51,54,54,49,41,0,0,0};
static C_char C_TLS li678[] C_aligned={C_lihdr(0,0,26),40,97,52,49,51,57,55,32,97,114,103,115,51,54,53,48,32,101,114,114,102,51,54,53,49,41,0,0};
static C_char C_TLS li679[] C_aligned={C_lihdr(0,0,35),40,97,52,49,52,49,53,32,117,110,105,116,51,54,53,50,32,105,110,102,111,51,54,53,51,32,101,114,114,102,51,54,53,52,41,0,0,0};
static C_char C_TLS li680[] C_aligned={C_lihdr(0,0,35),40,97,52,49,52,56,57,32,117,110,105,116,51,54,51,57,32,105,110,102,111,51,54,52,48,32,101,114,114,102,51,54,52,49,41,0,0,0};
static C_char C_TLS li681[] C_aligned={C_lihdr(0,0,26),40,97,52,49,53,56,53,32,97,114,103,115,51,54,50,55,32,101,114,114,102,51,54,50,56,41,0,0};
static C_char C_TLS li682[] C_aligned={C_lihdr(0,0,35),40,97,52,49,53,57,53,32,117,110,105,116,51,54,50,57,32,105,110,102,111,51,54,51,48,32,101,114,114,102,51,54,51,49,41,0,0,0};
static C_char C_TLS li683[] C_aligned={C_lihdr(0,0,20),40,97,52,49,55,55,49,32,117,51,50,55,55,32,112,51,50,55,56,41,0,0,0,0};
static C_char C_TLS li684[] C_aligned={C_lihdr(0,0,20),40,97,52,49,55,57,55,32,101,51,50,52,57,32,112,51,50,53,48,41,0,0,0,0};
static C_char C_TLS li685[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,51,50,49,50,41,0,0,0,0};
static C_char C_TLS li686[] C_aligned={C_lihdr(0,0,35),40,97,52,49,56,49,49,32,116,121,112,51,50,48,56,32,112,97,116,51,50,48,57,32,46,32,97,114,103,115,51,50,49,48,41,0,0,0};
static C_char C_TLS li687[] C_aligned={C_lihdr(0,0,20),40,97,52,49,57,49,52,32,114,51,50,48,53,32,112,51,50,48,54,41,0,0,0,0};
static C_char C_TLS li688[] C_aligned={C_lihdr(0,0,20),40,97,52,49,57,50,52,32,116,51,49,53,54,32,112,51,49,53,55,41,0,0,0,0};
static C_char C_TLS li689[] C_aligned={C_lihdr(0,0,23),40,97,52,49,57,51,56,32,111,98,106,57,57,50,32,112,111,114,116,57,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li690[] C_aligned={C_lihdr(0,0,71),40,100,111,55,52,57,32,100,55,53,49,32,107,55,53,50,32,112,55,53,51,32,107,60,55,53,52,32,107,62,55,53,53,32,102,55,53,54,32,102,62,55,53,55,32,102,60,55,53,56,32,111,55,53,57,32,120,55,54,48,32,110,55,54,49,32,101,55,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li691[] C_aligned={C_lihdr(0,0,14),40,100,111,55,52,51,32,107,101,121,55,52,53,41,0,0,0,0,0,0};
static C_char C_TLS li692[] C_aligned={C_lihdr(0,0,24),40,97,52,50,49,54,52,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li693[] C_aligned={C_lihdr(0,0,22),40,97,52,50,49,55,48,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li694[] C_aligned={C_lihdr(0,0,24),40,97,52,50,50,50,50,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li695[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from now in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub6521(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6521(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from k36524 */
static C_word C_fcall stub6477(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6477(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k36509 in hush in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
C_noret_decl(stub6471)
static void C_ccall stub6471(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6471(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k36503 */
C_noret_decl(stub6466)
static void C_ccall stub6466(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub6466(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k36487 in cont in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
C_noret_decl(stub6461)
static void C_ccall stub6461(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6461(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k36478 in pause in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
C_noret_decl(stub6457)
static void C_ccall stub6457(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6457(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k36469 in paused? in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
C_noret_decl(stub6453)
static void C_ccall stub6453(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub6453(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k36463 */
C_noret_decl(stub6446)
static void C_ccall stub6446(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub6446(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k36439 in print-error in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub6438(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6438(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k36425 in print-message in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub6432(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6432(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from k35789 */
static C_word C_fcall stub6382(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub6382(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
cs_play_score(t0,t1,t2);
return C_r;}

/* from k35544 */
static C_word C_fcall stub6303(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub6303(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
cs_print_score(t0,t1);
return C_r;}

/* from k35491 */
static C_word C_fcall stub6255(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub6255(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k35434 */
static C_word C_fcall stub6244(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub6244(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_35403 in cs:clear in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub6238(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6238(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from f_35380 in k35374 in cs:record in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub6234(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6234(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
cs_record_mode(t0);
return C_r;}

/* from k35385 */
static C_word C_fcall stub6230(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6230(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
cs_record_start(t0);
return C_r;}

/* from f_35366 in cs:record in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub6226(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6226(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
cs_record_mode(t0);
return C_r;}

/* from f_35286 in mp:recordseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub6146(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6146(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
mp_recordseq(t0);
return C_r;}

/* from f_35272 in mp:clearseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub6140(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6140(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_clearseq();
return C_r;}

/* from f_35261 in mp:plotseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub6137(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6137(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_plotseq();
return C_r;}

/* from f_35250 in mp:copyseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub6134(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6134(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_copyseq();
return C_r;}

/* from f_35239 in mp:saveseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub6131(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6131(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_saveseq();
return C_r;}

/* from f_35228 in mp:playseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub6128(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub6128(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
mp_playseq();
return C_r;}

/* from k35201 */
static C_word C_fcall stub6124(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6124(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_tuning(t0);
return C_r;}

/* from k35077 */
static C_word C_fcall stub6117(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6117(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_setmessagemask(t0);
return C_r;}

/* from k34966 */
static C_word C_fcall stub6105(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6105(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
mp_setchannelmask(t0);
return C_r;}

/* from f_34952 in mp:inhook in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub6094(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6094(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_34947 in mp:inhook in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub6085(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6085(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k34891 */
static C_word C_fcall stub6078(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub6078(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k34879 */
static C_word C_fcall stub6069(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub6069(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34851 */
static C_word C_fcall stub6054(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub6054(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34823 */
static C_word C_fcall stub6039(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub6039(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34795 */
static C_word C_fcall stub6024(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub6024(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34767 */
static C_word C_fcall stub6008(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub6008(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34739 */
static C_word C_fcall stub5992(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5992(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34711 */
static C_word C_fcall stub5976(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5976(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k34683 */
static C_word C_fcall stub5961(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5961(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k34655 */
static C_word C_fcall stub5944(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5944(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k34624 */
static C_word C_fcall stub5926(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5926(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k34601 */
static C_word C_fcall stub5915(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5915(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k34579 */
static C_word C_fcall stub5904(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5904(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k34559 */
static C_word C_fcall stub5894(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5894(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k34524 */
static C_word C_fcall stub5881(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5881(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k34508 */
static C_word C_fcall stub5873(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5873(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k34480 */
static C_word C_fcall stub5860(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5860(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k34457 */
static C_word C_fcall stub5849(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5849(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k34438 */
static C_word C_fcall stub5838(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5838(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k34415 */
static C_word C_fcall stub5827(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5827(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k34396 */
static C_word C_fcall stub5817(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5817(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k34377 */
static C_word C_fcall stub5808(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5808(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k34362 */
static C_word C_fcall stub5799(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5799(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k34343 */
static C_word C_fcall stub5789(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5789(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k34328 */
static C_word C_fcall stub5781(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5781(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k34313 */
static C_word C_fcall stub5773(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5773(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k34295 */
static C_word C_fcall stub5765(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5765(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k33868 */
static C_word C_fcall stub5750(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5750(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k33825 */
static C_word C_fcall stub5671(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5671(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k33398 */
static C_word C_fcall stub5656(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5656(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k33355 */
static C_word C_fcall stub5577(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5577(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k32928 */
static C_word C_fcall stub5562(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5562(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k32885 */
static C_word C_fcall stub5483(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5483(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k32183 */
static C_word C_fcall stub5467(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5467(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k32137 */
static C_word C_fcall stub5351(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5351(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k31435 */
static C_word C_fcall stub5335(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5335(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k31389 */
static C_word C_fcall stub5219(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5219(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30962 */
static C_word C_fcall stub5204(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5204(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k30919 */
static C_word C_fcall stub5125(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5125(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30217 */
static C_word C_fcall stub5109(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5109(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k8343 */
static C_word C_fcall stub419(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub419(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::log_two(t0));
return C_r;}

/* from k8336 */
static C_word C_fcall stub414(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub414(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::log_ten(t0));
return C_r;}

/* from k8329 */
static C_word C_fcall stub408(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub408(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,jn(t0,t1));
return C_r;}

/* from tb:ranbrown in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub401(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub401(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub398(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub398(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k8307 */
static C_word C_fcall stub395(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub395(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub391(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub391(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k8297 */
static C_word C_fcall stub387(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub387(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k8290 */
static C_word C_fcall stub381(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub381(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k8279 */
static C_word C_fcall stub375(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub375(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k8272 */
static C_word C_fcall stub369(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub369(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub364(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub364(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub361(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub361(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub358(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub358(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k8252 */
static C_word C_fcall stub353(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub353(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k8241 */
static C_word C_fcall stub347(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub347(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k8230 */
static C_word C_fcall stub341(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub341(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k8223 */
static C_word C_fcall stub337(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub337(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub333(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub333(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k8213 */
static C_word C_fcall stub328(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub328(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k8206 */
static C_word C_fcall stub324(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub324(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k8199 */
static C_word C_fcall stub319(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub319(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k8192 */
static C_word C_fcall stub311(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub311(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::geoseg(t0,t1,t2,t3));
return C_r;}

/* from k8173 */
static C_word C_fcall stub300(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub300(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::explseg(t0,t1,t2,t3));
return C_r;}

/* from k8154 */
static C_word C_fcall stub293(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub293(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k8147 */
static C_word C_fcall stub288(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub288(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k8140 */
static C_word C_fcall stub281(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub281(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k8125 */
static C_word C_fcall stub273(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub273(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k8114 */
static C_word C_fcall stub268(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub268(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k8107 */
static C_word C_fcall stub259(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub259(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k8080 */
static C_word C_fcall stub244(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub244(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7267 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_7249 in cwd in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6642)
static void C_ccall f_6642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6645)
static void C_ccall f_6645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6648)
static void C_ccall f_6648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6651)
static void C_ccall f_6651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42223)
static void C_ccall f_42223(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_42223)
static void C_ccall f_42223r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6942)
static void C_ccall f_6942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6946)
static void C_ccall f_6946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42171)
static void C_ccall f_42171(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_42218)
static void C_ccall f_42218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42208)
static void C_ccall f_42208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42175)
static void C_ccall f_42175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6949)
static void C_ccall f_6949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42165)
static void C_ccall f_42165(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_42165)
static void C_ccall f_42165r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7242)
static void C_ccall f_7242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10582)
static void C_ccall f_10582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41949)
static void C_fcall f_41949(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_42163)
static void C_ccall f_42163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41983)
static void C_ccall f_41983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41995)
static void C_ccall f_41995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41999)
static void C_ccall f_41999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42003)
static void C_ccall f_42003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42147)
static void C_ccall f_42147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42009)
static void C_fcall f_42009(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_42029)
static void C_fcall f_42029(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42032)
static void C_fcall f_42032(C_word t0,C_word t1) C_noret;
C_noret_decl(f_42040)
static void C_ccall f_42040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42047)
static void C_ccall f_42047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42050)
static void C_ccall f_42050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42054)
static void C_ccall f_42054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42061)
static void C_ccall f_42061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42064)
static void C_ccall f_42064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42068)
static void C_ccall f_42068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42075)
static void C_ccall f_42075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_42019)
static void C_ccall f_42019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41972)
static void C_ccall f_41972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41962)
static void C_ccall f_41962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41965)
static void C_ccall f_41965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10585)
static void C_ccall f_10585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41939)
static void C_ccall f_41939(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41947)
static void C_ccall f_41947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11650)
static void C_ccall f_11650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41925)
static void C_ccall f_41925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41933)
static void C_ccall f_41933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41937)
static void C_ccall f_41937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23001)
static void C_ccall f_23001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23052)
static void C_ccall f_23052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41915)
static void C_ccall f_41915(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41923)
static void C_ccall f_41923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23157)
static void C_ccall f_23157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41812)
static void C_ccall f_41812(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_41812)
static void C_ccall f_41812r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_41875)
static void C_ccall f_41875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41879)
static void C_ccall f_41879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41893)
static void C_fcall f_41893(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41815)
static void C_fcall f_41815(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_41835)
static void C_ccall f_41835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41839)
static void C_ccall f_41839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23160)
static void C_ccall f_23160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41798)
static void C_ccall f_41798(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41806)
static void C_ccall f_41806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41810)
static void C_ccall f_41810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23353)
static void C_ccall f_23353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41772)
static void C_ccall f_41772(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41776)
static void C_ccall f_41776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41782)
static void C_ccall f_41782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41793)
static void C_ccall f_41793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41789)
static void C_ccall f_41789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23422)
static void C_ccall f_23422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41750)
static void C_ccall f_41750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24667)
static void C_ccall f_24667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41730)
static void C_ccall f_41730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24670)
static void C_ccall f_24670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41690)
static void C_ccall f_41690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24673)
static void C_ccall f_24673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41596)
static void C_ccall f_41596(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41600)
static void C_ccall f_41600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41603)
static void C_ccall f_41603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41621)
static void C_ccall f_41621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41624)
static void C_ccall f_41624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41655)
static void C_ccall f_41655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41627)
static void C_fcall f_41627(C_word t0,C_word t1) C_noret;
C_noret_decl(f_41633)
static void C_ccall f_41633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41586)
static void C_ccall f_41586(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41580)
static void C_ccall f_41580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24676)
static void C_ccall f_24676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41488)
static void C_ccall f_41488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41490)
static void C_ccall f_41490(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41494)
static void C_ccall f_41494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41497)
static void C_ccall f_41497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41500)
static void C_ccall f_41500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41540)
static void C_ccall f_41540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41532)
static void C_ccall f_41532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41503)
static void C_ccall f_41503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41506)
static void C_ccall f_41506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41509)
static void C_ccall f_41509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41480)
static void C_ccall f_41480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24679)
static void C_ccall f_24679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41452)
static void C_ccall f_41452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24682)
static void C_ccall f_24682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41416)
static void C_ccall f_41416(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41428)
static void C_ccall f_41428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41424)
static void C_ccall f_41424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41398)
static void C_ccall f_41398(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41392)
static void C_ccall f_41392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24685)
static void C_ccall f_24685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41306)
static void C_ccall f_41306(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_41310)
static void C_ccall f_41310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41313)
static void C_ccall f_41313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41316)
static void C_ccall f_41316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41329)
static void C_ccall f_41329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41275)
static void C_ccall f_41275(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41279)
static void C_ccall f_41279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41294)
static void C_ccall f_41294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41269)
static void C_ccall f_41269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24688)
static void C_ccall f_24688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41155)
static void C_ccall f_41155(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41171)
static void C_ccall f_41171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41182)
static void C_ccall f_41182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41149)
static void C_ccall f_41149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24744)
static void C_ccall f_24744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41016)
static void C_ccall f_41016(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_41039)
static void C_ccall f_41039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41036)
static void C_ccall f_41036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_41010)
static void C_ccall f_41010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24747)
static void C_ccall f_24747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40864)
static void C_ccall f_40864(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40882)
static void C_ccall f_40882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40891)
static void C_ccall f_40891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40858)
static void C_ccall f_40858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24750)
static void C_ccall f_24750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40811)
static void C_ccall f_40811(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40815)
static void C_ccall f_40815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40818)
static void C_ccall f_40818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40834)
static void C_ccall f_40834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40793)
static void C_ccall f_40793(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40787)
static void C_ccall f_40787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24753)
static void C_ccall f_24753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40711)
static void C_ccall f_40711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24892)
static void C_ccall f_24892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40637)
static void C_ccall f_40637(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40644)
static void C_ccall f_40644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40631)
static void C_ccall f_40631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24895)
static void C_ccall f_24895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40527)
static void C_ccall f_40527(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40535)
static void C_ccall f_40535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40501)
static void C_ccall f_40501(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40518)
static void C_ccall f_40518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40509)
static void C_fcall f_40509(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40495)
static void C_ccall f_40495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24898)
static void C_ccall f_24898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40451)
static void C_ccall f_40451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24901)
static void C_ccall f_24901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40369)
static void C_ccall f_40369(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40380)
static void C_ccall f_40380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40382)
static void C_fcall f_40382(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_40411)
static void C_ccall f_40411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40347)
static void C_ccall f_40347(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40363)
static void C_ccall f_40363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40341)
static void C_ccall f_40341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24904)
static void C_ccall f_24904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40294)
static void C_ccall f_40294(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40298)
static void C_ccall f_40298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40305)
static void C_ccall f_40305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40272)
static void C_ccall f_40272(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40288)
static void C_ccall f_40288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40266)
static void C_ccall f_40266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24907)
static void C_ccall f_24907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40134)
static void C_ccall f_40134(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_40174)
static void C_ccall f_40174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40138)
static void C_ccall f_40138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40154)
static void C_ccall f_40154(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_40154)
static void C_ccall f_40154r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_40166)
static void C_ccall f_40166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40170)
static void C_ccall f_40170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40162)
static void C_ccall f_40162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40059)
static void C_ccall f_40059(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40102)
static void C_ccall f_40102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40106)
static void C_ccall f_40106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40066)
static void C_fcall f_40066(C_word t0,C_word t1) C_noret;
C_noret_decl(f_40077)
static void C_ccall f_40077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40053)
static void C_ccall f_40053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24910)
static void C_ccall f_24910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40033)
static void C_ccall f_40033(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_40027)
static void C_ccall f_40027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24913)
static void C_ccall f_24913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40007)
static void C_ccall f_40007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_40011)
static void C_ccall f_40011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39999)
static void C_ccall f_39999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24916)
static void C_ccall f_24916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39979)
static void C_ccall f_39979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39983)
static void C_ccall f_39983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39971)
static void C_ccall f_39971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24919)
static void C_ccall f_24919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39951)
static void C_ccall f_39951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39955)
static void C_ccall f_39955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39943)
static void C_ccall f_39943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24922)
static void C_ccall f_24922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39923)
static void C_ccall f_39923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39927)
static void C_ccall f_39927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39915)
static void C_ccall f_39915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24925)
static void C_ccall f_24925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39814)
static void C_ccall f_39814(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39784)
static void C_ccall f_39784(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39808)
static void C_ccall f_39808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39778)
static void C_ccall f_39778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24928)
static void C_ccall f_24928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39728)
static void C_ccall f_39728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39730)
static void C_ccall f_39730(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39734)
static void C_ccall f_39734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39762)
static void C_ccall f_39762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39754)
static void C_ccall f_39754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39750)
static void C_ccall f_39750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39737)
static void C_ccall f_39737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39720)
static void C_ccall f_39720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24931)
static void C_ccall f_24931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39667)
static void C_ccall f_39667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39669)
static void C_ccall f_39669(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39673)
static void C_ccall f_39673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39704)
static void C_ccall f_39704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39696)
static void C_ccall f_39696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39692)
static void C_ccall f_39692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39676)
static void C_ccall f_39676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39679)
static void C_ccall f_39679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39659)
static void C_ccall f_39659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24934)
static void C_ccall f_24934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39609)
static void C_ccall f_39609(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39623)
static void C_ccall f_39623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39615)
static void C_ccall f_39615(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39574)
static void C_ccall f_39574(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39607)
static void C_ccall f_39607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39568)
static void C_ccall f_39568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24937)
static void C_ccall f_24937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39515)
static void C_ccall f_39515(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39519)
static void C_ccall f_39519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39532)
static void C_ccall f_39532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39524)
static void C_ccall f_39524(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39472)
static void C_ccall f_39472(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39505)
static void C_ccall f_39505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39466)
static void C_ccall f_39466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24940)
static void C_ccall f_24940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39386)
static void C_ccall f_39386(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39380)
static void C_ccall f_39380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24943)
static void C_ccall f_24943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39149)
static void C_ccall f_39149(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39153)
static void C_ccall f_39153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39161)
static void C_fcall f_39161(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_39184)
static void C_ccall f_39184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39187)
static void C_ccall f_39187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39190)
static void C_ccall f_39190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39193)
static void C_ccall f_39193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39253)
static void C_ccall f_39253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39260)
static void C_ccall f_39260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39270)
static void C_ccall f_39270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39280)
static void C_ccall f_39280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39294)
static void C_ccall f_39294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39304)
static void C_ccall f_39304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39314)
static void C_ccall f_39314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39324)
static void C_ccall f_39324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39196)
static void C_fcall f_39196(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39220)
static void C_fcall f_39220(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39199)
static void C_fcall f_39199(C_word t0,C_word t1) C_noret;
C_noret_decl(f_39106)
static void C_ccall f_39106(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39139)
static void C_ccall f_39139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39100)
static void C_ccall f_39100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24946)
static void C_ccall f_24946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39018)
static void C_ccall f_39018(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_39022)
static void C_ccall f_39022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39028)
static void C_ccall f_39028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_39048)
static void C_ccall f_39048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38992)
static void C_ccall f_38992(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_39002)
static void C_fcall f_39002(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38986)
static void C_ccall f_38986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24949)
static void C_ccall f_24949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38801)
static void C_ccall f_38801(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_38805)
static void C_ccall f_38805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38811)
static void C_ccall f_38811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38820)
static void C_ccall f_38820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38858)
static void C_ccall f_38858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38850)
static void C_ccall f_38850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38827)
static void C_ccall f_38827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38831)
static void C_ccall f_38831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38733)
static void C_ccall f_38733(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38752)
static void C_ccall f_38752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38787)
static void C_ccall f_38787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38758)
static void C_fcall f_38758(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38762)
static void C_ccall f_38762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38776)
static void C_ccall f_38776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38765)
static void C_fcall f_38765(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38746)
static void C_fcall f_38746(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38727)
static void C_ccall f_38727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24952)
static void C_ccall f_24952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38455)
static void C_ccall f_38455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25475)
static void C_ccall f_25475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38407)
static void C_ccall f_38407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38399)
static void C_ccall f_38399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25478)
static void C_ccall f_25478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38279)
static void C_ccall f_38279(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25484)
static void C_ccall f_25484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26020)
static void C_ccall f_26020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26054)
static void C_ccall f_26054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26046)
static void C_ccall f_26046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26042)
static void C_ccall f_26042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26027)
static void C_ccall f_26027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26031)
static void C_ccall f_26031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26024)
static void C_ccall f_26024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25502)
static void C_fcall f_25502(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26013)
static void C_ccall f_26013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26009)
static void C_ccall f_26009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25509)
static void C_fcall f_25509(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25884)
static void C_fcall f_25884(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25905)
static void C_ccall f_25905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25907)
static void C_fcall f_25907(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25921)
static void C_ccall f_25921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25974)
static void C_ccall f_25974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25924)
static void C_fcall f_25924(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25959)
static void C_ccall f_25959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25927)
static void C_fcall f_25927(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25940)
static void C_ccall f_25940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25952)
static void C_ccall f_25952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25944)
static void C_ccall f_25944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25930)
static void C_fcall f_25930(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25894)
static void C_ccall f_25894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25512)
static void C_ccall f_25512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25848)
static void C_fcall f_25848(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25874)
static void C_ccall f_25874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25859)
static void C_ccall f_25859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25518)
static void C_ccall f_25518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25522)
static void C_ccall f_25522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25725)
static void C_ccall f_25725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25729)
static void C_ccall f_25729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25733)
static void C_ccall f_25733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25776)
static void C_fcall f_25776(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25786)
static void C_ccall f_25786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25789)
static void C_ccall f_25789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25810)
static void C_ccall f_25810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25792)
static void C_fcall f_25792(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25796)
static void C_ccall f_25796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25736)
static void C_ccall f_25736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25739)
static void C_fcall f_25739(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25525)
static void C_fcall f_25525(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25529)
static void C_ccall f_25529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25532)
static void C_fcall f_25532(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25685)
static void C_ccall f_25685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25693)
static void C_ccall f_25693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25689)
static void C_ccall f_25689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25535)
static void C_fcall f_25535(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25563)
static void C_ccall f_25563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25566)
static void C_ccall f_25566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25569)
static void C_ccall f_25569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25572)
static void C_ccall f_25572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25575)
static void C_ccall f_25575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25634)
static void C_ccall f_25634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38233)
static void C_ccall f_38233(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38249)
static void C_ccall f_38249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38252)
static void C_ccall f_38252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38255)
static void C_fcall f_38255(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38258)
static void C_fcall f_38258(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38269)
static void C_ccall f_38269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38227)
static void C_ccall f_38227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26061)
static void C_ccall f_26061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38088)
static void C_ccall f_38088(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_38127)
static void C_ccall f_38127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_38101)
static void C_fcall f_38101(C_word t0,C_word t1) C_noret;
C_noret_decl(f_38082)
static void C_ccall f_38082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26064)
static void C_ccall f_26064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37670)
static void C_ccall f_37670(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37674)
static void C_ccall f_37674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37686)
static void C_ccall f_37686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37744)
static void C_ccall f_37744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37747)
static void C_ccall f_37747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37750)
static void C_ccall f_37750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37962)
static void C_ccall f_37962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37900)
static void C_ccall f_37900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37934)
static void C_ccall f_37934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37909)
static void C_fcall f_37909(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37920)
static void C_ccall f_37920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37916)
static void C_ccall f_37916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37759)
static void C_fcall f_37759(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37837)
static void C_ccall f_37837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37878)
static void C_ccall f_37878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37882)
static void C_ccall f_37882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37886)
static void C_ccall f_37886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37841)
static void C_ccall f_37841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37845)
static void C_ccall f_37845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37872)
static void C_ccall f_37872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37848)
static void C_fcall f_37848(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37762)
static void C_fcall f_37762(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37834)
static void C_ccall f_37834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37776)
static void C_ccall f_37776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37778)
static void C_fcall f_37778(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37826)
static void C_ccall f_37826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37797)
static void C_ccall f_37797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37814)
static void C_ccall f_37814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37800)
static void C_fcall f_37800(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37793)
static void C_ccall f_37793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37765)
static void C_ccall f_37765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37695)
static void C_fcall f_37695(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37705)
static void C_ccall f_37705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37711)
static void C_ccall f_37711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37683)
static void C_ccall f_37683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37631)
static void C_ccall f_37631(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37648)
static void C_ccall f_37648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37664)
static void C_ccall f_37664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37642)
static void C_fcall f_37642(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37625)
static void C_ccall f_37625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26067)
static void C_ccall f_26067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37549)
static void C_ccall f_37549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26070)
static void C_ccall f_26070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37525)
static void C_ccall f_37525(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37537)
static void C_ccall f_37537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37533)
static void C_ccall f_37533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37511)
static void C_ccall f_37511(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37519)
static void C_ccall f_37519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37505)
static void C_ccall f_37505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26073)
static void C_ccall f_26073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37497)
static void C_ccall f_37497(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29851)
static void C_ccall f_29851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29854)
static void C_ccall f_29854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30020)
static void C_ccall f_30020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30016)
static void C_ccall f_30016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30006)
static void C_fcall f_30006(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29861)
static void C_ccall f_29861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29865)
static void C_ccall f_29865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29868)
static void C_fcall f_29868(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29879)
static void C_ccall f_29879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29887)
static void C_ccall f_29887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29959)
static void C_ccall f_29959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29967)
static void C_ccall f_29967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29963)
static void C_ccall f_29963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29955)
static void C_ccall f_29955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29951)
static void C_ccall f_29951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29923)
static void C_ccall f_29923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29919)
static void C_ccall f_29919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29883)
static void C_ccall f_29883(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26498)
static void C_ccall f_26498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37483)
static void C_ccall f_37483(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26501)
static void C_ccall f_26501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37454)
static void C_ccall f_37454(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37458)
static void C_ccall f_37458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26504)
static void C_ccall f_26504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37451)
static void C_ccall f_37451(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26507)
static void C_ccall f_26507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37309)
static void C_ccall f_37309(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30033)
static void C_ccall f_30033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30165)
static void C_ccall f_30165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30036)
static void C_ccall f_30036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30047)
static void C_ccall f_30047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30055)
static void C_ccall f_30055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30079)
static void C_ccall f_30079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30082)
static void C_fcall f_30082(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30090)
static void C_ccall f_30090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30098)
static void C_ccall f_30098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30118)
static void C_ccall f_30118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30114)
static void C_ccall f_30114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30094)
static void C_ccall f_30094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30086)
static void C_ccall f_30086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30075)
static void C_ccall f_30075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30051)
static void C_ccall f_30051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30027)
static void C_ccall f_30027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35296)
static void C_ccall f_35296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35299)
static void C_ccall f_35299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35302)
static void C_ccall f_35302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35305)
static void C_ccall f_35305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35308)
static void C_ccall f_35308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35311)
static void C_ccall f_35311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35314)
static void C_ccall f_35314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35317)
static void C_ccall f_35317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35320)
static void C_ccall f_35320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35323)
static void C_ccall f_35323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35326)
static void C_ccall f_35326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35329)
static void C_ccall f_35329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35332)
static void C_ccall f_35332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35335)
static void C_ccall f_35335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35338)
static void C_ccall f_35338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35341)
static void C_ccall f_35341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35344)
static void C_ccall f_35344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35347)
static void C_ccall f_35347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35350)
static void C_ccall f_35350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35353)
static void C_ccall f_35353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36209)
static void C_ccall f_36209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36212)
static void C_ccall f_36212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36215)
static void C_ccall f_36215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36218)
static void C_ccall f_36218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36221)
static void C_ccall f_36221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36224)
static void C_ccall f_36224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36227)
static void C_ccall f_36227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36230)
static void C_ccall f_36230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37246)
static void C_fcall f_37246(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37274)
static void C_fcall f_37274(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36913)
static void C_ccall f_36913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37240)
static void C_ccall f_37240(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36958)
static void C_ccall f_36958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36964)
static void C_ccall f_36964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36967)
static void C_ccall f_36967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36970)
static void C_ccall f_36970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36974)
static void C_ccall f_36974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37184)
static void C_ccall f_37184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37196)
static void C_ccall f_37196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37192)
static void C_ccall f_37192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36977)
static void C_fcall f_36977(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37141)
static void C_fcall f_37141(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37177)
static void C_ccall f_37177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37170)
static void C_ccall f_37170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36980)
static void C_ccall f_36980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37079)
static void C_ccall f_37079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37087)
static void C_ccall f_37087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37083)
static void C_ccall f_37083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37075)
static void C_ccall f_37075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37071)
static void C_ccall f_37071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37027)
static void C_ccall f_37027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37023)
static void C_ccall f_37023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36990)
static void C_fcall f_36990(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37001)
static void C_ccall f_37001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37009)
static void C_ccall f_37009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37005)
static void C_ccall f_37005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37203)
static void C_ccall f_37203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37211)
static void C_ccall f_37211(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_37211)
static void C_ccall f_37211r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_37225)
static void C_fcall f_37225(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37215)
static void C_ccall f_37215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37206)
static void C_ccall f_37206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37209)
static void C_ccall f_37209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36915)
static void C_fcall f_36915(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36931)
static void C_ccall f_36931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36842)
static void C_ccall f_36842(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36853)
static void C_ccall f_36853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36856)
static void C_fcall f_36856(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36863)
static void C_ccall f_36863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36832)
static void C_ccall f_36832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36511)
static void C_ccall f_36511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36836)
static void C_ccall f_36836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36774)
static void C_ccall f_36774(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_36774)
static void C_ccall f_36774r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_36792)
static void C_fcall f_36792(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36802)
static void C_ccall f_36802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36778)
static void C_ccall f_36778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36765)
static void C_ccall f_36765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36489)
static void C_ccall f_36489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36769)
static void C_ccall f_36769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36759)
static void C_ccall f_36759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36471)
static void C_ccall f_36471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36750)
static void C_ccall f_36750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36480)
static void C_ccall f_36480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36754)
static void C_ccall f_36754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36747)
static void C_ccall f_36747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36535)
static void C_ccall f_36535(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_36535)
static void C_ccall f_36535r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_36699)
static void C_fcall f_36699(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36694)
static void C_fcall f_36694(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36537)
static void C_fcall f_36537(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36686)
static void C_ccall f_36686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36690)
static void C_ccall f_36690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36682)
static void C_ccall f_36682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36642)
static void C_fcall f_36642(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36652)
static void C_ccall f_36652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36606)
static void C_ccall f_36606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36611)
static void C_fcall f_36611(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36636)
static void C_ccall f_36636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36640)
static void C_ccall f_36640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36621)
static void C_ccall f_36621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36597)
static void C_ccall f_36597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36567)
static void C_fcall f_36567(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36539)
static void C_fcall f_36539(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36516)
static void C_ccall f_36516(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36521)
static void C_ccall f_36521(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36526)
static void C_ccall f_36526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36494)
static void C_fcall f_36494(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36498)
static void C_ccall f_36498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36450)
static void C_fcall f_36450(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36454)
static void C_ccall f_36454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36436)
static void C_ccall f_36436(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36441)
static void C_ccall f_36441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36422)
static void C_ccall f_36422(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36427)
static void C_ccall f_36427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36232)
static void C_ccall f_36232(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36293)
static void C_ccall f_36293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36295)
static void C_fcall f_36295(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36305)
static void C_ccall f_36305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36324)
static void C_fcall f_36324(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36364)
static void C_ccall f_36364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36406)
static void C_ccall f_36406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36376)
static void C_ccall f_36376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36361)
static void C_fcall f_36361(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36279)
static void C_ccall f_36279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36244)
static void C_ccall f_36244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36271)
static void C_ccall f_36271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36252)
static void C_ccall f_36252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36259)
static void C_ccall f_36259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36263)
static void C_ccall f_36263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36267)
static void C_ccall f_36267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36344)
static void C_ccall f_36344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36322)
static void C_ccall f_36322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36308)
static void C_ccall f_36308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36311)
static void C_ccall f_36311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36286)
static void C_ccall f_36286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35758)
static void C_ccall f_35758(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35758)
static void C_ccall f_35758r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_36185)
static void C_ccall f_36185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36200)
static void C_ccall f_36200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36192)
static void C_ccall f_36192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36156)
static void C_ccall f_36156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36160)
static void C_ccall f_36160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36121)
static void C_ccall f_36121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36125)
static void C_ccall f_36125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36086)
static void C_ccall f_36086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36090)
static void C_ccall f_36090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35762)
static void C_fcall f_35762(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36050)
static void C_ccall f_36050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36065)
static void C_ccall f_36065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36057)
static void C_ccall f_36057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36021)
static void C_ccall f_36021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36025)
static void C_ccall f_36025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35986)
static void C_ccall f_35986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35990)
static void C_ccall f_35990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35951)
static void C_ccall f_35951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35955)
static void C_ccall f_35955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35765)
static void C_fcall f_35765(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35915)
static void C_ccall f_35915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35930)
static void C_ccall f_35930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35922)
static void C_ccall f_35922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35886)
static void C_ccall f_35886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35890)
static void C_ccall f_35890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35851)
static void C_ccall f_35851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35855)
static void C_ccall f_35855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35816)
static void C_ccall f_35816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35820)
static void C_ccall f_35820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35768)
static void C_fcall f_35768(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35771)
static void C_ccall f_35771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35774)
static void C_fcall f_35774(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35778)
static void C_ccall f_35778(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35520)
static void C_ccall f_35520(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35520)
static void C_ccall f_35520r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35735)
static void C_ccall f_35735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35750)
static void C_ccall f_35750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35742)
static void C_ccall f_35742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35706)
static void C_ccall f_35706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35710)
static void C_ccall f_35710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35671)
static void C_ccall f_35671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35675)
static void C_ccall f_35675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35524)
static void C_fcall f_35524(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35635)
static void C_ccall f_35635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35650)
static void C_ccall f_35650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35642)
static void C_ccall f_35642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35606)
static void C_ccall f_35606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35610)
static void C_ccall f_35610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35571)
static void C_ccall f_35571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35575)
static void C_ccall f_35575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35527)
static void C_fcall f_35527(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35530)
static void C_ccall f_35530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35533)
static void C_fcall f_35533(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35537)
static void C_ccall f_35537(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35463)
static void C_ccall f_35463(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35463)
static void C_ccall f_35463r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35496)
static void C_fcall f_35496(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35476)
static void C_fcall f_35476(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35484)
static void C_ccall f_35484(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35467)
static void C_ccall f_35467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35406)
static void C_ccall f_35406(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35406)
static void C_ccall f_35406r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35439)
static void C_fcall f_35439(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35419)
static void C_fcall f_35419(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35427)
static void C_ccall f_35427(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35410)
static void C_ccall f_35410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35398)
static void C_ccall f_35398(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35403)
static void C_ccall f_35403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35355)
static void C_ccall f_35355(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35382)
static void C_ccall f_35382(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35376)
static void C_ccall f_35376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35380)
static void C_ccall f_35380(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35366)
static void C_ccall f_35366(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35275)
static void C_ccall f_35275(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35275)
static void C_ccall f_35275r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35286)
static void C_ccall f_35286(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35282)
static void C_ccall f_35282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35264)
static void C_ccall f_35264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35272)
static void C_ccall f_35272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35268)
static void C_ccall f_35268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35253)
static void C_ccall f_35253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35261)
static void C_ccall f_35261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35257)
static void C_ccall f_35257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35242)
static void C_ccall f_35242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35250)
static void C_ccall f_35250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35246)
static void C_ccall f_35246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35231)
static void C_ccall f_35231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35239)
static void C_ccall f_35239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35235)
static void C_ccall f_35235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35220)
static void C_ccall f_35220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35228)
static void C_ccall f_35228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35224)
static void C_ccall f_35224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35181)
static void C_ccall f_35181(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35181)
static void C_ccall f_35181r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35194)
static void C_ccall f_35194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35198)
static void C_ccall f_35198(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35188)
static void C_ccall f_35188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35066)
static void C_ccall f_35066(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_35066)
static void C_ccall f_35066r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_35091)
static void C_fcall f_35091(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35098)
static void C_fcall f_35098(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35104)
static void C_fcall f_35104(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35124)
static void C_ccall f_35124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35114)
static void C_ccall f_35114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35070)
static void C_ccall f_35070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35074)
static void C_ccall f_35074(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34955)
static void C_ccall f_34955(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_34955)
static void C_ccall f_34955r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34980)
static void C_fcall f_34980(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34987)
static void C_fcall f_34987(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34993)
static void C_fcall f_34993(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35013)
static void C_ccall f_35013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35003)
static void C_ccall f_35003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34959)
static void C_ccall f_34959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34963)
static void C_ccall f_34963(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34898)
static void C_ccall f_34898(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34952)
static void C_ccall f_34952(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34947)
static void C_ccall f_34947(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34910)
static void C_ccall f_34910(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34916)
static void C_ccall f_34916(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34942)
static void C_ccall f_34942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34946)
static void C_ccall f_34946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34922)
static void C_ccall f_34922(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34940)
static void C_ccall f_34940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34937)
static void C_ccall f_34937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34933)
static void C_ccall f_34933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34926)
static void C_ccall f_34926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34883)
static void C_ccall f_34883(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34888)
static void C_ccall f_34888(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34855)
static void C_ccall f_34855(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34860)
static void C_ccall f_34860(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34827)
static void C_ccall f_34827(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34832)
static void C_ccall f_34832(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34799)
static void C_ccall f_34799(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34804)
static void C_ccall f_34804(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34771)
static void C_ccall f_34771(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_34776)
static void C_ccall f_34776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34743)
static void C_ccall f_34743(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_34748)
static void C_ccall f_34748(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34715)
static void C_ccall f_34715(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_34720)
static void C_ccall f_34720(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34687)
static void C_ccall f_34687(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34692)
static void C_ccall f_34692(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34659)
static void C_ccall f_34659(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34664)
static void C_ccall f_34664(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34631)
static void C_ccall f_34631(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34636)
static void C_ccall f_34636(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_34608)
static void C_ccall f_34608(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34613)
static void C_ccall f_34613(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34612)
static void C_ccall f_34612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34589)
static void C_ccall f_34589(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34594)
static void C_ccall f_34594(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34534)
static void C_ccall f_34534(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34541)
static void C_ccall f_34541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34544)
static void C_ccall f_34544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34568)
static void C_ccall f_34568(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34548)
static void C_ccall f_34548(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34538)
static void C_ccall f_34538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34487)
static void C_ccall f_34487(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34494)
static void C_ccall f_34494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34497)
static void C_ccall f_34497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34517)
static void C_ccall f_34517(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34501)
static void C_ccall f_34501(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34464)
static void C_ccall f_34464(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34469)
static void C_ccall f_34469(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34468)
static void C_ccall f_34468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34445)
static void C_ccall f_34445(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34450)
static void C_ccall f_34450(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34422)
static void C_ccall f_34422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34427)
static void C_ccall f_34427(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34426)
static void C_ccall f_34426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34403)
static void C_ccall f_34403(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34408)
static void C_ccall f_34408(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34384)
static void C_ccall f_34384(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34389)
static void C_ccall f_34389(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34388)
static void C_ccall f_34388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34369)
static void C_ccall f_34369(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34374)
static void C_ccall f_34374(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34350)
static void C_ccall f_34350(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34355)
static void C_ccall f_34355(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34354)
static void C_ccall f_34354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34335)
static void C_ccall f_34335(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34340)
static void C_ccall f_34340(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34320)
static void C_ccall f_34320(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34325)
static void C_ccall f_34325(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34302)
static void C_ccall f_34302(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34310)
static void C_ccall f_34310(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34306)
static void C_ccall f_34306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33832)
static void C_ccall f_33832(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_33832)
static void C_ccall f_33832r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_34260)
static void C_ccall f_34260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34275)
static void C_ccall f_34275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34267)
static void C_ccall f_34267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34231)
static void C_ccall f_34231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34235)
static void C_ccall f_34235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34196)
static void C_ccall f_34196(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34200)
static void C_ccall f_34200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34161)
static void C_ccall f_34161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34165)
static void C_ccall f_34165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33836)
static void C_fcall f_33836(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34125)
static void C_ccall f_34125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34140)
static void C_ccall f_34140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34132)
static void C_ccall f_34132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34096)
static void C_ccall f_34096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34100)
static void C_ccall f_34100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34061)
static void C_ccall f_34061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34065)
static void C_ccall f_34065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34026)
static void C_ccall f_34026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34030)
static void C_ccall f_34030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33839)
static void C_fcall f_33839(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33990)
static void C_ccall f_33990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34005)
static void C_ccall f_34005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33997)
static void C_ccall f_33997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33961)
static void C_ccall f_33961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33965)
static void C_ccall f_33965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33926)
static void C_ccall f_33926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33930)
static void C_ccall f_33930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33891)
static void C_ccall f_33891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33895)
static void C_ccall f_33895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33842)
static void C_fcall f_33842(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33845)
static void C_ccall f_33845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33849)
static void C_ccall f_33849(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33813)
static void C_ccall f_33813(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33818)
static void C_ccall f_33818(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33362)
static void C_ccall f_33362(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_33362)
static void C_ccall f_33362r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33790)
static void C_ccall f_33790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33805)
static void C_ccall f_33805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33797)
static void C_ccall f_33797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33761)
static void C_ccall f_33761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33765)
static void C_ccall f_33765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33726)
static void C_ccall f_33726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33730)
static void C_ccall f_33730(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33691)
static void C_ccall f_33691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33695)
static void C_ccall f_33695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33366)
static void C_fcall f_33366(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33655)
static void C_ccall f_33655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33670)
static void C_ccall f_33670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33662)
static void C_ccall f_33662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33626)
static void C_ccall f_33626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33630)
static void C_ccall f_33630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33591)
static void C_ccall f_33591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33595)
static void C_ccall f_33595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33556)
static void C_ccall f_33556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33560)
static void C_ccall f_33560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33369)
static void C_fcall f_33369(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33520)
static void C_ccall f_33520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33535)
static void C_ccall f_33535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33527)
static void C_ccall f_33527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33491)
static void C_ccall f_33491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33495)
static void C_ccall f_33495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33456)
static void C_ccall f_33456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33460)
static void C_ccall f_33460(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33421)
static void C_ccall f_33421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33425)
static void C_ccall f_33425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33372)
static void C_fcall f_33372(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33375)
static void C_ccall f_33375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33379)
static void C_ccall f_33379(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_33343)
static void C_ccall f_33343(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33348)
static void C_ccall f_33348(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32892)
static void C_ccall f_32892(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32892)
static void C_ccall f_32892r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_33320)
static void C_ccall f_33320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33335)
static void C_ccall f_33335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33327)
static void C_ccall f_33327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33291)
static void C_ccall f_33291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33295)
static void C_ccall f_33295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33256)
static void C_ccall f_33256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33260)
static void C_ccall f_33260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33221)
static void C_ccall f_33221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33225)
static void C_ccall f_33225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32896)
static void C_fcall f_32896(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33185)
static void C_ccall f_33185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33200)
static void C_ccall f_33200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33192)
static void C_ccall f_33192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33156)
static void C_ccall f_33156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33160)
static void C_ccall f_33160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33121)
static void C_ccall f_33121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33125)
static void C_ccall f_33125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33086)
static void C_ccall f_33086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33090)
static void C_ccall f_33090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32899)
static void C_fcall f_32899(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33050)
static void C_ccall f_33050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33065)
static void C_ccall f_33065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33057)
static void C_ccall f_33057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33021)
static void C_ccall f_33021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33025)
static void C_ccall f_33025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32986)
static void C_ccall f_32986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32990)
static void C_ccall f_32990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32951)
static void C_ccall f_32951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32955)
static void C_ccall f_32955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32902)
static void C_fcall f_32902(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32905)
static void C_ccall f_32905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32909)
static void C_ccall f_32909(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_32873)
static void C_ccall f_32873(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32878)
static void C_ccall f_32878(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32144)
static void C_ccall f_32144(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32144)
static void C_ccall f_32144r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32850)
static void C_ccall f_32850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32865)
static void C_ccall f_32865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32857)
static void C_ccall f_32857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32821)
static void C_ccall f_32821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32825)
static void C_ccall f_32825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32786)
static void C_ccall f_32786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32790)
static void C_ccall f_32790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32751)
static void C_ccall f_32751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32755)
static void C_ccall f_32755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32716)
static void C_ccall f_32716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32720)
static void C_ccall f_32720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32148)
static void C_fcall f_32148(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32680)
static void C_ccall f_32680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32695)
static void C_ccall f_32695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32687)
static void C_ccall f_32687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32651)
static void C_ccall f_32651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32655)
static void C_ccall f_32655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32616)
static void C_ccall f_32616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32620)
static void C_ccall f_32620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32581)
static void C_ccall f_32581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32585)
static void C_ccall f_32585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32546)
static void C_ccall f_32546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32550)
static void C_ccall f_32550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32151)
static void C_fcall f_32151(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32510)
static void C_ccall f_32510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32525)
static void C_ccall f_32525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32517)
static void C_ccall f_32517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32481)
static void C_ccall f_32481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32485)
static void C_ccall f_32485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32446)
static void C_ccall f_32446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32450)
static void C_ccall f_32450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32411)
static void C_ccall f_32411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32415)
static void C_ccall f_32415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32376)
static void C_ccall f_32376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32380)
static void C_ccall f_32380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32154)
static void C_fcall f_32154(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32340)
static void C_ccall f_32340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32355)
static void C_ccall f_32355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32347)
static void C_ccall f_32347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32311)
static void C_ccall f_32311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32315)
static void C_ccall f_32315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32276)
static void C_ccall f_32276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32280)
static void C_ccall f_32280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32241)
static void C_ccall f_32241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32245)
static void C_ccall f_32245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32206)
static void C_ccall f_32206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32210)
static void C_ccall f_32210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32157)
static void C_fcall f_32157(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32160)
static void C_ccall f_32160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32164)
static void C_ccall f_32164(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_32125)
static void C_ccall f_32125(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32130)
static void C_ccall f_32130(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31396)
static void C_ccall f_31396(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31396)
static void C_ccall f_31396r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32102)
static void C_ccall f_32102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32117)
static void C_ccall f_32117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32109)
static void C_ccall f_32109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32073)
static void C_ccall f_32073(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32077)
static void C_ccall f_32077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32038)
static void C_ccall f_32038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32042)
static void C_ccall f_32042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32003)
static void C_ccall f_32003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32007)
static void C_ccall f_32007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31968)
static void C_ccall f_31968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31972)
static void C_ccall f_31972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31400)
static void C_fcall f_31400(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31932)
static void C_ccall f_31932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31947)
static void C_ccall f_31947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31939)
static void C_ccall f_31939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31903)
static void C_ccall f_31903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31907)
static void C_ccall f_31907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31868)
static void C_ccall f_31868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31872)
static void C_ccall f_31872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31833)
static void C_ccall f_31833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31837)
static void C_ccall f_31837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31798)
static void C_ccall f_31798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31802)
static void C_ccall f_31802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31403)
static void C_fcall f_31403(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31762)
static void C_ccall f_31762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31777)
static void C_ccall f_31777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31769)
static void C_ccall f_31769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31733)
static void C_ccall f_31733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31737)
static void C_ccall f_31737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31698)
static void C_ccall f_31698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31702)
static void C_ccall f_31702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31663)
static void C_ccall f_31663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31667)
static void C_ccall f_31667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31628)
static void C_ccall f_31628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31632)
static void C_ccall f_31632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31406)
static void C_fcall f_31406(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31592)
static void C_ccall f_31592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31607)
static void C_ccall f_31607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31599)
static void C_ccall f_31599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31563)
static void C_ccall f_31563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31567)
static void C_ccall f_31567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31528)
static void C_ccall f_31528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31532)
static void C_ccall f_31532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31493)
static void C_ccall f_31493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31497)
static void C_ccall f_31497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31458)
static void C_ccall f_31458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31462)
static void C_ccall f_31462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31409)
static void C_fcall f_31409(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31412)
static void C_ccall f_31412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31416)
static void C_ccall f_31416(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31377)
static void C_ccall f_31377(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31382)
static void C_ccall f_31382(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30926)
static void C_ccall f_30926(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30926)
static void C_ccall f_30926r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31354)
static void C_ccall f_31354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31369)
static void C_ccall f_31369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31361)
static void C_ccall f_31361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31325)
static void C_ccall f_31325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31329)
static void C_ccall f_31329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31290)
static void C_ccall f_31290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31294)
static void C_ccall f_31294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31255)
static void C_ccall f_31255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31259)
static void C_ccall f_31259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30930)
static void C_fcall f_30930(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31219)
static void C_ccall f_31219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31234)
static void C_ccall f_31234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31226)
static void C_ccall f_31226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31190)
static void C_ccall f_31190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31194)
static void C_ccall f_31194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31155)
static void C_ccall f_31155(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31159)
static void C_ccall f_31159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31120)
static void C_ccall f_31120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31124)
static void C_ccall f_31124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30933)
static void C_fcall f_30933(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31084)
static void C_ccall f_31084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31099)
static void C_ccall f_31099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31091)
static void C_ccall f_31091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31055)
static void C_ccall f_31055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31059)
static void C_ccall f_31059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31020)
static void C_ccall f_31020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31024)
static void C_ccall f_31024(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30985)
static void C_ccall f_30985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30989)
static void C_ccall f_30989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30936)
static void C_fcall f_30936(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30939)
static void C_ccall f_30939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30943)
static void C_ccall f_30943(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30907)
static void C_ccall f_30907(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30912)
static void C_ccall f_30912(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30178)
static void C_ccall f_30178(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30178)
static void C_ccall f_30178r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30884)
static void C_ccall f_30884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30899)
static void C_ccall f_30899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30891)
static void C_ccall f_30891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30855)
static void C_ccall f_30855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30859)
static void C_ccall f_30859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30820)
static void C_ccall f_30820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30824)
static void C_ccall f_30824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30785)
static void C_ccall f_30785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30789)
static void C_ccall f_30789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30750)
static void C_ccall f_30750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30754)
static void C_ccall f_30754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30182)
static void C_fcall f_30182(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30714)
static void C_ccall f_30714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30729)
static void C_ccall f_30729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30721)
static void C_ccall f_30721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30685)
static void C_ccall f_30685(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30689)
static void C_ccall f_30689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30650)
static void C_ccall f_30650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30654)
static void C_ccall f_30654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30615)
static void C_ccall f_30615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30619)
static void C_ccall f_30619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30580)
static void C_ccall f_30580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30584)
static void C_ccall f_30584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30185)
static void C_fcall f_30185(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30544)
static void C_ccall f_30544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30559)
static void C_ccall f_30559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30551)
static void C_ccall f_30551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30515)
static void C_ccall f_30515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30519)
static void C_ccall f_30519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30480)
static void C_ccall f_30480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30484)
static void C_ccall f_30484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30445)
static void C_ccall f_30445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30449)
static void C_ccall f_30449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30410)
static void C_ccall f_30410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30414)
static void C_ccall f_30414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30188)
static void C_fcall f_30188(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30374)
static void C_ccall f_30374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30389)
static void C_ccall f_30389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30381)
static void C_ccall f_30381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30345)
static void C_ccall f_30345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30349)
static void C_ccall f_30349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30310)
static void C_ccall f_30310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30314)
static void C_ccall f_30314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30275)
static void C_ccall f_30275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30279)
static void C_ccall f_30279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30240)
static void C_ccall f_30240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30244)
static void C_ccall f_30244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30191)
static void C_fcall f_30191(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30194)
static void C_ccall f_30194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30198)
static void C_ccall f_30198(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29833)
static void C_fcall f_29833(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29673)
static void C_fcall f_29673(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29708)
static void C_fcall f_29708(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_29718)
static void C_fcall f_29718(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29722)
static void C_ccall f_29722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29725)
static void C_ccall f_29725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29786)
static void C_ccall f_29786(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29777)
static void C_ccall f_29777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29728)
static void C_ccall f_29728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29747)
static void C_ccall f_29747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29754)
static void C_ccall f_29754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29731)
static void C_ccall f_29731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29737)
static void C_ccall f_29737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29706)
static void C_ccall f_29706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29681)
static void C_fcall f_29681(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29680)
static void C_ccall f_29680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29841)
static void C_fcall f_29841(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29419)
static void C_ccall f_29419(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29441)
static void C_ccall f_29441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29456)
static void C_ccall f_29456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29459)
static void C_fcall f_29459(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29635)
static void C_ccall f_29635(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29629)
static void C_ccall f_29629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29462)
static void C_ccall f_29462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29611)
static void C_ccall f_29611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29465)
static void C_fcall f_29465(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29468)
static void C_ccall f_29468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29604)
static void C_ccall f_29604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29592)
static void C_ccall f_29592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29488)
static void C_fcall f_29488(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29495)
static void C_ccall f_29495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29565)
static void C_ccall f_29565(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29551)
static void C_ccall f_29551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29559)
static void C_ccall f_29559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29498)
static void C_ccall f_29498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29537)
static void C_ccall f_29537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29501)
static void C_fcall f_29501(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29530)
static void C_ccall f_29530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29507)
static void C_ccall f_29507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29510)
static void C_ccall f_29510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29514)
static void C_ccall f_29514(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29475)
static void C_fcall f_29475(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29478)
static void C_ccall f_29478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29288)
static void C_fcall f_29288(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29297)
static void C_fcall f_29297(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29245)
static void C_ccall f_29245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29251)
static void C_fcall f_29251(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29314)
static void C_ccall f_29314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29400)
static void C_ccall f_29400(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29387)
static void C_ccall f_29387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29395)
static void C_ccall f_29395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29317)
static void C_ccall f_29317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29321)
static void C_ccall f_29321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29364)
static void C_ccall f_29364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29326)
static void C_ccall f_29326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29292)
static void C_ccall f_29292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29187)
static void C_ccall f_29187(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29194)
static void C_ccall f_29194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29225)
static void C_ccall f_29225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29221)
static void C_ccall f_29221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29213)
static void C_ccall f_29213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29096)
static void C_ccall f_29096(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29103)
static void C_ccall f_29103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29171)
static void C_ccall f_29171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29114)
static void C_fcall f_29114(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29141)
static void C_ccall f_29141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29125)
static void C_ccall f_29125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29030)
static void C_ccall f_29030(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_29041)
static void C_ccall f_29041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29044)
static void C_fcall f_29044(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29051)
static void C_ccall f_29051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29024)
static void C_ccall f_29024(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28478)
static void C_ccall f_28478(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28509)
static void C_ccall f_28509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28973)
static void C_ccall f_28973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28979)
static void C_ccall f_28979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28520)
static void C_ccall f_28520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28405)
static void C_fcall f_28405(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28430)
static void C_ccall f_28430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28365)
static void C_fcall f_28365(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28378)
static void C_fcall f_28378(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28419)
static void C_ccall f_28419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28524)
static void C_ccall f_28524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28961)
static void C_ccall f_28961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28957)
static void C_fcall f_28957(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28953)
static void C_ccall f_28953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28527)
static void C_ccall f_28527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28747)
static void C_fcall f_28747(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28856)
static void C_ccall f_28856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28921)
static void C_ccall f_28921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28863)
static void C_fcall f_28863(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28867)
static void C_ccall f_28867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28871)
static void C_ccall f_28871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28913)
static void C_ccall f_28913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28909)
static void C_ccall f_28909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28887)
static void C_ccall f_28887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28750)
static void C_fcall f_28750(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28753)
static void C_fcall f_28753(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28652)
static void C_ccall f_28652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28735)
static void C_ccall f_28735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28702)
static void C_ccall f_28702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28728)
static void C_ccall f_28728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28710)
static void C_ccall f_28710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28658)
static void C_fcall f_28658(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28698)
static void C_ccall f_28698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28640)
static void C_ccall f_28640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28611)
static void C_ccall f_28611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28633)
static void C_ccall f_28633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28619)
static void C_ccall f_28619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28573)
static void C_fcall f_28573(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28530)
static void C_fcall f_28530(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28541)
static void C_ccall f_28541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28545)
static void C_ccall f_28545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28549)
static void C_ccall f_28549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28553)
static void C_ccall f_28553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28537)
static void C_ccall f_28537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28497)
static void C_fcall f_28497(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28492)
static void C_fcall f_28492(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28487)
static void C_fcall f_28487(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28319)
static void C_ccall f_28319(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28330)
static void C_ccall f_28330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28345)
static void C_ccall f_28345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28281)
static void C_ccall f_28281(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28292)
static void C_ccall f_28292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28307)
static void C_ccall f_28307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28214)
static void C_ccall f_28214(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28234)
static void C_fcall f_28234(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28244)
static void C_ccall f_28244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28257)
static void C_ccall f_28257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28225)
static void C_ccall f_28225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28232)
static void C_ccall f_28232(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28021)
static void C_ccall f_28021(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_28081)
static void C_fcall f_28081(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28091)
static void C_ccall f_28091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28205)
static void C_ccall f_28205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28170)
static void C_ccall f_28170(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28162)
static void C_ccall f_28162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28133)
static void C_ccall f_28133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28111)
static void C_ccall f_28111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28114)
static void C_ccall f_28114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28102)
static void C_ccall f_28102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28028)
static void C_ccall f_28028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28079)
static void C_ccall f_28079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28071)
static void C_ccall f_28071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28031)
static void C_ccall f_28031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28042)
static void C_ccall f_28042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28046)
static void C_ccall f_28046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28038)
static void C_ccall f_28038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27879)
static void C_ccall f_27879(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27927)
static void C_fcall f_27927(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27937)
static void C_ccall f_27937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27948)
static void C_ccall f_27948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27985)
static void C_ccall f_27985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27960)
static void C_ccall f_27960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27951)
static void C_ccall f_27951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27889)
static void C_ccall f_27889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27925)
static void C_ccall f_27925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27896)
static void C_ccall f_27896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27528)
static void C_ccall f_27528(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27535)
static void C_ccall f_27535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27769)
static void C_fcall f_27769(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27779)
static void C_ccall f_27779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27790)
static void C_ccall f_27790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27802)
static void C_fcall f_27802(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27805)
static void C_ccall f_27805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27793)
static void C_ccall f_27793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27541)
static void C_ccall f_27541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27767)
static void C_ccall f_27767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27763)
static void C_ccall f_27763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27709)
static void C_fcall f_27709(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27674)
static void C_fcall f_27674(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27690)
static void C_fcall f_27690(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27645)
static void C_fcall f_27645(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27569)
static void C_ccall f_27569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27572)
static void C_ccall f_27572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27636)
static void C_ccall f_27636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27632)
static void C_ccall f_27632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27552)
static void C_fcall f_27552(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27563)
static void C_ccall f_27563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27559)
static void C_ccall f_27559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27481)
static void C_ccall f_27481(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27514)
static void C_ccall f_27514(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27496)
static void C_ccall f_27496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27508)
static void C_ccall f_27508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27099)
static void C_ccall f_27099(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27308)
static void C_fcall f_27308(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27318)
static void C_ccall f_27318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27329)
static void C_ccall f_27329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27449)
static void C_ccall f_27449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27428)
static void C_ccall f_27428(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27407)
static void C_ccall f_27407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27386)
static void C_ccall f_27386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27365)
static void C_ccall f_27365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27344)
static void C_ccall f_27344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27332)
static void C_ccall f_27332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27109)
static void C_ccall f_27109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27112)
static void C_fcall f_27112(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27275)
static void C_fcall f_27275(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27115)
static void C_fcall f_27115(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27266)
static void C_ccall f_27266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27246)
static void C_ccall f_27246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27118)
static void C_fcall f_27118(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27211)
static void C_ccall f_27211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27228)
static void C_ccall f_27228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27121)
static void C_fcall f_27121(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27160)
static void C_ccall f_27160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27194)
static void C_ccall f_27194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27178)
static void C_ccall f_27178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27163)
static void C_fcall f_27163(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27128)
static void C_fcall f_27128(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27139)
static void C_ccall f_27139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27143)
static void C_ccall f_27143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27135)
static void C_ccall f_27135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27017)
static void C_ccall f_27017(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_27021)
static void C_ccall f_27021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27039)
static void C_ccall f_27039(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26857)
static void C_fcall f_26857(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26865)
static void C_fcall f_26865(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26875)
static void C_ccall f_26875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26913)
static void C_ccall f_26913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26916)
static void C_ccall f_26916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26919)
static void C_ccall f_26919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26994)
static void C_fcall f_26994(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27004)
static void C_ccall f_27004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26922)
static void C_ccall f_26922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26925)
static void C_ccall f_26925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26928)
static void C_ccall f_26928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26948)
static void C_fcall f_26948(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26958)
static void C_ccall f_26958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26961)
static void C_ccall f_26961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26964)
static void C_ccall f_26964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26931)
static void C_ccall f_26931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26934)
static void C_ccall f_26934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26851)
static void C_fcall f_26851(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26845)
static void C_fcall f_26845(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26839)
static void C_fcall f_26839(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26768)
static void C_fcall f_26768(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26809)
static void C_ccall f_26809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26813)
static void C_ccall f_26813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26817)
static void C_ccall f_26817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26821)
static void C_ccall f_26821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26825)
static void C_ccall f_26825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26829)
static void C_ccall f_26829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26833)
static void C_ccall f_26833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26837)
static void C_ccall f_26837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26770)
static void C_fcall f_26770(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26776)
static void C_fcall f_26776(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26798)
static void C_ccall f_26798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26787)
static void C_ccall f_26787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26617)
static void C_fcall f_26617(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26632)
static void C_fcall f_26632(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26645)
static void C_ccall f_26645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26605)
static void C_ccall f_26605(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26593)
static void C_ccall f_26593(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26581)
static void C_ccall f_26581(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26575)
static void C_fcall f_26575(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26569)
static void C_ccall f_26569(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26557)
static void C_ccall f_26557(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26545)
static void C_ccall f_26545(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26533)
static void C_ccall f_26533(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26521)
static void C_ccall f_26521(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26515)
static void C_fcall f_26515(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26479)
static void C_ccall f_26479(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26473)
static void C_ccall f_26473(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26419)
static void C_ccall f_26419(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26423)
static void C_ccall f_26423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26439)
static void C_ccall f_26439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26471)
static void C_ccall f_26471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26445)
static void C_ccall f_26445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26451)
static void C_ccall f_26451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26426)
static void C_ccall f_26426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26410)
static void C_ccall f_26410(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26414)
static void C_ccall f_26414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26257)
static void C_ccall f_26257(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26257)
static void C_ccall f_26257r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_26384)
static void C_fcall f_26384(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26397)
static void C_ccall f_26397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26379)
static void C_ccall f_26379(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26260)
static void C_fcall f_26260(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26376)
static void C_ccall f_26376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26360)
static void C_ccall f_26360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26288)
static void C_ccall f_26288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26296)
static void C_fcall f_26296(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26306)
static void C_ccall f_26306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26309)
static void C_ccall f_26309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26291)
static void C_ccall f_26291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26080)
static void C_ccall f_26080(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_26084)
static void C_ccall f_26084(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26089)
static void C_ccall f_26089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26092)
static void C_fcall f_26092(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23827)
static void C_ccall f_23827(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23840)
static void C_ccall f_23840(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23847)
static void C_fcall f_23847(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23854)
static void C_ccall f_23854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23833)
static void C_ccall f_23833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26096)
static void C_ccall f_26096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26133)
static void C_ccall f_26133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26226)
static void C_fcall f_26226(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26236)
static void C_fcall f_26236(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26139)
static void C_ccall f_26139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26196)
static void C_fcall f_26196(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26206)
static void C_fcall f_26206(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26147)
static void C_ccall f_26147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26161)
static void C_ccall f_26161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26165)
static void C_ccall f_26165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26169)
static void C_ccall f_26169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26173)
static void C_ccall f_26173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26180)
static void C_ccall f_26180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26157)
static void C_ccall f_26157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26150)
static void C_ccall f_26150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26099)
static void C_ccall f_26099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24954)
static void C_ccall f_24954(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24967)
static void C_ccall f_24967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25017)
static void C_ccall f_25017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25114)
static void C_ccall f_25114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25182)
static void C_ccall f_25182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25439)
static void C_ccall f_25439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25189)
static void C_fcall f_25189(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25427)
static void C_ccall f_25427(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25378)
static void C_ccall f_25378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25384)
static void C_ccall f_25384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25408)
static void C_ccall f_25408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25404)
static void C_ccall f_25404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25392)
static void C_ccall f_25392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25192)
static void C_fcall f_25192(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25354)
static void C_ccall f_25354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25358)
static void C_ccall f_25358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25195)
static void C_fcall f_25195(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25331)
static void C_ccall f_25331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25335)
static void C_ccall f_25335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25198)
static void C_fcall f_25198(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25308)
static void C_ccall f_25308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25312)
static void C_ccall f_25312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25201)
static void C_fcall f_25201(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25233)
static void C_ccall f_25233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25251)
static void C_ccall f_25251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25269)
static void C_ccall f_25269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25287)
static void C_ccall f_25287(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25204)
static void C_fcall f_25204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25208)
static void C_ccall f_25208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25118)
static void C_ccall f_25118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25122)
static void C_ccall f_25122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25126)
static void C_ccall f_25126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25021)
static void C_ccall f_25021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25025)
static void C_ccall f_25025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25029)
static void C_ccall f_25029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25048)
static void C_ccall f_25048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25052)
static void C_ccall f_25052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25032)
static void C_fcall f_25032(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25036)
static void C_ccall f_25036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24971)
static void C_ccall f_24971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24975)
static void C_ccall f_24975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24979)
static void C_ccall f_24979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24961)
static void C_fcall f_24961(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24776)
static void C_fcall f_24776(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24788)
static void C_fcall f_24788(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24807)
static void C_ccall f_24807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24825)
static void C_fcall f_24825(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24857)
static void C_ccall f_24857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24860)
static void C_fcall f_24860(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24853)
static void C_ccall f_24853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24839)
static void C_ccall f_24839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24810)
static void C_ccall f_24810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24755)
static void C_fcall f_24755(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24762)
static void C_ccall f_24762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24765)
static void C_ccall f_24765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24771)
static void C_ccall f_24771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24690)
static void C_fcall f_24690(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24699)
static void C_fcall f_24699(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24722)
static void C_ccall f_24722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24712)
static void C_fcall f_24712(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24646)
static void C_fcall f_24646(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24634)
static void C_fcall f_24634(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24532)
static void C_fcall f_24532(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24484)
static void C_fcall f_24484(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23865)
static void C_fcall f_23865(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_23869)
static void C_ccall f_23869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23872)
static void C_ccall f_23872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24298)
static void C_ccall f_24298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24294)
static void C_ccall f_24294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24290)
static void C_ccall f_24290(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23875)
static void C_fcall f_23875(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23998)
static void C_ccall f_23998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23231)
static void C_ccall f_23231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24004)
static void C_fcall f_24004(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23247)
static void C_ccall f_23247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24092)
static void C_fcall f_24092(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24162)
static void C_ccall f_24162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23263)
static void C_ccall f_23263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24165)
static void C_fcall f_24165(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23295)
static void C_ccall f_23295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24243)
static void C_fcall f_24243(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24269)
static void C_ccall f_24269(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24263)
static void C_ccall f_24263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24252)
static void C_ccall f_24252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24194)
static void C_fcall f_24194(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24204)
static void C_ccall f_24204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24230)
static void C_ccall f_24230(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24224)
static void C_ccall f_24224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24207)
static void C_ccall f_24207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24217)
static void C_ccall f_24217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24210)
static void C_fcall f_24210(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24171)
static void C_ccall f_24171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24180)
static void C_ccall f_24180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24174)
static void C_fcall f_24174(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24098)
static void C_ccall f_24098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24116)
static void C_fcall f_24116(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24149)
static void C_ccall f_24149(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24135)
static void C_ccall f_24135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24143)
static void C_ccall f_24143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24126)
static void C_ccall f_24126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24101)
static void C_ccall f_24101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24013)
static void C_ccall f_24013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24035)
static void C_fcall f_24035(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24082)
static void C_ccall f_24082(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24068)
static void C_ccall f_24068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24076)
static void C_ccall f_24076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24048)
static void C_ccall f_24048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24051)
static void C_fcall f_24051(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24016)
static void C_ccall f_24016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24033)
static void C_ccall f_24033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24019)
static void C_fcall f_24019(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23884)
static void C_ccall f_23884(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23890)
static void C_ccall f_23890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23948)
static void C_ccall f_23948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23951)
static void C_ccall f_23951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23972)
static void C_ccall f_23972(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23983)
static void C_ccall f_23983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23962)
static void C_ccall f_23962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23896)
static void C_ccall f_23896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23906)
static void C_ccall f_23906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23942)
static void C_ccall f_23942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23912)
static void C_ccall f_23912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23927)
static void C_ccall f_23927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23931)
static void C_ccall f_23931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23935)
static void C_ccall f_23935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23919)
static void C_ccall f_23919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23761)
static void C_fcall f_23761(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23763)
static void C_ccall f_23763(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23811)
static void C_ccall f_23811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23767)
static void C_ccall f_23767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23770)
static void C_fcall f_23770(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23775)
static void C_fcall f_23775(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23796)
static void C_ccall f_23796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23753)
static void C_fcall f_23753(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23755)
static void C_ccall f_23755(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23576)
static void C_ccall f_23576(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23576)
static void C_ccall f_23576r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_23584)
static void C_ccall f_23584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23545)
static void C_fcall f_23545(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23562)
static void C_ccall f_23562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23566)
static void C_ccall f_23566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23512)
static void C_fcall f_23512(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23519)
static void C_ccall f_23519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23463)
static void C_ccall f_23463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23470)
static void C_ccall f_23470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23528)
static void C_ccall f_23528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23751)
static void C_ccall f_23751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23728)
static void C_ccall f_23728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23744)
static void C_ccall f_23744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23590)
static void C_ccall f_23590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23593)
static void C_ccall f_23593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23617)
static void C_ccall f_23617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23674)
static void C_ccall f_23674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23680)
static void C_ccall f_23680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23689)
static void C_ccall f_23689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23698)
static void C_ccall f_23698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23707)
static void C_ccall f_23707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23716)
static void C_ccall f_23716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23668)
static void C_ccall f_23668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23623)
static void C_ccall f_23623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23629)
static void C_ccall f_23629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23635)
static void C_ccall f_23635(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23641)
static void C_ccall f_23641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23647)
static void C_ccall f_23647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23653)
static void C_ccall f_23653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23494)
static void C_fcall f_23494(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23501)
static void C_ccall f_23501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23484)
static void C_fcall f_23484(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23472)
static void C_fcall f_23472(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23440)
static void C_fcall f_23440(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23447)
static void C_ccall f_23447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23454)
static void C_ccall f_23454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23424)
static void C_fcall f_23424(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23431)
static void C_ccall f_23431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23438)
static void C_ccall f_23438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23412)
static void C_fcall f_23412(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23394)
static void C_fcall f_23394(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23376)
static void C_fcall f_23376(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23361)
static void C_fcall f_23361(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23355)
static void C_fcall f_23355(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23343)
static void C_fcall f_23343(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23325)
static void C_fcall f_23325(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23304)
static void C_fcall f_23304(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23272)
static void C_fcall f_23272(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23279)
static void C_ccall f_23279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23214)
static void C_fcall f_23214(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23222)
static void C_ccall f_23222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23204)
static void C_fcall f_23204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23212)
static void C_ccall f_23212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23198)
static void C_fcall f_23198(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23186)
static void C_fcall f_23186(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23183)
static void C_ccall f_23183(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23162)
static void C_fcall f_23162(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23075)
static void C_fcall f_23075(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23054)
static void C_fcall f_23054(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_23044)
static void C_fcall f_23044(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23032)
static void C_fcall f_23032(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23003)
static void C_ccall f_23003(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22991)
static void C_fcall f_22991(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22973)
static void C_fcall f_22973(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22955)
static void C_fcall f_22955(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22934)
static void C_ccall f_22934(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21912)
static void C_ccall f_21912(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21912)
static void C_ccall f_21912r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_22911)
static void C_ccall f_22911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22926)
static void C_ccall f_22926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22918)
static void C_ccall f_22918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22882)
static void C_ccall f_22882(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22886)
static void C_ccall f_22886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22847)
static void C_ccall f_22847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22851)
static void C_ccall f_22851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21922)
static void C_fcall f_21922(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22811)
static void C_ccall f_22811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22826)
static void C_ccall f_22826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22818)
static void C_ccall f_22818(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22782)
static void C_ccall f_22782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22786)
static void C_ccall f_22786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22747)
static void C_ccall f_22747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22751)
static void C_ccall f_22751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21925)
static void C_fcall f_21925(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21928)
static void C_ccall f_21928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21933)
static void C_ccall f_21933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22640)
static void C_fcall f_22640(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22663)
static void C_fcall f_22663(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22716)
static void C_ccall f_22716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22698)
static void C_fcall f_22698(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22691)
static void C_ccall f_22691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22673)
static void C_ccall f_22673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22650)
static void C_ccall f_22650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22127)
static void C_ccall f_22127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22602)
static void C_fcall f_22602(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22624)
static void C_ccall f_22624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22608)
static void C_ccall f_22608(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22616)
static void C_ccall f_22616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22620)
static void C_ccall f_22620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22606)
static void C_ccall f_22606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22596)
static void C_ccall f_22596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22130)
static void C_fcall f_22130(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22473)
static void C_fcall f_22473(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22497)
static void C_ccall f_22497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22559)
static void C_fcall f_22559(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22500)
static void C_ccall f_22500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22516)
static void C_fcall f_22516(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22541)
static void C_ccall f_22541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22507)
static void C_ccall f_22507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22484)
static void C_ccall f_22484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22133)
static void C_ccall f_22133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22459)
static void C_ccall f_22459(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22137)
static void C_ccall f_22137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22181)
static void C_ccall f_22181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22184)
static void C_ccall f_22184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22440)
static void C_fcall f_22440(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22450)
static void C_ccall f_22450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22187)
static void C_ccall f_22187(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22378)
static void C_fcall f_22378(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22388)
static void C_ccall f_22388(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22391)
static void C_ccall f_22391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22411)
static void C_ccall f_22411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22413)
static void C_fcall f_22413(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22423)
static void C_ccall f_22423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22397)
static void C_ccall f_22397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22400)
static void C_ccall f_22400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22190)
static void C_ccall f_22190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22198)
static void C_fcall f_22198(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22211)
static void C_ccall f_22211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22085)
static void C_ccall f_22085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22094)
static void C_fcall f_22094(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22116)
static void C_ccall f_22116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22105)
static void C_ccall f_22105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22214)
static void C_ccall f_22214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22349)
static void C_ccall f_22349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22351)
static void C_fcall f_22351(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22361)
static void C_ccall f_22361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22220)
static void C_ccall f_22220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22322)
static void C_ccall f_22322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22324)
static void C_fcall f_22324(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22334)
static void C_ccall f_22334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22223)
static void C_ccall f_22223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22235)
static void C_fcall f_22235(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22261)
static void C_ccall f_22261(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22267)
static void C_ccall f_22267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22273)
static void C_ccall f_22273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22283)
static void C_ccall f_22283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22285)
static void C_fcall f_22285(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22295)
static void C_ccall f_22295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22276)
static void C_ccall f_22276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22248)
static void C_ccall f_22248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22226)
static void C_ccall f_22226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22193)
static void C_ccall f_22193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22140)
static void C_ccall f_22140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22163)
static void C_ccall f_22163(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22152)
static void C_ccall f_22152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22017)
static void C_fcall f_22017(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22065)
static void C_ccall f_22065(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22027)
static void C_ccall f_22027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22055)
static void C_ccall f_22055(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22030)
static void C_ccall f_22030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21935)
static void C_fcall f_21935(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_22007)
static void C_ccall f_22007(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21939)
static void C_ccall f_21939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21957)
static void C_ccall f_21957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21989)
static void C_ccall f_21989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21818)
static void C_ccall f_21818(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21822)
static void C_ccall f_21822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21851)
static void C_ccall f_21851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21856)
static void C_fcall f_21856(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21881)
static void C_fcall f_21881(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21866)
static void C_ccall f_21866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21300)
static void C_ccall f_21300(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21300)
static void C_ccall f_21300r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21571)
static void C_ccall f_21571(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21575)
static void C_ccall f_21575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21580)
static void C_ccall f_21580(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_21580)
static void C_ccall f_21580r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_21786)
static void C_ccall f_21786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21801)
static void C_ccall f_21801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21793)
static void C_ccall f_21793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21757)
static void C_ccall f_21757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21761)
static void C_ccall f_21761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21722)
static void C_ccall f_21722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21726)
static void C_ccall f_21726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21584)
static void C_fcall f_21584(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21686)
static void C_ccall f_21686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21701)
static void C_ccall f_21701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21693)
static void C_ccall f_21693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21657)
static void C_ccall f_21657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21661)
static void C_ccall f_21661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21622)
static void C_ccall f_21622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21626)
static void C_ccall f_21626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21587)
static void C_fcall f_21587(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21590)
static void C_ccall f_21590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21593)
static void C_fcall f_21593(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21562)
static void C_ccall f_21562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21304)
static void C_ccall f_21304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21531)
static void C_ccall f_21531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21546)
static void C_ccall f_21546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21538)
static void C_ccall f_21538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21502)
static void C_ccall f_21502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21506)
static void C_ccall f_21506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21467)
static void C_ccall f_21467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21471)
static void C_ccall f_21471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21307)
static void C_fcall f_21307(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21431)
static void C_ccall f_21431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21446)
static void C_ccall f_21446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21438)
static void C_ccall f_21438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21402)
static void C_ccall f_21402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21406)
static void C_ccall f_21406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21367)
static void C_ccall f_21367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21371)
static void C_ccall f_21371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21310)
static void C_fcall f_21310(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21313)
static void C_ccall f_21313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21316)
static void C_ccall f_21316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21328)
static void C_ccall f_21328(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21346)
static void C_ccall f_21346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21334)
static void C_ccall f_21334(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21322)
static void C_ccall f_21322(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21237)
static void C_fcall f_21237(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20897)
static void C_ccall f_20897(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21079)
static void C_ccall f_21079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21083)
static void C_ccall f_21083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21085)
static void C_fcall f_21085(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21010)
static void C_fcall f_21010(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21020)
static void C_fcall f_21020(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21027)
static void C_fcall f_21027(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21095)
static void C_ccall f_21095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21098)
static void C_ccall f_21098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21102)
static void C_ccall f_21102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21122)
static void C_fcall f_21122(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21138)
static void C_ccall f_21138(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21105)
static void C_ccall f_21105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20900)
static void C_fcall f_20900(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20912)
static void C_fcall f_20912(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20948)
static void C_ccall f_20948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20968)
static void C_ccall f_20968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20973)
static void C_fcall f_20973(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20410)
static void C_ccall f_20410(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_20410)
static void C_ccall f_20410r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_20337)
static void C_fcall f_20337(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_20182)
static void C_ccall f_20182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20188)
static void C_ccall f_20188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20273)
static void C_fcall f_20273(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20200)
static void C_ccall f_20200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20216)
static void C_ccall f_20216(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20220)
static void C_fcall f_20220(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20223)
static void C_fcall f_20223(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20203)
static void C_ccall f_20203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20214)
static void C_ccall f_20214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20354)
static void C_ccall f_20354(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20891)
static void C_ccall f_20891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20414)
static void C_ccall f_20414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20860)
static void C_ccall f_20860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20875)
static void C_ccall f_20875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20867)
static void C_ccall f_20867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20831)
static void C_ccall f_20831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20835)
static void C_ccall f_20835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20796)
static void C_ccall f_20796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20800)
static void C_ccall f_20800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20761)
static void C_ccall f_20761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20765)
static void C_ccall f_20765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20417)
static void C_fcall f_20417(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20725)
static void C_ccall f_20725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20740)
static void C_ccall f_20740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20732)
static void C_ccall f_20732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20696)
static void C_ccall f_20696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20700)
static void C_ccall f_20700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20661)
static void C_ccall f_20661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20665)
static void C_ccall f_20665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20626)
static void C_ccall f_20626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20630)
static void C_ccall f_20630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20420)
static void C_fcall f_20420(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20590)
static void C_ccall f_20590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20605)
static void C_ccall f_20605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20597)
static void C_ccall f_20597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20561)
static void C_ccall f_20561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20565)
static void C_ccall f_20565(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20526)
static void C_ccall f_20526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20530)
static void C_ccall f_20530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20491)
static void C_ccall f_20491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20495)
static void C_ccall f_20495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20423)
static void C_fcall f_20423(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20426)
static void C_ccall f_20426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20429)
static void C_ccall f_20429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20462)
static void C_ccall f_20462(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20470)
static void C_ccall f_20470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20435)
static void C_ccall f_20435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20448)
static void C_ccall f_20448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20438)
static void C_fcall f_20438(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20441)
static void C_ccall f_20441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19977)
static void C_ccall f_19977(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19981)
static void C_ccall f_19981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19984)
static void C_ccall f_19984(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19987)
static void C_ccall f_19987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20156)
static void C_ccall f_20156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20169)
static void C_ccall f_20169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20173)
static void C_ccall f_20173(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19993)
static void C_ccall f_19993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20149)
static void C_ccall f_20149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20130)
static void C_ccall f_20130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20137)
static void C_ccall f_20137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20141)
static void C_ccall f_20141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19999)
static void C_fcall f_19999(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20005)
static void C_ccall f_20005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20089)
static void C_ccall f_20089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20091)
static void C_fcall f_20091(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20113)
static void C_ccall f_20113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20120)
static void C_ccall f_20120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20124)
static void C_ccall f_20124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20110)
static void C_fcall f_20110(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20106)
static void C_ccall f_20106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20047)
static void C_ccall f_20047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20064)
static void C_fcall f_20064(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20074)
static void C_ccall f_20074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20050)
static void C_ccall f_20050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20009)
static void C_fcall f_20009(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20017)
static void C_ccall f_20017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20019)
static void C_fcall f_20019(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20040)
static void C_ccall f_20040(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19865)
static void C_fcall f_19865(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19975)
static void C_ccall f_19975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19934)
static void C_fcall f_19934(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19967)
static void C_ccall f_19967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19963)
static void C_ccall f_19963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19948)
static void C_ccall f_19948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19872)
static void C_ccall f_19872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19880)
static void C_fcall f_19880(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19925)
static void C_ccall f_19925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19913)
static void C_ccall f_19913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19897)
static void C_ccall f_19897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19098)
static void C_ccall f_19098(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_19098)
static void C_ccall f_19098r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19415)
static void C_ccall f_19415(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19422)
static void C_fcall f_19422(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19827)
static void C_ccall f_19827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19842)
static void C_ccall f_19842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19834)
static void C_ccall f_19834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19798)
static void C_ccall f_19798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19802)
static void C_ccall f_19802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19763)
static void C_ccall f_19763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19767)
static void C_ccall f_19767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19728)
static void C_ccall f_19728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19732)
static void C_ccall f_19732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19425)
static void C_fcall f_19425(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19692)
static void C_ccall f_19692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19707)
static void C_ccall f_19707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19699)
static void C_ccall f_19699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19663)
static void C_ccall f_19663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19667)
static void C_ccall f_19667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19628)
static void C_ccall f_19628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19632)
static void C_ccall f_19632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19593)
static void C_ccall f_19593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19597)
static void C_ccall f_19597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19428)
static void C_fcall f_19428(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19557)
static void C_ccall f_19557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19572)
static void C_ccall f_19572(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19564)
static void C_ccall f_19564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19528)
static void C_ccall f_19528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19532)
static void C_ccall f_19532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19493)
static void C_ccall f_19493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19497)
static void C_ccall f_19497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19458)
static void C_ccall f_19458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19462)
static void C_ccall f_19462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19431)
static void C_fcall f_19431(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19434)
static void C_ccall f_19434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19102)
static void C_ccall f_19102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19105)
static void C_ccall f_19105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19379)
static void C_ccall f_19379(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19383)
static void C_ccall f_19383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19386)
static void C_ccall f_19386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19389)
static void C_ccall f_19389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19392)
static void C_ccall f_19392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19405)
static void C_ccall f_19405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19395)
static void C_fcall f_19395(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19111)
static void C_ccall f_19111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19118)
static void C_fcall f_19118(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19349)
static void C_ccall f_19349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19364)
static void C_ccall f_19364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19356)
static void C_ccall f_19356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19320)
static void C_ccall f_19320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19324)
static void C_ccall f_19324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19285)
static void C_ccall f_19285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19289)
static void C_ccall f_19289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19121)
static void C_fcall f_19121(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19249)
static void C_ccall f_19249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19264)
static void C_ccall f_19264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19256)
static void C_ccall f_19256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19220)
static void C_ccall f_19220(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19224)
static void C_ccall f_19224(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19185)
static void C_ccall f_19185(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19189)
static void C_ccall f_19189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19124)
static void C_fcall f_19124(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19127)
static void C_ccall f_19127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19142)
static void C_ccall f_19142(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19164)
static void C_ccall f_19164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19148)
static void C_ccall f_19148(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19156)
static void C_ccall f_19156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19130)
static void C_ccall f_19130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19133)
static void C_ccall f_19133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19015)
static void C_fcall f_19015(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19006)
static void C_fcall f_19006(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18997)
static void C_fcall f_18997(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18979)
static void C_fcall f_18979(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18961)
static void C_fcall f_18961(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18943)
static void C_fcall f_18943(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18934)
static void C_fcall f_18934(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18925)
static void C_fcall f_18925(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18703)
static void C_ccall f_18703(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18753)
static void C_ccall f_18753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18898)
static void C_ccall f_18898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18779)
static void C_ccall f_18779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18894)
static void C_ccall f_18894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18879)
static void C_ccall f_18879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18860)
static void C_ccall f_18860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18833)
static void C_ccall f_18833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18786)
static void C_ccall f_18786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18756)
static void C_fcall f_18756(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18706)
static void C_ccall f_18706(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_18712)
static void C_fcall f_18712(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18728)
static void C_ccall f_18728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18731)
static void C_ccall f_18731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18229)
static void C_ccall f_18229(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18229)
static void C_ccall f_18229r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18693)
static void C_ccall f_18693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18233)
static void C_fcall f_18233(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18665)
static void C_ccall f_18665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18680)
static void C_ccall f_18680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18672)
static void C_ccall f_18672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18636)
static void C_ccall f_18636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18640)
static void C_ccall f_18640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18601)
static void C_ccall f_18601(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18605)
static void C_ccall f_18605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18566)
static void C_ccall f_18566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18570)
static void C_ccall f_18570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18236)
static void C_fcall f_18236(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18530)
static void C_ccall f_18530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18545)
static void C_ccall f_18545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18537)
static void C_ccall f_18537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18501)
static void C_ccall f_18501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18505)
static void C_ccall f_18505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18466)
static void C_ccall f_18466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18470)
static void C_ccall f_18470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18431)
static void C_ccall f_18431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18435)
static void C_ccall f_18435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18239)
static void C_fcall f_18239(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18395)
static void C_ccall f_18395(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18410)
static void C_ccall f_18410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18402)
static void C_ccall f_18402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18366)
static void C_ccall f_18366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18370)
static void C_ccall f_18370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18331)
static void C_ccall f_18331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18335)
static void C_ccall f_18335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18296)
static void C_ccall f_18296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18300)
static void C_ccall f_18300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18242)
static void C_fcall f_18242(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18245)
static void C_ccall f_18245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18248)
static void C_ccall f_18248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18263)
static void C_ccall f_18263(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18275)
static void C_ccall f_18275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18254)
static void C_ccall f_18254(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18257)
static void C_ccall f_18257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18153)
static void C_ccall f_18153(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18157)
static void C_ccall f_18157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18176)
static void C_ccall f_18176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18186)
static void C_ccall f_18186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18188)
static void C_fcall f_18188(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18205)
static void C_ccall f_18205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18208)
static void C_ccall f_18208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18219)
static void C_ccall f_18219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18160)
static void C_ccall f_18160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17890)
static void C_ccall f_17890(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17890)
static void C_ccall f_17890r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18143)
static void C_ccall f_18143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17894)
static void C_fcall f_17894(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18115)
static void C_ccall f_18115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18130)
static void C_ccall f_18130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18122)
static void C_ccall f_18122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18086)
static void C_ccall f_18086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18090)
static void C_ccall f_18090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18051)
static void C_ccall f_18051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18055)
static void C_ccall f_18055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17897)
static void C_fcall f_17897(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18015)
static void C_ccall f_18015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18030)
static void C_ccall f_18030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18022)
static void C_ccall f_18022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17986)
static void C_ccall f_17986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17990)
static void C_ccall f_17990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17951)
static void C_ccall f_17951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17955)
static void C_ccall f_17955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17900)
static void C_fcall f_17900(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17903)
static void C_ccall f_17903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17906)
static void C_ccall f_17906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17918)
static void C_ccall f_17918(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17930)
static void C_ccall f_17930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17912)
static void C_ccall f_17912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17854)
static void C_ccall f_17854(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17858)
static void C_ccall f_17858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17880)
static void C_ccall f_17880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17874)
static void C_ccall f_17874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17867)
static void C_ccall f_17867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17607)
static void C_ccall f_17607(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17607)
static void C_ccall f_17607r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17611)
static void C_fcall f_17611(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17824)
static void C_ccall f_17824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17839)
static void C_ccall f_17839(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17831)
static void C_ccall f_17831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17795)
static void C_ccall f_17795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17799)
static void C_ccall f_17799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17760)
static void C_ccall f_17760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17764)
static void C_ccall f_17764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17614)
static void C_fcall f_17614(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17724)
static void C_ccall f_17724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17739)
static void C_ccall f_17739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17731)
static void C_ccall f_17731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17695)
static void C_ccall f_17695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17699)
static void C_ccall f_17699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17660)
static void C_ccall f_17660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17664)
static void C_ccall f_17664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17617)
static void C_fcall f_17617(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17620)
static void C_ccall f_17620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17623)
static void C_ccall f_17623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17631)
static void C_ccall f_17631(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17639)
static void C_ccall f_17639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17629)
static void C_ccall f_17629(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17392)
static void C_ccall f_17392(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17396)
static void C_ccall f_17396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17605)
static void C_ccall f_17605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17558)
static void C_ccall f_17558(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17570)
static void C_fcall f_17570(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17426)
static void C_ccall f_17426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17429)
static void C_ccall f_17429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17435)
static void C_ccall f_17435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17438)
static void C_ccall f_17438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17526)
static void C_fcall f_17526(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17441)
static void C_fcall f_17441(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17520)
static void C_ccall f_17520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17447)
static void C_ccall f_17447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17450)
static void C_ccall f_17450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17402)
static void C_ccall f_17402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17405)
static void C_ccall f_17405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17412)
static void C_ccall f_17412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16922)
static void C_ccall f_16922(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16922)
static void C_ccall f_16922r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16926)
static void C_fcall f_16926(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17362)
static void C_ccall f_17362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17377)
static void C_ccall f_17377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17369)
static void C_ccall f_17369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17333)
static void C_ccall f_17333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17337)
static void C_ccall f_17337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17298)
static void C_ccall f_17298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17302)
static void C_ccall f_17302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17263)
static void C_ccall f_17263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17267)
static void C_ccall f_17267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16929)
static void C_fcall f_16929(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17227)
static void C_ccall f_17227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17242)
static void C_ccall f_17242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17234)
static void C_ccall f_17234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17198)
static void C_ccall f_17198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17202)
static void C_ccall f_17202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17163)
static void C_ccall f_17163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17167)
static void C_ccall f_17167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17128)
static void C_ccall f_17128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17132)
static void C_ccall f_17132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16932)
static void C_fcall f_16932(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17092)
static void C_ccall f_17092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17107)
static void C_ccall f_17107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17099)
static void C_ccall f_17099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17063)
static void C_ccall f_17063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17067)
static void C_ccall f_17067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17028)
static void C_ccall f_17028(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17032)
static void C_ccall f_17032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16993)
static void C_ccall f_16993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16997)
static void C_ccall f_16997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16935)
static void C_fcall f_16935(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16938)
static void C_ccall f_16938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16941)
static void C_ccall f_16941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16964)
static void C_ccall f_16964(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16972)
static void C_ccall f_16972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16947)
static void C_ccall f_16947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16950)
static void C_ccall f_16950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16842)
static void C_fcall f_16842(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16833)
static void C_fcall f_16833(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16761)
static void C_ccall f_16761(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16765)
static void C_ccall f_16765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16768)
static void C_fcall f_16768(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16506)
static void C_ccall f_16506(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16506)
static void C_ccall f_16506r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16510)
static void C_fcall f_16510(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16731)
static void C_ccall f_16731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16746)
static void C_ccall f_16746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16738)
static void C_ccall f_16738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16702)
static void C_ccall f_16702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16706)
static void C_ccall f_16706(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16667)
static void C_ccall f_16667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16671)
static void C_ccall f_16671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16513)
static void C_fcall f_16513(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16631)
static void C_ccall f_16631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16646)
static void C_ccall f_16646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16638)
static void C_ccall f_16638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16602)
static void C_ccall f_16602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16606)
static void C_ccall f_16606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16567)
static void C_ccall f_16567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16571)
static void C_ccall f_16571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16516)
static void C_fcall f_16516(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16519)
static void C_ccall f_16519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16522)
static void C_ccall f_16522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16534)
static void C_ccall f_16534(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16546)
static void C_ccall f_16546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16528)
static void C_ccall f_16528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16391)
static void C_fcall f_16391(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16504)
static void C_ccall f_16504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16401)
static void C_ccall f_16401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16489)
static void C_ccall f_16489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16500)
static void C_ccall f_16500(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16496)
static void C_ccall f_16496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16404)
static void C_ccall f_16404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16486)
static void C_ccall f_16486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16412)
static void C_ccall f_16412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16476)
static void C_ccall f_16476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16421)
static void C_ccall f_16421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16440)
static void C_ccall f_16440(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16469)
static void C_ccall f_16469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16450)
static void C_ccall f_16450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16465)
static void C_ccall f_16465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16453)
static void C_ccall f_16453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16424)
static void C_ccall f_16424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16434)
static void C_ccall f_16434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16415)
static void C_fcall f_16415(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16418)
static void C_ccall f_16418(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16345)
static void C_fcall f_16345(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16336)
static void C_fcall f_16336(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16035)
static void C_fcall f_16035(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16042)
static void C_ccall f_16042(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16331)
static void C_ccall f_16331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16045)
static void C_ccall f_16045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16316)
static void C_ccall f_16316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16308)
static void C_ccall f_16308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16300)
static void C_ccall f_16300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16303)
static void C_ccall f_16303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16271)
static void C_fcall f_16271(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16294)
static void C_ccall f_16294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16277)
static void C_fcall f_16277(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16281)
static void C_ccall f_16281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16048)
static void C_ccall f_16048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16054)
static void C_ccall f_16054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16146)
static void C_ccall f_16146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16258)
static void C_ccall f_16258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16265)
static void C_ccall f_16265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16169)
static void C_fcall f_16169(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16171)
static void C_fcall f_16171(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16220)
static void C_fcall f_16220(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16255)
static void C_ccall f_16255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16244)
static void C_ccall f_16244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16389)
static void C_ccall f_16389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16364)
static void C_ccall f_16364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16385)
static void C_ccall f_16385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16381)
static void C_ccall f_16381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16373)
static void C_ccall f_16373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16237)
static void C_ccall f_16237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16230)
static void C_ccall f_16230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16178)
static void C_ccall f_16178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16218)
static void C_ccall f_16218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16182)
static void C_ccall f_16182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16214)
static void C_ccall f_16214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16201)
static void C_ccall f_16201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16209)
static void C_ccall f_16209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16205)
static void C_ccall f_16205(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16185)
static void C_fcall f_16185(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16188)
static void C_ccall f_16188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16162)
static void C_ccall f_16162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16149)
static void C_ccall f_16149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16158)
static void C_ccall f_16158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16153)
static void C_ccall f_16153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16060)
static void C_ccall f_16060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16140)
static void C_ccall f_16140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16120)
static void C_ccall f_16120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16126)
static void C_ccall f_16126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16137)
static void C_ccall f_16137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16117)
static void C_ccall f_16117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16105)
static void C_ccall f_16105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16108)
static void C_ccall f_16108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16063)
static void C_ccall f_16063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16099)
static void C_ccall f_16099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16094)
static void C_ccall f_16094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16066)
static void C_ccall f_16066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16079)
static void C_ccall f_16079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16069)
static void C_fcall f_16069(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16072)
static void C_ccall f_16072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16075)
static void C_ccall f_16075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15912)
static void C_ccall f_15912(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15912)
static void C_ccall f_15912r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15971)
static void C_ccall f_15971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15981)
static void C_ccall f_15981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15983)
static void C_fcall f_15983(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16012)
static void C_ccall f_16012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16017)
static void C_ccall f_16017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16002)
static void C_fcall f_16002(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15933)
static void C_fcall f_15933(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15965)
static void C_ccall f_15965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15893)
static void C_ccall f_15893(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15900)
static void C_ccall f_15900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15907)
static void C_ccall f_15907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15874)
static void C_ccall f_15874(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15881)
static void C_ccall f_15881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15888)
static void C_ccall f_15888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15694)
static void C_fcall f_15694(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_15698)
static void C_ccall f_15698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15701)
static void C_ccall f_15701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15704)
static void C_ccall f_15704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15707)
static void C_ccall f_15707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15864)
static void C_ccall f_15864(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15871)
static void C_ccall f_15871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15710)
static void C_ccall f_15710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15713)
static void C_fcall f_15713(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15719)
static void C_ccall f_15719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15725)
static void C_ccall f_15725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15788)
static void C_ccall f_15788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15802)
static void C_ccall f_15802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15728)
static void C_fcall f_15728(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15731)
static void C_ccall f_15731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15737)
static void C_fcall f_15737(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15750)
static void C_ccall f_15750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15740)
static void C_ccall f_15740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15743)
static void C_ccall f_15743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15684)
static void C_fcall f_15684(C_word t0) C_noret;
C_noret_decl(f_15629)
static void C_fcall f_15629(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15620)
static void C_fcall f_15620(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15503)
static void C_fcall f_15503(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15494)
static void C_fcall f_15494(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15485)
static void C_ccall f_15485(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15476)
static void C_fcall f_15476(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15467)
static void C_fcall f_15467(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15449)
static void C_fcall f_15449(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15440)
static void C_fcall f_15440(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15431)
static void C_fcall f_15431(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15413)
static void C_fcall f_15413(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15404)
static void C_fcall f_15404(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15395)
static void C_fcall f_15395(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15380)
static void C_fcall f_15380(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15335)
static void C_fcall f_15335(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15317)
static void C_fcall f_15317(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15308)
static void C_fcall f_15308(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15281)
static void C_fcall f_15281(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15263)
static void C_fcall f_15263(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15245)
static void C_fcall f_15245(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15236)
static void C_fcall f_15236(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15224)
static void C_fcall f_15224(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_15028)
static void C_ccall f_15028(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15032)
static void C_fcall f_15032(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15181)
static void C_fcall f_15181(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15207)
static void C_ccall f_15207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15192)
static void C_ccall f_15192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15038)
static void C_ccall f_15038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15043)
static void C_ccall f_15043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15047)
static void C_ccall f_15047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15050)
static void C_ccall f_15050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15053)
static void C_ccall f_15053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15056)
static void C_ccall f_15056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15059)
static void C_ccall f_15059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15062)
static void C_ccall f_15062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15067)
static void C_fcall f_15067(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15161)
static void C_ccall f_15161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15168)
static void C_ccall f_15168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15077)
static void C_ccall f_15077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15098)
static void C_ccall f_15098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15102)
static void C_ccall f_15102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15106)
static void C_ccall f_15106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15108)
static void C_fcall f_15108(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15118)
static void C_ccall f_15118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15080)
static void C_ccall f_15080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15083)
static void C_ccall f_15083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14902)
static void C_ccall f_14902(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14908)
static void C_ccall f_14908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14912)
static void C_ccall f_14912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14930)
static void C_ccall f_14930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14933)
static void C_ccall f_14933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14937)
static void C_ccall f_14937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14940)
static void C_ccall f_14940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14992)
static void C_fcall f_14992(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15003)
static void C_ccall f_15003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14943)
static void C_ccall f_14943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14953)
static void C_ccall f_14953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14955)
static void C_fcall f_14955(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14799)
static void C_ccall f_14799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14823)
static void C_ccall f_14823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14827)
static void C_ccall f_14827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14853)
static void C_fcall f_14853(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_14863)
static void C_ccall f_14863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14900)
static void C_ccall f_14900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14892)
static void C_ccall f_14892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14830)
static void C_ccall f_14830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14800)
static void C_fcall f_14800(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14804)
static void C_ccall f_14804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14807)
static void C_ccall f_14807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14969)
static void C_ccall f_14969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14972)
static void C_fcall f_14972(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14979)
static void C_ccall f_14979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14913)
static void C_fcall f_14913(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14917)
static void C_ccall f_14917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14920)
static void C_ccall f_14920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14389)
static void C_ccall f_14389(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_14389)
static void C_ccall f_14389r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_14768)
static void C_fcall f_14768(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14762)
static void C_ccall f_14762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14393)
static void C_ccall f_14393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14746)
static void C_ccall f_14746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14396)
static void C_ccall f_14396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14732)
static void C_ccall f_14732(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14728)
static void C_ccall f_14728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14399)
static void C_fcall f_14399(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14721)
static void C_ccall f_14721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14717)
static void C_ccall f_14717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14402)
static void C_fcall f_14402(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14405)
static void C_fcall f_14405(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14705)
static void C_ccall f_14705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14697)
static void C_ccall f_14697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14701)
static void C_ccall f_14701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14689)
static void C_ccall f_14689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14693)
static void C_ccall f_14693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14563)
static void C_fcall f_14563(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14678)
static void C_ccall f_14678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14682)
static void C_ccall f_14682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14670)
static void C_ccall f_14670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14674)
static void C_ccall f_14674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14566)
static void C_fcall f_14566(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14570)
static void C_ccall f_14570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14575)
static void C_fcall f_14575(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14585)
static void C_fcall f_14585(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14588)
static void C_ccall f_14588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14469)
static void C_ccall f_14469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14532)
static void C_fcall f_14532(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14553)
static void C_ccall f_14553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14494)
static void C_fcall f_14494(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14523)
static void C_ccall f_14523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14472)
static void C_ccall f_14472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14489)
static void C_ccall f_14489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14485)
static void C_ccall f_14485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13935)
static void C_ccall f_13935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13939)
static void C_ccall f_13939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13927)
static void C_ccall f_13927(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13852)
static void C_ccall f_13852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13913)
static void C_ccall f_13913(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13856)
static void C_ccall f_13856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13864)
static void C_fcall f_13864(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13897)
static void C_ccall f_13897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13874)
static void C_ccall f_13874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13877)
static void C_ccall f_13877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14449)
static void C_fcall f_14449(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14419)
static void C_fcall f_14419(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14408)
static void C_ccall f_14408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14332)
static void C_ccall f_14332(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14340)
static void C_ccall f_14340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14344)
static void C_ccall f_14344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14348)
static void C_ccall f_14348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14354)
static void C_fcall f_14354(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_14364)
static void C_ccall f_14364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14120)
static void C_ccall f_14120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14188)
static void C_ccall f_14188(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14191)
static void C_ccall f_14191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14194)
static void C_ccall f_14194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14197)
static void C_ccall f_14197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14200)
static void C_ccall f_14200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14298)
static void C_fcall f_14298(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14308)
static void C_ccall f_14308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14266)
static void C_fcall f_14266(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14276)
static void C_ccall f_14276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14217)
static void C_fcall f_14217(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14236)
static void C_fcall f_14236(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14246)
static void C_ccall f_14246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14227)
static void C_ccall f_14227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14203)
static void C_ccall f_14203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14156)
static void C_fcall f_14156(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14166)
static void C_ccall f_14166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14139)
static void C_fcall f_14139(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14146)
static void C_ccall f_14146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14122)
static void C_fcall f_14122(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14129)
static void C_ccall f_14129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13941)
static void C_ccall f_13941(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13949)
static void C_ccall f_13949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13953)
static void C_ccall f_13953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13955)
static void C_fcall f_13955(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_13965)
static void C_fcall f_13965(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14096)
static void C_ccall f_14096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14045)
static void C_ccall f_14045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14048)
static void C_ccall f_14048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14059)
static void C_ccall f_14059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14011)
static void C_ccall f_14011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13980)
static void C_ccall f_13980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13983)
static void C_ccall f_13983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13968)
static void C_ccall f_13968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13529)
static void C_ccall f_13529(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13846)
static void C_ccall f_13846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13775)
static void C_ccall f_13775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13777)
static void C_fcall f_13777(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8322)
static void C_ccall f_8322(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13796)
static void C_ccall f_13796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13799)
static void C_fcall f_13799(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13542)
static void C_ccall f_13542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13618)
static void C_fcall f_13618(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13771)
static void C_ccall f_13771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13755)
static void C_ccall f_13755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13707)
static void C_fcall f_13707(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13721)
static void C_fcall f_13721(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13674)
static void C_ccall f_13674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13649)
static void C_fcall f_13649(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13545)
static void C_ccall f_13545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13553)
static void C_fcall f_13553(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13586)
static void C_ccall f_13586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12056)
static void C_ccall f_12056(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12056)
static void C_ccall f_12056r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13506)
static void C_ccall f_13506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13521)
static void C_ccall f_13521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13513)
static void C_ccall f_13513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13477)
static void C_ccall f_13477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13481)
static void C_ccall f_13481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13442)
static void C_ccall f_13442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13446)
static void C_ccall f_13446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13407)
static void C_ccall f_13407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13411)
static void C_ccall f_13411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13372)
static void C_ccall f_13372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13376)
static void C_ccall f_13376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13337)
static void C_ccall f_13337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13341)
static void C_ccall f_13341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13302)
static void C_ccall f_13302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13306)
static void C_ccall f_13306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12060)
static void C_fcall f_12060(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13266)
static void C_ccall f_13266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13281)
static void C_ccall f_13281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13273)
static void C_ccall f_13273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13237)
static void C_ccall f_13237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13241)
static void C_ccall f_13241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13202)
static void C_ccall f_13202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13206)
static void C_ccall f_13206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13167)
static void C_ccall f_13167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13171)
static void C_ccall f_13171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13132)
static void C_ccall f_13132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13136)
static void C_ccall f_13136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13097)
static void C_ccall f_13097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13101)
static void C_ccall f_13101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13062)
static void C_ccall f_13062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13066)
static void C_ccall f_13066(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12063)
static void C_fcall f_12063(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13026)
static void C_ccall f_13026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13041)
static void C_ccall f_13041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13033)
static void C_ccall f_13033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12997)
static void C_ccall f_12997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13001)
static void C_ccall f_13001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12962)
static void C_ccall f_12962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12966)
static void C_ccall f_12966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12927)
static void C_ccall f_12927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12931)
static void C_ccall f_12931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12892)
static void C_ccall f_12892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12896)
static void C_ccall f_12896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12857)
static void C_ccall f_12857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12861)
static void C_ccall f_12861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12822)
static void C_ccall f_12822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12826)
static void C_ccall f_12826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12066)
static void C_fcall f_12066(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12786)
static void C_ccall f_12786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12801)
static void C_ccall f_12801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12793)
static void C_ccall f_12793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12757)
static void C_ccall f_12757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12761)
static void C_ccall f_12761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12722)
static void C_ccall f_12722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12726)
static void C_ccall f_12726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12687)
static void C_ccall f_12687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12691)
static void C_ccall f_12691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12652)
static void C_ccall f_12652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12656)
static void C_ccall f_12656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12617)
static void C_ccall f_12617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12621)
static void C_ccall f_12621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12582)
static void C_ccall f_12582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12586)
static void C_ccall f_12586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12069)
static void C_fcall f_12069(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12546)
static void C_ccall f_12546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12561)
static void C_ccall f_12561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12553)
static void C_ccall f_12553(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12517)
static void C_ccall f_12517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12521)
static void C_ccall f_12521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12482)
static void C_ccall f_12482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12486)
static void C_ccall f_12486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12447)
static void C_ccall f_12447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12451)
static void C_ccall f_12451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12412)
static void C_ccall f_12412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12416)
static void C_ccall f_12416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12377)
static void C_ccall f_12377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12381)
static void C_ccall f_12381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12342)
static void C_ccall f_12342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12346)
static void C_ccall f_12346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12072)
static void C_fcall f_12072(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12306)
static void C_ccall f_12306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12321)
static void C_ccall f_12321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12313)
static void C_ccall f_12313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12277)
static void C_ccall f_12277(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12281)
static void C_ccall f_12281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12242)
static void C_ccall f_12242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12246)
static void C_ccall f_12246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12207)
static void C_ccall f_12207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12211)
static void C_ccall f_12211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12172)
static void C_ccall f_12172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12176)
static void C_ccall f_12176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12137)
static void C_ccall f_12137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12141)
static void C_ccall f_12141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12102)
static void C_ccall f_12102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12106)
static void C_ccall f_12106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12075)
static void C_fcall f_12075(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12078)
static void C_ccall f_12078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11837)
static void C_fcall f_11837(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11846)
static void C_ccall f_11846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11850)
static void C_ccall f_11850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12037)
static void C_ccall f_12037(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12022)
static void C_ccall f_12022(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11987)
static void C_ccall f_11987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11967)
static void C_ccall f_11967(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11971)
static void C_ccall f_11971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11957)
static void C_ccall f_11957(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11965)
static void C_ccall f_11965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11924)
static void C_ccall f_11924(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11852)
static void C_ccall f_11852(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11919)
static void C_ccall f_11919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11856)
static void C_ccall f_11856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11892)
static void C_fcall f_11892(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11867)
static void C_fcall f_11867(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11808)
static void C_ccall f_11808(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11812)
static void C_ccall f_11812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11823)
static void C_ccall f_11823(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11821)
static void C_ccall f_11821(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11777)
static void C_ccall f_11777(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11781)
static void C_ccall f_11781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11792)
static void C_ccall f_11792(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11790)
static void C_ccall f_11790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11759)
static void C_ccall f_11759(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11767)
static void C_ccall f_11767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11775)
static void C_ccall f_11775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11749)
static void C_ccall f_11749(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11757)
static void C_ccall f_11757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11690)
static void C_ccall f_11690(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11697)
static void C_ccall f_11697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11700)
static void C_ccall f_11700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11703)
static void C_ccall f_11703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11708)
static void C_fcall f_11708(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11652)
static void C_ccall f_11652(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11660)
static void C_ccall f_11660(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11664)
static void C_ccall f_11664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11684)
static void C_ccall f_11684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11668)
static void C_ccall f_11668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11676)
static void C_ccall f_11676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11672)
static void C_ccall f_11672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11640)
static void C_ccall f_11640(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11631)
static void C_fcall f_11631(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11622)
static void C_ccall f_11622(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11613)
static void C_fcall f_11613(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11604)
static void C_ccall f_11604(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11595)
static void C_fcall f_11595(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11586)
static void C_ccall f_11586(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11571)
static void C_fcall f_11571(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11565)
static void C_fcall f_11565(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11423)
static void C_ccall f_11423(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11423)
static void C_ccall f_11423r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11427)
static void C_fcall f_11427(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11496)
static void C_ccall f_11496(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11539)
static void C_ccall f_11539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11543)
static void C_ccall f_11543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11532)
static void C_ccall f_11532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11519)
static void C_ccall f_11519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11438)
static void C_ccall f_11438(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11481)
static void C_ccall f_11481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11485)
static void C_ccall f_11485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11474)
static void C_ccall f_11474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11461)
static void C_ccall f_11461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11257)
static void C_ccall f_11257(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11358)
static void C_ccall f_11358(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11407)
static void C_ccall f_11407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11403)
static void C_ccall f_11403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11375)
static void C_ccall f_11375(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11310)
static void C_fcall f_11310(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11319)
static void C_fcall f_11319(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11303)
static void C_ccall f_11303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11122)
static void C_ccall f_11122(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11248)
static void C_ccall f_11248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11244)
static void C_ccall f_11244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11222)
static void C_ccall f_11222(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11152)
static void C_fcall f_11152(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11168)
static void C_fcall f_11168(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11077)
static void C_ccall f_11077(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11120)
static void C_ccall f_11120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11109)
static void C_ccall f_11109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10961)
static void C_ccall f_10961(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11075)
static void C_ccall f_11075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10976)
static void C_fcall f_10976(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_11006)
static void C_fcall f_11006(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11025)
static void C_ccall f_11025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11010)
static void C_ccall f_11010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10989)
static void C_fcall f_10989(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10839)
static void C_ccall f_10839(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10959)
static void C_ccall f_10959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10854)
static void C_fcall f_10854(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10884)
static void C_fcall f_10884(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10903)
static void C_ccall f_10903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10888)
static void C_ccall f_10888(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10867)
static void C_fcall f_10867(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10742)
static void C_ccall f_10742(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10837)
static void C_ccall f_10837(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10757)
static void C_fcall f_10757(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_10803)
static void C_ccall f_10803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10788)
static void C_ccall f_10788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10770)
static void C_fcall f_10770(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10689)
static void C_fcall f_10689(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10727)
static void C_ccall f_10727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10734)
static void C_ccall f_10734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10712)
static void C_ccall f_10712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10687)
static void C_ccall f_10687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10659)
static void C_fcall f_10659(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10661)
static void C_ccall f_10661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10639)
static void C_ccall f_10639(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10587)
static void C_fcall f_10587(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10624)
static void C_ccall f_10624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10591)
static void C_ccall f_10591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10607)
static void C_ccall f_10607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10609)
static void C_ccall f_10609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10373)
static void C_ccall f_10373(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_10373)
static void C_ccall f_10373r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_10386)
static void C_fcall f_10386(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10468)
static void C_fcall f_10468(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10471)
static void C_ccall f_10471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10479)
static void C_fcall f_10479(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10491)
static void C_fcall f_10491(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10512)
static void C_ccall f_10512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10520)
static void C_ccall f_10520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10407)
static void C_ccall f_10407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10412)
static void C_fcall f_10412(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10444)
static void C_ccall f_10444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10352)
static void C_ccall f_10352(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_10352)
static void C_ccall f_10352r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_10333)
static void C_ccall f_10333(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_10333)
static void C_ccall f_10333r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_10292)
static void C_ccall f_10292(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_10292)
static void C_ccall f_10292r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_10273)
static void C_ccall f_10273(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_10273)
static void C_ccall f_10273r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_10045)
static void C_ccall f_10045(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_10045)
static void C_ccall f_10045r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_10250)
static void C_ccall f_10250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10265)
static void C_ccall f_10265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10257)
static void C_ccall f_10257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10221)
static void C_ccall f_10221(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10225)
static void C_ccall f_10225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10186)
static void C_ccall f_10186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10190)
static void C_ccall f_10190(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10049)
static void C_fcall f_10049(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10150)
static void C_ccall f_10150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10165)
static void C_ccall f_10165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10157)
static void C_ccall f_10157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10121)
static void C_ccall f_10121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10125)
static void C_ccall f_10125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10086)
static void C_ccall f_10086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10090)
static void C_ccall f_10090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10052)
static void C_fcall f_10052(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10055)
static void C_ccall f_10055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10058)
static void C_fcall f_10058(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10003)
static void C_ccall f_10003(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_10003)
static void C_ccall f_10003r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_10032)
static void C_ccall f_10032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10017)
static void C_ccall f_10017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9948)
static void C_ccall f_9948(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9959)
static void C_ccall f_9959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9961)
static void C_fcall f_9961(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9989)
static void C_ccall f_9989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9849)
static void C_ccall f_9849(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9849)
static void C_ccall f_9849r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9853)
static void C_fcall f_9853(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9856)
static void C_ccall f_9856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9921)
static void C_ccall f_9921(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9858)
static void C_fcall f_9858(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9874)
static void C_ccall f_9874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9621)
static void C_ccall f_9621(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9621)
static void C_ccall f_9621r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9826)
static void C_ccall f_9826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9841)
static void C_ccall f_9841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9833)
static void C_ccall f_9833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9797)
static void C_ccall f_9797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9801)
static void C_ccall f_9801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9762)
static void C_ccall f_9762(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9766)
static void C_ccall f_9766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9625)
static void C_fcall f_9625(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9726)
static void C_ccall f_9726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9741)
static void C_ccall f_9741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9733)
static void C_ccall f_9733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9697)
static void C_ccall f_9697(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9701)
static void C_ccall f_9701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9662)
static void C_ccall f_9662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9666)
static void C_ccall f_9666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9628)
static void C_fcall f_9628(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9631)
static void C_ccall f_9631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9641)
static void C_ccall f_9641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9578)
static void C_ccall f_9578(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9578)
static void C_ccall f_9578r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9611)
static void C_ccall f_9611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9596)
static void C_ccall f_9596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9557)
static void C_ccall f_9557(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9522)
static void C_ccall f_9522(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9522)
static void C_ccall f_9522r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9526)
static void C_fcall f_9526(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9414)
static void C_ccall f_9414(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9414)
static void C_ccall f_9414r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9501)
static void C_ccall f_9501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9421)
static void C_fcall f_9421(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9430)
static void C_fcall f_9430(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_9477)
static void C_ccall f_9477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9443)
static void C_fcall f_9443(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9469)
static void C_ccall f_9469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9281)
static void C_ccall f_9281(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_9281)
static void C_ccall f_9281r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_9285)
static void C_fcall f_9285(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9288)
static void C_fcall f_9288(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9392)
static void C_ccall f_9392(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9290)
static void C_fcall f_9290(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9297)
static void C_ccall f_9297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9339)
static void C_ccall f_9339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9346)
static void C_ccall f_9346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9320)
static void C_ccall f_9320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9214)
static void C_ccall f_9214(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_9214)
static void C_ccall f_9214r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_9218)
static void C_fcall f_9218(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9264)
static void C_ccall f_9264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9221)
static void C_fcall f_9221(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9257)
static void C_ccall f_9257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9224)
static void C_fcall f_9224(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9237)
static void C_ccall f_9237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9168)
static void C_ccall f_9168(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_9168)
static void C_ccall f_9168r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9172)
static void C_ccall f_9172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9082)
static void C_fcall f_9082(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9086)
static void C_ccall f_9086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9089)
static void C_ccall f_9089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9098)
static void C_fcall f_9098(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9120)
static void C_ccall f_9120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9067)
static void C_ccall f_9067(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9052)
static void C_ccall f_9052(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8816)
static void C_ccall f_8816(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8816)
static void C_ccall f_8816r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_9029)
static void C_ccall f_9029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9044)
static void C_ccall f_9044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9036)
static void C_ccall f_9036(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9000)
static void C_ccall f_9000(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9004)
static void C_ccall f_9004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8965)
static void C_ccall f_8965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8969)
static void C_ccall f_8969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8820)
static void C_fcall f_8820(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8929)
static void C_ccall f_8929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8944)
static void C_ccall f_8944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8936)
static void C_ccall f_8936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8900)
static void C_ccall f_8900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8904)
static void C_ccall f_8904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8865)
static void C_ccall f_8865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8869)
static void C_ccall f_8869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8823)
static void C_fcall f_8823(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8826)
static void C_ccall f_8826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8837)
static void C_ccall f_8837(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8776)
static void C_ccall f_8776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8780)
static void C_ccall f_8780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8810)
static void C_ccall f_8810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8791)
static void C_ccall f_8791(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8799)
static void C_ccall f_8799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8755)
static void C_ccall f_8755(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8767)
static void C_ccall f_8767(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8712)
static void C_ccall f_8712(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8712)
static void C_ccall f_8712r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8742)
static void C_ccall f_8742(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8669)
static void C_ccall f_8669(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8669)
static void C_ccall f_8669r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8699)
static void C_ccall f_8699(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8600)
static void C_ccall f_8600(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8600)
static void C_ccall f_8600r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8644)
static void C_ccall f_8644(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8531)
static void C_ccall f_8531(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8531)
static void C_ccall f_8531r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8575)
static void C_ccall f_8575(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8507)
static void C_ccall f_8507(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8519)
static void C_ccall f_8519(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8492)
static void C_ccall f_8492(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8381)
static void C_ccall f_8381(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_8381)
static void C_ccall f_8381r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_8456)
static void C_ccall f_8456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8385)
static void C_fcall f_8385(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8425)
static void C_ccall f_8425(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8414)
static void C_ccall f_8414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8399)
static void C_ccall f_8399(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8407)
static void C_ccall f_8407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8347)
static void C_ccall f_8347(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_8347)
static void C_ccall f_8347r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_8359)
static void C_ccall f_8359(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8340)
static void C_ccall f_8340(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8333)
static void C_ccall f_8333(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8314)
static void C_ccall f_8314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8311)
static void C_ccall f_8311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8304)
static void C_fcall f_8304(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8301)
static void C_ccall f_8301(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8294)
static void C_fcall f_8294(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8276)
static void C_fcall f_8276(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8265)
static void C_fcall f_8265(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8262)
static void C_ccall f_8262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8259)
static void C_ccall f_8259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8256)
static void C_ccall f_8256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8227)
static void C_fcall f_8227(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8220)
static void C_fcall f_8220(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8217)
static void C_ccall f_8217(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8196)
static void C_fcall f_8196(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8177)
static void C_ccall f_8177(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8158)
static void C_ccall f_8158(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8151)
static void C_ccall f_8151(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8144)
static void C_ccall f_8144(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8129)
static void C_fcall f_8129(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8118)
static void C_fcall f_8118(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8111)
static void C_ccall f_8111(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8084)
static void C_fcall f_8084(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_8057)
static void C_fcall f_8057(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_8016)
static void C_fcall f_8016(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8022)
static void C_fcall f_8022(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8032)
static void C_fcall f_8032(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7930)
static void C_ccall f_7930(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7930)
static void C_ccall f_7930r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_7891)
static void C_ccall f_7891(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7897)
static void C_fcall f_7897(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7920)
static void C_ccall f_7920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7910)
static void C_fcall f_7910(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7852)
static void C_ccall f_7852(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7858)
static void C_fcall f_7858(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7878)
static void C_ccall f_7878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7868)
static void C_fcall f_7868(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7812)
static void C_ccall f_7812(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7818)
static void C_fcall f_7818(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7842)
static void C_ccall f_7842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7828)
static void C_fcall f_7828(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7713)
static void C_ccall f_7713(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7713)
static void C_ccall f_7713r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7717)
static void C_ccall f_7717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7742)
static void C_fcall f_7742(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7759)
static void C_ccall f_7759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7763)
static void C_ccall f_7763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7719)
static void C_fcall f_7719(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7736)
static void C_ccall f_7736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7652)
static void C_ccall f_7652(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7665)
static void C_fcall f_7665(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7642)
static void C_ccall f_7642(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_7602)
static void C_ccall f_7602(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7602)
static void C_ccall f_7602r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7632)
static void C_ccall f_7632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7512)
static void C_ccall f_7512(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7464)
static void C_ccall f_7464(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7498)
static void C_ccall f_7498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7441)
static void C_ccall f_7441(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7435)
static void C_ccall f_7435(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7420)
static void C_ccall f_7420(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7406)
static void C_ccall f_7406(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7396)
static void C_ccall f_7396(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7386)
static void C_ccall f_7386(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7376)
static void C_ccall f_7376(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7366)
static void C_ccall f_7366(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7340)
static void C_ccall f_7340(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7338)
static void C_ccall f_7338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7288)
static void C_ccall f_7288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7291)
static void C_ccall f_7291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7294)
static void C_ccall f_7294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7297)
static void C_ccall f_7297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7312)
static void C_fcall f_7312(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7323)
static void C_ccall f_7323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7327)
static void C_ccall f_7327(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7300)
static void C_ccall f_7300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7303)
static void C_ccall f_7303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7310)
static void C_ccall f_7310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7306)
static void C_ccall f_7306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7347)
static void C_ccall f_7347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7255)
static void C_ccall f_7255(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7255)
static void C_ccall f_7255r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7264)
static void C_ccall f_7264(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7269)
static void C_ccall f_7269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7244)
static void C_ccall f_7244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7249)
static void C_ccall f_7249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6951)
static void C_ccall f_6951(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6961)
static void C_ccall f_6961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7212)
static void C_ccall f_7212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6964)
static void C_ccall f_6964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6967)
static void C_ccall f_6967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6982)
static void C_fcall f_6982(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6992)
static void C_ccall f_6992(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6994)
static void C_fcall f_6994(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7053)
static void C_ccall f_7053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7063)
static void C_ccall f_7063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7180)
static void C_ccall f_7180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7168)
static void C_ccall f_7168(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7166)
static void C_ccall f_7166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7153)
static void C_ccall f_7153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7107)
static void C_ccall f_7107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7134)
static void C_ccall f_7134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7113)
static void C_ccall f_7113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7047)
static void C_fcall f_7047(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7006)
static void C_fcall f_7006(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7019)
static void C_fcall f_7019(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7229)
static void C_ccall f_7229(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7220)
static void C_ccall f_7220(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7228)
static void C_ccall f_7228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7231)
static void C_ccall f_7231(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7231)
static void C_ccall f_7231r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7239)
static void C_ccall f_7239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6653)
static void C_ccall f_6653(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6906)
static void C_ccall f_6906(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6939)
static void C_ccall f_6939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6935)
static void C_ccall f_6935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6924)
static void C_ccall f_6924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6920)
static void C_ccall f_6920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6814)
static void C_ccall f_6814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6817)
static void C_ccall f_6817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6820)
static void C_ccall f_6820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6900)
static void C_ccall f_6900(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6725)
static void C_ccall f_6725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6666)
static void C_ccall f_6666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6823)
static void C_ccall f_6823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6830)
static void C_ccall f_6830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6890)
static void C_ccall f_6890(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6876)
static void C_ccall f_6876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6842)
static void C_ccall f_6842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6868)
static void C_ccall f_6868(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6803)
static void C_ccall f_6803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6850)
static void C_ccall f_6850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6846)
static void C_ccall f_6846(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_41949)
static void C_fcall trf_41949(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41949(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_41949(t0,t1,t2);}

C_noret_decl(trf_42009)
static void C_fcall trf_42009(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42009(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_42009(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_42029)
static void C_fcall trf_42029(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42029(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42029(t0,t1);}

C_noret_decl(trf_42032)
static void C_fcall trf_42032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_42032(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_42032(t0,t1);}

C_noret_decl(trf_41893)
static void C_fcall trf_41893(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41893(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41893(t0,t1);}

C_noret_decl(trf_41815)
static void C_fcall trf_41815(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41815(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_41815(t0,t1,t2);}

C_noret_decl(trf_41627)
static void C_fcall trf_41627(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_41627(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_41627(t0,t1);}

C_noret_decl(trf_40509)
static void C_fcall trf_40509(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40509(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40509(t0,t1);}

C_noret_decl(trf_40382)
static void C_fcall trf_40382(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40382(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_40382(t0,t1,t2);}

C_noret_decl(trf_40066)
static void C_fcall trf_40066(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_40066(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_40066(t0,t1);}

C_noret_decl(trf_39161)
static void C_fcall trf_39161(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39161(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_39161(t0,t1,t2);}

C_noret_decl(trf_39196)
static void C_fcall trf_39196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39196(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39196(t0,t1);}

C_noret_decl(trf_39220)
static void C_fcall trf_39220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39220(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39220(t0,t1);}

C_noret_decl(trf_39199)
static void C_fcall trf_39199(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39199(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39199(t0,t1);}

C_noret_decl(trf_39002)
static void C_fcall trf_39002(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_39002(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_39002(t0,t1);}

C_noret_decl(trf_38758)
static void C_fcall trf_38758(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38758(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38758(t0,t1);}

C_noret_decl(trf_38765)
static void C_fcall trf_38765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38765(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38765(t0,t1);}

C_noret_decl(trf_38746)
static void C_fcall trf_38746(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38746(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38746(t0,t1);}

C_noret_decl(trf_25502)
static void C_fcall trf_25502(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25502(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25502(t0,t1);}

C_noret_decl(trf_25509)
static void C_fcall trf_25509(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25509(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25509(t0,t1);}

C_noret_decl(trf_25884)
static void C_fcall trf_25884(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25884(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25884(t0,t1,t2);}

C_noret_decl(trf_25907)
static void C_fcall trf_25907(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25907(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25907(t0,t1,t2);}

C_noret_decl(trf_25924)
static void C_fcall trf_25924(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25924(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25924(t0,t1);}

C_noret_decl(trf_25927)
static void C_fcall trf_25927(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25927(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25927(t0,t1);}

C_noret_decl(trf_25930)
static void C_fcall trf_25930(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25930(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25930(t0,t1);}

C_noret_decl(trf_25848)
static void C_fcall trf_25848(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25848(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25848(t0,t1,t2);}

C_noret_decl(trf_25776)
static void C_fcall trf_25776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25776(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25776(t0,t1,t2);}

C_noret_decl(trf_25792)
static void C_fcall trf_25792(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25792(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25792(t0,t1);}

C_noret_decl(trf_25739)
static void C_fcall trf_25739(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25739(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25739(t0,t1);}

C_noret_decl(trf_25525)
static void C_fcall trf_25525(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25525(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25525(t0,t1);}

C_noret_decl(trf_25532)
static void C_fcall trf_25532(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25532(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25532(t0,t1);}

C_noret_decl(trf_25535)
static void C_fcall trf_25535(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25535(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25535(t0,t1);}

C_noret_decl(trf_38255)
static void C_fcall trf_38255(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38255(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38255(t0,t1);}

C_noret_decl(trf_38258)
static void C_fcall trf_38258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38258(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38258(t0,t1);}

C_noret_decl(trf_38101)
static void C_fcall trf_38101(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_38101(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_38101(t0,t1);}

C_noret_decl(trf_37909)
static void C_fcall trf_37909(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37909(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37909(t0,t1);}

C_noret_decl(trf_37759)
static void C_fcall trf_37759(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37759(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37759(t0,t1);}

C_noret_decl(trf_37848)
static void C_fcall trf_37848(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37848(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37848(t0,t1);}

C_noret_decl(trf_37762)
static void C_fcall trf_37762(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37762(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37762(t0,t1);}

C_noret_decl(trf_37778)
static void C_fcall trf_37778(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37778(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_37778(t0,t1,t2,t3);}

C_noret_decl(trf_37800)
static void C_fcall trf_37800(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37800(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37800(t0,t1);}

C_noret_decl(trf_37695)
static void C_fcall trf_37695(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37695(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37695(t0,t1,t2);}

C_noret_decl(trf_37642)
static void C_fcall trf_37642(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37642(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37642(t0,t1);}

C_noret_decl(trf_30006)
static void C_fcall trf_30006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30006(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30006(t0,t1);}

C_noret_decl(trf_29868)
static void C_fcall trf_29868(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29868(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29868(t0,t1);}

C_noret_decl(trf_30082)
static void C_fcall trf_30082(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30082(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30082(t0,t1);}

C_noret_decl(trf_37246)
static void C_fcall trf_37246(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37246(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37246(t0,t1,t2);}

C_noret_decl(trf_37274)
static void C_fcall trf_37274(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37274(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37274(t0,t1);}

C_noret_decl(trf_36977)
static void C_fcall trf_36977(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36977(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36977(t0,t1);}

C_noret_decl(trf_37141)
static void C_fcall trf_37141(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37141(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37141(t0,t1);}

C_noret_decl(trf_36990)
static void C_fcall trf_36990(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36990(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36990(t0,t1);}

C_noret_decl(trf_37225)
static void C_fcall trf_37225(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37225(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37225(t0,t1);}

C_noret_decl(trf_36915)
static void C_fcall trf_36915(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36915(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36915(t0,t1,t2);}

C_noret_decl(trf_36856)
static void C_fcall trf_36856(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36856(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36856(t0,t1);}

C_noret_decl(trf_36792)
static void C_fcall trf_36792(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36792(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36792(t0,t1,t2);}

C_noret_decl(trf_36699)
static void C_fcall trf_36699(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36699(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36699(t0,t1);}

C_noret_decl(trf_36694)
static void C_fcall trf_36694(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36694(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36694(t0,t1,t2);}

C_noret_decl(trf_36537)
static void C_fcall trf_36537(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36537(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_36537(t0,t1,t2,t3);}

C_noret_decl(trf_36642)
static void C_fcall trf_36642(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36642(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36642(t0,t1,t2);}

C_noret_decl(trf_36611)
static void C_fcall trf_36611(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36611(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36611(t0,t1,t2);}

C_noret_decl(trf_36567)
static void C_fcall trf_36567(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36567(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36567(t0,t1);}

C_noret_decl(trf_36539)
static void C_fcall trf_36539(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36539(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36539(t0,t1);}

C_noret_decl(trf_36494)
static void C_fcall trf_36494(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36494(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36494(t0,t1);}

C_noret_decl(trf_36450)
static void C_fcall trf_36450(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36450(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_36450(t0,t1,t2,t3);}

C_noret_decl(trf_36295)
static void C_fcall trf_36295(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36295(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_36295(t0,t1,t2,t3,t4);}

C_noret_decl(trf_36324)
static void C_fcall trf_36324(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36324(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36324(t0,t1,t2);}

C_noret_decl(trf_36361)
static void C_fcall trf_36361(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36361(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36361(t0,t1);}

C_noret_decl(trf_35762)
static void C_fcall trf_35762(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35762(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35762(t0,t1);}

C_noret_decl(trf_35765)
static void C_fcall trf_35765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35765(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35765(t0,t1);}

C_noret_decl(trf_35768)
static void C_fcall trf_35768(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35768(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35768(t0,t1);}

C_noret_decl(trf_35774)
static void C_fcall trf_35774(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35774(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35774(t0,t1);}

C_noret_decl(trf_35524)
static void C_fcall trf_35524(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35524(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35524(t0,t1);}

C_noret_decl(trf_35527)
static void C_fcall trf_35527(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35527(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35527(t0,t1);}

C_noret_decl(trf_35533)
static void C_fcall trf_35533(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35533(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35533(t0,t1);}

C_noret_decl(trf_35496)
static void C_fcall trf_35496(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35496(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35496(t0,t1);}

C_noret_decl(trf_35476)
static void C_fcall trf_35476(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35476(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35476(t0,t1);}

C_noret_decl(trf_35439)
static void C_fcall trf_35439(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35439(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35439(t0,t1);}

C_noret_decl(trf_35419)
static void C_fcall trf_35419(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35419(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35419(t0,t1);}

C_noret_decl(trf_35091)
static void C_fcall trf_35091(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35091(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35091(t0,t1);}

C_noret_decl(trf_35098)
static void C_fcall trf_35098(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35098(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35098(t0,t1);}

C_noret_decl(trf_35104)
static void C_fcall trf_35104(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35104(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_35104(t0,t1,t2);}

C_noret_decl(trf_34980)
static void C_fcall trf_34980(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34980(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34980(t0,t1);}

C_noret_decl(trf_34987)
static void C_fcall trf_34987(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34987(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34987(t0,t1);}

C_noret_decl(trf_34993)
static void C_fcall trf_34993(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34993(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34993(t0,t1,t2);}

C_noret_decl(trf_33836)
static void C_fcall trf_33836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33836(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33836(t0,t1);}

C_noret_decl(trf_33839)
static void C_fcall trf_33839(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33839(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33839(t0,t1);}

C_noret_decl(trf_33842)
static void C_fcall trf_33842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33842(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33842(t0,t1);}

C_noret_decl(trf_33366)
static void C_fcall trf_33366(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33366(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33366(t0,t1);}

C_noret_decl(trf_33369)
static void C_fcall trf_33369(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33369(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33369(t0,t1);}

C_noret_decl(trf_33372)
static void C_fcall trf_33372(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33372(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33372(t0,t1);}

C_noret_decl(trf_32896)
static void C_fcall trf_32896(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32896(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32896(t0,t1);}

C_noret_decl(trf_32899)
static void C_fcall trf_32899(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32899(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32899(t0,t1);}

C_noret_decl(trf_32902)
static void C_fcall trf_32902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32902(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32902(t0,t1);}

C_noret_decl(trf_32148)
static void C_fcall trf_32148(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32148(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32148(t0,t1);}

C_noret_decl(trf_32151)
static void C_fcall trf_32151(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32151(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32151(t0,t1);}

C_noret_decl(trf_32154)
static void C_fcall trf_32154(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32154(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32154(t0,t1);}

C_noret_decl(trf_32157)
static void C_fcall trf_32157(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32157(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32157(t0,t1);}

C_noret_decl(trf_31400)
static void C_fcall trf_31400(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31400(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31400(t0,t1);}

C_noret_decl(trf_31403)
static void C_fcall trf_31403(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31403(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31403(t0,t1);}

C_noret_decl(trf_31406)
static void C_fcall trf_31406(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31406(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31406(t0,t1);}

C_noret_decl(trf_31409)
static void C_fcall trf_31409(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31409(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31409(t0,t1);}

C_noret_decl(trf_30930)
static void C_fcall trf_30930(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30930(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30930(t0,t1);}

C_noret_decl(trf_30933)
static void C_fcall trf_30933(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30933(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30933(t0,t1);}

C_noret_decl(trf_30936)
static void C_fcall trf_30936(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30936(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30936(t0,t1);}

C_noret_decl(trf_30182)
static void C_fcall trf_30182(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30182(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30182(t0,t1);}

C_noret_decl(trf_30185)
static void C_fcall trf_30185(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30185(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30185(t0,t1);}

C_noret_decl(trf_30188)
static void C_fcall trf_30188(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30188(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30188(t0,t1);}

C_noret_decl(trf_30191)
static void C_fcall trf_30191(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30191(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30191(t0,t1);}

C_noret_decl(trf_29833)
static void C_fcall trf_29833(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29833(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29833(t0,t1,t2,t3);}

C_noret_decl(trf_29673)
static void C_fcall trf_29673(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29673(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29673(t0,t1);}

C_noret_decl(trf_29708)
static void C_fcall trf_29708(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29708(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_29708(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_29718)
static void C_fcall trf_29718(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29718(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29718(t0,t1);}

C_noret_decl(trf_29681)
static void C_fcall trf_29681(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29681(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_29681(t0,t1,t2);}

C_noret_decl(trf_29841)
static void C_fcall trf_29841(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29841(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29841(t0,t1);}

C_noret_decl(trf_29459)
static void C_fcall trf_29459(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29459(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29459(t0,t1);}

C_noret_decl(trf_29465)
static void C_fcall trf_29465(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29465(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29465(t0,t1);}

C_noret_decl(trf_29488)
static void C_fcall trf_29488(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29488(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29488(t0,t1);}

C_noret_decl(trf_29501)
static void C_fcall trf_29501(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29501(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29501(t0,t1);}

C_noret_decl(trf_29475)
static void C_fcall trf_29475(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29475(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29475(t0,t1);}

C_noret_decl(trf_29288)
static void C_fcall trf_29288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29288(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_29288(t0,t1,t2,t3);}

C_noret_decl(trf_29297)
static void C_fcall trf_29297(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29297(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_29297(t0,t1,t2,t3,t4);}

C_noret_decl(trf_29251)
static void C_fcall trf_29251(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29251(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29251(t0,t1);}

C_noret_decl(trf_29114)
static void C_fcall trf_29114(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29114(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29114(t0,t1);}

C_noret_decl(trf_29044)
static void C_fcall trf_29044(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29044(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29044(t0,t1);}

C_noret_decl(trf_28405)
static void C_fcall trf_28405(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28405(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28405(t0,t1,t2);}

C_noret_decl(trf_28365)
static void C_fcall trf_28365(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28365(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_28365(t0,t1,t2);}

C_noret_decl(trf_28378)
static void C_fcall trf_28378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28378(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28378(t0,t1);}

C_noret_decl(trf_28957)
static void C_fcall trf_28957(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28957(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28957(t0,t1);}

C_noret_decl(trf_28747)
static void C_fcall trf_28747(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28747(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28747(t0,t1);}

C_noret_decl(trf_28863)
static void C_fcall trf_28863(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28863(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28863(t0,t1);}

C_noret_decl(trf_28750)
static void C_fcall trf_28750(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28750(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28750(t0,t1);}

C_noret_decl(trf_28753)
static void C_fcall trf_28753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28753(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28753(t0,t1);}

C_noret_decl(trf_28658)
static void C_fcall trf_28658(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28658(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28658(t0,t1);}

C_noret_decl(trf_28573)
static void C_fcall trf_28573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28573(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28573(t0,t1);}

C_noret_decl(trf_28530)
static void C_fcall trf_28530(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28530(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28530(t0,t1);}

C_noret_decl(trf_28497)
static void C_fcall trf_28497(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28497(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28497(t0,t1);}

C_noret_decl(trf_28492)
static void C_fcall trf_28492(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28492(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28492(t0,t1);}

C_noret_decl(trf_28487)
static void C_fcall trf_28487(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28487(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_28487(t0,t1,t2,t3,t4);}

C_noret_decl(trf_28234)
static void C_fcall trf_28234(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28234(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28234(t0,t1);}

C_noret_decl(trf_28081)
static void C_fcall trf_28081(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28081(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_28081(t0,t1,t2,t3);}

C_noret_decl(trf_27927)
static void C_fcall trf_27927(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27927(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27927(t0,t1,t2);}

C_noret_decl(trf_27769)
static void C_fcall trf_27769(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27769(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27769(t0,t1,t2);}

C_noret_decl(trf_27802)
static void C_fcall trf_27802(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27802(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27802(t0,t1);}

C_noret_decl(trf_27709)
static void C_fcall trf_27709(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27709(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27709(t0,t1);}

C_noret_decl(trf_27674)
static void C_fcall trf_27674(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27674(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27674(t0,t1);}

C_noret_decl(trf_27690)
static void C_fcall trf_27690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27690(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27690(t0,t1);}

C_noret_decl(trf_27645)
static void C_fcall trf_27645(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27645(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27645(t0,t1);}

C_noret_decl(trf_27552)
static void C_fcall trf_27552(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27552(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27552(t0,t1);}

C_noret_decl(trf_27308)
static void C_fcall trf_27308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27308(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_27308(t0,t1,t2);}

C_noret_decl(trf_27112)
static void C_fcall trf_27112(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27112(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27112(t0,t1);}

C_noret_decl(trf_27275)
static void C_fcall trf_27275(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27275(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27275(t0,t1);}

C_noret_decl(trf_27115)
static void C_fcall trf_27115(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27115(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27115(t0,t1);}

C_noret_decl(trf_27118)
static void C_fcall trf_27118(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27118(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27118(t0,t1);}

C_noret_decl(trf_27121)
static void C_fcall trf_27121(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27121(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27121(t0,t1);}

C_noret_decl(trf_27163)
static void C_fcall trf_27163(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27163(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27163(t0,t1);}

C_noret_decl(trf_27128)
static void C_fcall trf_27128(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27128(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27128(t0,t1);}

C_noret_decl(trf_26857)
static void C_fcall trf_26857(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26857(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26857(t0,t1,t2,t3);}

C_noret_decl(trf_26865)
static void C_fcall trf_26865(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26865(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26865(t0,t1,t2,t3);}

C_noret_decl(trf_26994)
static void C_fcall trf_26994(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26994(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26994(t0,t1,t2);}

C_noret_decl(trf_26948)
static void C_fcall trf_26948(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26948(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26948(t0,t1,t2);}

C_noret_decl(trf_26851)
static void C_fcall trf_26851(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26851(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26851(t0,t1,t2);}

C_noret_decl(trf_26845)
static void C_fcall trf_26845(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26845(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26845(t0,t1);}

C_noret_decl(trf_26839)
static void C_fcall trf_26839(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26839(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26839(t0,t1,t2);}

C_noret_decl(trf_26768)
static void C_fcall trf_26768(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26768(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26768(t0,t1,t2);}

C_noret_decl(trf_26770)
static void C_fcall trf_26770(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26770(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26770(t0,t1,t2);}

C_noret_decl(trf_26776)
static void C_fcall trf_26776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26776(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26776(t0,t1,t2);}

C_noret_decl(trf_26617)
static void C_fcall trf_26617(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26617(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26617(t0,t1);}

C_noret_decl(trf_26632)
static void C_fcall trf_26632(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26632(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26632(t0,t1,t2);}

C_noret_decl(trf_26575)
static void C_fcall trf_26575(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26575(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26575(t0,t1,t2);}

C_noret_decl(trf_26515)
static void C_fcall trf_26515(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26515(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26515(t0,t1,t2);}

C_noret_decl(trf_26384)
static void C_fcall trf_26384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26384(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26384(t0,t1,t2);}

C_noret_decl(trf_26260)
static void C_fcall trf_26260(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26260(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26260(t0,t1,t2,t3);}

C_noret_decl(trf_26296)
static void C_fcall trf_26296(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26296(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26296(t0,t1,t2);}

C_noret_decl(trf_26092)
static void C_fcall trf_26092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26092(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26092(t0,t1);}

C_noret_decl(trf_23847)
static void C_fcall trf_23847(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23847(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23847(t0,t1);}

C_noret_decl(trf_26226)
static void C_fcall trf_26226(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26226(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26226(t0,t1,t2);}

C_noret_decl(trf_26236)
static void C_fcall trf_26236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26236(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26236(t0,t1);}

C_noret_decl(trf_26196)
static void C_fcall trf_26196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26196(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26196(t0,t1,t2);}

C_noret_decl(trf_26206)
static void C_fcall trf_26206(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26206(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26206(t0,t1);}

C_noret_decl(trf_25189)
static void C_fcall trf_25189(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25189(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25189(t0,t1);}

C_noret_decl(trf_25192)
static void C_fcall trf_25192(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25192(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25192(t0,t1);}

C_noret_decl(trf_25195)
static void C_fcall trf_25195(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25195(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25195(t0,t1);}

C_noret_decl(trf_25198)
static void C_fcall trf_25198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25198(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25198(t0,t1);}

C_noret_decl(trf_25201)
static void C_fcall trf_25201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25201(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25201(t0,t1);}

C_noret_decl(trf_25204)
static void C_fcall trf_25204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25204(t0,t1);}

C_noret_decl(trf_25032)
static void C_fcall trf_25032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25032(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25032(t0,t1);}

C_noret_decl(trf_24961)
static void C_fcall trf_24961(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24961(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24961(t0,t1);}

C_noret_decl(trf_24776)
static void C_fcall trf_24776(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24776(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24776(t0,t1);}

C_noret_decl(trf_24788)
static void C_fcall trf_24788(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24788(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24788(t0,t1);}

C_noret_decl(trf_24825)
static void C_fcall trf_24825(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24825(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_24825(t0,t1,t2,t3,t4);}

C_noret_decl(trf_24860)
static void C_fcall trf_24860(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24860(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24860(t0,t1);}

C_noret_decl(trf_24755)
static void C_fcall trf_24755(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24755(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24755(t0,t1);}

C_noret_decl(trf_24690)
static void C_fcall trf_24690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24690(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24690(t0,t1,t2);}

C_noret_decl(trf_24699)
static void C_fcall trf_24699(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24699(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24699(t0,t1,t2);}

C_noret_decl(trf_24712)
static void C_fcall trf_24712(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24712(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24712(t0,t1);}

C_noret_decl(trf_24646)
static void C_fcall trf_24646(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24646(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24646(t0,t1,t2);}

C_noret_decl(trf_24634)
static void C_fcall trf_24634(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24634(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24634(t0,t1);}

C_noret_decl(trf_24532)
static void C_fcall trf_24532(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24532(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24532(t0,t1);}

C_noret_decl(trf_24484)
static void C_fcall trf_24484(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24484(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24484(t0,t1);}

C_noret_decl(trf_23865)
static void C_fcall trf_23865(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23865(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_23865(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_23875)
static void C_fcall trf_23875(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23875(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23875(t0,t1);}

C_noret_decl(trf_24004)
static void C_fcall trf_24004(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24004(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24004(t0,t1);}

C_noret_decl(trf_24092)
static void C_fcall trf_24092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24092(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24092(t0,t1);}

C_noret_decl(trf_24165)
static void C_fcall trf_24165(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24165(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24165(t0,t1);}

C_noret_decl(trf_24243)
static void C_fcall trf_24243(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24243(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24243(t0,t1);}

C_noret_decl(trf_24194)
static void C_fcall trf_24194(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24194(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24194(t0,t1);}

C_noret_decl(trf_24210)
static void C_fcall trf_24210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24210(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24210(t0,t1);}

C_noret_decl(trf_24174)
static void C_fcall trf_24174(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24174(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24174(t0,t1);}

C_noret_decl(trf_24116)
static void C_fcall trf_24116(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24116(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24116(t0,t1,t2);}

C_noret_decl(trf_24035)
static void C_fcall trf_24035(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24035(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24035(t0,t1,t2);}

C_noret_decl(trf_24051)
static void C_fcall trf_24051(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24051(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24051(t0,t1);}

C_noret_decl(trf_24019)
static void C_fcall trf_24019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24019(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24019(t0,t1);}

C_noret_decl(trf_23761)
static void C_fcall trf_23761(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23761(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23761(t0,t1);}

C_noret_decl(trf_23770)
static void C_fcall trf_23770(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23770(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23770(t0,t1);}

C_noret_decl(trf_23775)
static void C_fcall trf_23775(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23775(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23775(t0,t1,t2);}

C_noret_decl(trf_23753)
static void C_fcall trf_23753(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23753(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23753(t0,t1);}

C_noret_decl(trf_23545)
static void C_fcall trf_23545(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23545(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23545(t0,t1,t2,t3);}

C_noret_decl(trf_23512)
static void C_fcall trf_23512(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23512(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23512(t0,t1,t2,t3);}

C_noret_decl(trf_23494)
static void C_fcall trf_23494(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23494(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23494(t0,t1,t2,t3);}

C_noret_decl(trf_23484)
static void C_fcall trf_23484(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23484(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23484(t0,t1,t2,t3);}

C_noret_decl(trf_23472)
static void C_fcall trf_23472(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23472(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23472(t0,t1,t2);}

C_noret_decl(trf_23440)
static void C_fcall trf_23440(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23440(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23440(t0,t1,t2);}

C_noret_decl(trf_23424)
static void C_fcall trf_23424(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23424(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23424(t0,t1);}

C_noret_decl(trf_23412)
static void C_fcall trf_23412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23412(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23412(t0,t1);}

C_noret_decl(trf_23394)
static void C_fcall trf_23394(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23394(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23394(t0,t1);}

C_noret_decl(trf_23376)
static void C_fcall trf_23376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23376(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23376(t0,t1);}

C_noret_decl(trf_23361)
static void C_fcall trf_23361(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23361(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23361(t0,t1);}

C_noret_decl(trf_23355)
static void C_fcall trf_23355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23355(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23355(t0,t1,t2,t3);}

C_noret_decl(trf_23343)
static void C_fcall trf_23343(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23343(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23343(t0,t1);}

C_noret_decl(trf_23325)
static void C_fcall trf_23325(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23325(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23325(t0,t1);}

C_noret_decl(trf_23304)
static void C_fcall trf_23304(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23304(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23304(t0,t1,t2);}

C_noret_decl(trf_23272)
static void C_fcall trf_23272(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23272(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23272(t0,t1);}

C_noret_decl(trf_23214)
static void C_fcall trf_23214(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23214(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23214(t0,t1,t2);}

C_noret_decl(trf_23204)
static void C_fcall trf_23204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23204(t0,t1);}

C_noret_decl(trf_23198)
static void C_fcall trf_23198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23198(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23198(t0,t1);}

C_noret_decl(trf_23186)
static void C_fcall trf_23186(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23186(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23186(t0,t1);}

C_noret_decl(trf_23162)
static void C_fcall trf_23162(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23162(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23162(t0,t1,t2);}

C_noret_decl(trf_23075)
static void C_fcall trf_23075(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23075(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23075(t0,t1);}

C_noret_decl(trf_23054)
static void C_fcall trf_23054(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23054(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_23054(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_23044)
static void C_fcall trf_23044(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23044(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23044(t0,t1);}

C_noret_decl(trf_23032)
static void C_fcall trf_23032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23032(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23032(t0,t1);}

C_noret_decl(trf_22991)
static void C_fcall trf_22991(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22991(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22991(t0,t1);}

C_noret_decl(trf_22973)
static void C_fcall trf_22973(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22973(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22973(t0,t1);}

C_noret_decl(trf_22955)
static void C_fcall trf_22955(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22955(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22955(t0,t1);}

C_noret_decl(trf_21922)
static void C_fcall trf_21922(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21922(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21922(t0,t1);}

C_noret_decl(trf_21925)
static void C_fcall trf_21925(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21925(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21925(t0,t1);}

C_noret_decl(trf_22640)
static void C_fcall trf_22640(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22640(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22640(t0,t1,t2);}

C_noret_decl(trf_22663)
static void C_fcall trf_22663(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22663(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_22663(t0,t1,t2,t3,t4);}

C_noret_decl(trf_22698)
static void C_fcall trf_22698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22698(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22698(t0,t1);}

C_noret_decl(trf_22602)
static void C_fcall trf_22602(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22602(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22602(t0,t1);}

C_noret_decl(trf_22130)
static void C_fcall trf_22130(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22130(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22130(t0,t1);}

C_noret_decl(trf_22473)
static void C_fcall trf_22473(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22473(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22473(t0,t1,t2,t3);}

C_noret_decl(trf_22559)
static void C_fcall trf_22559(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22559(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22559(t0,t1,t2,t3);}

C_noret_decl(trf_22516)
static void C_fcall trf_22516(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22516(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22516(t0,t1,t2);}

C_noret_decl(trf_22440)
static void C_fcall trf_22440(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22440(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22440(t0,t1,t2);}

C_noret_decl(trf_22378)
static void C_fcall trf_22378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22378(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22378(t0,t1,t2);}

C_noret_decl(trf_22413)
static void C_fcall trf_22413(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22413(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22413(t0,t1,t2,t3);}

C_noret_decl(trf_22198)
static void C_fcall trf_22198(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22198(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22198(t0,t1,t2);}

C_noret_decl(trf_22094)
static void C_fcall trf_22094(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22094(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22094(t0,t1,t2);}

C_noret_decl(trf_22351)
static void C_fcall trf_22351(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22351(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22351(t0,t1,t2,t3);}

C_noret_decl(trf_22324)
static void C_fcall trf_22324(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22324(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22324(t0,t1,t2,t3);}

C_noret_decl(trf_22235)
static void C_fcall trf_22235(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22235(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22235(t0,t1,t2);}

C_noret_decl(trf_22285)
static void C_fcall trf_22285(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22285(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_22285(t0,t1,t2,t3);}

C_noret_decl(trf_22017)
static void C_fcall trf_22017(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22017(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_22017(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21935)
static void C_fcall trf_21935(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21935(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_21935(t0,t1,t2,t3);}

C_noret_decl(trf_21856)
static void C_fcall trf_21856(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21856(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21856(t0,t1,t2);}

C_noret_decl(trf_21881)
static void C_fcall trf_21881(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21881(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21881(t0,t1);}

C_noret_decl(trf_21584)
static void C_fcall trf_21584(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21584(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21584(t0,t1);}

C_noret_decl(trf_21587)
static void C_fcall trf_21587(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21587(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21587(t0,t1);}

C_noret_decl(trf_21593)
static void C_fcall trf_21593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21593(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21593(t0,t1);}

C_noret_decl(trf_21307)
static void C_fcall trf_21307(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21307(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21307(t0,t1);}

C_noret_decl(trf_21310)
static void C_fcall trf_21310(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21310(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21310(t0,t1);}

C_noret_decl(trf_21237)
static void C_fcall trf_21237(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21237(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21237(t0,t1);}

C_noret_decl(trf_21085)
static void C_fcall trf_21085(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21085(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21085(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21010)
static void C_fcall trf_21010(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21010(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21010(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21020)
static void C_fcall trf_21020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21020(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21020(t0,t1);}

C_noret_decl(trf_21027)
static void C_fcall trf_21027(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21027(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21027(t0,t1);}

C_noret_decl(trf_21122)
static void C_fcall trf_21122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21122(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21122(t0,t1,t2);}

C_noret_decl(trf_20900)
static void C_fcall trf_20900(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20900(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20900(t0,t1,t2,t3);}

C_noret_decl(trf_20912)
static void C_fcall trf_20912(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20912(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_20912(t0,t1,t2,t3,t4);}

C_noret_decl(trf_20973)
static void C_fcall trf_20973(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20973(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20973(t0,t1,t2);}

C_noret_decl(trf_20337)
static void C_fcall trf_20337(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20337(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_20337(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_20273)
static void C_fcall trf_20273(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20273(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20273(t0,t1);}

C_noret_decl(trf_20220)
static void C_fcall trf_20220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20220(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20220(t0,t1);}

C_noret_decl(trf_20223)
static void C_fcall trf_20223(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20223(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20223(t0,t1);}

C_noret_decl(trf_20417)
static void C_fcall trf_20417(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20417(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20417(t0,t1);}

C_noret_decl(trf_20420)
static void C_fcall trf_20420(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20420(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20420(t0,t1);}

C_noret_decl(trf_20423)
static void C_fcall trf_20423(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20423(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20423(t0,t1);}

C_noret_decl(trf_20438)
static void C_fcall trf_20438(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20438(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20438(t0,t1);}

C_noret_decl(trf_19999)
static void C_fcall trf_19999(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19999(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19999(t0,t1);}

C_noret_decl(trf_20091)
static void C_fcall trf_20091(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20091(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20091(t0,t1,t2);}

C_noret_decl(trf_20110)
static void C_fcall trf_20110(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20110(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20110(t0,t1);}

C_noret_decl(trf_20064)
static void C_fcall trf_20064(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20064(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20064(t0,t1,t2);}

C_noret_decl(trf_20009)
static void C_fcall trf_20009(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20009(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20009(t0,t1,t2);}

C_noret_decl(trf_20019)
static void C_fcall trf_20019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20019(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20019(t0,t1,t2,t3);}

C_noret_decl(trf_19865)
static void C_fcall trf_19865(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19865(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19865(t0,t1,t2);}

C_noret_decl(trf_19934)
static void C_fcall trf_19934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19934(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19934(t0,t1,t2);}

C_noret_decl(trf_19880)
static void C_fcall trf_19880(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19880(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19880(t0,t1,t2,t3,t4);}

C_noret_decl(trf_19422)
static void C_fcall trf_19422(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19422(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19422(t0,t1);}

C_noret_decl(trf_19425)
static void C_fcall trf_19425(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19425(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19425(t0,t1);}

C_noret_decl(trf_19428)
static void C_fcall trf_19428(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19428(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19428(t0,t1);}

C_noret_decl(trf_19431)
static void C_fcall trf_19431(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19431(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19431(t0,t1);}

C_noret_decl(trf_19395)
static void C_fcall trf_19395(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19395(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19395(t0,t1);}

C_noret_decl(trf_19118)
static void C_fcall trf_19118(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19118(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19118(t0,t1);}

C_noret_decl(trf_19121)
static void C_fcall trf_19121(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19121(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19121(t0,t1);}

C_noret_decl(trf_19124)
static void C_fcall trf_19124(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19124(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19124(t0,t1);}

C_noret_decl(trf_19015)
static void C_fcall trf_19015(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19015(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19015(t0,t1);}

C_noret_decl(trf_19006)
static void C_fcall trf_19006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19006(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19006(t0,t1,t2);}

C_noret_decl(trf_18997)
static void C_fcall trf_18997(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18997(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18997(t0,t1);}

C_noret_decl(trf_18979)
static void C_fcall trf_18979(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18979(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18979(t0,t1);}

C_noret_decl(trf_18961)
static void C_fcall trf_18961(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18961(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18961(t0,t1);}

C_noret_decl(trf_18943)
static void C_fcall trf_18943(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18943(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18943(t0,t1);}

C_noret_decl(trf_18934)
static void C_fcall trf_18934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18934(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18934(t0,t1,t2);}

C_noret_decl(trf_18925)
static void C_fcall trf_18925(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18925(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18925(t0,t1);}

C_noret_decl(trf_18756)
static void C_fcall trf_18756(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18756(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18756(t0,t1);}

C_noret_decl(trf_18712)
static void C_fcall trf_18712(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18712(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18712(t0,t1,t2);}

C_noret_decl(trf_18233)
static void C_fcall trf_18233(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18233(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18233(t0,t1);}

C_noret_decl(trf_18236)
static void C_fcall trf_18236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18236(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18236(t0,t1);}

C_noret_decl(trf_18239)
static void C_fcall trf_18239(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18239(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18239(t0,t1);}

C_noret_decl(trf_18242)
static void C_fcall trf_18242(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18242(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18242(t0,t1);}

C_noret_decl(trf_18188)
static void C_fcall trf_18188(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18188(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18188(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17894)
static void C_fcall trf_17894(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17894(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17894(t0,t1);}

C_noret_decl(trf_17897)
static void C_fcall trf_17897(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17897(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17897(t0,t1);}

C_noret_decl(trf_17900)
static void C_fcall trf_17900(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17900(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17900(t0,t1);}

C_noret_decl(trf_17611)
static void C_fcall trf_17611(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17611(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17611(t0,t1);}

C_noret_decl(trf_17614)
static void C_fcall trf_17614(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17614(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17614(t0,t1);}

C_noret_decl(trf_17617)
static void C_fcall trf_17617(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17617(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17617(t0,t1);}

C_noret_decl(trf_17570)
static void C_fcall trf_17570(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17570(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17570(t0,t1);}

C_noret_decl(trf_17526)
static void C_fcall trf_17526(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17526(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17526(t0,t1);}

C_noret_decl(trf_17441)
static void C_fcall trf_17441(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17441(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17441(t0,t1);}

C_noret_decl(trf_16926)
static void C_fcall trf_16926(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16926(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16926(t0,t1);}

C_noret_decl(trf_16929)
static void C_fcall trf_16929(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16929(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16929(t0,t1);}

C_noret_decl(trf_16932)
static void C_fcall trf_16932(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16932(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16932(t0,t1);}

C_noret_decl(trf_16935)
static void C_fcall trf_16935(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16935(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16935(t0,t1);}

C_noret_decl(trf_16842)
static void C_fcall trf_16842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16842(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16842(t0,t1,t2);}

C_noret_decl(trf_16833)
static void C_fcall trf_16833(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16833(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16833(t0,t1);}

C_noret_decl(trf_16768)
static void C_fcall trf_16768(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16768(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16768(t0,t1);}

C_noret_decl(trf_16510)
static void C_fcall trf_16510(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16510(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16510(t0,t1);}

C_noret_decl(trf_16513)
static void C_fcall trf_16513(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16513(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16513(t0,t1);}

C_noret_decl(trf_16516)
static void C_fcall trf_16516(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16516(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16516(t0,t1);}

C_noret_decl(trf_16391)
static void C_fcall trf_16391(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16391(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16391(t0,t1);}

C_noret_decl(trf_16415)
static void C_fcall trf_16415(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16415(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16415(t0,t1);}

C_noret_decl(trf_16345)
static void C_fcall trf_16345(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16345(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16345(t0,t1,t2);}

C_noret_decl(trf_16336)
static void C_fcall trf_16336(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16336(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16336(t0,t1);}

C_noret_decl(trf_16035)
static void C_fcall trf_16035(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16035(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16035(t0,t1);}

C_noret_decl(trf_16271)
static void C_fcall trf_16271(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16271(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16271(t0,t1);}

C_noret_decl(trf_16277)
static void C_fcall trf_16277(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16277(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16277(t0,t1);}

C_noret_decl(trf_16169)
static void C_fcall trf_16169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16169(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16169(t0,t1);}

C_noret_decl(trf_16171)
static void C_fcall trf_16171(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16171(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16171(t0,t1,t2,t3);}

C_noret_decl(trf_16220)
static void C_fcall trf_16220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16220(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16220(t0,t1);}

C_noret_decl(trf_16185)
static void C_fcall trf_16185(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16185(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16185(t0,t1);}

C_noret_decl(trf_16069)
static void C_fcall trf_16069(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16069(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16069(t0,t1);}

C_noret_decl(trf_15983)
static void C_fcall trf_15983(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15983(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15983(t0,t1,t2,t3,t4);}

C_noret_decl(trf_16002)
static void C_fcall trf_16002(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16002(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16002(t0,t1);}

C_noret_decl(trf_15933)
static void C_fcall trf_15933(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15933(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15933(t0,t1,t2,t3);}

C_noret_decl(trf_15694)
static void C_fcall trf_15694(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15694(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_15694(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_15713)
static void C_fcall trf_15713(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15713(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15713(t0,t1);}

C_noret_decl(trf_15728)
static void C_fcall trf_15728(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15728(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15728(t0,t1);}

C_noret_decl(trf_15737)
static void C_fcall trf_15737(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15737(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15737(t0,t1);}

C_noret_decl(trf_15684)
static void C_fcall trf_15684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15684(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_15684(t0);}

C_noret_decl(trf_15629)
static void C_fcall trf_15629(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15629(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15629(t0,t1);}

C_noret_decl(trf_15620)
static void C_fcall trf_15620(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15620(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15620(t0,t1,t2);}

C_noret_decl(trf_15503)
static void C_fcall trf_15503(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15503(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15503(t0,t1);}

C_noret_decl(trf_15494)
static void C_fcall trf_15494(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15494(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15494(t0,t1,t2);}

C_noret_decl(trf_15476)
static void C_fcall trf_15476(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15476(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15476(t0,t1,t2);}

C_noret_decl(trf_15467)
static void C_fcall trf_15467(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15467(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15467(t0,t1);}

C_noret_decl(trf_15449)
static void C_fcall trf_15449(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15449(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15449(t0,t1);}

C_noret_decl(trf_15440)
static void C_fcall trf_15440(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15440(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15440(t0,t1,t2);}

C_noret_decl(trf_15431)
static void C_fcall trf_15431(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15431(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15431(t0,t1);}

C_noret_decl(trf_15413)
static void C_fcall trf_15413(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15413(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15413(t0,t1);}

C_noret_decl(trf_15404)
static void C_fcall trf_15404(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15404(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15404(t0,t1,t2);}

C_noret_decl(trf_15395)
static void C_fcall trf_15395(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15395(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15395(t0,t1);}

C_noret_decl(trf_15380)
static void C_fcall trf_15380(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15380(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15380(t0,t1);}

C_noret_decl(trf_15335)
static void C_fcall trf_15335(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15335(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15335(t0,t1);}

C_noret_decl(trf_15317)
static void C_fcall trf_15317(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15317(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15317(t0,t1);}

C_noret_decl(trf_15308)
static void C_fcall trf_15308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15308(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15308(t0,t1,t2);}

C_noret_decl(trf_15281)
static void C_fcall trf_15281(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15281(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15281(t0,t1);}

C_noret_decl(trf_15263)
static void C_fcall trf_15263(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15263(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15263(t0,t1);}

C_noret_decl(trf_15245)
static void C_fcall trf_15245(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15245(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15245(t0,t1);}

C_noret_decl(trf_15236)
static void C_fcall trf_15236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15236(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15236(t0,t1,t2);}

C_noret_decl(trf_15224)
static void C_fcall trf_15224(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15224(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_15224(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_15032)
static void C_fcall trf_15032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15032(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15032(t0,t1);}

C_noret_decl(trf_15181)
static void C_fcall trf_15181(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15181(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15181(t0,t1,t2);}

C_noret_decl(trf_15067)
static void C_fcall trf_15067(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15067(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_15067(t0,t1,t2,t3);}

C_noret_decl(trf_15108)
static void C_fcall trf_15108(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15108(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15108(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14992)
static void C_fcall trf_14992(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14992(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14992(t0,t1);}

C_noret_decl(trf_14955)
static void C_fcall trf_14955(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14955(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14955(t0,t1,t2,t3);}

C_noret_decl(trf_14853)
static void C_fcall trf_14853(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14853(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_14853(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14800)
static void C_fcall trf_14800(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14800(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14800(t0,t1,t2);}

C_noret_decl(trf_14972)
static void C_fcall trf_14972(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14972(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14972(t0,t1);}

C_noret_decl(trf_14913)
static void C_fcall trf_14913(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14913(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14913(t0,t1);}

C_noret_decl(trf_14768)
static void C_fcall trf_14768(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14768(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14768(t0,t1);}

C_noret_decl(trf_14399)
static void C_fcall trf_14399(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14399(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14399(t0,t1);}

C_noret_decl(trf_14402)
static void C_fcall trf_14402(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14402(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14402(t0,t1);}

C_noret_decl(trf_14405)
static void C_fcall trf_14405(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14405(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14405(t0,t1);}

C_noret_decl(trf_14563)
static void C_fcall trf_14563(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14563(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14563(t0,t1);}

C_noret_decl(trf_14566)
static void C_fcall trf_14566(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14566(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14566(t0,t1);}

C_noret_decl(trf_14575)
static void C_fcall trf_14575(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14575(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14575(t0,t1,t2);}

C_noret_decl(trf_14585)
static void C_fcall trf_14585(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14585(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14585(t0,t1);}

C_noret_decl(trf_14532)
static void C_fcall trf_14532(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14532(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14532(t0,t1,t2);}

C_noret_decl(trf_14494)
static void C_fcall trf_14494(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14494(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14494(t0,t1,t2);}

C_noret_decl(trf_13864)
static void C_fcall trf_13864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13864(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13864(t0,t1,t2,t3);}

C_noret_decl(trf_14449)
static void C_fcall trf_14449(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14449(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14449(t0,t1,t2);}

C_noret_decl(trf_14419)
static void C_fcall trf_14419(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14419(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14419(t0,t1,t2);}

C_noret_decl(trf_14354)
static void C_fcall trf_14354(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14354(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_14354(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_14298)
static void C_fcall trf_14298(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14298(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14298(t0,t1,t2);}

C_noret_decl(trf_14266)
static void C_fcall trf_14266(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14266(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14266(t0,t1,t2);}

C_noret_decl(trf_14217)
static void C_fcall trf_14217(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14217(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14217(t0,t1,t2);}

C_noret_decl(trf_14236)
static void C_fcall trf_14236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14236(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_14236(t0,t1,t2);}

C_noret_decl(trf_14156)
static void C_fcall trf_14156(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14156(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14156(t0,t1,t2,t3);}

C_noret_decl(trf_14139)
static void C_fcall trf_14139(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14139(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14139(t0,t1);}

C_noret_decl(trf_14122)
static void C_fcall trf_14122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14122(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14122(t0,t1);}

C_noret_decl(trf_13955)
static void C_fcall trf_13955(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13955(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_13955(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_13965)
static void C_fcall trf_13965(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13965(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13965(t0,t1);}

C_noret_decl(trf_13777)
static void C_fcall trf_13777(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13777(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13777(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13799)
static void C_fcall trf_13799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13799(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13799(t0,t1);}

C_noret_decl(trf_13618)
static void C_fcall trf_13618(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13618(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13618(t0,t1,t2,t3);}

C_noret_decl(trf_13707)
static void C_fcall trf_13707(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13707(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13707(t0,t1,t2,t3,t4);}

C_noret_decl(trf_13721)
static void C_fcall trf_13721(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13721(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13721(t0,t1);}

C_noret_decl(trf_13649)
static void C_fcall trf_13649(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13649(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13649(t0,t1);}

C_noret_decl(trf_13553)
static void C_fcall trf_13553(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13553(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_13553(t0,t1,t2,t3,t4);}

C_noret_decl(trf_12060)
static void C_fcall trf_12060(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12060(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12060(t0,t1);}

C_noret_decl(trf_12063)
static void C_fcall trf_12063(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12063(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12063(t0,t1);}

C_noret_decl(trf_12066)
static void C_fcall trf_12066(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12066(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12066(t0,t1);}

C_noret_decl(trf_12069)
static void C_fcall trf_12069(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12069(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12069(t0,t1);}

C_noret_decl(trf_12072)
static void C_fcall trf_12072(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12072(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12072(t0,t1);}

C_noret_decl(trf_12075)
static void C_fcall trf_12075(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12075(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12075(t0,t1);}

C_noret_decl(trf_11837)
static void C_fcall trf_11837(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11837(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11837(t0,t1);}

C_noret_decl(trf_11892)
static void C_fcall trf_11892(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11892(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11892(t0,t1);}

C_noret_decl(trf_11867)
static void C_fcall trf_11867(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11867(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11867(t0,t1);}

C_noret_decl(trf_11708)
static void C_fcall trf_11708(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11708(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11708(t0,t1,t2);}

C_noret_decl(trf_11631)
static void C_fcall trf_11631(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11631(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11631(t0,t1,t2);}

C_noret_decl(trf_11613)
static void C_fcall trf_11613(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11613(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11613(t0,t1,t2);}

C_noret_decl(trf_11595)
static void C_fcall trf_11595(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11595(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11595(t0,t1,t2);}

C_noret_decl(trf_11571)
static void C_fcall trf_11571(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11571(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11571(t0,t1);}

C_noret_decl(trf_11565)
static void C_fcall trf_11565(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11565(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11565(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11427)
static void C_fcall trf_11427(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11427(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11427(t0,t1);}

C_noret_decl(trf_11310)
static void C_fcall trf_11310(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11310(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11310(t0,t1,t2);}

C_noret_decl(trf_11319)
static void C_fcall trf_11319(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11319(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_11319(t0,t1,t2,t3);}

C_noret_decl(trf_11152)
static void C_fcall trf_11152(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11152(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11152(t0,t1);}

C_noret_decl(trf_11168)
static void C_fcall trf_11168(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11168(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_11168(t0,t1,t2,t3);}

C_noret_decl(trf_10976)
static void C_fcall trf_10976(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10976(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10976(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_11006)
static void C_fcall trf_11006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11006(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11006(t0,t1);}

C_noret_decl(trf_10989)
static void C_fcall trf_10989(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10989(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10989(t0,t1);}

C_noret_decl(trf_10854)
static void C_fcall trf_10854(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10854(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10854(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10884)
static void C_fcall trf_10884(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10884(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10884(t0,t1);}

C_noret_decl(trf_10867)
static void C_fcall trf_10867(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10867(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10867(t0,t1);}

C_noret_decl(trf_10757)
static void C_fcall trf_10757(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10757(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_10757(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_10770)
static void C_fcall trf_10770(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10770(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10770(t0,t1);}

C_noret_decl(trf_10689)
static void C_fcall trf_10689(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10689(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10689(t0,t1,t2,t3);}

C_noret_decl(trf_10659)
static void C_fcall trf_10659(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10659(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10659(t0,t1);}

C_noret_decl(trf_10587)
static void C_fcall trf_10587(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10587(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10587(t0,t1,t2,t3);}

C_noret_decl(trf_10386)
static void C_fcall trf_10386(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10386(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10386(t0,t1);}

C_noret_decl(trf_10468)
static void C_fcall trf_10468(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10468(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10468(t0,t1);}

C_noret_decl(trf_10479)
static void C_fcall trf_10479(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10479(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10479(t0,t1,t2,t3);}

C_noret_decl(trf_10491)
static void C_fcall trf_10491(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10491(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10491(t0,t1,t2);}

C_noret_decl(trf_10412)
static void C_fcall trf_10412(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10412(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10412(t0,t1,t2);}

C_noret_decl(trf_10049)
static void C_fcall trf_10049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10049(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10049(t0,t1);}

C_noret_decl(trf_10052)
static void C_fcall trf_10052(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10052(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10052(t0,t1);}

C_noret_decl(trf_10058)
static void C_fcall trf_10058(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10058(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10058(t0,t1);}

C_noret_decl(trf_9961)
static void C_fcall trf_9961(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9961(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_9961(t0,t1,t2,t3,t4);}

C_noret_decl(trf_9853)
static void C_fcall trf_9853(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9853(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9853(t0,t1);}

C_noret_decl(trf_9858)
static void C_fcall trf_9858(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9858(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9858(t0,t1,t2,t3);}

C_noret_decl(trf_9625)
static void C_fcall trf_9625(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9625(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9625(t0,t1);}

C_noret_decl(trf_9628)
static void C_fcall trf_9628(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9628(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9628(t0,t1);}

C_noret_decl(trf_9526)
static void C_fcall trf_9526(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9526(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9526(t0,t1);}

C_noret_decl(trf_9421)
static void C_fcall trf_9421(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9421(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9421(t0,t1);}

C_noret_decl(trf_9430)
static void C_fcall trf_9430(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9430(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_9430(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_9443)
static void C_fcall trf_9443(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9443(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9443(t0,t1);}

C_noret_decl(trf_9285)
static void C_fcall trf_9285(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9285(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9285(t0,t1);}

C_noret_decl(trf_9288)
static void C_fcall trf_9288(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9288(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9288(t0,t1);}

C_noret_decl(trf_9290)
static void C_fcall trf_9290(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9290(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_9290(t0,t1,t2,t3,t4);}

C_noret_decl(trf_9218)
static void C_fcall trf_9218(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9218(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9218(t0,t1);}

C_noret_decl(trf_9221)
static void C_fcall trf_9221(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9221(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9221(t0,t1);}

C_noret_decl(trf_9224)
static void C_fcall trf_9224(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9224(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9224(t0,t1);}

C_noret_decl(trf_9082)
static void C_fcall trf_9082(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9082(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9082(t0,t1,t2,t3);}

C_noret_decl(trf_9098)
static void C_fcall trf_9098(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9098(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9098(t0,t1,t2);}

C_noret_decl(trf_8820)
static void C_fcall trf_8820(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8820(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8820(t0,t1);}

C_noret_decl(trf_8823)
static void C_fcall trf_8823(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8823(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8823(t0,t1);}

C_noret_decl(trf_8385)
static void C_fcall trf_8385(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8385(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8385(t0,t1);}

C_noret_decl(trf_8304)
static void C_fcall trf_8304(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8304(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8304(t0,t1);}

C_noret_decl(trf_8294)
static void C_fcall trf_8294(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8294(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8294(t0,t1);}

C_noret_decl(trf_8276)
static void C_fcall trf_8276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8276(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8276(t0,t1);}

C_noret_decl(trf_8265)
static void C_fcall trf_8265(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8265(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8265(t0,t1,t2);}

C_noret_decl(trf_8227)
static void C_fcall trf_8227(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8227(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8227(t0,t1);}

C_noret_decl(trf_8220)
static void C_fcall trf_8220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8220(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8220(t0,t1);}

C_noret_decl(trf_8196)
static void C_fcall trf_8196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8196(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8196(t0,t1);}

C_noret_decl(trf_8129)
static void C_fcall trf_8129(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8129(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8129(t0,t1,t2,t3);}

C_noret_decl(trf_8118)
static void C_fcall trf_8118(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8118(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8118(t0,t1,t2);}

C_noret_decl(trf_8084)
static void C_fcall trf_8084(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8084(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_8084(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_8057)
static void C_fcall trf_8057(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8057(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_8057(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_8016)
static void C_fcall trf_8016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8016(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8016(t0,t1,t2);}

C_noret_decl(trf_8022)
static void C_fcall trf_8022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8022(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8022(t0,t1,t2);}

C_noret_decl(trf_8032)
static void C_fcall trf_8032(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8032(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8032(t0,t1);}

C_noret_decl(trf_7897)
static void C_fcall trf_7897(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7897(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7897(t0,t1,t2,t3);}

C_noret_decl(trf_7910)
static void C_fcall trf_7910(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7910(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7910(t0,t1);}

C_noret_decl(trf_7858)
static void C_fcall trf_7858(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7858(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7858(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7868)
static void C_fcall trf_7868(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7868(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7868(t0,t1);}

C_noret_decl(trf_7818)
static void C_fcall trf_7818(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7818(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7818(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7828)
static void C_fcall trf_7828(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7828(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7828(t0,t1);}

C_noret_decl(trf_7742)
static void C_fcall trf_7742(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7742(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7742(t0,t1,t2,t3);}

C_noret_decl(trf_7719)
static void C_fcall trf_7719(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7719(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7719(t0,t1,t2,t3);}

C_noret_decl(trf_7665)
static void C_fcall trf_7665(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7665(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_7665(t0,t1,t2,t3,t4);}

C_noret_decl(trf_7312)
static void C_fcall trf_7312(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7312(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7312(t0,t1);}

C_noret_decl(trf_6982)
static void C_fcall trf_6982(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6982(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6982(t0,t1);}

C_noret_decl(trf_6994)
static void C_fcall trf_6994(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6994(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_6994(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_7047)
static void C_fcall trf_7047(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7047(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7047(t0,t1);}

C_noret_decl(trf_7006)
static void C_fcall trf_7006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7006(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7006(t0,t1,t2);}

C_noret_decl(trf_7019)
static void C_fcall trf_7019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7019(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7019(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(6214)){
C_save(t1);
C_rereclaim2(6214*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,1032);
lf[0]=C_h_intern(&lf[0],14,"expand-optkeys");
lf[1]=C_h_intern(&lf[1],3,"let");
lf[2]=C_h_intern(&lf[2],4,"let*");
lf[3]=C_h_intern(&lf[3],5,"null\077");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[6]=C_h_intern(&lf[6],6,"unless");
lf[7]=C_h_intern(&lf[7],10,"\003sysappend");
lf[8]=C_h_intern(&lf[8],3,"car");
lf[9]=C_h_intern(&lf[9],4,"case");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[11]=C_h_intern(&lf[11],4,"when");
lf[12]=C_h_intern(&lf[12],4,"set!");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[15]=C_h_intern(&lf[15],3,"cdr");
lf[16]=C_h_intern(&lf[16],4,"else");
lf[17]=C_h_intern(&lf[17],7,"\003sysmap");
lf[18]=C_h_intern(&lf[18],6,"append");
lf[19]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[20]=C_h_intern(&lf[20],2,"if");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[22]=C_h_intern(&lf[22],4,"cadr");
lf[23]=C_h_intern(&lf[23],4,"cddr");
lf[24]=C_h_intern(&lf[24],15,"string->keyword");
lf[25]=C_h_intern(&lf[25],14,"symbol->string");
lf[26]=C_h_intern(&lf[26],6,"gensym");
lf[27]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[28]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[29]=C_h_intern(&lf[29],10,"*messages*");
lf[30]=C_h_intern(&lf[30],11,"expand-send");
lf[31]=C_h_intern(&lf[31],7,"sprintf");
lf[32]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[33]=C_h_intern(&lf[33],15,"keyword->string");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[35]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[39]=C_h_intern(&lf[39],5,"&rest");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[41]=C_h_intern(&lf[41],14,"hash-table-ref");
lf[42]=C_h_intern(&lf[42],3,"cwd");
lf[43]=C_h_intern(&lf[43],17,"\003syspeek-c-string");
lf[44]=C_h_intern(&lf[44],5,"chdir");
lf[45]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[46]=C_h_intern(&lf[46],17,"\003sysmake-c-string");
lf[47]=C_h_intern(&lf[47],5,"shell");
lf[48]=C_decode_literal(C_heaptop,"\376B\000\000\023/tmp/grace-tempfile");
lf[49]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[50]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[51]=C_h_intern(&lf[51],5,"print");
lf[52]=C_h_intern(&lf[52],6,"system");
lf[53]=C_h_intern(&lf[53],13,"string-append");
lf[54]=C_decode_literal(C_heaptop,"\376B\000\000\003rm ");
lf[55]=C_h_intern(&lf[55],16,"close-input-port");
lf[56]=C_h_intern(&lf[56],9,"read-line");
lf[57]=C_h_intern(&lf[57],15,"open-input-file");
lf[58]=C_h_intern(&lf[58],16,"\003syslist->string");
lf[59]=C_decode_literal(C_heaptop,"\376B\000\000\003 > ");
lf[60]=C_h_intern(&lf[60],5,"first");
lf[61]=C_h_intern(&lf[61],6,"second");
lf[62]=C_h_intern(&lf[62],5,"third");
lf[63]=C_h_intern(&lf[63],5,"caddr");
lf[64]=C_h_intern(&lf[64],6,"fourth");
lf[65]=C_h_intern(&lf[65],6,"cadddr");
lf[66]=C_h_intern(&lf[66],5,"fifth");
lf[67]=C_h_intern(&lf[67],5,"sixth");
lf[68]=C_h_intern(&lf[68],7,"seventh");
lf[69]=C_h_intern(&lf[69],6,"eighth");
lf[70]=C_h_intern(&lf[70],5,"ninth");
lf[71]=C_h_intern(&lf[71],5,"tenth");
lf[72]=C_h_intern(&lf[72],3,"nth");
lf[73]=C_h_intern(&lf[73],8,"list-ref");
lf[74]=C_h_intern(&lf[74],4,"rest");
lf[75]=C_h_intern(&lf[75],4,"last");
lf[76]=C_h_intern(&lf[76],7,"butlast");
lf[77]=C_h_intern(&lf[77],4,"tail");
lf[78]=C_h_intern(&lf[78],5,"list*");
lf[79]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[80]=C_h_intern(&lf[80],9,"list-set!");
lf[81]=C_h_intern(&lf[81],8,"reverse!");
lf[82]=C_h_intern(&lf[82],9,"make-list");
lf[83]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[84]=C_h_intern(&lf[84],10,"list-index");
lf[85]=C_h_intern(&lf[85],9,"list-find");
lf[86]=C_h_intern(&lf[86],6,"every\077");
lf[112]=C_h_intern(&lf[112],5,"log10");
lf[113]=C_h_intern(&lf[113],4,"log2");
lf[114]=C_h_intern(&lf[114],7,"rescale");
lf[115]=C_h_intern(&lf[115],8,"discrete");
lf[116]=C_h_intern(&lf[116],4,"not\077");
lf[117]=C_h_intern(&lf[117],3,"int");
lf[118]=C_h_intern(&lf[118],5,"float");
lf[119]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[120]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[121]=C_h_intern(&lf[121],2,"pi");
lf[122]=C_decode_literal(C_heaptop,"\376U3.14159265358979\000");
lf[123]=C_h_intern(&lf[123],20,"most-positive-fixnum");
lf[124]=C_h_intern(&lf[124],20,"most-negative-fixnum");
lf[125]=C_h_intern(&lf[125],4,"plus");
lf[126]=C_h_intern(&lf[126],1,"+");
lf[127]=C_h_intern(&lf[127],5,"times");
lf[128]=C_h_intern(&lf[128],1,"*");
lf[129]=C_h_intern(&lf[129],5,"minus");
lf[130]=C_h_intern(&lf[130],1,"-");
lf[131]=C_h_intern(&lf[131],6,"divide");
lf[132]=C_h_intern(&lf[132],1,"/");
lf[133]=C_h_intern(&lf[133],8,"quantize");
lf[134]=C_h_intern(&lf[134],8,"decimals");
lf[135]=C_h_intern(&lf[135],5,"round");
lf[136]=C_h_intern(&lf[136],4,"expt");
lf[137]=C_decode_literal(C_heaptop,"\376U10.0\000");
lf[138]=C_h_intern(&lf[138],15,"rhythm->seconds");
lf[139]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[140]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[141]=C_h_intern(&lf[141],6,"\000tempo");
lf[142]=C_h_intern(&lf[142],5,"\000beat");
lf[143]=C_h_intern(&lf[143],12,"cents->ratio");
lf[144]=C_h_intern(&lf[144],12,"ratio->cents");
lf[146]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[147]=C_h_intern(&lf[147],3,"err");
lf[148]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[149]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[150]=C_h_intern(&lf[150],6,"interp");
lf[151]=C_decode_literal(C_heaptop,"\376B\000\000\027missing x y coordinates");
lf[152]=C_h_intern(&lf[152],8,"tendency");
lf[153]=C_h_intern(&lf[153],3,"ran");
lf[154]=C_h_intern(&lf[154],3,"fit");
lf[155]=C_h_intern(&lf[155],9,"remainder");
lf[156]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[157]=C_h_intern(&lf[157],5,"scale");
lf[158]=C_h_intern(&lf[158],6,"modulo");
lf[159]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[160]=C_h_intern(&lf[160],8,"ran-set!");
lf[161]=C_h_intern(&lf[161],7,"between");
lf[162]=C_h_intern(&lf[162],4,"pick");
lf[163]=C_h_intern(&lf[163],4,"odds");
lf[164]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[165]=C_h_intern(&lf[165],5,"\000true");
lf[166]=C_h_intern(&lf[166],6,"\000false");
lf[167]=C_h_intern(&lf[167],4,"vary");
lf[168]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[169]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[170]=C_h_intern(&lf[170],8,"shuffle!");
lf[171]=C_h_intern(&lf[171],7,"shuffle");
lf[172]=C_h_intern(&lf[172],6,"ranlow");
lf[173]=C_h_intern(&lf[173],7,"ranhigh");
lf[174]=C_h_intern(&lf[174],9,"ranmiddle");
lf[175]=C_h_intern(&lf[175],7,"ranbeta");
lf[176]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[177]=C_h_intern(&lf[177],2,"\000a");
lf[178]=C_h_intern(&lf[178],2,"\000b");
lf[179]=C_h_intern(&lf[179],6,"ranexp");
lf[180]=C_h_intern(&lf[180],8,"rangauss");
lf[181]=C_h_intern(&lf[181],9,"rancauchy");
lf[182]=C_h_intern(&lf[182],10,"ranpoisson");
lf[183]=C_h_intern(&lf[183],3,"arg");
lf[184]=C_h_intern(&lf[184],8,"rangamma");
lf[185]=C_h_intern(&lf[185],8,"ranbrown");
lf[186]=C_h_intern(&lf[186],7,"ranpink");
lf[187]=C_h_intern(&lf[187],4,"segs");
lf[188]=C_decode_literal(C_heaptop,"\376B\000\000\014Illegal base");
lf[189]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[192]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[193]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[195]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[196]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[197]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[198]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[199]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[200]=C_h_intern(&lf[200],5,"floor");
lf[201]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[202]=C_h_intern(&lf[202],4,"note");
lf[203]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[204]=C_h_intern(&lf[204],3,"key");
lf[205]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[206]=C_h_intern(&lf[206],2,"hz");
lf[207]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[208]=C_h_intern(&lf[208],2,"pc");
lf[209]=C_h_intern(&lf[209],6,"invert");
lf[210]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[211]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[212]=C_h_intern(&lf[212],9,"transpose");
lf[213]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[214]=C_h_intern(&lf[214],10,"retrograde");
lf[215]=C_h_intern(&lf[215],7,"reverse");
lf[216]=C_h_intern(&lf[216],11,"scale-order");
lf[217]=C_h_intern(&lf[217],4,"sort");
lf[218]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[220]=C_h_intern(&lf[220],8,"spectrum");
lf[222]=C_h_intern(&lf[222],13,"spectrum-time");
lf[224]=C_h_intern(&lf[224],14,"\003sysblock-set!");
lf[225]=C_h_intern(&lf[225],13,"spectrum-size");
lf[227]=C_h_intern(&lf[227],14,"spectrum-freqs");
lf[229]=C_h_intern(&lf[229],13,"spectrum-amps");
lf[230]=C_h_intern(&lf[230],13,"spectrum-copy");
lf[231]=C_h_intern(&lf[231],14,"spectrum-pairs");
lf[232]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[233]=C_h_intern(&lf[233],16,"spectrum-minfreq");
lf[234]=C_h_intern(&lf[234],16,"spectrum-maxfreq");
lf[235]=C_h_intern(&lf[235],15,"spectrum-minamp");
lf[236]=C_h_intern(&lf[236],12,"\003sysfor-each");
lf[237]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[238]=C_h_intern(&lf[238],15,"spectrum-maxamp");
lf[239]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[240]=C_h_intern(&lf[240],13,"spectrum-keys");
lf[241]=C_h_intern(&lf[241],8,"for-each");
lf[242]=C_h_intern(&lf[242],6,"\000order");
lf[243]=C_h_intern(&lf[243],7,"\000thresh");
lf[244]=C_h_intern(&lf[244],6,"\000quant");
lf[245]=C_h_intern(&lf[245],7,"\000unique");
lf[246]=C_h_intern(&lf[246],4,"\000min");
lf[247]=C_h_intern(&lf[247],4,"\000max");
lf[248]=C_h_intern(&lf[248],11,"fm-spectrum");
lf[249]=C_h_intern(&lf[249],8,"set-car!");
lf[250]=C_h_intern(&lf[250],4,"caar");
lf[251]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[252]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[253]=C_h_intern(&lf[253],13,"spectrum-add!");
lf[254]=C_h_intern(&lf[254],11,"rm-spectrum");
lf[255]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[256]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[257]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[258]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[259]=C_h_intern(&lf[259],14,"spectrum-flip!");
lf[260]=C_h_intern(&lf[260],17,"spectrum-rescale!");
lf[261]=C_h_intern(&lf[261],5,"sort!");
lf[262]=C_h_intern(&lf[262],3,"map");
lf[263]=C_h_intern(&lf[263],2,"<=");
lf[264]=C_decode_literal(C_heaptop,"\376B\000\000\037Non-numerical y can\047t be scaler");
lf[265]=C_h_intern(&lf[265],7,"number\077");
lf[266]=C_decode_literal(C_heaptop,"\376B\000\000\014Mode not 1-8");
lf[267]=C_decode_literal(C_heaptop,"\376B\000\000%Need a scaler, envelope or x y values");
lf[268]=C_decode_literal(C_heaptop,"\376B\000\000\024Not a number or pair");
lf[269]=C_h_intern(&lf[269],19,"import-spear-frames");
lf[270]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[271]=C_decode_literal(C_heaptop,"\376B\000\000\016Bad frame data");
lf[272]=C_h_intern(&lf[272],4,"read");
lf[273]=C_h_intern(&lf[273],17,"open-input-string");
lf[274]=C_decode_literal(C_heaptop,"\376B\000\000\012frame-data");
lf[275]=C_decode_literal(C_heaptop,"\376B\000\000$point-type index frequency amplitude");
lf[276]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[277]=C_decode_literal(C_heaptop,"\376B\000\000\025par-text-frame-format");
lf[278]=C_decode_literal(C_heaptop,"\376B\000\000\016Not frame data");
lf[279]=C_h_intern(&lf[279],18,"current-input-port");
lf[280]=C_h_intern(&lf[280],20,"with-input-from-file");
lf[281]=C_h_intern(&lf[281],19,"export-spear-frames");
lf[282]=C_h_intern(&lf[282],6,"format");
lf[283]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[284]=C_decode_literal(C_heaptop,"\376B\000\000\011 ~S ~S ~S");
lf[285]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[286]=C_decode_literal(C_heaptop,"\376B\000\000\005~S ~S");
lf[287]=C_decode_literal(C_heaptop,"\376B\000\000\014frame-data~%");
lf[288]=C_decode_literal(C_heaptop,"\376B\000\000\020frame-count ~S~%");
lf[289]=C_decode_literal(C_heaptop,"\376B\000\000\023partials-count ~S~%");
lf[290]=C_decode_literal(C_heaptop,"\376B\000\000&point-type index frequency amplitude~%");
lf[291]=C_decode_literal(C_heaptop,"\376B\000\000\027par-text-frame-format~%");
lf[292]=C_h_intern(&lf[292],19,"current-output-port");
lf[293]=C_h_intern(&lf[293],19,"with-output-to-file");
lf[294]=C_h_intern(&lf[294],3,"max");
lf[296]=C_h_intern(&lf[296],6,"period");
lf[305]=C_h_intern(&lf[305],7,"pattern");
lf[320]=C_h_intern(&lf[320],4,"\000nad");
lf[321]=C_h_intern(&lf[321],8,"\000periods");
lf[322]=C_h_intern(&lf[322],12,"\000depth-first");
lf[324]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[325]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[326]=C_h_intern(&lf[326],14,"\000breadth-first");
lf[327]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[328]=C_h_intern(&lf[328],7,"\000values");
lf[329]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[331]=C_h_intern(&lf[331],4,"eop\077");
lf[332]=C_h_intern(&lf[332],4,"\000eop");
lf[333]=C_h_intern(&lf[333],4,"eod\077");
lf[334]=C_h_intern(&lf[334],4,"\000eod");
lf[335]=C_h_intern(&lf[335],4,"next");
lf[339]=C_h_intern(&lf[339],5,"force");
lf[340]=C_h_intern(&lf[340],8,"promise\077");
lf[341]=C_h_intern(&lf[341],10,"make-cycle");
lf[343]=C_h_intern(&lf[343],4,"\000for");
lf[344]=C_h_intern(&lf[344],7,"\000repeat");
lf[346]=C_h_intern(&lf[346],5,"palin");
lf[348]=C_h_intern(&lf[348],15,"make-palindrome");
lf[350]=C_h_intern(&lf[350],6,"\000elide");
lf[351]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[352]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[353]=C_h_intern(&lf[353],9,"make-line");
lf[355]=C_h_intern(&lf[355],9,"make-heap");
lf[357]=C_h_intern(&lf[357],13,"make-rotation");
lf[359]=C_h_intern(&lf[359],7,"\000rotate");
lf[361]=C_h_intern(&lf[361],11,"random-item");
lf[369]=C_h_intern(&lf[369],14,"make-weighting");
lf[372]=C_h_intern(&lf[372],7,"\000weight");
lf[373]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[374]=C_h_intern(&lf[374],11,"make-markov");
lf[376]=C_h_intern(&lf[376],5,"\000past");
lf[377]=C_h_intern(&lf[377],2,"->");
lf[378]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[379]=C_h_intern(&lf[379],3,"\000->");
lf[380]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[381]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[382]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[383]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[385]=C_h_intern(&lf[385],10,"graph-node");
lf[386]=C_h_intern(&lf[386],10,"make-graph");
lf[388]=C_h_intern(&lf[388],3,"\000to");
lf[389]=C_h_intern(&lf[389],3,"\000id");
lf[390]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[391]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[392]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[393]=C_h_intern(&lf[393],14,"markov-analyze");
lf[394]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[395]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002->\376\377\016");
lf[396]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[397]=C_h_intern(&lf[397],7,"newline");
lf[398]=C_h_intern(&lf[398],7,"display");
lf[399]=C_h_intern(&lf[399],19,"\003syswrite-char/port");
lf[400]=C_h_intern(&lf[400],19,"\003sysstandard-output");
lf[401]=C_h_intern(&lf[401],3,"min");
lf[402]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[403]=C_decode_literal(C_heaptop,"\376B\000\000\003 ~a");
lf[404]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[405]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[406]=C_h_intern(&lf[406],11,"make-string");
lf[407]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[408]=C_h_intern(&lf[408],1,"<");
lf[409]=C_h_intern(&lf[409],11,"string-ci<\077");
lf[410]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[411]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[412]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[413]=C_h_intern(&lf[413],5,"\000mode");
lf[415]=C_h_intern(&lf[415],5,"token");
lf[420]=C_h_intern(&lf[420],1,"t");
lf[425]=C_h_intern(&lf[425],4,"rule");
lf[428]=C_h_intern(&lf[428],22,"hash-table-ref/default");
lf[435]=C_h_intern(&lf[435],11,"parse-error");
lf[439]=C_h_intern(&lf[439],10,"parse-unit");
lf[451]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[453]=C_h_intern(&lf[453],14,"string->symbol");
lf[454]=C_h_intern(&lf[454],6,"equal\077");
lf[455]=C_h_intern(&lf[455],3,"and");
lf[456]=C_h_intern(&lf[456],2,"or");
lf[457]=C_h_intern(&lf[457],3,"not");
lf[458]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[459]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[462]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[464]=C_h_intern(&lf[464],2,"!=");
lf[465]=C_h_intern(&lf[465],1,"=");
lf[470]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[471]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[472]=C_h_intern(&lf[472],1,"@");
lf[473]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[474]=C_h_intern(&lf[474],6,"printf");
lf[475]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[480]=C_h_intern(&lf[480],2,">=");
lf[481]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[482]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[483]=C_h_intern(&lf[483],5,"begin");
lf[484]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[485]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[486]=C_h_intern(&lf[486],1,">");
lf[487]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[489]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[493]=C_h_intern(&lf[493],17,"*sal-trace-input*");
lf[494]=C_h_intern(&lf[494],3,"sal");
lf[495]=C_h_intern(&lf[495],11,"print-error");
lf[496]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[497]=C_h_intern(&lf[497],9,"substring");
lf[498]=C_h_intern(&lf[498],2,"pp");
lf[499]=C_h_intern(&lf[499],4,"eval");
lf[500]=C_h_intern(&lf[500],7,"\000syntax");
lf[501]=C_h_intern(&lf[501],7,"\000scheme");
lf[502]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[503]=C_h_intern(&lf[503],7,"call/cc");
lf[504]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[505]=C_h_intern(&lf[505],9,"sal:print");
lf[506]=C_h_intern(&lf[506],13,"print-message");
lf[507]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[508]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[509]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[510]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[511]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[512]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[513]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[515]=C_h_intern(&lf[515],9,"sal:chdir");
lf[516]=C_h_intern(&lf[516],8,"sal:load");
lf[517]=C_h_intern(&lf[517],13,"load-sal-file");
lf[518]=C_h_intern(&lf[518],4,"load");
lf[519]=C_h_intern(&lf[519],15,"\003syssubstring=\077");
lf[520]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[521]=C_decode_literal(C_heaptop,"\376B\000\000\010Loading ");
lf[522]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[523]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[524]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[525]=C_h_intern(&lf[525],12,"file-exists\077");
lf[526]=C_h_intern(&lf[526],8,"sal:open");
lf[527]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[528]=C_h_intern(&lf[528],10,"sal:output");
lf[529]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[541]=C_h_intern(&lf[541],8,"operator");
lf[542]=C_h_intern(&lf[542],8,"bindings");
lf[543]=C_h_intern(&lf[543],10,"collectors");
lf[544]=C_h_intern(&lf[544],9,"initially");
lf[545]=C_h_intern(&lf[545],9,"end-tests");
lf[546]=C_h_intern(&lf[546],7,"looping");
lf[547]=C_h_intern(&lf[547],8,"stepping");
lf[548]=C_h_intern(&lf[548],7,"finally");
lf[549]=C_h_intern(&lf[549],9,"returning");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[557]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[558]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[559]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[560]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[561]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[563]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[564]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[565]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[566]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[567]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[569]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[571]=C_h_intern(&lf[571],3,"for");
lf[572]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[573]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[574]=C_h_intern(&lf[574],8,"downfrom");
lf[575]=C_h_intern(&lf[575],5,"above");
lf[576]=C_h_intern(&lf[576],5,"below");
lf[577]=C_h_intern(&lf[577],6,"downto");
lf[578]=C_h_intern(&lf[578],4,"from");
lf[579]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[580]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[581]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[582]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[583]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[584]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[585]=C_h_intern(&lf[585],2,"to");
lf[586]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[587]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[588]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[589]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[590]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[591]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[592]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[593]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[594]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[595]=C_h_intern(&lf[595],2,"by");
lf[596]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[597]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[598]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[599]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[601]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[602]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[604]=C_h_intern(&lf[604],6,"across");
lf[605]=C_h_intern(&lf[605],13,"vector-length");
lf[606]=C_h_intern(&lf[606],10,"vector-ref");
lf[607]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[608]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[609]=C_h_intern(&lf[609],4,"over");
lf[610]=C_h_intern(&lf[610],2,"in");
lf[611]=C_h_intern(&lf[611],5,"quote");
lf[612]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[613]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[614]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[615]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[616]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[617]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[618]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[619]=C_h_intern(&lf[619],2,"on");
lf[620]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[621]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[623]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[624]=C_h_intern(&lf[624],4,"then");
lf[625]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[626]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[627]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[628]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[630]=C_h_intern(&lf[630],4,"with");
lf[631]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[632]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[633]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[634]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[635]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[636]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[637]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[638]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[639]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[640]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[641]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[642]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[644]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[645]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[647]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[648]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[650]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[651]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[653]=C_h_intern(&lf[653],3,"sum");
lf[654]=C_h_intern(&lf[654],5,"count");
lf[655]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[656]=C_h_intern(&lf[656],8,"minimize");
lf[657]=C_h_intern(&lf[657],8,"maximize");
lf[658]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[659]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[660]=C_h_intern(&lf[660],4,"list");
lf[661]=C_h_intern(&lf[661],8,"set-cdr!");
lf[662]=C_h_intern(&lf[662],9,"last-pair");
lf[663]=C_h_intern(&lf[663],7,"collect");
lf[664]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[665]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[666]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[667]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[668]=C_h_intern(&lf[668],5,"nconc");
lf[669]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[670]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[671]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[672]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[673]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[674]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[675]=C_h_intern(&lf[675],4,"into");
lf[676]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[677]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[678]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[679]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[680]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[682]=C_h_intern(&lf[682],6,"return");
lf[684]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[685]=C_h_intern(&lf[685],5,"until");
lf[686]=C_h_intern(&lf[686],5,"while");
lf[687]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[688]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[690]=C_h_intern(&lf[690],7,"thereis");
lf[691]=C_h_intern(&lf[691],6,"always");
lf[692]=C_h_intern(&lf[692],5,"never");
lf[693]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[694]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[696]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[697]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[699]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[700]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[701]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[702]=C_h_intern(&lf[702],4,"task");
lf[703]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[705]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[706]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[707]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[708]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[709]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[711]=C_h_intern(&lf[711],2,"do");
lf[712]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[713]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[714]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[715]=C_h_intern(&lf[715],4,"iter");
lf[716]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[717]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[718]=C_h_intern(&lf[718],6,"repeat");
lf[719]=C_h_intern(&lf[719],2,"as");
lf[721]=C_h_intern(&lf[721],6,"mm:off");
lf[722]=C_h_intern(&lf[722],5,"mm:on");
lf[723]=C_h_intern(&lf[723],8,"mm:touch");
lf[724]=C_h_intern(&lf[724],7,"mm:ctrl");
lf[725]=C_h_intern(&lf[725],7,"mm:prog");
lf[726]=C_h_intern(&lf[726],8,"mm:press");
lf[727]=C_h_intern(&lf[727],7,"mm:bend");
lf[728]=C_h_intern(&lf[728],10,"mm:make-on");
lf[729]=C_h_intern(&lf[729],5,"\000time");
lf[730]=C_h_intern(&lf[730],4,"\000key");
lf[731]=C_h_intern(&lf[731],4,"\000vel");
lf[732]=C_h_intern(&lf[732],5,"\000chan");
lf[733]=C_h_intern(&lf[733],6,"mm:on\077");
lf[734]=C_h_intern(&lf[734],11,"mm:make-off");
lf[735]=C_h_intern(&lf[735],7,"mm:off\077");
lf[736]=C_h_intern(&lf[736],13,"mm:make-touch");
lf[737]=C_h_intern(&lf[737],4,"\000val");
lf[738]=C_h_intern(&lf[738],9,"mm:touch\077");
lf[739]=C_h_intern(&lf[739],12,"mm:make-ctrl");
lf[740]=C_h_intern(&lf[740],4,"\000num");
lf[741]=C_h_intern(&lf[741],8,"mm:ctrl\077");
lf[742]=C_h_intern(&lf[742],12,"mm:make-prog");
lf[743]=C_h_intern(&lf[743],8,"mm:prog\077");
lf[744]=C_h_intern(&lf[744],13,"mm:make-press");
lf[745]=C_h_intern(&lf[745],9,"mm:press\077");
lf[746]=C_h_intern(&lf[746],12,"mm:make-bend");
lf[747]=C_h_intern(&lf[747],7,"mm:free");
lf[748]=C_h_intern(&lf[748],7,"mm:copy");
lf[749]=C_h_intern(&lf[749],7,"mm:time");
lf[750]=C_h_intern(&lf[750],12,"mm:time-set!");
lf[751]=C_h_intern(&lf[751],7,"mm:chan");
lf[752]=C_h_intern(&lf[752],12,"mm:chan-set!");
lf[753]=C_h_intern(&lf[753],6,"mm:key");
lf[754]=C_h_intern(&lf[754],11,"mm:key-set!");
lf[755]=C_h_intern(&lf[755],6,"mm:vel");
lf[756]=C_h_intern(&lf[756],11,"mm:vel-set!");
lf[757]=C_h_intern(&lf[757],6,"mm:val");
lf[758]=C_h_intern(&lf[758],11,"mm:val-set!");
lf[759]=C_h_intern(&lf[759],1,"k");
lf[760]=C_h_intern(&lf[760],6,"mm:num");
lf[761]=C_h_intern(&lf[761],11,"mm:num-set!");
lf[762]=C_h_intern(&lf[762],7,"mp:note");
lf[763]=C_h_intern(&lf[763],7,"mp:midi");
lf[764]=C_h_intern(&lf[764],6,"mp:off");
lf[765]=C_h_intern(&lf[765],5,"mp:on");
lf[766]=C_h_intern(&lf[766],8,"mp:touch");
lf[767]=C_h_intern(&lf[767],7,"mp:ctrl");
lf[768]=C_h_intern(&lf[768],7,"mp:prog");
lf[769]=C_h_intern(&lf[769],8,"mp:press");
lf[770]=C_h_intern(&lf[770],7,"mp:bend");
lf[771]=C_h_intern(&lf[771],5,"mp:mm");
lf[772]=C_h_intern(&lf[772],9,"mp:inhook");
lf[773]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[774]=C_h_intern(&lf[774],27,"condition-property-accessor");
lf[775]=C_h_intern(&lf[775],3,"exn");
lf[776]=C_h_intern(&lf[776],7,"message");
lf[777]=C_h_intern(&lf[777],22,"with-exception-handler");
lf[778]=C_h_intern(&lf[778],30,"call-with-current-continuation");
lf[779]=C_h_intern(&lf[779],10,"mp:inchans");
lf[780]=C_decode_literal(C_heaptop,"\376B\000\000\031missing channel (0 to 15)");
lf[781]=C_decode_literal(C_heaptop,"\376B\000\000\025not a channel 0 to 15");
lf[782]=C_h_intern(&lf[782],10,"mp:intypes");
lf[783]=C_decode_literal(C_heaptop,"\376B\000\000(missing message type (mm:off to mm:bend)");
lf[784]=C_decode_literal(C_heaptop,"\376B\000\000$not a message type mm:off to mm:bend");
lf[785]=C_h_intern(&lf[785],9,"mp:tuning");
lf[786]=C_decode_literal(C_heaptop,"\376B\000\000\035not a tuning division 1 to 16");
lf[787]=C_h_intern(&lf[787],10,"mp:playseq");
lf[788]=C_h_intern(&lf[788],10,"mp:saveseq");
lf[789]=C_h_intern(&lf[789],10,"mp:copyseq");
lf[790]=C_h_intern(&lf[790],10,"mp:plotseq");
lf[791]=C_h_intern(&lf[791],11,"mp:clearseq");
lf[792]=C_h_intern(&lf[792],12,"mp:recordseq");
lf[793]=C_h_intern(&lf[793],9,"cs:record");
lf[794]=C_decode_literal(C_heaptop,"\376B\000\000\037value not boolean or number > 0");
lf[795]=C_h_intern(&lf[795],8,"cs:clear");
lf[796]=C_h_intern(&lf[796],4,"cs:i");
lf[797]=C_h_intern(&lf[797],4,"cs:f");
lf[798]=C_h_intern(&lf[798],8,"cs:print");
lf[799]=C_h_intern(&lf[799],6,"\000start");
lf[800]=C_h_intern(&lf[800],4,"\000end");
lf[801]=C_h_intern(&lf[801],7,"cs:play");
lf[802]=C_h_intern(&lf[802],6,"\000shift");
lf[803]=C_h_intern(&lf[803],7,"cm-logo");
lf[804]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[805]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[806]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[807]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[808]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[809]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[810]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[812]=C_h_intern(&lf[812],6,"\003sysgc");
lf[814]=C_h_intern(&lf[814],6,"sprout");
lf[815]=C_decode_literal(C_heaptop,"\376B\000\000%sprout: list contains a non-procedure");
lf[816]=C_decode_literal(C_heaptop,"\376B\000\000\027sprout: not a procedure");
lf[817]=C_h_intern(&lf[817],9,"\003syserror");
lf[818]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[819]=C_h_intern(&lf[819],3,"now");
lf[820]=C_h_intern(&lf[820],5,"pause");
lf[821]=C_h_intern(&lf[821],7,"paused\077");
lf[822]=C_h_intern(&lf[822],4,"cont");
lf[823]=C_h_intern(&lf[823],4,"stop");
lf[824]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[825]=C_h_intern(&lf[825],4,"hush");
lf[827]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\014%%stopproc%%\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[829]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[830]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[833]=C_h_intern(&lf[833],14,"return-to-host");
lf[834]=C_h_intern(&lf[834],6,"define");
lf[835]=C_decode_literal(C_heaptop,"\376B\000\000\027Illegal process formals");
lf[836]=C_h_intern(&lf[836],18,"\003sysregister-macro");
lf[837]=C_h_intern(&lf[837],14,"define-process");
lf[838]=C_h_intern(&lf[838],6,"lambda");
lf[839]=C_h_intern(&lf[839],7,"elapsed");
lf[840]=C_h_intern(&lf[840],1,"x");
lf[841]=C_h_intern(&lf[841],4,"wait");
lf[842]=C_h_intern(&lf[842],18,"current-error-port");
lf[843]=C_h_intern(&lf[843],19,"print-error-message");
lf[844]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[845]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[846]=C_decode_literal(C_heaptop,"\376B\000\000\003err");
lf[847]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[848]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[849]=C_h_intern(&lf[849],3,"run");
lf[850]=C_h_intern(&lf[850],20,"\003sysregister-macro-2");
lf[851]=C_h_intern(&lf[851],15,"hash-table-set!");
lf[852]=C_decode_literal(C_heaptop,"\376B\000\000\007cs:play");
lf[853]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007cs:play\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[854]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:print");
lf[855]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:print\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[856]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[857]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[858]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:trace");
lf[859]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:trace\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[860]=C_decode_literal(C_heaptop,"\376B\000\000\011cs:record");
lf[861]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011cs:record\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[862]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:score");
lf[863]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:score\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[864]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[865]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[866]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[867]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[868]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:intypes");
lf[869]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\012mp:intypes\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[870]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:inchans");
lf[871]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\012mp:inchans\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[872]=C_decode_literal(C_heaptop,"\376B\000\000\013mp:clearseq");
lf[873]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\013mp:clearseq\376\377\016");
lf[874]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:plotseq");
lf[875]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\012mp:plotseq\376\377\016");
lf[876]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:copyseq");
lf[877]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\012mp:copyseq\376\377\016");
lf[878]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:saveseq");
lf[879]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\012mp:saveseq\376\377\016");
lf[880]=C_decode_literal(C_heaptop,"\376B\000\000\012mp:playseq");
lf[881]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\012mp:playseq\376\377\016");
lf[882]=C_decode_literal(C_heaptop,"\376B\000\000\014mp:recordseq");
lf[883]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\014mp:recordseq\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000rec\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[884]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:tuning");
lf[885]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:tuning\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000div\376\003\000\000\002\376\377\001\000\000\000\001\376\377\016\376\377\016");
lf[886]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[887]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[888]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[889]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[890]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[891]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[892]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[893]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[894]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[895]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[896]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[897]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[898]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[899]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[900]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[901]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[902]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[903]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[904]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[905]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[906]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[907]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[908]=C_h_intern(&lf[908],5,":loop");
lf[909]=C_h_intern(&lf[909],7,"tagbody");
lf[910]=C_h_intern(&lf[910],5,"block");
lf[911]=C_h_intern(&lf[911],3,"nil");
lf[912]=C_h_intern(&lf[912],2,"go");
lf[913]=C_h_intern(&lf[913],8,"function");
lf[914]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[915]=C_h_intern(&lf[915],3,"pop");
lf[916]=C_h_intern(&lf[916],4,"cons");
lf[917]=C_h_intern(&lf[917],4,"push");
lf[918]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[919]=C_h_intern(&lf[919],4,"loop");
lf[920]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[921]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[922]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[923]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[924]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[925]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[926]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[927]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[928]=C_h_intern(&lf[928],7,"\000return");
lf[929]=C_h_intern(&lf[929],9,"\000function");
lf[930]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[931]=C_h_intern(&lf[931],8,"\000process");
lf[932]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[933]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[934]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[935]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[936]=C_h_intern(&lf[936],4,"cond");
lf[937]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[938]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[939]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[940]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[941]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[942]=C_decode_literal(C_heaptop,"\376B\000\000\004halt");
lf[943]=C_h_intern(&lf[943],5,"\000loop");
lf[944]=C_h_intern(&lf[944],4,"\000run");
lf[945]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[946]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[947]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[948]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[949]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[950]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[951]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[952]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[953]=C_h_intern(&lf[953],9,"list-tail");
lf[954]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[955]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[956]=C_h_intern(&lf[956],9,"\000bindings");
lf[957]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[958]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[959]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[960]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[961]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[962]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[963]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[964]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[965]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[966]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[967]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[968]=C_h_intern(&lf[968],10,"sal:system");
lf[969]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[970]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[971]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[972]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[973]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[974]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[975]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[976]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[977]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[978]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[979]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[980]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[981]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[982]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[983]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[984]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[985]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[986]=C_h_intern(&lf[986],7,"unquote");
lf[987]=C_h_intern(&lf[987],16,"unquote-splicing");
lf[988]=C_h_intern(&lf[988],5,"\000list");
lf[989]=C_h_intern(&lf[989],8,"\000unquote");
lf[990]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[991]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[992]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[993]=C_h_intern(&lf[993],10,"quasiquote");
lf[994]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[995]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[996]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[997]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[998]=C_h_intern(&lf[998],7,"fprintf");
lf[999]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[1000]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[1001]=C_h_intern(&lf[1001],27,"\003sysregister-record-printer");
lf[1002]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[1003]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[1004]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[1005]=C_h_intern(&lf[1005],6,"ruleid");
lf[1006]=C_h_intern(&lf[1006],9,"make-rule");
lf[1007]=C_h_intern(&lf[1007],7,"*rules*");
lf[1008]=C_h_intern(&lf[1008],7,"defrule");
lf[1009]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[1010]=C_h_intern(&lf[1010],15,"make-hash-table");
lf[1011]=C_h_intern(&lf[1011],3,"eq\077");
lf[1012]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[1013]=C_decode_literal(C_heaptop,"\376B\000\000\016#<spectrum ~S>");
lf[1014]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[1015]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[1016]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[1017]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[1018]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1019]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1020]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[1021]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[1022]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[1023]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[1024]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[1025]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[1026]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1027]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[1028]=C_h_intern(&lf[1028],4,"send");
lf[1029]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[1030]=C_h_intern(&lf[1030],19,"define-send-message");
lf[1031]=C_h_intern(&lf[1031],12,"with-optkeys");
C_register_lf2(lf,1032,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6642,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6640 */
static void C_ccall f_6642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6642,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6645,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6643 in k6640 */
static void C_ccall f_6645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6645,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6648,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6646 in k6643 in k6640 */
static void C_ccall f_6648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6648,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6651,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6651,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6653,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6942,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42223,a[2]=((C_word)li694),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 234  ##sys#register-macro");
t5=C_retrieve(lf[836]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[1031],t4);}

/* a42222 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42223(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_42223r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_42223r(t0,t1,t2,t3);}}

static void C_ccall f_42223r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 235  expand-optkeys");
t6=*((C_word*)lf[0]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6946,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 241  make-hash-table");
t3=C_retrieve(lf[1010]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[454]+1));}

/* k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6946,2,t0,t1);}
t2=C_mutate((C_word*)lf[29]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6949,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42171,a[2]=((C_word)li693),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 243  ##sys#register-macro");
t5=C_retrieve(lf[836]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[1030],t4);}

/* a42170 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42171(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_42171,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42175,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_42175(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42208,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 250  string->symbol");
t10=*((C_word*)lf[453]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_42218,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 252  symbol->string");
t9=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 254  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[1029]);}}}}

/* k42216 in a42170 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_42175(2,t3,t2);}

/* k42206 in a42170 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_42175(2,t3,t2);}

/* k42173 in a42170 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42175,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[611],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[851],lf[29],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6949,2,t0,t1);}
t2=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6951,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7242,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_42165,a[2]=((C_word)li692),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 339  ##sys#register-macro");
t5=C_retrieve(lf[836]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[1028],t4);}

/* a42164 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42165(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_42165r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_42165r(t0,t1,t2,t3);}}

static void C_ccall f_42165r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 340  expand-send");
t4=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word t82;
C_word t83;
C_word t84;
C_word t85;
C_word t86;
C_word t87;
C_word t88;
C_word t89;
C_word t90;
C_word t91;
C_word t92;
C_word t93;
C_word t94;
C_word t95;
C_word t96;
C_word ab[237],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7242,2,t0,t1);}
t2=C_mutate((C_word*)lf[42]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7244,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7255,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[47]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7340,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[60]+1,*((C_word*)lf[8]+1));
t6=C_mutate((C_word*)lf[61]+1,*((C_word*)lf[22]+1));
t7=C_mutate((C_word*)lf[62]+1,*((C_word*)lf[63]+1));
t8=C_mutate((C_word*)lf[64]+1,*((C_word*)lf[65]+1));
t9=C_mutate((C_word*)lf[66]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7366,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[67]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7376,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[68]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7386,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[69]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7396,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[70]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7406,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[71]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7420,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[72]+1,*((C_word*)lf[73]+1));
t16=C_mutate((C_word*)lf[74]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7435,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[75]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7441,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[76]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7464,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[77]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7512,a[2]=((C_word)li28),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[78]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7602,a[2]=((C_word)li29),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[80]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7642,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[81]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7652,a[2]=((C_word)li32),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[82]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7713,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[84]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7812,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[85]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7852,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[86]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7891,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[87],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7930,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[88],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8016,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[89],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8057,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[90],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8084,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[91],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8111,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[92],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8118,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[93],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8129,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[94],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8144,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[95],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8151,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[96],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8158,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[97],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8177,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[98],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8196,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[99],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8217,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[100],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8220,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[101],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8227,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[102],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8256,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[103],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8259,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[104],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8262,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[105],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8265,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate(&lf[106],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8276,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[107],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8294,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[108],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8301,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[109],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8304,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[110],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8311,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate(&lf[111],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8314,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[112]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8333,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[113]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8340,a[2]=((C_word)li69),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[114]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8347,a[2]=((C_word)li71),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[115]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8381,a[2]=((C_word)li74),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[117]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8492,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[118]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8507,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate((C_word*)lf[121]+1,lf[122]);
t59=C_set_block_item(lf[123],0,C_fix(1073741823));
t60=C_set_block_item(lf[124],0,C_fix(-1073741823));
t61=C_mutate((C_word*)lf[125]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8531,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[127]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8600,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate((C_word*)lf[129]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8669,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate((C_word*)lf[131]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8712,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[133]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8755,a[2]=((C_word)li87),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[134]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8776,a[2]=((C_word)li89),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[138]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8816,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[143]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9052,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate((C_word*)lf[144]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9067,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate(&lf[145],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9082,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate((C_word*)lf[150]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9168,a[2]=((C_word)li96),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate((C_word*)lf[152]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9214,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate((C_word*)lf[154]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9281,a[2]=((C_word)li100),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate((C_word*)lf[157]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9414,a[2]=((C_word)li102),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate((C_word*)lf[160]+1,C_retrieve2(lf[99],"tb:ran-set!"));
t76=C_mutate((C_word*)lf[153]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9522,a[2]=((C_word)li103),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate((C_word*)lf[161]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9557,a[2]=((C_word)li104),tmp=(C_word)a,a+=3,tmp));
t78=C_mutate((C_word*)lf[162]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9578,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t79=C_mutate((C_word*)lf[163]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9621,a[2]=((C_word)li106),tmp=(C_word)a,a+=3,tmp));
t80=C_mutate((C_word*)lf[167]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9849,a[2]=((C_word)li109),tmp=(C_word)a,a+=3,tmp));
t81=C_mutate((C_word*)lf[170]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9948,a[2]=((C_word)li111),tmp=(C_word)a,a+=3,tmp));
t82=C_mutate((C_word*)lf[171]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10003,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t83=C_mutate((C_word*)lf[172]+1,C_retrieve2(lf[102],"tb:ranlow"));
t84=C_mutate((C_word*)lf[173]+1,C_retrieve2(lf[103],"tb:ranhigh"));
t85=C_mutate((C_word*)lf[174]+1,C_retrieve2(lf[104],"tb:ranmiddle"));
t86=C_mutate((C_word*)lf[175]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10045,a[2]=((C_word)li113),tmp=(C_word)a,a+=3,tmp));
t87=C_mutate((C_word*)lf[179]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10273,a[2]=((C_word)li114),tmp=(C_word)a,a+=3,tmp));
t88=C_mutate((C_word*)lf[180]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10292,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t89=C_mutate((C_word*)lf[181]+1,C_retrieve2(lf[108],"tb:rancauchy"));
t90=C_mutate((C_word*)lf[182]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10333,a[2]=((C_word)li116),tmp=(C_word)a,a+=3,tmp));
t91=C_mutate((C_word*)lf[184]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10352,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp));
t92=C_mutate((C_word*)lf[185]+1,C_retrieve2(lf[111],"tb:ranbrown"));
t93=C_mutate((C_word*)lf[186]+1,C_retrieve2(lf[110],"tb:ranpink"));
t94=C_mutate((C_word*)lf[187]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10373,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t95=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10582,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  make-hash-table");
t96=C_retrieve(lf[1010]);
((C_proc3)C_retrieve_proc(t96))(3,t96,t95,*((C_word*)lf[454]+1));}

/* k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10582,2,t0,t1);}
t2=C_mutate(&lf[190],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10585,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41949,a[2]=t7,a[3]=t4,a[4]=((C_word)li691),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_41949(t9,t5,C_fix(0));}

/* do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_41949(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41949,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[1014],C_fix(-1),lf[1015],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41962,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t5=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[190],"*notes*"),lf[1016],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_42163,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  modulo");
t4=*((C_word*)lf[158]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42163,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[1017],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41972,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41983,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  modulo");
t6=*((C_word*)lf[158]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41983,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[1018]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[1019]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41995,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 375  tb:keynum->hertz");
f_8196(t4,((C_word*)t0)[4]);}

/* k41993 in k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41995,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_41999,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[1027]);
C_trace("ChickenBridge.scm: 375  tb:keynum->hertz");
f_8196(t2,t3);}

/* k41997 in k41993 in k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41999,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_42003,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[1026]);
C_trace("ChickenBridge.scm: 375  tb:keynum->hertz");
f_8196(t2,t3);}

/* k42001 in k41997 in k41993 in k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42003,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_42147,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 375  floor");
t4=*((C_word*)lf[200]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k42145 in k42001 in k41997 in k41993 in k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42147,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_42009,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li690),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_42009(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do749 in k42145 in k42001 in k41997 in k41993 in k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_42009(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42009,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_42019,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_42029,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_42029(t21,(C_word)C_i_string_equal_p(t20,lf[1025]));}
else{
t20=t19;
f_42029(t20,C_SCHEME_FALSE);}}}

/* k42027 in do749 in k42145 in k42001 in k41997 in k41993 in k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_42029(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42029,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_42019(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_42032,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[1023]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_42032(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[1024]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_42032(t7,t6);}
else{
t5=t2;
f_42032(t5,C_SCHEME_UNDEFINED);}}}}

/* k42030 in k42027 in do749 in k42145 in k42001 in k41997 in k41993 in k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_42032(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_42032,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[1020],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_42040,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  string-append");
t6=*((C_word*)lf[53]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k42038 in k42030 in k42027 in do749 in k42145 in k42001 in k41997 in k41993 in k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42040,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_42047,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t6=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[190],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k42045 in k42038 in k42030 in k42027 in do749 in k42145 in k42001 in k41997 in k41993 in k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42047,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_42050,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t4=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[190],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_42050(2,t4,C_SCHEME_UNDEFINED);}}

/* k42048 in k42045 in k42038 in k42030 in k42027 in do749 in k42145 in k42001 in k41997 in k41993 in k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42050,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_42054,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  string-append");
t4=*((C_word*)lf[53]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[1022],((C_word*)((C_word*)t0)[8])[1]);}

/* k42052 in k42048 in k42045 in k42038 in k42030 in k42027 in do749 in k42145 in k42001 in k41997 in k41993 in k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42054,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_42061,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t6=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[190],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k42059 in k42052 in k42048 in k42045 in k42038 in k42030 in k42027 in do749 in k42145 in k42001 in k41997 in k41993 in k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42061,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_42064,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t4=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[190],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_42064(2,t4,C_SCHEME_UNDEFINED);}}

/* k42062 in k42059 in k42052 in k42048 in k42045 in k42038 in k42030 in k42027 in do749 in k42145 in k42001 in k41997 in k41993 in k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_42068,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  string-append");
t4=*((C_word*)lf[53]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[1021],((C_word*)((C_word*)t0)[6])[1]);}

/* k42066 in k42062 in k42059 in k42052 in k42048 in k42045 in k42038 in k42030 in k42027 in do749 in k42145 in k42001 in k41997 in k41993 in k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_42068,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_42075,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t6=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[190],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k42073 in k42066 in k42062 in k42059 in k42052 in k42048 in k42045 in k42038 in k42030 in k42027 in do749 in k42145 in k42001 in k41997 in k41993 in k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[190],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_42019(2,t3,C_SCHEME_UNDEFINED);}}

/* k42017 in do749 in k42145 in k42001 in k41997 in k41993 in k41981 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_42019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_42009(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k41970 in k42161 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41972,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_41949(t3,((C_word*)t0)[2],t2);}

/* k41960 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41965,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[190],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k41963 in k41960 in do743 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10585,2,t0,t1);}
t2=C_mutate(&lf[191],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10587,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[194],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10689,a[2]=((C_word)li127),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[202]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10742,a[2]=((C_word)li129),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[204]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10839,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[206]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10961,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[208]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11077,a[2]=((C_word)li134),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[209]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11122,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[212]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11257,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[214]+1,*((C_word*)lf[215]+1));
t11=C_mutate((C_word*)lf[216]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11423,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[219],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11565,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[221],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11571,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[222]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11586,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[223],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11595,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[225]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11604,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[226],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11613,a[2]=((C_word)li151),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[227]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11622,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[228],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11631,a[2]=((C_word)li153),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[229]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11640,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp));
t21=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11650,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41939,a[2]=((C_word)li689),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  ##sys#register-record-printer");
t23=C_retrieve(lf[1001]);
((C_proc4)C_retrieve_proc(t23))(4,t23,t21,lf[220],t22);}

/* a41938 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41939(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41939,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41947,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t5=C_retrieve(lf[227]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k41945 in a41938 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  fprintf");
t2=C_retrieve(lf[998]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[1013],t1);}

/* k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word t82;
C_word ab[240],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11650,2,t0,t1);}
t2=C_mutate((C_word*)lf[230]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11652,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[231]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11690,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[233]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11749,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[234]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11759,a[2]=((C_word)li159),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[235]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11777,a[2]=((C_word)li161),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[238]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11808,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[240]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12056,a[2]=((C_word)li172),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[248]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13529,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[253]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13941,a[2]=((C_word)li180),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[254]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14120,a[2]=((C_word)li188),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[259]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14332,a[2]=((C_word)li190),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[260]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14389,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[269]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14902,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[281]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15028,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[295],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15224,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[297],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15236,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[298],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15245,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[299],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15263,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[300],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15281,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[301],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15308,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[302],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15317,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[303],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15335,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[304],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15380,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[306],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15395,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[307],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15404,a[2]=((C_word)li222),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[308],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15413,a[2]=((C_word)li223),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[309],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15431,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[310],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15440,a[2]=((C_word)li225),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[311],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15449,a[2]=((C_word)li226),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[312],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15467,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[313],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15476,a[2]=((C_word)li228),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[314],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15485,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[315],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15494,a[2]=((C_word)li230),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[316],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15503,a[2]=((C_word)li231),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[317],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15620,a[2]=((C_word)li232),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[318],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15629,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[319],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15684,a[2]=((C_word)li234),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[323],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15694,a[2]=((C_word)li236),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[331]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15874,a[2]=((C_word)li237),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[333]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15893,a[2]=((C_word)li238),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[335]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15912,a[2]=((C_word)li241),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[336],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16035,a[2]=((C_word)li244),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[337],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16336,a[2]=((C_word)li245),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate(&lf[330],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16345,a[2]=((C_word)li246),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate(&lf[338],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16391,a[2]=((C_word)li248),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[341]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16506,a[2]=((C_word)li250),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[342],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16761,a[2]=((C_word)li251),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate(&lf[345],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16833,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[347],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16842,a[2]=((C_word)li253),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[348]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16922,a[2]=((C_word)li255),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate(&lf[349],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17392,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[353]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17607,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[354],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17854,a[2]=((C_word)li259),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[355]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17890,a[2]=((C_word)li261),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate(&lf[356],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18153,a[2]=((C_word)li263),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[357]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18229,a[2]=((C_word)li265),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[358],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18703,a[2]=((C_word)li268),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[360],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18925,a[2]=((C_word)li269),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[362],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18934,a[2]=((C_word)li270),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[363],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18943,a[2]=((C_word)li271),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate(&lf[364],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18961,a[2]=((C_word)li272),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[365],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18979,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[366],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18997,a[2]=((C_word)li274),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate(&lf[367],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19006,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate(&lf[368],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19015,a[2]=((C_word)li276),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[369]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19098,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate(&lf[370],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19865,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[371],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19977,a[2]=((C_word)li289),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate((C_word*)lf[374]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20410,a[2]=((C_word)li294),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate(&lf[375],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20897,a[2]=((C_word)li301),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate(&lf[384],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21237,a[2]=((C_word)li302),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate((C_word*)lf[386]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21300,a[2]=((C_word)li307),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate(&lf[387],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21818,a[2]=((C_word)li309),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate((C_word*)lf[393]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21912,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate(&lf[414],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22934,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate(&lf[416],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22955,a[2]=((C_word)li334),tmp=(C_word)a,a+=3,tmp));
t78=C_mutate(&lf[417],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22973,a[2]=((C_word)li335),tmp=(C_word)a,a+=3,tmp));
t79=C_mutate(&lf[418],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22991,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp));
t80=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23001,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t81=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41925,a[2]=((C_word)li688),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-record-printer");
t82=C_retrieve(lf[1001]);
((C_proc4)C_retrieve_proc(t82))(4,t82,t80,lf[415],t81);}

/* a41924 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41925(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41925,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41933,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-type");
f_22955(t4,t2);}

/* k41931 in a41924 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41933,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41937,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-string");
f_22973(t2,((C_word*)t0)[2]);}

/* k41935 in k41931 in a41924 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[998]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[1012],((C_word*)t0)[2],t1);}

/* k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23001,2,t0,t1);}
t2=C_mutate(&lf[419],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23003,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[421],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23032,a[2]=((C_word)li338),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[422],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23044,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23052,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-hash-table");
t6=C_retrieve(lf[1010]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[1011]+1));}

/* k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23052,2,t0,t1);}
t2=C_mutate(&lf[423],t1);
t3=C_mutate(&lf[424],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23054,a[2]=((C_word)li340),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[426],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23075,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23157,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41915,a[2]=((C_word)li687),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-record-printer");
t7=C_retrieve(lf[1001]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[425],t6);}

/* a41914 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41915(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41915,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41923,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  rule-name");
f_23075(t4,t2);}

/* k41921 in a41914 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[998]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[1009],t1);}

/* k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23157,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23160,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41812,a[2]=((C_word)li686),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-macro");
t4=C_retrieve(lf[836]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[1008],t3);}

/* a41811 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41812(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_41812r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_41812r(t0,t1,t2,t3,t4);}}

static void C_ccall f_41812r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41815,a[2]=t6,a[3]=((C_word)li685),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[1005],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41875,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k41873 in a41811 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41875,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41879,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_41815(t3,t2,((C_word*)t0)[2]);}

/* k41877 in k41873 in a41811 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41879,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_41893,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_41893(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_41893(t7,(C_word)C_i_nullp(t6));}}

/* k41891 in k41877 in k41873 in a41811 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_41893(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41893,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[1006],((C_word*)t0)[6],lf[1005],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[851],lf[1007],lf[1005],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[1],((C_word*)t0)[2],t4));}

/* ppat in a41811 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_41815(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_41815,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[1003]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41835,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[1004]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[611],t2):t2));}}}

/* k41833 in ppat in a41811 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41835,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41839,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_41815(t4,t2,t3);}

/* k41837 in k41833 in ppat in a41811 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41839,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[916],((C_word*)t0)[2],t1));}

/* k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23160,2,t0,t1);}
t2=C_mutate(&lf[427],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23162,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[314],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23183,a[2]=((C_word)li343),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[429],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23186,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[430],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23198,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[431],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23204,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[432],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23214,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[433],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23272,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[434],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23304,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[436],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23325,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[437],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23343,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23353,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41798,a[2]=((C_word)li684),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-record-printer");
t14=C_retrieve(lf[1001]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[435],t13);}

/* a41797 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41798(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41798,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41806,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-error-string");
f_23325(t4,t2);}

/* k41804 in a41797 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41806,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41810,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-error-position");
f_23343(t2,((C_word*)t0)[2]);}

/* k41808 in k41804 in a41797 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[998]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[1002],((C_word*)t0)[2],t1);}

/* k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23353,2,t0,t1);}
t2=C_mutate(&lf[438],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23355,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[440],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23361,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[441],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23376,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[442],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23394,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[443],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23412,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23422,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41772,a[2]=((C_word)li683),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-record-printer");
t9=C_retrieve(lf[1001]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[439],t8);}

/* a41771 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41772(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41772,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41776,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_23376(t4,t2);}

/* k41774 in a41771 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41776,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41782,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalRuleType?");
f_24634(t2,t1);}

/* k41780 in k41774 in a41771 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41782,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41789,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41793,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  get-rule");
f_23162(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[998]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[1000],((C_word*)t0)[2]);}}

/* k41791 in k41780 in k41774 in a41771 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  rule-name");
f_23075(((C_word*)t0)[2],t1);}

/* k41787 in k41780 in k41774 in a41771 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[998]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[999],t1);}

/* k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23422,2,t0,t1);}
t2=C_mutate(&lf[444],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23424,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[446],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23440,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[448],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23472,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[449],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23484,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[450],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23494,a[2]=((C_word)li361),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[452],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23512,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[461],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23545,a[2]=((C_word)li363),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[464]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23576,a[2]=((C_word)li364),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[466],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23753,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[467],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23761,a[2]=((C_word)li369),tmp=(C_word)a,a+=3,tmp));
t12=lf[468]=C_SCHEME_FALSE;;
t13=C_mutate(&lf[469],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23865,a[2]=((C_word)li383),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[445],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24484,a[2]=((C_word)li384),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[460],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24532,a[2]=((C_word)li385),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[463],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24634,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[447],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24646,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp));
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24667,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t19=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41750,a[2]=t18,tmp=(C_word)a,a+=3,tmp);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t21=(C_word)C_a_i_cons(&a,2,C_fix(3328),t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(2816),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[456],t22);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t19,lf[997],C_fix(25856),t23,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k41748 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(25856),t1);}

/* k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24670,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41730,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[996],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k41728 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(26112),t1);}

/* k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24670,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24673,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41690,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[456],t10);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[995],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k41688 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(26368),t1);}

/* k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24673,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24676,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41580,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[128],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[455],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41586,a[2]=((C_word)li681),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41596,a[2]=((C_word)li682),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[994],C_fix(26624),t9,t10,t11);}

/* a41595 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41596(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41596,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41600,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_23472(t5,lf[988],t3);}

/* k41598 in a41595 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41600,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41603,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t2,((C_word*)t0)[2]);}

/* k41601 in k41598 in a41595 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41603,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 378  emit");
f_23512(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[660]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41621,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_23484(t3,lf[988],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k41619 in k41601 in k41598 in a41595 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41621,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41624,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k41622 in k41619 in k41601 in k41598 in a41595 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41624,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41627,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41655,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_23472(t5,lf[988],((C_word*)t0)[2]);}

/* k41653 in k41622 in k41619 in k41601 in k41598 in a41595 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41655,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[989]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[993],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_41627(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[611],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_41627(t5,t4);}}

/* k41625 in k41622 in k41619 in k41601 in k41598 in a41595 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_41627(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_41627,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41633,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_23472(t2,lf[956],((C_word*)t0)[2]);}

/* k41631 in k41625 in k41622 in k41619 in k41601 in k41598 in a41595 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41633,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[660]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a41585 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41586(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41586,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k41578 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(26624),t1);}

/* k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24676,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24679,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41480,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[455],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41488,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_23753(t10,C_fix(27648));}

/* k41486 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41488,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41490,a[2]=((C_word)li680),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(((C_word*)t0)[3],lf[992],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a41489 in k41486 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41490(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41490,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41494,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t5,t2);}

/* k41492 in a41489 in k41486 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41494,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41497,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t2,t3,C_fix(5376));}

/* k41495 in k41492 in a41489 in k41486 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41497,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41500,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_23472(t2,lf[988],((C_word*)t0)[4]);}

/* k41498 in k41495 in k41492 in a41489 in k41486 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41500,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41503,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_41503(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41532,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[990]:lf[991]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41540,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_23412(t5,t6);}}

/* k41538 in k41498 in k41495 in k41492 in a41489 in k41486 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_23304(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k41530 in k41498 in k41495 in k41492 in a41489 in k41486 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k41501 in k41498 in k41495 in k41492 in a41489 in k41486 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41503,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41506,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k41504 in k41501 in k41498 in k41495 in k41492 in a41489 in k41486 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41506,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41509,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  set-emit-info!");
f_23494(t2,lf[988],lf[989],((C_word*)t0)[2]);}

/* k41507 in k41504 in k41501 in k41498 in k41495 in k41492 in a41489 in k41486 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41509,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[986],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[987],((C_word*)t0)[2])));}

/* k41478 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(27648),t1);}

/* k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24679,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24682,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41452,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[456],t7);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[985],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k41450 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(26880),t1);}

/* k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24682,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24685,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41392,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[455],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41398,a[2]=((C_word)li678),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41416,a[2]=((C_word)li679),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[984],C_fix(27136),t8,t9,t10);}

/* a41415 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41416(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41416,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41424,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41428,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t6,t2);}

/* k41426 in a41415 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_23512(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41422 in a41415 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41424,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[73],t1));}

/* a41397 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41398(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41398,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k41390 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(27136),t1);}

/* k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24685,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24688,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41269,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[472],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[455],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41275,a[2]=((C_word)li676),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41306,a[2]=((C_word)li677),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[983],C_fix(27392),t14,t15,t16);}

/* a41305 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41306(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_41306,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41310,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t5,t2);}

/* k41308 in a41305 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41310,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_41313,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41311 in k41308 in a41305 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41313,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_41316,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k41314 in k41311 in k41308 in a41305 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41316,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41329,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k41327 in k41314 in k41311 in k41308 in a41305 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41329,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a41274 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41275(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41275,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41279,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  sixth");
t5=C_retrieve(lf[67]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k41277 in a41274 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41279,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41294,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k41292 in k41277 in a41274 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41294,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k41267 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(27392),t1);}

/* k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24688,2,t0,t1);}
t2=C_mutate(&lf[476],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24690,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24744,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41149,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[126],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[455],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[456],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41155,a[2]=((C_word)li675),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t4,lf[982],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a41154 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41155(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41155,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41171,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t4,t8,C_fix(256));}
else{
t7=t4;
f_41171(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_41171(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k41169 in a41154 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41171,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41182,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_24690(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k41180 in k41169 in a41154 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41182,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k41147 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(28416),t1);}

/* k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24744,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24747,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41010,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[126],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[455],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[455],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[456],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_41016,a[2]=((C_word)li674),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[981],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a41015 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41016(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_41016,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_41036,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_41039,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t7,t11,C_fix(256));}
else{
t10=t7;
f_41039(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_41039(2,t9,C_SCHEME_FALSE);}}

/* k41037 in a41015 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_24690(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_41036(2,t2,C_SCHEME_END_OF_LIST);}}

/* k41034 in a41015 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_41036,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k41008 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_41010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(28672),t1);}

/* k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24747,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24750,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40858,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[455],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[455],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[455],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[455],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[456],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40864,a[2]=((C_word)li673),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[980],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a40863 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40864(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40864,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40882,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t10,t7,C_fix(768));}

/* k40880 in a40863 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40882,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40891,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t2,t3,C_fix(256));}}

/* k40889 in k40880 in a40863 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k40856 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(28160),t1);}

/* k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24750,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24753,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40787,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[455],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40793,a[2]=((C_word)li671),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40811,a[2]=((C_word)li672),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[979],C_fix(27904),t6,t7,t8);}

/* a40810 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40811(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40811,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40815,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t5,t2);}

/* k40813 in a40810 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40815,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40818,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40816 in k40813 in a40810 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40818,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40834,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40832 in k40816 in k40813 in a40810 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40834,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a40792 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40793(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40793,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k40785 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(27904),t1);}

/* k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24753,2,t0,t1);}
t2=C_mutate(&lf[477],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24755,a[2]=((C_word)li390),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[478],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24776,a[2]=((C_word)li393),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24892,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40711,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[456],t21);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t5,lf[978],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k40709 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(28928),t1);}

/* k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24892,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24895,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40631,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[128],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[455],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40637,a[2]=((C_word)li670),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[977],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a40636 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40637(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40637,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40644,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 378  is-op?");
f_24755(t4,t7);}
else{
t6=t4;
f_40644(2,t6,C_SCHEME_FALSE);}}

/* k40642 in a40636 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40644,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 378  inf->pre");
f_24776(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k40629 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(29184),t1);}

/* k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24895,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24898,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40495,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[455],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[455],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[455],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[456],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40501,a[2]=((C_word)li668),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40527,a[2]=((C_word)li669),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[976],C_fix(29440),t23,t24,t25);}

/* a40526 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40527(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40527,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40535,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t5,t2);}

/* k40533 in a40526 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_23512(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a40500 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40501(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40501,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40509,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40518,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t5,t6,C_fix(512));}
else{
t5=t4;
f_40509(t5,t2);}}

/* k40516 in a40500 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_40509(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k40507 in a40500 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_40509(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k40493 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(29440),t1);}

/* k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24898,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24901,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40451,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[456],t11);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[975],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k40449 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(29696),t1);}

/* k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24901,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24904,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40341,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[128],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[455],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40347,a[2]=((C_word)li665),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40369,a[2]=((C_word)li667),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[974],C_fix(33536),t10,t11,t12);}

/* a40368 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40369(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40369,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[505]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_40380,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t8,t2);}

/* k40378 in a40368 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40380,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_40382,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li666),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_40382(t5,((C_word*)t0)[2],t1);}

/* do3744 in k40378 in a40368 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_40382(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40382,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_40411,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k40409 in do3744 in k40378 in a40368 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40411,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_40382(t7,((C_word*)t0)[2],t6);}

/* a40346 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40347(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40347,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40363,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_24690(t5,t6,C_fix(256));}

/* k40361 in a40346 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40363,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k40339 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(33536),t1);}

/* k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24904,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24907,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40266,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[128],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[455],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40272,a[2]=((C_word)li663),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40294,a[2]=((C_word)li664),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[973],C_fix(34560),t10,t11,t12);}

/* a40293 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40294(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40294,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40298,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t5,t2);}

/* k40296 in a40293 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40298,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40305,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40303 in k40296 in a40293 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40305,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[814],t1));}

/* a40271 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40272(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40272,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40288,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_24690(t5,t6,C_fix(256));}

/* k40286 in a40271 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40288,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k40264 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(34560),t1);}

/* k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24907,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24910,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40053,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[455],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[456],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[472],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[455],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40059,a[2]=((C_word)li660),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40134,a[2]=((C_word)li662),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[972],C_fix(34304),t21,t22,t23);}

/* a40133 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40134(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_40134,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40138,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40174,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t6,t2);}

/* k40172 in a40133 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_23512(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k40136 in a40133 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40138,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40154,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li661),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  expand-send");
t6=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a40153 in k40136 in a40133 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40154(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_40154r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_40154r(t0,t1,t2,t3);}}

static void C_ccall f_40154r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40162,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40166,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[31]),t2,t3);}

/* k40164 in a40153 in k40136 in a40133 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40166,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40170,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_23412(t2,((C_word*)t0)[2]);}

/* k40168 in k40164 in a40153 in k40136 in a40133 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_23304(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k40160 in a40153 in k40136 in a40133 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a40058 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40059(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40059,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40066,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40102,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_40102(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_40066(t10,t9);}}

/* k40100 in a40058 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40102,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40106,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_40066(t2,C_SCHEME_UNDEFINED);}}

/* k40104 in k40100 in a40058 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_40066(t3,t2);}

/* k40064 in a40058 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_40066(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_40066,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40077,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_23412(t4,t5);}

/* k40075 in k40064 in a40058 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k40051 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(34304),t1);}

/* k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24913,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40027,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[455],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_40033,a[2]=((C_word)li659),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[971],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a40032 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40033(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_40033,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k40025 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(33792),t1);}

/* k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24913,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24916,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39999,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[455],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_40007,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_23753(t7,C_fix(35072));}

/* k40005 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_40007,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_40011,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-emitter");
f_23761(t2,lf[516]);}

/* k40009 in k40005 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_40011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(((C_word*)t0)[4],lf[970],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39997 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(35072),t1);}

/* k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24916,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24919,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39971,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[455],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39979,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_23753(t7,C_fix(35584));}

/* k39977 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39979,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39983,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-emitter");
f_23761(t2,lf[515]);}

/* k39981 in k39977 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(((C_word*)t0)[4],lf[969],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39969 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(35584),t1);}

/* k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24919,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24922,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39943,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[455],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39951,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_23753(t7,C_fix(35328));}

/* k39949 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39951,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39955,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-emitter");
f_23761(t2,lf[968]);}

/* k39953 in k39949 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(((C_word*)t0)[4],lf[967],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39941 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(35328),t1);}

/* k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24922,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24925,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39915,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[455],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39923,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_23753(t7,C_fix(34816));}

/* k39921 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39923,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39927,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-emitter");
f_23761(t2,lf[528]);}

/* k39925 in k39921 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(((C_word*)t0)[4],lf[966],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k39913 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(34816),t1);}

/* k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24925,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24928,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39778,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[455],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[456],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[455],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[456],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[128],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[455],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39784,a[2]=((C_word)li657),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39814,a[2]=((C_word)li658),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[965],C_fix(36096),t22,t23,t24);}

/* a39813 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39814(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39814,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[964]);}

/* a39783 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39784(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39784,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39808,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_24690(t6,t7,C_fix(256));}

/* k39806 in a39783 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39808,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k39776 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(36096),t1);}

/* k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24928,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24931,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39720,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[455],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39728,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_23753(t7,C_fix(31744));}

/* k39726 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39728,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39730,a[2]=((C_word)li656),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(((C_word*)t0)[3],lf[963],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a39729 in k39726 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39730(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39730,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39734,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t5,t2);}

/* k39732 in a39729 in k39726 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39734,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39737,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39762,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_23472(t3,lf[944],((C_word*)t0)[3]);}

/* k39760 in k39732 in a39729 in k39726 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39762,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_39737(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39750,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39754,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_23412(t3,t4);}}

/* k39752 in k39760 in k39732 in a39729 in k39726 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_23304(((C_word*)t0)[2],lf[962],t1);}

/* k39748 in k39760 in k39732 in a39729 in k39726 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39735 in k39732 in a39729 in k39726 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_23512(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39718 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(31744),t1);}

/* k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24931,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24934,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39659,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[455],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39667,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_23753(t7,C_fix(31488));}

/* k39665 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39669,a[2]=((C_word)li655),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(((C_word*)t0)[3],lf[961],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a39668 in k39665 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39669(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39669,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39673,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t5,t2);}

/* k39671 in a39668 in k39665 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39673,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39676,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39704,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_23472(t3,lf[929],((C_word*)t0)[3]);}

/* k39702 in k39671 in a39668 in k39665 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39704,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_39676(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39692,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39696,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_23412(t3,t4);}}

/* k39694 in k39702 in k39671 in a39668 in k39665 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_23304(((C_word*)t0)[2],lf[960],t1);}

/* k39690 in k39702 in k39671 in a39668 in k39665 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k39674 in k39671 in a39668 in k39665 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39676,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39679,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  set-emit-info!");
f_23494(t2,lf[929],lf[928],((C_word*)t0)[3]);}

/* k39677 in k39674 in k39671 in a39668 in k39665 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_23512(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39657 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(31488),t1);}

/* k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24934,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24937,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39568,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[455],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[456],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39574,a[2]=((C_word)li652),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39609,a[2]=((C_word)li654),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[959],C_fix(30208),t10,t11,t12);}

/* a39608 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39609(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39609,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39615,a[2]=t4,a[3]=t3,a[4]=((C_word)li653),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39623,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t6,t2);}

/* k39621 in a39608 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a39614 in a39608 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39615(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_39615,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a39573 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39574(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39574,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39607,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(t4,C_fix(4608),lf[958],C_SCHEME_FALSE);}}

/* k39605 in a39573 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39607,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k39566 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(30208),t1);}

/* k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24937,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24940,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39466,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[128],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[455],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39472,a[2]=((C_word)li649),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39515,a[2]=((C_word)li651),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[957],C_fix(29952),t10,t11,t12);}

/* a39514 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39515(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39515,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39519,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_23484(t5,lf[956],C_SCHEME_TRUE,t3);}

/* k39517 in a39514 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39519,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39524,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li650),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39532,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t3,((C_word*)t0)[2]);}

/* k39530 in k39517 in a39514 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a39523 in k39517 in a39514 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39524(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_39524,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a39471 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39472(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39472,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39505,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_24690(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k39503 in a39471 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39505,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k39464 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(29952),t1);}

/* k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24943,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39380,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[456],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[455],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39386,a[2]=((C_word)li648),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[955],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a39385 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39386(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39386,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k39378 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(30720),t1);}

/* k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24946,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39100,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[128],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[455],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39106,a[2]=((C_word)li645),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39149,a[2]=((C_word)li647),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[954],C_fix(30464),t10,t11,t12);}

/* a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39149(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39149,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39153,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t5,t2);}

/* k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39153,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[483]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39161,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li646),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_39161(t8,((C_word*)t0)[2],t1);}

/* do3823 in k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_39161(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39161,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39184,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t3,t4);}}

/* k39182 in do3823 in k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39184,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_39187,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39185 in k39182 in do3823 in k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39187,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_39190,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_23376(t2,t3);}

/* k39188 in k39185 in k39182 in do3823 in k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39190,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39193,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39191 in k39188 in k39185 in k39182 in do3823 in k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39193,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_39196,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39253,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t5,((C_word*)t0)[2],C_fix(10756));}

/* k39251 in k39191 in k39188 in k39185 in k39182 in do3823 in k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39253,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_39196(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39260,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k39258 in k39251 in k39191 in k39188 in k39185 in k39182 in do3823 in k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39260,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[126],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_39196(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39270,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k39268 in k39258 in k39251 in k39191 in k39188 in k39185 in k39182 in do3823 in k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39270,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[128],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_39196(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39280,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k39278 in k39268 in k39258 in k39251 in k39191 in k39188 in k39185 in k39182 in do3823 in k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39280,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[660],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_39196(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39294,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k39292 in k39278 in k39268 in k39258 in k39251 in k39191 in k39188 in k39185 in k39182 in do3823 in k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39294,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[916],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_39196(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39304,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k39302 in k39292 in k39278 in k39268 in k39258 in k39251 in k39191 in k39188 in k39185 in k39182 in do3823 in k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39304,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_39196(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39314,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k39312 in k39302 in k39292 in k39278 in k39268 in k39258 in k39251 in k39191 in k39188 in k39185 in k39182 in do3823 in k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39314,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[401],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_39196(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39324,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k39322 in k39312 in k39302 in k39292 in k39278 in k39268 in k39258 in k39251 in k39191 in k39188 in k39185 in k39182 in do3823 in k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39324,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[294],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_39196(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_39196(t2,C_SCHEME_UNDEFINED);}}

/* k39194 in k39191 in k39188 in k39185 in k39182 in do3823 in k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_39196(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39196,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_39199,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39220,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_39220(t5,(C_word)C_eqp(t4,lf[73]));}
else{
t4=t3;
f_39220(t4,C_SCHEME_FALSE);}}

/* k39218 in k39194 in k39191 in k39188 in k39185 in k39182 in do3823 in k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_39220(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39220,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[953],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[249],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_39199(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_39199(t4,t3);}}

/* k39197 in k39194 in k39191 in k39188 in k39185 in k39182 in do3823 in k39151 in a39148 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_39199(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39199,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_39161(t7,((C_word*)t0)[2],t6);}

/* a39105 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39106(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_39106,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39139,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_24690(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k39137 in a39105 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39139,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k39098 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(30464),t1);}

/* k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24946,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24949,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38986,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[472],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[128],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[455],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38992,a[2]=((C_word)li643),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_39018,a[2]=((C_word)li644),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[952],C_fix(32000),t12,t13,t14);}

/* a39017 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39018(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_39018,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39022,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t5,t2);}

/* k39020 in a39017 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39022,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_39028,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k39026 in k39020 in a39017 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39028,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_39048,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[483],t1));}}

/* k39046 in k39026 in k39020 in a39017 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_39048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_39048,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* a38991 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38992(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38992,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_39002,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_39002(t12,t11);}
else{
t10=t8;
f_39002(t10,C_SCHEME_FALSE);}}

/* k39000 in a38991 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_39002(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_39002,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k38984 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(32000),t1);}

/* k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24949,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24952,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38727,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[472],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[472],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[455],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[455],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[455],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[456],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38733,a[2]=((C_word)li641),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38801,a[2]=((C_word)li642),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[951],C_fix(32256),t26,t27,t28);}

/* a38800 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38801(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38801,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38805,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t5,t2);}

/* k38803 in a38800 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38805,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38811,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t2,t3,C_fix(14336));}

/* k38809 in k38803 in a38800 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38811,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  emit");
f_23512(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38820,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t2,t3,C_fix(19968));}}

/* k38818 in k38809 in k38803 in a38800 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38820,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38827,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38858,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k38856 in k38818 in k38809 in k38803 in a38800 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38858,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[457],t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38850,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38848 in k38856 in k38818 in k38809 in k38803 in a38800 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38850,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[2],t1));}

/* k38825 in k38818 in k38809 in k38803 in a38800 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38827,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38831,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k38829 in k38825 in k38818 in k38809 in k38803 in a38800 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38831,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[2],t1));}

/* a38732 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38733(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38733,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38746,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_38752,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t9,t4,C_fix(14336));}

/* k38750 in a38732 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38752,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_38758,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_38758(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38787,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(t11,C_fix(4608),lf[950],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_38746(t5,t4);}}

/* k38785 in k38750 in a38732 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38758(t3,t2);}

/* k38756 in k38750 in a38732 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_38758(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38758,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38762,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t3=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k38760 in k38756 in k38750 in a38732 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38762,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38765,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_38765(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38776,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(t5,C_fix(4608),lf[949],C_SCHEME_FALSE);}}

/* k38774 in k38760 in k38756 in k38750 in a38732 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_38765(t3,t2);}

/* k38763 in k38760 in k38756 in k38750 in a38732 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_38765(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38765,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38746(t4,t3);}

/* k38744 in a38732 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_38746(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k38725 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(32256),t1);}

/* k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24952,2,t0,t1);}
t2=C_mutate(&lf[479],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24954,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25475,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38455,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[455],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[472],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[455],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[455],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[456],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[472],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[472],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[455],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[456],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[472],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[455],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[456],t58);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t4,lf[948],C_fix(33024),t59,C_retrieve2(lf[479],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k38453 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(33024),t1);}

/* k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25478,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38399,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[455],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[455],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[456],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38407,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_23753(t13,C_fix(33280));}

/* k38405 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(((C_word*)t0)[3],lf[947],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k38397 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(33280),t1);}

/* k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25478,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26061,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38227,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[456],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[472],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[128],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[128],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[126],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[472],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[455],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38233,a[2]=((C_word)li635),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38279,a[2]=((C_word)li640),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[946],C_fix(32512),t25,t26,t27);}

/* a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38279(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_38279,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25484,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t7,t2);}

/* k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25484,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25502,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26020,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t17,t18,C_fix(14864));}

/* k26018 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26020,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26024,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_23484(t2,lf[943],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26027,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26054,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_23472(t3,lf[931],((C_word*)((C_word*)t0)[6])[1]);}}

/* k26052 in k26018 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26054,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_26027(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26042,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26046,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_23412(t3,t4);}}

/* k26044 in k26052 in k26018 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_23304(((C_word*)t0)[2],lf[945],t1);}

/* k26040 in k26052 in k26018 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26025 in k26018 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26027,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26031,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_23484(t2,lf[944],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k26029 in k26025 in k26018 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_25502(t4,t3);}

/* k26022 in k26018 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25502(t3,t2);}

/* k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25502(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25502,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25509,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26009,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26013,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_25509(t5,C_SCHEME_UNDEFINED);}}

/* k26011 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k26007 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25509(t3,t2);}

/* k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25509(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25509,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25512,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25884,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li639),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_25884(t7,t2,t3);}

/* do3933 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25884(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25884,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25894,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25905,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t4,t5);}}

/* k25903 in do3933 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25905,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25907,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li638),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_25907(t5,((C_word*)t0)[2],t1);}

/* do3936 in k25903 in do3933 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25907(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25907,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25921,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 378  append");
t9=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k25919 in do3936 in k25903 in do3933 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25921,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25924,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25974,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 378  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_25924(t4,C_SCHEME_UNDEFINED);}}

/* k25972 in k25919 in do3936 in k25903 in do3933 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25924(t3,t2);}

/* k25922 in k25919 in do3936 in k25903 in do3933 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25924(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25924,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25927,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25959,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 378  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_25927(t3,C_SCHEME_UNDEFINED);}}

/* k25957 in k25922 in k25919 in do3936 in k25903 in do3933 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25927(t3,t2);}

/* k25925 in k25922 in k25919 in do3936 in k25903 in do3933 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25927(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25927,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25930,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25940,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k25938 in k25925 in k25922 in k25919 in do3936 in k25903 in do3933 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25940,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25944,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25952,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_25930(t2,C_SCHEME_UNDEFINED);}}

/* k25950 in k25938 in k25925 in k25922 in k25919 in do3936 in k25903 in do3933 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25952,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k25942 in k25938 in k25925 in k25922 in k25919 in do3936 in k25903 in do3933 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25930(t3,t2);}

/* k25928 in k25925 in k25922 in k25919 in do3936 in k25903 in do3933 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25930(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25907(t3,((C_word*)t0)[2],t2);}

/* k25892 in do3933 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_25884(t3,((C_word*)t0)[2],t2);}

/* k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25512,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25518,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=t3,tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25848,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t7,a[5]=t3,a[6]=((C_word)li637),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_25848(t9,t4,t5);}

/* do3948 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25848(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25848,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25859,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25874,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k25872 in do3948 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25874,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k25857 in do3948 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_25848(t4,((C_word*)t0)[2],t3);}

/* k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25522,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[12])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25522,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25525,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_pairp(t4))){
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25725,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t6,a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[5],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[942]);}
else{
t5=t3;
f_25525(t5,C_SCHEME_UNDEFINED);}}

/* k25723 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25725,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25729,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_list(&a,2,t1,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[9])[1],t4);}

/* k25727 in k25723 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25729,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25733,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,((C_word*)((C_word*)t0)[9])[1],t4);}

/* k25731 in k25727 in k25723 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25733,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25736,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25776,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t6,a[5]=((C_word*)t0)[6],a[6]=((C_word)li636),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_25776(t8,t3,t4);}

/* do3955 in k25731 in k25727 in k25723 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25776(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25776,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25786,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t3,t4);}}

/* k25784 in do3955 in k25731 in k25727 in k25723 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25786,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25789,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k25787 in k25784 in do3955 in k25731 in k25727 in k25723 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25789,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25792,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25810,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t5,t6,C_fix(20224));}

/* k25808 in k25787 in k25784 in do3955 in k25731 in k25727 in k25723 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25810,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[457],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_25792(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_25792(t2,C_SCHEME_UNDEFINED);}}

/* k25790 in k25787 in k25784 in do3955 in k25731 in k25727 in k25723 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25792(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25792,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25796,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 378  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k25794 in k25790 in k25787 in k25784 in do3955 in k25731 in k25727 in k25723 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_25776(t4,((C_word*)t0)[2],t3);}

/* k25734 in k25731 in k25727 in k25723 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25736,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25739,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_25739(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[456],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_25739(t6,t5);}}

/* k25737 in k25734 in k25731 in k25727 in k25723 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25739(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25739,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],C_SCHEME_TRUE);
t3=(C_word)C_a_i_cons(&a,2,lf[483],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[3])[1],t2,t3);
t5=(C_word)C_a_i_list(&a,1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[2];
f_25525(t7,t6);}

/* k25523 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25525(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25525,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25529,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k25527 in k25523 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25529,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25532,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[8])[1]))){
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=t3;
f_25532(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[456],((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=t3;
f_25532(t7,t6);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t5=t3;
f_25532(t5,t4);}}

/* k25530 in k25527 in k25523 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25532(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25532,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25535,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25685,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k25683 in k25530 in k25527 in k25523 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25685,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25689,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25693,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_25535(t3,t2);}}

/* k25691 in k25683 in k25530 in k25527 in k25523 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_23512(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k25687 in k25683 in k25530 in k25527 in k25523 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25535(t3,t2);}

/* k25533 in k25530 in k25527 in k25523 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25535(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25535,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25563,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[941]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[711],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k25561 in k25533 in k25530 in k25527 in k25523 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25563,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25566,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[940]);}

/* k25564 in k25561 in k25533 in k25530 in k25527 in k25523 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25569,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[939]);}

/* k25567 in k25564 in k25561 in k25533 in k25530 in k25527 in k25523 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25569,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25572,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[938]);}

/* k25570 in k25567 in k25564 in k25561 in k25533 in k25530 in k25527 in k25523 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25572,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25575,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[937]);}

/* k25573 in k25570 in k25567 in k25564 in k25561 in k25533 in k25530 in k25527 in k25523 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25575,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[838],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[839],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[838],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[841],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,1,lf[842]);
t14=(C_word)C_a_i_list(&a,4,lf[843],((C_word*)t0)[7],t13,lf[935]);
t15=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[838],t12,t14,t15);
t17=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t18=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25634,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t16,a[8]=t17,tmp=(C_word)a,a+=9,tmp);
t19=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t20=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t20+1)))(4,t20,t18,((C_word*)((C_word*)t0)[2])[1],t19);}

/* k25632 in k25573 in k25570 in k25567 in k25564 in k25561 in k25533 in k25530 in k25527 in k25523 in k25520 in k25516 in k25510 in k25507 in k25500 in k25482 in a38278 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25634,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[936],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[838],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[777],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[838],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[778],t6);
t8=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[838],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a38232 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38233(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38233,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38249,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t11=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k38247 in a38232 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38249,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_38252,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  sixth");
t3=C_retrieve(lf[67]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k38250 in k38247 in a38232 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38252,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38255,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_38255(t7,t6);}
else{
t5=t4;
f_38255(t5,C_SCHEME_UNDEFINED);}}

/* k38253 in k38250 in k38247 in a38232 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_38255(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38255,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_38258,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_38258(t5,t4);}
else{
t3=t2;
f_38258(t3,C_SCHEME_UNDEFINED);}}

/* k38256 in k38253 in k38250 in k38247 in a38232 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_38258(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38258,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_38269,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_23412(t3,((C_word*)t0)[8]);}

/* k38267 in k38256 in k38253 in k38250 in k38247 in a38232 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k38225 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(32512),t1);}

/* k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26061,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26064,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38082,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[455],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[128],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[455],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[456],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[455],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_38088,a[2]=((C_word)li634),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[934],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a38087 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38088(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_38088,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_38101,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_38101(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_38127,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_24690(t12,t13,C_fix(256));}}

/* k38125 in a38087 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_38127,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_38101(t4,t3);}

/* k38099 in a38087 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_38101(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_38101,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k38080 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_38082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(37632),t1);}

/* k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26067,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37625,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[128],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[455],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[455],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[455],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[456],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[455],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37631,a[2]=((C_word)li630),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37670,a[2]=((C_word)li633),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[933],C_fix(36352),t23,t24,t25);}

/* a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37670(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37670,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37674,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t6,t2);}

/* k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37674,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[483]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37683,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37686,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t7,t2,C_fix(24576));}

/* k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37686,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37695,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li631),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_37695(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37744,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t2,t3);}}

/* k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37744,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37747,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37747,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37750,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37750,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37962,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37962,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_37759,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_37759(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37900,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 378  symbol->string");
t15=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k37898 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37900,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37909,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37934,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 378  substring");
t6=*((C_word*)lf[497]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_37909(t4,C_SCHEME_FALSE);}}

/* k37932 in k37898 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_37909(t2,(C_word)C_i_string_equal_p(t1,lf[932]));}

/* k37907 in k37898 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_37909(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37909,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37916,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37920,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 378  substring");
t5=*((C_word*)lf[497]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_37759(t2,C_SCHEME_UNDEFINED);}}

/* k37918 in k37907 in k37898 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string->symbol");
t2=*((C_word*)lf[453]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k37914 in k37907 in k37898 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_37759(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_37759(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37759,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37762,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37837,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t3,((C_word*)t0)[2],C_fix(24064));}

/* k37835 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37837,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37841,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_23484(t2,lf[929],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37878,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k37876 in k37835 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37878,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37882,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_23484(t2,lf[931],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_37762(t2,C_SCHEME_UNDEFINED);}}

/* k37880 in k37876 in k37835 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37882,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37886,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k37884 in k37880 in k37876 in k37835 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37886,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[834],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[930]);
t6=((C_word*)t0)[2];
f_37762(t6,t5);}

/* k37839 in k37835 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37841,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37845,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k37843 in k37839 in k37835 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37845,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37848,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37872,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_23472(t4,lf[929],((C_word*)((C_word*)t0)[2])[1]);}

/* k37870 in k37843 in k37839 in k37835 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37872,2,t0,t1);}
t2=(C_word)C_eqp(lf[928],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[682]);
t4=(C_word)C_a_i_list(&a,3,lf[838],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[778],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_37848(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_37848(t3,C_SCHEME_UNDEFINED);}}

/* k37846 in k37843 in k37839 in k37835 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_37848(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37848,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[834],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[927]);
t5=((C_word*)t0)[2];
f_37762(t5,t4);}

/* k37760 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_37762(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37762,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37765,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37776,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37834,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k37832 in k37760 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string-append");
t2=*((C_word*)lf[53]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[926]);}

/* k37774 in k37760 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37776,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37778,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li632),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_37778(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do4042 in k37774 in k37760 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_37778(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37778,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37793,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  string-append");
t6=*((C_word*)lf[53]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[924]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37797,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37826,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 378  symbol->string");
t8=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k37824 in do4042 in k37774 in k37760 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string-append");
t2=*((C_word*)lf[53]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k37795 in do4042 in k37774 in k37760 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37797,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37800,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_37800(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37814,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  string-append");
t6=*((C_word*)lf[53]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[925]);}}

/* k37812 in k37795 in do4042 in k37774 in k37760 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37800(t3,t2);}

/* k37798 in k37795 in do4042 in k37774 in k37760 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_37800(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_37778(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k37791 in do4042 in k37774 in k37760 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37793,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[506],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k37763 in k37760 in k37757 in k37960 in k37748 in k37745 in k37742 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37765,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_37683(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do4016 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_37695(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37695,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37705,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k37703 in do4016 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37705,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37711,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  sprintf");
t4=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[923],t2);}

/* k37709 in k37703 in do4016 in k37684 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37711,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[834],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[505],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_37695(t9,((C_word*)t0)[2],t8);}

/* k37681 in k37672 in a37669 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a37630 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37631(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37631,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37642,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37648,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t9,t7,C_fix(24576));}

/* k37646 in a37630 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37648,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37664,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_24690(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_37642(t2,C_SCHEME_UNDEFINED);}}

/* k37662 in k37646 in a37630 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37664,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37642(t5,t4);}

/* k37640 in a37630 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_37642(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k37623 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(36352),t1);}

/* k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26067,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26070,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37549,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[456],t19);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[922],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k37547 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(36608),t1);}

/* k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26070,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26073,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37505,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[126],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37511,a[2]=((C_word)li628),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37525,a[2]=((C_word)li629),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_23054(t3,lf[921],C_fix(36864),t5,t6,t7);}

/* a37524 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37525(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37525,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37533,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37537,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t6,t2);}

/* k37535 in a37524 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_23512(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37531 in a37524 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37533,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[483],t1));}

/* a37510 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37511(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37511,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37519,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_23412(t4,t5);}

/* k37517 in a37510 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k37503 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[423],"*rules*"),C_fix(36864),t1);}

/* k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26073,2,t0,t1);}
t2=lf[490]=C_SCHEME_FALSE;;
t3=lf[491]=C_SCHEME_FALSE;;
t4=lf[492]=C_SCHEME_FALSE;;
t5=C_set_block_item(lf[493],0,C_SCHEME_FALSE);
t6=C_mutate((C_word*)lf[494]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26080,a[2]=((C_word)li400),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[505]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26257,a[2]=((C_word)li404),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[515]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26410,a[2]=((C_word)li405),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[516]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26419,a[2]=((C_word)li406),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[526]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26473,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[528]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26479,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26498,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37497,a[2]=((C_word)li627),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro-2");
t14=C_retrieve(lf[850]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[919],t13);}

/* a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37497(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37497,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29851,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[920]);}

/* k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29851,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29854,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-iteration");
f_29833(t2,lf[919],((C_word*)t0)[2],C_retrieve2(lf[720],"*loop-operators*"));}

/* k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29854,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[682],C_retrieve2(lf[720],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29861,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30006,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30020,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  loop-returning");
t11=C_retrieve2(lf[539],"loop-returning");
f_26605(3,t11,t10,t1);}

/* k30018 in k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30020,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_30006(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30016,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  loop-returning");
t3=C_retrieve2(lf[539],"loop-returning");
f_26605(3,t3,t2,((C_word*)t0)[2]);}}

/* k30014 in k30018 in k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_30006(t2,(C_word)C_i_car(t1));}

/* k30004 in k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_30006(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k29859 in k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29861,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29865,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  loop-end-tests");
t4=C_retrieve2(lf[534],"loop-end-tests");
f_26557(3,t4,t3,((C_word*)t0)[2]);}

/* k29863 in k29859 in k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29865,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29868,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_29868(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[456],t1));
t6=(C_word)C_a_i_list(&a,4,lf[20],t5,lf[918],C_SCHEME_FALSE);
t7=t2;
f_29868(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k29866 in k29863 in k29859 in k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29868(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29868,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29879,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  loop-bindings");
t4=C_retrieve2(lf[531],"loop-bindings");
f_26521(3,t4,t3,((C_word*)t0)[2]);}

/* k29877 in k29866 in k29863 in k29859 in k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29879,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29883,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29887,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  loop-initially");
t4=C_retrieve2(lf[533],"loop-initially");
f_26545(3,t4,t3,((C_word*)t0)[3]);}

/* k29885 in k29877 in k29866 in k29863 in k29859 in k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29887,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[682]);
t3=(C_word)C_a_i_list(&a,1,lf[912]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29951,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29955,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29959,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping");
t7=C_retrieve2(lf[535],"loop-looping");
f_26569(3,t7,t6,((C_word*)t0)[3]);}

/* k29957 in k29885 in k29877 in k29866 in k29863 in k29859 in k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29959,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29963,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29967,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  loop-stepping");
t4=C_retrieve2(lf[537],"loop-stepping");
f_26581(3,t4,t3,((C_word*)t0)[2]);}

/* k29965 in k29957 in k29885 in k29877 in k29866 in k29863 in k29859 in k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29967,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 379  ##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k29961 in k29957 in k29885 in k29877 in k29866 in k29863 in k29859 in k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k29953 in k29885 in k29877 in k29866 in k29863 in k29859 in k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k29949 in k29885 in k29877 in k29866 in k29863 in k29859 in k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29951,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[838],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[778],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29919,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29923,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  loop-finally");
t9=C_retrieve2(lf[538],"loop-finally");
f_26593(3,t9,t8,((C_word*)t0)[2]);}

/* k29921 in k29949 in k29885 in k29877 in k29866 in k29863 in k29859 in k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29923,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k29917 in k29949 in k29885 in k29877 in k29866 in k29863 in k29859 in k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29919,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[838],t3);
t5=(C_word)C_a_i_list(&a,2,lf[778],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 379  ##sys#append");
t7=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k29881 in k29877 in k29866 in k29863 in k29859 in k29852 in k29849 in a37496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29883(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29883,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26498,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26501,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37483,a[2]=((C_word)li626),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro");
t4=C_retrieve(lf[836]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[917],t3);}

/* a37482 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37483(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37483,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[916],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[483],t5,t3));}

/* k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26501,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26504,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37454,a[2]=((C_word)li625),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro");
t4=C_retrieve(lf[836]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[915],t3);}

/* a37453 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37454(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37454,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37458,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[914]);}

/* k37456 in a37453 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37458,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[1],t4,t6,t1));}

/* k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26504,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26507,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37451,a[2]=((C_word)li624),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro");
t4=C_retrieve(lf[836]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[913],t3);}

/* a37450 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37451(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37451,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26507,2,t0,t1);}
t2=C_mutate(&lf[530],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26515,a[2]=((C_word)li409),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[531],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26521,a[2]=((C_word)li410),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[532],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26533,a[2]=((C_word)li411),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[533],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26545,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[534],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26557,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[535],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26569,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[536],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26575,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[537],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26581,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[538],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26593,a[2]=((C_word)li417),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[539],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26605,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[540],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26617,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[550],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26768,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[551],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26839,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[552],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26845,a[2]=((C_word)li425),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[553],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26851,a[2]=((C_word)li426),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[554],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26857,a[2]=((C_word)li430),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[562],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27017,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[570],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27099,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[600],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27481,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[603],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27528,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[622],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27879,a[2]=((C_word)li440),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[629],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28021,a[2]=((C_word)li442),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[643],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28214,a[2]=((C_word)li444),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[646],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28281,a[2]=((C_word)li445),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[649],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28319,a[2]=((C_word)li446),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[652],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28478,a[2]=((C_word)li452),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[681],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29024,a[2]=((C_word)li453),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[683],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29030,a[2]=((C_word)li454),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[689],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29096,a[2]=((C_word)li455),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[695],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29187,a[2]=((C_word)li456),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[698],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29288,a[2]=((C_word)li460),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[704],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29419,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[710],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29833,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[630],C_retrieve2(lf[629],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[544],C_retrieve2(lf[649],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[718],C_retrieve2(lf[600],"parse-repeat"),lf[715]);
t38=(C_word)C_a_i_list(&a,2,lf[578],C_retrieve2(lf[570],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[574],C_retrieve2(lf[570],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[576],C_retrieve2(lf[570],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[585],C_retrieve2(lf[570],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[575],C_retrieve2(lf[570],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[577],C_retrieve2(lf[570],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[610],C_retrieve2(lf[603],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[619],C_retrieve2(lf[603],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[604],C_retrieve2(lf[603],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[465],C_retrieve2(lf[622],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[609],C_retrieve2(lf[603],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[571],C_retrieve2(lf[562],"parse-for"),lf[715],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[719],C_retrieve2(lf[562],"parse-for"),lf[715]);
t51=(C_word)C_a_i_list(&a,3,lf[711],C_retrieve2(lf[643],"parse-do"),lf[702]);
t52=(C_word)C_a_i_list(&a,3,lf[663],C_retrieve2(lf[652],"parse-accumulation"),lf[702]);
t53=(C_word)C_a_i_list(&a,3,lf[18],C_retrieve2(lf[652],"parse-accumulation"),lf[702]);
t54=(C_word)C_a_i_list(&a,3,lf[668],C_retrieve2(lf[652],"parse-accumulation"),lf[702]);
t55=(C_word)C_a_i_list(&a,3,lf[653],C_retrieve2(lf[652],"parse-accumulation"),lf[702]);
t56=(C_word)C_a_i_list(&a,3,lf[654],C_retrieve2(lf[652],"parse-accumulation"),lf[702]);
t57=(C_word)C_a_i_list(&a,3,lf[656],C_retrieve2(lf[652],"parse-accumulation"),lf[702]);
t58=(C_word)C_a_i_list(&a,3,lf[657],C_retrieve2(lf[652],"parse-accumulation"),lf[702]);
t59=(C_word)C_a_i_list(&a,4,lf[690],C_retrieve2(lf[689],"parse-thereis"),lf[702],C_retrieve2(lf[681],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[691],C_retrieve2(lf[689],"parse-thereis"),lf[702],C_retrieve2(lf[681],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[692],C_retrieve2(lf[689],"parse-thereis"),lf[702],C_retrieve2(lf[681],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[682],C_retrieve2(lf[695],"parse-return"),lf[702],C_retrieve2(lf[681],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[686],C_retrieve2(lf[683],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[685],C_retrieve2(lf[683],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[11],C_retrieve2(lf[704],"parse-conditional"),lf[702]);
t66=(C_word)C_a_i_list(&a,3,lf[6],C_retrieve2(lf[704],"parse-conditional"),lf[702]);
t67=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[704],"parse-conditional"),lf[702]);
t68=(C_word)C_a_i_list(&a,3,lf[548],C_retrieve2(lf[646],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[720],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30027,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37309,a[2]=((C_word)li623),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro-2");
t73=C_retrieve(lf[850]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[715],t72);}

/* a37308 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37309(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37309,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30033,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-iteration");
f_29833(t3,lf[715],t2,C_retrieve2(lf[720],"*loop-operators*"));}

/* k30031 in a37308 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30033,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30036,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[682],C_retrieve2(lf[720],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30165,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  loop-returning");
t6=C_retrieve2(lf[539],"loop-returning");
f_26605(3,t6,t5,t1);}

/* k30163 in k30031 in a37308 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30165,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k30034 in k30031 in a37308 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30036,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30047,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-bindings");
t3=C_retrieve2(lf[531],"loop-bindings");
f_26521(3,t3,t2,((C_word*)t0)[2]);}

/* k30045 in k30034 in k30031 in a37308 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30047,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30051,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30055,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-initially");
t4=C_retrieve2(lf[533],"loop-initially");
f_26545(3,t4,t3,((C_word*)t0)[2]);}

/* k30053 in k30045 in k30034 in k30031 in a37308 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30055,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30075,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30079,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-end-tests");
t4=C_retrieve2(lf[534],"loop-end-tests");
f_26557(3,t4,t3,((C_word*)t0)[2]);}

/* k30077 in k30053 in k30045 in k30034 in k30031 in a37308 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30079,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30082,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[456],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[912],lf[420]);
t6=(C_word)C_a_i_list(&a,3,lf[20],t4,t5);
t7=t2;
f_30082(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_30082(t3,C_SCHEME_END_OF_LIST);}}

/* k30080 in k30077 in k30053 in k30045 in k30034 in k30031 in a37308 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_30082(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30082,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30086,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30090,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping");
t4=C_retrieve2(lf[535],"loop-looping");
f_26569(3,t4,t3,((C_word*)t0)[2]);}

/* k30088 in k30080 in k30077 in k30053 in k30045 in k30034 in k30031 in a37308 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30090,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30094,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30098,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-stepping");
t4=C_retrieve2(lf[537],"loop-stepping");
f_26581(3,t4,t3,((C_word*)t0)[2]);}

/* k30096 in k30088 in k30080 in k30077 in k30053 in k30045 in k30034 in k30031 in a37308 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30098,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[912],lf[908]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30114,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30118,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  loop-finally");
t5=C_retrieve2(lf[538],"loop-finally");
f_26593(3,t5,t4,((C_word*)t0)[2]);}

/* k30116 in k30096 in k30088 in k30080 in k30077 in k30053 in k30045 in k30034 in k30031 in a37308 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30118,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k30112 in k30096 in k30088 in k30080 in k30077 in k30053 in k30045 in k30034 in k30031 in a37308 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30114,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[420],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k30092 in k30088 in k30080 in k30077 in k30053 in k30045 in k30034 in k30031 in a37308 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30084 in k30080 in k30077 in k30053 in k30045 in k30034 in k30031 in a37308 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k30073 in k30053 in k30045 in k30034 in k30031 in a37308 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30075,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[908],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[909],t2);
t4=(C_word)C_a_i_list(&a,3,lf[910],lf[911],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k30049 in k30045 in k30034 in k30031 in a37308 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30051,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word ab[144],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30027,2,t0,t1);}
t2=C_set_block_item(lf[721],0,C_fix(8));
t3=C_set_block_item(lf[722],0,C_fix(9));
t4=C_set_block_item(lf[723],0,C_fix(10));
t5=C_set_block_item(lf[724],0,C_fix(11));
t6=C_set_block_item(lf[725],0,C_fix(12));
t7=C_set_block_item(lf[726],0,C_fix(13));
t8=C_set_block_item(lf[727],0,C_fix(14));
t9=C_mutate((C_word*)lf[728]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30178,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[733]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30907,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[734]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30926,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[735]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31377,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[736]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31396,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[738]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32125,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[739]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32144,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[741]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32873,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[742]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32892,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[743]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33343,a[2]=((C_word)li490),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[744]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33362,a[2]=((C_word)li492),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[745]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33813,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[746]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33832,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[747]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34302,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[748]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34320,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[749]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34335,a[2]=((C_word)li502),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[750]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34350,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[751]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34369,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[752]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34384,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[753]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34403,a[2]=((C_word)li510),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[754]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34422,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[755]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34445,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[756]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34464,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[757]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34487,a[2]=((C_word)li519),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[758]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34534,a[2]=((C_word)li522),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[760]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34589,a[2]=((C_word)li524),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[761]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34608,a[2]=((C_word)li526),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[762]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34631,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[763]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34659,a[2]=((C_word)li530),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[764]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34687,a[2]=((C_word)li532),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[765]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34715,a[2]=((C_word)li534),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[766]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34743,a[2]=((C_word)li536),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[767]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34771,a[2]=((C_word)li538),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[768]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34799,a[2]=((C_word)li540),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[769]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34827,a[2]=((C_word)li542),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[770]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34855,a[2]=((C_word)li544),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[771]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34883,a[2]=((C_word)li546),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[772]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34898,a[2]=((C_word)li553),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[779]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34955,a[2]=((C_word)li556),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[782]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35066,a[2]=((C_word)li559),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[785]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35181,a[2]=((C_word)li561),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[787]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35220,a[2]=((C_word)li563),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[788]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35231,a[2]=((C_word)li565),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[789]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35242,a[2]=((C_word)li567),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[790]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35253,a[2]=((C_word)li569),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[791]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35264,a[2]=((C_word)li571),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[792]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35275,a[2]=((C_word)li573),tmp=(C_word)a,a+=3,tmp));
t56=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35296,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t57=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t57))(5,t57,t56,C_retrieve(lf[29]),lf[906],lf[907]);}

/* k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35296,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35299,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[904],lf[905]);}

/* k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35299,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35302,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[902],lf[903]);}

/* k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35302,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35305,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[900],lf[901]);}

/* k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35305,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35308,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[898],lf[899]);}

/* k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35308,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35311,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[896],lf[897]);}

/* k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35311,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35314,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[894],lf[895]);}

/* k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35314,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35317,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[892],lf[893]);}

/* k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35317,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35320,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[890],lf[891]);}

/* k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35320,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35323,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[888],lf[889]);}

/* k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35323,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35326,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[886],lf[887]);}

/* k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35326,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35329,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[884],lf[885]);}

/* k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35329,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35332,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[882],lf[883]);}

/* k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35332,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35335,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[880],lf[881]);}

/* k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35338,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[878],lf[879]);}

/* k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35338,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35341,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[876],lf[877]);}

/* k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35341,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35344,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[874],lf[875]);}

/* k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35344,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35347,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[872],lf[873]);}

/* k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35347,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35350,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[870],lf[871]);}

/* k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35350,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35353,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[868],lf[869]);}

/* k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35353,2,t0,t1);}
t2=C_mutate((C_word*)lf[793]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35355,a[2]=((C_word)li577),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[795]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35398,a[2]=((C_word)li579),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[796]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35406,a[2]=((C_word)li581),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[797]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35463,a[2]=((C_word)li583),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[798]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35520,a[2]=((C_word)li585),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[801]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35758,a[2]=((C_word)li587),tmp=(C_word)a,a+=3,tmp));
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36209,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t9=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t9))(5,t9,t8,C_retrieve(lf[29]),lf[866],lf[867]);}

/* k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36209,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36212,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[864],lf[865]);}

/* k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36212,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36215,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[862],lf[863]);}

/* k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36215,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36218,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[860],lf[861]);}

/* k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36218,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36221,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[858],lf[859]);}

/* k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36221,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36224,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[856],lf[857]);}

/* k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36224,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36227,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[854],lf[855]);}

/* k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36227,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36230,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[851]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[852],lf[853]);}

/* k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[58],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36230,2,t0,t1);}
t2=C_mutate((C_word*)lf[803]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36232,a[2]=((C_word)li590),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[506]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36422,a[2]=((C_word)li591),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[495]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36436,a[2]=((C_word)li592),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[811],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36450,a[2]=((C_word)li594),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[813],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36494,a[2]=((C_word)li596),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[517]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36516,a[2]=((C_word)li598),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[814]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36535,a[2]=((C_word)li606),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[819]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36747,a[2]=((C_word)li607),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[820]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36750,a[2]=((C_word)li609),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[821]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36759,a[2]=((C_word)li611),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[822]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36765,a[2]=((C_word)li613),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[823]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36774,a[2]=((C_word)li615),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[825]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36832,a[2]=((C_word)li617),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[826],lf[827]);
t16=C_mutate(&lf[828],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36842,a[2]=((C_word)li618),tmp=(C_word)a,a+=3,tmp));
t17=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t18=t17;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36913,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t21=C_SCHEME_UNDEFINED;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_set_block_item(t22,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37246,a[2]=t22,a[3]=t17,a[4]=t19,a[5]=((C_word)li622),tmp=(C_word)a,a+=6,tmp));
t24=((C_word*)t22)[1];
f_37246(t24,t20,C_retrieve2(lf[720],"*loop-operators*"));}

/* do6557 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_37246(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37246,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[686],C_retrieve2(lf[828],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[685],C_retrieve2(lf[828],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37274,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[663]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[18]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[668]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[653]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[654]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[656]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[657]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[690]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[691]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[692]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[682]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[686]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[685]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_37274(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_37274(t11,t10);}}}

/* k37272 in do6557 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_37274(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_37246(t3,((C_word*)t0)[2],t2);}

/* k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36913,2,t0,t1);}
t2=C_mutate(&lf[831],t1);
t3=C_mutate(&lf[832],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36915,a[2]=((C_word)li619),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37203,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37240,a[2]=((C_word)li621),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 629  ##sys#register-macro-2");
t6=C_retrieve(lf[850]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[849],t5);}

/* a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37240(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_37240,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36958,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 574  parse-iteration");
f_29833(t3,lf[849],t2,C_retrieve2(lf[831],"*run-operators*"));}

/* k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36958,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[826],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_car(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36964,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 582  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[848]);}

/* k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36964,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_36967,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 583  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[847]);}

/* k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36967,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_36970,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 584  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[846]);}

/* k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_36974,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 586  loop-end-tests");
t3=C_retrieve2(lf[534],"loop-end-tests");
f_26557(3,t3,t2,((C_word*)t0)[3]);}

/* k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36974,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_36977,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37184,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 587  loop-finally");
t5=C_retrieve2(lf[538],"loop-finally");
f_26593(3,t5,t4,((C_word*)t0)[3]);}

/* k37182 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37184,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37192,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37196,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 588  loop-finally");
t4=C_retrieve2(lf[538],"loop-finally");
f_26593(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_36977(t2,C_SCHEME_UNDEFINED);}}

/* k37194 in k37182 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37196,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 573  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k37190 in k37182 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37192,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[483],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_36977(t4,t3);}

/* k36975 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36977(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36977,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_36980,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37170,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37177,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 596  loop-looping");
t5=C_retrieve2(lf[535],"loop-looping");
f_26569(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37141,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_37141(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[456],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_37141(t7,t6);}}}

/* k37139 in k36975 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_37141(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37141,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_36980(2,t5,t4);}

/* k37175 in k36975 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 595  process-code-terminates?");
f_36915(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k37168 in k36975 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_36980(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 597  printf");
t2=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[845]);}}

/* k36978 in k36975 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36980,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[8],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[838],C_SCHEME_END_OF_LIST,((C_word*)t0)[9]);
t5=(C_word)C_a_i_list(&a,2,lf[839],t4);
t6=(C_word)C_a_i_list(&a,1,lf[840]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[8],lf[840]);
t8=(C_word)C_a_i_list(&a,3,lf[838],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[841],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t13=(C_word)C_a_i_list(&a,1,lf[842]);
t14=(C_word)C_a_i_list(&a,4,lf[843],((C_word*)t0)[6],t13,lf[844]);
t15=(C_word)C_a_i_list(&a,2,((C_word*)t0)[7],C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[838],t12,t14,t15);
t17=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37071,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t10,a[7]=t11,a[8]=t16,tmp=(C_word)a,a+=9,tmp);
t18=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37075,a[2]=((C_word*)t0)[2],a[3]=t17,tmp=(C_word)a,a+=4,tmp);
t19=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37079,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=t18,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 616  loop-looping");
t20=C_retrieve2(lf[535],"loop-looping");
f_26569(3,t20,t19,((C_word*)t0)[3]);}

/* k37077 in k36978 in k36975 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37079,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37083,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37087,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 617  loop-stepping");
t4=C_retrieve2(lf[537],"loop-stepping");
f_26581(3,t4,t3,((C_word*)t0)[2]);}

/* k37085 in k37077 in k36978 in k36975 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37087,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 573  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k37081 in k37077 in k36978 in k36975 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 573  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k37073 in k36978 in k36975 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 573  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k37069 in k36978 in k36975 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37071,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,lf[838],t2);
t4=(C_word)C_a_i_list(&a,3,lf[777],((C_word*)t0)[8],t3);
t5=(C_word)C_a_i_list(&a,3,lf[838],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[778],t5);
t7=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[6],t6);
t8=(C_word)C_a_i_list(&a,3,lf[838],((C_word*)t0)[5],t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36990,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37027,a[2]=((C_word*)t0)[2],a[3]=t10,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 621  loop-bindings");
t12=C_retrieve2(lf[531],"loop-bindings");
f_26521(3,t12,t11,((C_word*)t0)[2]);}

/* k37025 in k37069 in k36978 in k36975 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37027,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37023,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 622  loop-initially");
t3=C_retrieve2(lf[533],"loop-initially");
f_26545(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_36990(t2,C_SCHEME_FALSE);}}

/* k37021 in k37025 in k37069 in k36978 in k36975 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_36990(t2,(C_word)C_i_nullp(t1));}

/* k36988 in k37069 in k36978 in k36975 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36990(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36990,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37001,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 625  loop-bindings");
t3=C_retrieve2(lf[531],"loop-bindings");
f_26521(3,t3,t2,((C_word*)t0)[2]);}}

/* k36999 in k36988 in k37069 in k36978 in k36975 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37001,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37005,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37009,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 626  loop-initially");
t4=C_retrieve2(lf[533],"loop-initially");
f_26545(3,t4,t3,((C_word*)t0)[2]);}

/* k37007 in k36999 in k36988 in k37069 in k36978 in k36975 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37009,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 573  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k37003 in k36999 in k36988 in k37069 in k36978 in k36975 in k36972 in k36968 in k36965 in k36962 in k36956 in a37239 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37005,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* k37201 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37203,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37206,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37211,a[2]=((C_word)li620),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 632  ##sys#register-macro");
t4=C_retrieve(lf[836]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[837],t3);}

/* a37210 in k37201 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37211(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_37211r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_37211r(t0,t1,t2,t3);}}

static void C_ccall f_37211r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37215,a[2]=t1,a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37225,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t6=(C_word)C_i_car(t2);
t7=t5;
f_37225(t7,(C_word)C_i_symbolp(t6));}
else{
t6=t5;
f_37225(t6,C_SCHEME_FALSE);}}

/* k37223 in a37210 in k37201 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_37225(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_37215(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 634  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[835],((C_word*)t0)[2]);}}

/* k37213 in a37210 in k37201 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37215,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[834],t2));}

/* k37204 in k37201 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37206,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37209,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 741  return-to-host");
t3=C_retrieve(lf[833]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k37207 in k37204 in k37201 in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_37209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* process-code-terminates? in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36915(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_36915,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36931,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 569  process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_eqp(t2,t4));}}}

/* k36929 in process-code-terminates? in k36911 in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 570  process-code-terminates?");
f_36915(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36842(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36842,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36853,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 537  loop-error");
f_26857(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[829],t7,lf[830]));}
else{
t13=t12;
f_36853(2,t13,C_SCHEME_UNDEFINED);}}

/* k36851 in run-while-until in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36853,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36856,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[685]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_36856(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[686]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[457],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_36856(t10,t9);}
else{
t5=t2;
f_36856(t5,C_SCHEME_UNDEFINED);}}}

/* k36854 in k36851 in run-while-until in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36856(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36856,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36863,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[826],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 541  make-loop-clause");
f_26617(t2,(C_word)C_a_i_list(&a,4,lf[541],((C_word*)t0)[2],lf[546],t4));}

/* k36861 in k36854 in k36851 in run-while-until in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 541  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* hush in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36832,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36836,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36511,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[812]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k36509 in hush in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36511,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6471,a[2]=((C_word)li616),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k36834 in hush in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 522  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36774(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_36774r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_36774r(t0,t1,t2);}}

static void C_ccall f_36774r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36778,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 512  scheduler-stop");
f_36494(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36792,a[2]=t5,a[3]=((C_word)li614),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_36792(t7,t3,t2);}}

/* do6527 in stop in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36792(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36792,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36802,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 516  scheduler-stop");
f_36494(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 517  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[824],t5);}}}

/* k36800 in do6527 in stop in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_36792(t3,((C_word*)t0)[2],t2);}

/* k36776 in stop in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 518  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36765,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36769,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36489,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[812]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k36487 in cont in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36489,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6461,a[2]=((C_word)li612),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k36767 in cont in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 508  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36759,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36471,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[812]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k36469 in paused? in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36471,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6453,a[2]=((C_word)li610),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36750,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36754,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36480,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[812]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k36478 in pause in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36480,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6457,a[2]=((C_word)li608),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k36752 in pause in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 501  values");
C_values(2,0,((C_word*)t0)[2]);}

/* now in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36747,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6521(t2));}

/* sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36535(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_36535r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_36535r(t0,t1,t2,t3);}}

static void C_ccall f_36535r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36537,a[2]=t2,a[3]=((C_word)li603),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36694,a[2]=t4,a[3]=((C_word)li604),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36699,a[2]=t5,a[3]=((C_word)li605),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start64886515");
t7=t6;
f_36699(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id64896513");
t9=t5;
f_36694(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body64866491");
t11=t4;
f_36537(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[817]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[818],t10);}}}}

/* def-start6488 in sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36699(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36699,NULL,2,t0,t1);}
C_trace("def-id64896513");
t2=((C_word*)t0)[2];
f_36694(t2,t1,C_fix(0));}

/* def-id6489 in sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36694(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36694,NULL,3,t0,t1,t2);}
C_trace("body64866491");
t3=((C_word*)t0)[2];
f_36537(t3,t1,t2,C_fix(-1));}

/* body6486 in sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36537(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36537,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36539,a[2]=t4,a[3]=((C_word)li599),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36567,a[2]=t5,a[3]=((C_word)li600),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36597,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36606,a[2]=t8,a[3]=t6,a[4]=t7,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36642,a[2]=((C_word*)t0)[2],a[3]=t11,a[4]=((C_word)li602),tmp=(C_word)a,a+=5,tmp));
t13=((C_word*)t11)[1];
f_36642(t13,t9,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36682,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36686,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 486  nextstart");
t11=t6;
f_36539(t11,t10);}
else{
C_trace("ChickenBridge.scm: 489  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[816],((C_word*)t0)[2]);}}}

/* k36684 in body6486 in sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36686,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36690,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 486  nextid");
t3=((C_word*)t0)[2];
f_36567(t3,t2);}

/* k36688 in k36684 in body6486 in sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 486  scheduler-sprout");
f_36450(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k36680 in body6486 in sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_36597(2,t2,((C_word*)t0)[2]);}

/* do6500 in body6486 in sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36642(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36642,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36652,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_closurep(t4))){
t5=t3;
f_36652(2,t5,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 480  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[815],((C_word*)t0)[2]);}}}

/* k36650 in do6500 in body6486 in sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_36642(t3,((C_word*)t0)[2],t2);}

/* k36604 in body6486 in sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36606,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36611,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li601),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_36611(t5,((C_word*)t0)[2],((C_word*)t0)[5]);}

/* do6505 in k36604 in body6486 in sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36611(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36611,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36621,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36636,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 483  nextstart");
t6=((C_word*)t0)[2];
f_36539(t6,t5);}}

/* k36634 in do6505 in k36604 in body6486 in sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36640,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 484  nextid");
t3=((C_word*)t0)[2];
f_36567(t3,t2);}

/* k36638 in k36634 in do6505 in k36604 in body6486 in sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 483  scheduler-sprout");
f_36450(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k36619 in do6505 in k36604 in body6486 in sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_36611(t3,((C_word*)t0)[2],t2);}

/* k36595 in body6486 in sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 493  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body6486 in sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36567(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36567,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body6486 in sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36539(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36539,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36516(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36516,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36521,a[2]=((C_word)li597),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_36521 in load-sal-file in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36521(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36521,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36526,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_36526(2,t4,C_SCHEME_FALSE);}}

/* k36524 */
static void C_ccall f_36526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6477(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36494(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36494,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36498,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[812]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k36496 in scheduler-stop in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36498,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6466,a[2]=((C_word)li595),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36450(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36450,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36454,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[812]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k36452 in scheduler-sprout in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36454,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub6446,a[2]=((C_word)li593),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* print-error in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36436(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36436,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36441,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_36441(2,t4,C_SCHEME_FALSE);}}

/* k36439 in print-error in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6438(C_SCHEME_UNDEFINED,t1));}

/* print-message in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36422(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36422,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36427,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_36427(2,t4,C_SCHEME_FALSE);}}

/* k36425 in print-message in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6432(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36232(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_36232,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36286,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36293,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 397  make-string");
t5=*((C_word*)lf[406]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36293,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36295,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li589),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_36295(t5,((C_word*)t0)[2],lf[810],t1,C_fix(0));}

/* do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36295(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36295,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36305,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nequalp(t4,C_fix(0)))){
C_trace("ChickenBridge.scm: 400  printf");
t6=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t6=t5;
f_36305(2,t6,C_SCHEME_UNDEFINED);}}}

/* k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36305,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36308,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36322,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36324,a[2]=t5,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],a[6]=((C_word)li588),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_36324(t7,t3,C_fix(0));}

/* do6420 in k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36324(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36324,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36344,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36279,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 389  floor");
t14=*((C_word*)lf[200]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 405  string-append");
t3=*((C_word*)lf[53]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[809]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36361,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36364,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 407  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k36362 in do6420 in k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36364,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_36361(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36406,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 408  modulo");
t4=*((C_word*)lf[158]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k36404 in k36362 in do6420 in k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36406,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_36361(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36376,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 410  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k36374 in k36404 in k36362 in do6420 in k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36376,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_36361(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_36361(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k36359 in do6420 in k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_36361(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36361,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_36324(t4,((C_word*)t0)[2],t3);}

/* k36277 in do6420 in k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36279,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36244,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 390  modulo");
t5=*((C_word*)lf[158]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k36242 in k36277 in do6420 in k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36244,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36271,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 391  floor");
t5=*((C_word*)lf[200]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k36269 in k36242 in k36277 in do6420 in k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36271,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36252,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 392  modulo");
t5=*((C_word*)lf[158]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k36250 in k36269 in k36242 in k36277 in do6420 in k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36252,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36259,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 393  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k36257 in k36250 in k36269 in k36242 in k36277 in do6420 in k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36259,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36263,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 394  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k36261 in k36257 in k36250 in k36269 in k36242 in k36277 in do6420 in k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36263,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36267,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 395  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k36265 in k36261 in k36257 in k36250 in k36269 in k36242 in k36277 in do6420 in k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 393  string-append");
t2=*((C_word*)lf[53]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[806],((C_word*)t0)[3],lf[807],((C_word*)t0)[2],lf[808],t1);}

/* k36342 in do6420 in k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 404  string-append");
t2=*((C_word*)lf[53]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[804],t1,lf[805]);}

/* k36320 in k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 401  printf");
t2=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k36306 in k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36308,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36311,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 413  printf");
t3=C_retrieve(lf[474]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k36309 in k36306 in k36303 in do6406 in k36291 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36311,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_36295(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k36284 in cm-logo in k36228 in k36225 in k36222 in k36219 in k36216 in k36213 in k36210 in k36207 in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 414  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35758(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_35758r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35758r(t0,t1,t2);}}

static void C_ccall f_35758r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_35762,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t8,a[9]=t6,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_35762(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[799]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36086,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[799]);}
else{
t23=t22;
f_36086(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[800]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36121,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[800]);}
else{
t24=t23;
f_36121(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[802]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36156,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[802]);}
else{
t25=t24;
f_36156(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36185,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_36185(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k36183 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36185,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36192,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36200,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36198 in k36183 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36192(2,t2,C_SCHEME_UNDEFINED);}}

/* k36190 in k36183 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35762(t5,t4);}

/* k36154 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36160,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_36160(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36158 in k36154 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35762(t7,t6);}

/* k36119 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36121,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36125,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_36125(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36123 in k36119 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35762(t7,t6);}

/* k36084 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36090,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_36090(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36088 in k36084 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35762(t7,t6);}

/* k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_35762(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35762,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_35765,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_35765(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[799]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35951,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[799]);}
else{
t6=t5;
f_35951(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[800]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35986,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[800]);}
else{
t7=t6;
f_35986(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[802]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36021,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[802]);}
else{
t8=t7;
f_36021(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36050,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_36050(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k36048 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36050,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36057,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36065,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k36063 in k36048 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_36057(2,t2,C_SCHEME_UNDEFINED);}}

/* k36055 in k36048 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35765(t5,t4);}

/* k36019 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36021,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36025,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_36025(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k36023 in k36019 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_36025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35765(t7,t6);}

/* k35984 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35986,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35990,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35990(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35988 in k35984 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35765(t7,t6);}

/* k35949 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35951,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35955,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35955(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35953 in k35949 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35765(t7,t6);}

/* k35763 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_35765(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35765,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35768,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_35768(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[799]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35816,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[799]);}
else{
t6=t5;
f_35816(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[800]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35851,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[800]);}
else{
t7=t6;
f_35851(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[802]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35886,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[802]);}
else{
t8=t7;
f_35886(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35915,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_35915(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k35913 in k35763 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35915,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35922,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35930,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35928 in k35913 in k35763 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35922(2,t2,C_SCHEME_UNDEFINED);}}

/* k35920 in k35913 in k35763 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35768(t5,t4);}

/* k35884 in k35763 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35886,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35890,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35890(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35888 in k35884 in k35763 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35768(t7,t6);}

/* k35849 in k35763 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35851,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35855,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35855(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35853 in k35849 in k35763 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35768(t7,t6);}

/* k35814 in k35763 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35820,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35820(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35818 in k35814 in k35763 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35768(t7,t6);}

/* k35766 in k35763 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_35768(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35768,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35771,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_35771(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k35769 in k35766 in k35763 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35771,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35774,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_35774(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_set_block_item(((C_word*)t0)[3],0,C_fix(-1));
t5=t2;
f_35774(t5,t4);}}

/* k35772 in k35769 in k35766 in k35763 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_35774(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35774,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35778,a[2]=((C_word)li586),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_35778 in k35772 in k35769 in k35766 in k35763 in k35760 in cs:play in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35778(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35778,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub6382(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35520(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_35520r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35520r(t0,t1,t2);}}

static void C_ccall f_35520r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_35524,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_35524(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[799]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35671,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[799]);}
else{
t19=t18;
f_35671(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[800]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35706,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[800]);}
else{
t20=t19;
f_35706(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35735,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_35735(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k35733 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35735,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35742,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35750,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35748 in k35733 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35742(2,t2,C_SCHEME_UNDEFINED);}}

/* k35740 in k35733 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35524(t5,t4);}

/* k35704 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35706,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35710,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35710(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35708 in k35704 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35524(t7,t6);}

/* k35669 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35675,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35675(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35673 in k35669 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35524(t7,t6);}

/* k35522 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_35524(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35524,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35527,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_35527(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[799]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35571,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[799]);}
else{
t6=t5;
f_35571(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[800]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_35606,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[800]);}
else{
t7=t6;
f_35606(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35635,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_35635(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k35633 in k35522 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35635,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35642,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35650,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k35648 in k35633 in k35522 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_35642(2,t2,C_SCHEME_UNDEFINED);}}

/* k35640 in k35633 in k35522 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_35527(t5,t4);}

/* k35604 in k35522 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35606,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35610,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35610(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35608 in k35604 in k35522 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35527(t7,t6);}

/* k35569 in k35522 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35571,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_35575,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_35575(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k35573 in k35569 in k35522 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35527(t7,t6);}

/* k35525 in k35522 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_35527(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35527,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35530,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_35530(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k35528 in k35525 in k35522 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35533,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_35533(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(-1));
t5=t2;
f_35533(t5,t4);}}

/* k35531 in k35528 in k35525 in k35522 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_35533(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35533,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35537,a[2]=((C_word)li584),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_35537 in k35531 in k35528 in k35525 in k35522 in cs:print in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35537(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35537,4,t0,t1,t2,t3);}
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub6303(C_SCHEME_UNDEFINED,t4,t5));}

/* cs:f in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35463(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_35463r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35463r(t0,t1,t2);}}

static void C_ccall f_35463r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35467,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_35467(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35476,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35496,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_35496(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_35496(t8,C_SCHEME_FALSE);}}}

/* k35494 in cs:f in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_35496(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_35476(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_35476(t2,C_SCHEME_UNDEFINED);}}

/* k35474 in cs:f in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_35476(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35476,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35484,a[2]=((C_word)li582),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_35484 in k35474 in cs:f in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35484(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35484,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub6255(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k35465 in cs:f in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35406(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_35406r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35406r(t0,t1,t2);}}

static void C_ccall f_35406r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35410,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_35410(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35419,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35439,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_35439(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_35439(t8,C_SCHEME_FALSE);}}}

/* k35437 in cs:i in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_35439(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_35419(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_35419(t2,C_SCHEME_UNDEFINED);}}

/* k35417 in cs:i in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_35419(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35419,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35427,a[2]=((C_word)li580),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_35427 in k35417 in cs:i in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35427(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35427,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub6244(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k35408 in cs:i in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35398(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35398,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35403,a[2]=((C_word)li578),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_35403 in cs:clear in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35403,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6238(C_SCHEME_UNDEFINED));}

/* cs:record in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35355(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35355,3,t0,t1,t2);}
if(C_truep((C_word)C_booleanp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35366,a[2]=((C_word)li574),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}
else{
t3=(C_word)C_i_numberp(t2);
t4=(C_truep(t3)?(C_word)C_i_greater_or_equalp(t2,C_fix(0)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35376,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35382,a[2]=((C_word)li576),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t6+1)))(3,t6,t5,t2);}
else{
C_trace("ChickenBridge.scm: 381  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,lf[794],t2);}}}

/* f_35382 in cs:record in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35382(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35382,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub6230(C_SCHEME_UNDEFINED,t3));}

/* k35374 in cs:record in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35376,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35380,a[2]=((C_word)li575),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t2+1)))(3,t2,((C_word*)t0)[2],C_SCHEME_TRUE);}

/* f_35380 in k35374 in cs:record in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35380(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35380,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6234(C_SCHEME_UNDEFINED,t2));}

/* f_35366 in cs:record in k35351 in k35348 in k35345 in k35342 in k35339 in k35336 in k35333 in k35330 in k35327 in k35324 in k35321 in k35318 in k35315 in k35312 in k35309 in k35306 in k35303 in k35300 in k35297 in k35294 in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35366(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35366,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6226(C_SCHEME_UNDEFINED,t2));}

/* mp:recordseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35275(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2rv,(void*)f_35275r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_35275r(t0,t1,t2);}}

static void C_ccall f_35275r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(6);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35282,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35286,a[2]=((C_word)li572),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t6+1)))(3,t6,t5,t4);}

/* f_35286 in mp:recordseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35286(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35286,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6146(C_SCHEME_UNDEFINED,t2));}

/* k35280 in mp:recordseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:clearseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35264,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35268,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35272,a[2]=((C_word)li570),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_35272 in mp:clearseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35272,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6140(C_SCHEME_UNDEFINED));}

/* k35266 in mp:clearseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:plotseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35253,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35257,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35261,a[2]=((C_word)li568),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_35261 in mp:plotseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35261,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6137(C_SCHEME_UNDEFINED));}

/* k35255 in mp:plotseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:copyseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35242,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35246,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35250,a[2]=((C_word)li566),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_35250 in mp:copyseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35250,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6134(C_SCHEME_UNDEFINED));}

/* k35244 in mp:copyseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:saveseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35231,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35235,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35239,a[2]=((C_word)li564),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_35239 in mp:saveseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35239,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6131(C_SCHEME_UNDEFINED));}

/* k35233 in mp:saveseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:playseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35220,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35224,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35228,a[2]=((C_word)li562),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_35228 in mp:playseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35228,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub6128(C_SCHEME_UNDEFINED));}

/* k35222 in mp:playseq in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:tuning in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35181(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr2rv,(void*)f_35181r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_35181r(t0,t1,t2);}}

static void C_ccall f_35181r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(7);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?C_fix(1):(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35188,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35194,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_integerp(t4))){
C_trace("ChickenBridge.scm: 380  <");
C_lessp(5,0,t6,C_fix(0),t4,C_fix(17));}
else{
t7=t6;
f_35194(2,t7,C_SCHEME_FALSE);}}

/* k35192 in mp:tuning in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35194,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35198,a[2]=((C_word)li560),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t2+1)))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 380  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[786],((C_word*)t0)[2]);}}

/* f_35198 in k35192 in mp:tuning in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35198(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35198,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub6124(C_SCHEME_UNDEFINED,t3));}

/* k35186 in mp:tuning in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:intypes in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35066(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2r,(void*)f_35066r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_35066r(t0,t1,t2);}}

static void C_ccall f_35066r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35070,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 380  error");
t6=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[783]);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35091,a[2]=t2,a[3]=t5,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t2);
t9=t6;
f_35091(t9,(C_word)C_eqp(t8,C_SCHEME_FALSE));}
else{
t8=t6;
f_35091(t8,C_SCHEME_FALSE);}}}

/* k35089 in mp:intypes in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_35091(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35091,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t3=((C_word*)t0)[3];
f_35070(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35098,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t2;
f_35098(t5,(C_word)C_eqp(t4,C_SCHEME_TRUE));}
else{
t4=t2;
f_35098(t4,C_SCHEME_FALSE);}}}

/* k35096 in k35089 in mp:intypes in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_35098(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35098,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(127));
t3=((C_word*)t0)[3];
f_35070(2,t3,t2);}
else{
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35104,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li558),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_35104(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* do6111 in k35096 in k35089 in mp:intypes in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_35104(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35104,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35114,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35124,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  <=");
C_less_or_equal_p(5,0,t4,C_retrieve(lf[721]),t5,C_retrieve(lf[727]));}}

/* k35122 in do6111 in k35096 in k35089 in mp:intypes in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35124,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_a_i_minus(&a,2,t2,C_retrieve(lf[721]));
t4=(C_word)C_a_i_arithmetic_shift(&a,2,C_fix(1),t3);
t5=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_35114(2,t7,t6);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[784],t2);}}

/* k35112 in do6111 in k35096 in k35089 in mp:intypes in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_35104(t3,((C_word*)t0)[2],t2);}

/* k35068 in mp:intypes in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35070,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35074,a[2]=((C_word)li557),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t2+1)))(3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* f_35074 in k35068 in mp:intypes in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35074(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35074,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub6117(C_SCHEME_UNDEFINED,t3));}

/* mp:inchans in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34955(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2r,(void*)f_34955r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_34955r(t0,t1,t2);}}

static void C_ccall f_34955r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34959,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 380  error");
t6=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[780]);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34980,a[2]=t2,a[3]=t5,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t2);
t9=t6;
f_34980(t9,(C_word)C_eqp(t8,C_SCHEME_FALSE));}
else{
t8=t6;
f_34980(t8,C_SCHEME_FALSE);}}}

/* k34978 in mp:inchans in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_34980(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34980,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t3=((C_word*)t0)[3];
f_34959(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34987,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t2;
f_34987(t5,(C_word)C_eqp(t4,C_SCHEME_TRUE));}
else{
t4=t2;
f_34987(t4,C_SCHEME_FALSE);}}}

/* k34985 in k34978 in mp:inchans in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_34987(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34987,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[4],0,C_fix(65535));
t3=((C_word*)t0)[3];
f_34959(2,t3,t2);}
else{
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34993,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li555),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_34993(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* do6099 in k34985 in k34978 in mp:inchans in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_34993(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34993,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35003,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35013,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 380  <=");
C_less_or_equal_p(5,0,t4,C_fix(0),t5,C_fix(15));}}

/* k35011 in do6099 in k34985 in k34978 in mp:inchans in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35013,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_a_i_arithmetic_shift(&a,2,C_fix(1),t2);
t4=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_35003(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 380  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[781],t2);}}

/* k35001 in do6099 in k34985 in k34978 in mp:inchans in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_35003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_34993(t3,((C_word*)t0)[2],t2);}

/* k34957 in mp:inchans in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34959,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34963,a[2]=((C_word)li554),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t2+1)))(3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* f_34963 in k34957 in mp:inchans in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34963(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34963,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub6105(C_SCHEME_UNDEFINED,t3));}

/* mp:inhook in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34898(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34898,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34910,a[2]=t2,a[3]=((C_word)li550),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34947,a[2]=((C_word)li551),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34952,a[2]=((C_word)li552),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_34952 in mp:inhook in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34952(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34952,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6094(C_SCHEME_UNDEFINED,t2));}

/* f_34947 in mp:inhook in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34947(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34947,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub6085(C_SCHEME_UNDEFINED,t2));}

/* a34909 in mp:inhook in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34910(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34910,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34916,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li549),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-current-continuation");
t4=*((C_word*)lf[778]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a34915 in a34909 in mp:inhook in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34916(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34916,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34922,a[2]=t2,a[3]=((C_word)li547),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34942,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li548),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  with-exception-handler");
t5=C_retrieve(lf[777]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a34941 in a34915 in a34909 in mp:inhook in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34946,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k34944 in a34941 in a34915 in a34909 in mp:inhook in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a34921 in a34915 in a34909 in mp:inhook in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34922(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34922,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34926,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34933,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34937,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34940,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  condition-property-accessor");
t7=C_retrieve(lf[774]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[775],lf[776]);}

/* k34938 in a34921 in a34915 in a34909 in mp:inhook in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34935 in a34921 in a34915 in a34909 in mp:inhook in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[773],t1);}

/* k34931 in a34921 in a34915 in a34909 in mp:inhook in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  print-error");
t2=C_retrieve(lf[495]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k34924 in a34921 in a34915 in a34909 in mp:inhook in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34883(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34883,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34888,a[2]=((C_word)li545),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34888 in mp:mm in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34888(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34888,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub6078(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34855(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34855,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34860,a[2]=((C_word)li543),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_retrieve(lf[727]),t2,t4,t3,C_fix(0));}

/* f_34860 in mp:bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34860(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34860,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub6069(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34827(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34827,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34832,a[2]=((C_word)li541),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_retrieve(lf[726]),t2,t4,t3,C_fix(0));}

/* f_34832 in mp:press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34832(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34832,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub6054(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34799(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34799,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34804,a[2]=((C_word)li539),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_retrieve(lf[725]),t2,t4,t3,C_fix(0));}

/* f_34804 in mp:prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34804(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34804,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub6039(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34771(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_34771,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34776,a[2]=((C_word)li537),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_retrieve(lf[724]),t2,t5,t3,t4);}

/* f_34776 in mp:ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34776,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub6024(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34743(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_34743,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34748,a[2]=((C_word)li535),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_retrieve(lf[723]),t2,t5,t3,t4);}

/* f_34748 in mp:touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34748(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34748,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub6008(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34715(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_34715,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34720,a[2]=((C_word)li533),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_retrieve(lf[722]),t2,t5,t3,t4);}

/* f_34720 in mp:on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34720(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34720,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5992(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34687(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34687,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34692,a[2]=((C_word)li531),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_retrieve(lf[721]),t2,t4,t3,C_fix(0));}

/* f_34692 in mp:off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34692(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34692,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5976(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34659(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34659,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34664,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_34664 in mp:midi in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34664(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34664,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5961(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34631(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34631,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34636,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_34636 in mp:note in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34636(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_34636,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5944(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34608(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34608,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34612,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34613,a[2]=((C_word)li525),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_34613 in mm:num-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34613(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34613,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5926(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k34610 in mm:num-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34589(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34589,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34594,a[2]=((C_word)li523),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_34594 in mm:num in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34594(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34594,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5915(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34534(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34534,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34538,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34541,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  mm:ctrl?");
t6=C_retrieve(lf[741]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k34539 in mm:val-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34541,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34544,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_34544(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 380  mm:touch?");
t3=C_retrieve(lf[738]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}}

/* k34542 in k34539 in mm:val-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34544,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34548,a[2]=((C_word)li520),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34568,a[2]=((C_word)li521),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[759]));}}

/* f_34568 in k34542 in k34539 in mm:val-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34568(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34568,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5904(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_34548 in k34542 in k34539 in mm:val-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34548(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34548,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5894(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k34536 in mm:val-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34487(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34487,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34494,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  mm:ctrl?");
t4=C_retrieve(lf[741]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k34492 in mm:val in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34494,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34497,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_34497(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 380  mm:touch?");
t3=C_retrieve(lf[738]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}

/* k34495 in k34492 in mm:val in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34497,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34501,a[2]=((C_word)li517),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34517,a[2]=((C_word)li518),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_34517 in k34495 in k34492 in mm:val in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34517(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34517,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5881(C_SCHEME_UNDEFINED,t4,t5));}

/* f_34501 in k34495 in k34492 in mm:val in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34501(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34501,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5873(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34464(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34464,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34468,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34469,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_34469 in mm:vel-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34469(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34469,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5860(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k34466 in mm:vel-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34445(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34445,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34450,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_34450 in mm:vel in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34450(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34450,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5849(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34422,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34426,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34427,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_34427 in mm:key-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34427(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34427,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5838(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k34424 in mm:key-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34403(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34403,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34408,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_34408 in mm:key in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34408(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34408,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5827(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34384(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34384,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34388,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34389,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_34389 in mm:chan-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34389(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34389,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5817(C_SCHEME_UNDEFINED,t4,t5));}

/* k34386 in mm:chan-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34369(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34369,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34374,a[2]=((C_word)li505),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34374 in mm:chan in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34374(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34374,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5808(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34350(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34350,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34354,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34355,a[2]=((C_word)li503),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_34355 in mm:time-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34355(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34355,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5799(C_SCHEME_UNDEFINED,t4,t5));}

/* k34352 in mm:time-set! in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34335(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34335,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34340,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34340 in mm:time in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34340(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34340,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5789(t3,t4));}

/* mm:copy in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34320(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34320,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34325,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_34325 in mm:copy in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34325(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34325,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5781(t3,t4));}

/* mm:free in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34302(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34302,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34306,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34310,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_34310 in mm:free in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34310(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_34310,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5773(C_SCHEME_UNDEFINED,t3));}

/* k34304 in mm:free in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33832(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_33832r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_33832r(t0,t1,t2);}}

static void C_ccall f_33832r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33836,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_33836(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[729]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34161,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[729]);}
else{
t23=t22;
f_34161(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[737]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34196,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[737]);}
else{
t24=t23;
f_34196(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[732]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34231,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[732]);}
else{
t25=t24;
f_34231(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34260,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_34260(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k34258 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34260,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34267,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34275,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34273 in k34258 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34267(2,t2,C_SCHEME_UNDEFINED);}}

/* k34265 in k34258 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33836(t5,t4);}

/* k34229 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34231,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34235,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34235(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34233 in k34229 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33836(t7,t6);}

/* k34194 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34196(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34196,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34200,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34200(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34198 in k34194 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33836(t7,t6);}

/* k34159 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34161,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34165,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34165(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34163 in k34159 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33836(t7,t6);}

/* k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_33836(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33836,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33839,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33839(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34026,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_34026(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34061,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[737]);}
else{
t7=t6;
f_34061(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34096,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[732]);}
else{
t8=t7;
f_34096(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34125,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_34125(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k34123 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34125,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34132,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34140,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34138 in k34123 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_34132(2,t2,C_SCHEME_UNDEFINED);}}

/* k34130 in k34123 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33839(t5,t4);}

/* k34094 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34096,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34100,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34100(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34098 in k34094 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33839(t7,t6);}

/* k34059 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34061,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34065,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34065(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34063 in k34059 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33839(t7,t6);}

/* k34024 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34026,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34030,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_34030(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k34028 in k34024 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33839(t7,t6);}

/* k33837 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_33839(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33839,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33842,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33842(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33891,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_33891(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33926,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[737]);}
else{
t7=t6;
f_33926(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33961,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[732]);}
else{
t8=t7;
f_33961(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33990,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33990(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33988 in k33837 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33990,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33997,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34005,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k34003 in k33988 in k33837 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_34005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33997(2,t2,C_SCHEME_UNDEFINED);}}

/* k33995 in k33988 in k33837 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33842(t5,t4);}

/* k33959 in k33837 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33961,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33965,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33965(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33963 in k33959 in k33837 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33842(t7,t6);}

/* k33924 in k33837 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33926,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33930,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33930(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33928 in k33924 in k33837 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33842(t7,t6);}

/* k33889 in k33837 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33891,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33895,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33895(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33893 in k33889 in k33837 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33842(t7,t6);}

/* k33840 in k33837 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_33842(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33842,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33845,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_33845(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k33843 in k33840 in k33837 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33845,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33849,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_retrieve(lf[727]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_33849 in k33843 in k33840 in k33837 in k33834 in mm:make-bend in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33849(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33849,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5750(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33813(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33813,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33818,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_retrieve(lf[726]));}

/* f_33818 in mm:press? in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33818(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33818,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5671(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33362(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_33362r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_33362r(t0,t1,t2);}}

static void C_ccall f_33362r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33366,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_33366(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[729]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33691,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[729]);}
else{
t23=t22;
f_33691(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[737]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33726,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[737]);}
else{
t24=t23;
f_33726(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[732]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33761,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[732]);}
else{
t25=t24;
f_33761(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33790,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_33790(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k33788 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33790,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33797,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33805,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33803 in k33788 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33797(2,t2,C_SCHEME_UNDEFINED);}}

/* k33795 in k33788 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33366(t5,t4);}

/* k33759 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33765,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33765(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33763 in k33759 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33366(t7,t6);}

/* k33724 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33726,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33730,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33730(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33728 in k33724 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33730(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33366(t7,t6);}

/* k33689 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33695,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33695(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33693 in k33689 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33366(t7,t6);}

/* k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_33366(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33366,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_33369,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33369(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33556,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_33556(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33591,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[737]);}
else{
t7=t6;
f_33591(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33626,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[732]);}
else{
t8=t7;
f_33626(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33655,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33655(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33653 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33655,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33662,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33670,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33668 in k33653 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33662(2,t2,C_SCHEME_UNDEFINED);}}

/* k33660 in k33653 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33369(t5,t4);}

/* k33624 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33630,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33630(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33628 in k33624 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33369(t7,t6);}

/* k33589 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33591,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33595,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33595(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33593 in k33589 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33369(t7,t6);}

/* k33554 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33556,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33560,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33560(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33558 in k33554 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33369(t7,t6);}

/* k33367 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_33369(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33369,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33372,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_33372(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33421,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_33421(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33456,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[737]);}
else{
t7=t6;
f_33456(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33491,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[732]);}
else{
t8=t7;
f_33491(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33520,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33520(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33518 in k33367 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33520,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33527,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33535,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33533 in k33518 in k33367 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33527(2,t2,C_SCHEME_UNDEFINED);}}

/* k33525 in k33518 in k33367 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33372(t5,t4);}

/* k33489 in k33367 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33491,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33495,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33495(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33493 in k33489 in k33367 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33372(t7,t6);}

/* k33454 in k33367 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33456,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33460,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33460(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33458 in k33454 in k33367 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33460(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33372(t7,t6);}

/* k33419 in k33367 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33421,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33425,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33425(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33423 in k33419 in k33367 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33372(t7,t6);}

/* k33370 in k33367 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_33372(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33372,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33375,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_33375(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k33373 in k33370 in k33367 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33375,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33379,a[2]=((C_word)li491),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_retrieve(lf[726]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_33379 in k33373 in k33370 in k33367 in k33364 in mm:make-press in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33379(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_33379,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5656(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33343(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33343,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33348,a[2]=((C_word)li489),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_retrieve(lf[725]));}

/* f_33348 in mm:prog? in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33348(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33348,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5577(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32892(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_32892r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32892r(t0,t1,t2);}}

static void C_ccall f_32892r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32896,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_32896(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[729]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33221,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[729]);}
else{
t23=t22;
f_33221(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[737]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33256,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[737]);}
else{
t24=t23;
f_33256(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[732]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33291,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[732]);}
else{
t25=t24;
f_33291(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33320,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_33320(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k33318 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33320,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33327,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33335,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33333 in k33318 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33327(2,t2,C_SCHEME_UNDEFINED);}}

/* k33325 in k33318 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32896(t5,t4);}

/* k33289 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33295,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33295(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33293 in k33289 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32896(t7,t6);}

/* k33254 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33260,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33260(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33258 in k33254 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32896(t7,t6);}

/* k33219 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33221,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33225,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33225(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33223 in k33219 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32896(t7,t6);}

/* k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_32896(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32896,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_32899,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32899(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33086,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_33086(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33121,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[737]);}
else{
t7=t6;
f_33121(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33156,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[732]);}
else{
t8=t7;
f_33156(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33185,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33185(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33183 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33185,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33192,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33200,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33198 in k33183 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33192(2,t2,C_SCHEME_UNDEFINED);}}

/* k33190 in k33183 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32899(t5,t4);}

/* k33154 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33156,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33160,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33160(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33158 in k33154 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32899(t7,t6);}

/* k33119 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33121,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33125,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33125(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33123 in k33119 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32899(t7,t6);}

/* k33084 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33090,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33090(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33088 in k33084 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32899(t7,t6);}

/* k32897 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_32899(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32899,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32902,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_32902(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32951,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_32951(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32986,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[737]);}
else{
t7=t6;
f_32986(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33021,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[732]);}
else{
t8=t7;
f_33021(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33050,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_33050(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k33048 in k32897 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33050,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33057,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33065,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k33063 in k33048 in k32897 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_33057(2,t2,C_SCHEME_UNDEFINED);}}

/* k33055 in k33048 in k32897 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32902(t5,t4);}

/* k33019 in k32897 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33021,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33025,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_33025(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k33023 in k33019 in k32897 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_33025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32902(t7,t6);}

/* k32984 in k32897 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32986,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32990,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32990(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32988 in k32984 in k32897 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32902(t7,t6);}

/* k32949 in k32897 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32951,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32955,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32955(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32953 in k32949 in k32897 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32902(t7,t6);}

/* k32900 in k32897 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_32902(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32902,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32905,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32905(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k32903 in k32900 in k32897 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32909,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_retrieve(lf[725]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_32909 in k32903 in k32900 in k32897 in k32894 in mm:make-prog in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32909(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_32909,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5562(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32873(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32873,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32878,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_retrieve(lf[724]));}

/* f_32878 in mm:ctrl? in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32878(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32878,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5483(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32144(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_32144r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32144r(t0,t1,t2);}}

static void C_ccall f_32144r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_32148,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_32148(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[729]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32716,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[729]);}
else{
t27=t26;
f_32716(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[740]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32751,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[740]);}
else{
t28=t27;
f_32751(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[737]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32786,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[737]);}
else{
t29=t28;
f_32786(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[732]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32821,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[732]);}
else{
t30=t29;
f_32821(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32850,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_32850(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k32848 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32850,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32857,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32865,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32863 in k32848 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32857(2,t2,C_SCHEME_UNDEFINED);}}

/* k32855 in k32848 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32148(t5,t4);}

/* k32819 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32821,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32825,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32825(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32823 in k32819 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32148(t7,t6);}

/* k32784 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32786,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32790,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32790(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32788 in k32784 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32148(t7,t6);}

/* k32749 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32751,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32755,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32755(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32753 in k32749 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32148(t7,t6);}

/* k32714 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32716,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32720,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32720(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32718 in k32714 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32148(t7,t6);}

/* k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_32148(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32148,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_32151,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_32151(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32546,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_32546(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[740]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32581,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[740]);}
else{
t7=t6;
f_32581(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32616,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[737]);}
else{
t8=t7;
f_32616(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32651,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[732]);}
else{
t9=t8;
f_32651(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32680,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_32680(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k32678 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32680,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32687,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32695,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32693 in k32678 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32687(2,t2,C_SCHEME_UNDEFINED);}}

/* k32685 in k32678 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32151(t5,t4);}

/* k32649 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32651,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32655,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32655(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32653 in k32649 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32151(t7,t6);}

/* k32614 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32616,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32620,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32620(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32618 in k32614 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32151(t7,t6);}

/* k32579 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32581,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32585,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32585(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32583 in k32579 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32151(t7,t6);}

/* k32544 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32546,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32550,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32550(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32548 in k32544 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32151(t7,t6);}

/* k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_32151(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32151,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_32154,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_32154(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32376,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_32376(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[740]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32411,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[740]);}
else{
t7=t6;
f_32411(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32446,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[737]);}
else{
t8=t7;
f_32446(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32481,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[732]);}
else{
t9=t8;
f_32481(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32510,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_32510(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k32508 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32510,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32517,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32525,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32523 in k32508 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32517(2,t2,C_SCHEME_UNDEFINED);}}

/* k32515 in k32508 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32154(t5,t4);}

/* k32479 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32481,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32485,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32485(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32483 in k32479 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32154(t7,t6);}

/* k32444 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32446,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32450,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32450(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32448 in k32444 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32154(t7,t6);}

/* k32409 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32411,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32415,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32415(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32413 in k32409 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32154(t7,t6);}

/* k32374 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32376,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32380,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32380(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32378 in k32374 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32154(t7,t6);}

/* k32152 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_32154(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32154,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_32157,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_32157(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32206,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_32206(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[740]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32241,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[740]);}
else{
t7=t6;
f_32241(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32276,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[737]);}
else{
t8=t7;
f_32276(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32311,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[732]);}
else{
t9=t8;
f_32311(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32340,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_32340(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k32338 in k32152 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32340,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32347,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32355,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32353 in k32338 in k32152 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32347(2,t2,C_SCHEME_UNDEFINED);}}

/* k32345 in k32338 in k32152 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_32157(t5,t4);}

/* k32309 in k32152 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32311,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32315,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32315(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32313 in k32309 in k32152 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32157(t7,t6);}

/* k32274 in k32152 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32276,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32280,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32280(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32278 in k32274 in k32152 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32157(t7,t6);}

/* k32239 in k32152 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32241,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32245,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32245(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32243 in k32239 in k32152 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32157(t7,t6);}

/* k32204 in k32152 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32206,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32210,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32210(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32208 in k32204 in k32152 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_32157(t7,t6);}

/* k32155 in k32152 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_32157(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32157,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32160,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_32160(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k32158 in k32155 in k32152 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32160,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32164,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_retrieve(lf[724]),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_32164 in k32158 in k32155 in k32152 in k32149 in k32146 in mm:make-ctrl in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32164(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_32164,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5467(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32125(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32125,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32130,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_retrieve(lf[723]));}

/* f_32130 in mm:touch? in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32130(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_32130,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5351(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31396(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_31396r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31396r(t0,t1,t2);}}

static void C_ccall f_31396r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31400,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_31400(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[729]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31968,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[729]);}
else{
t27=t26;
f_31968(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[730]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32003,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[730]);}
else{
t28=t27;
f_32003(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[737]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32038,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[737]);}
else{
t29=t28;
f_32038(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[732]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32073,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[732]);}
else{
t30=t29;
f_32073(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32102,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_32102(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k32100 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32102,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32109,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32117,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k32115 in k32100 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_32109(2,t2,C_SCHEME_UNDEFINED);}}

/* k32107 in k32100 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31400(t5,t4);}

/* k32071 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32073(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32073,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32077,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32077(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32075 in k32071 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31400(t7,t6);}

/* k32036 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32038,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32042,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32042(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32040 in k32036 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31400(t7,t6);}

/* k32001 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32003,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32007,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_32007(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k32005 in k32001 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_32007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31400(t7,t6);}

/* k31966 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31968,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31972,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31972(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31970 in k31966 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31400(t7,t6);}

/* k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_31400(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31400,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31403,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31403(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31798,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_31798(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31833,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[730]);}
else{
t7=t6;
f_31833(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31868,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[737]);}
else{
t8=t7;
f_31868(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31903,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[732]);}
else{
t9=t8;
f_31903(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31932,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31932(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31930 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31932,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31939,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31947,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31945 in k31930 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31939(2,t2,C_SCHEME_UNDEFINED);}}

/* k31937 in k31930 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31403(t5,t4);}

/* k31901 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31903,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31907,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31907(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31905 in k31901 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31403(t7,t6);}

/* k31866 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31868,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31872,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31872(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31870 in k31866 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31403(t7,t6);}

/* k31831 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31837,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31837(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31835 in k31831 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31403(t7,t6);}

/* k31796 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31802,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31802(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31800 in k31796 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31403(t7,t6);}

/* k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_31403(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31403,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_31406,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31406(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31628,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_31628(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31663,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[730]);}
else{
t7=t6;
f_31663(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31698,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[737]);}
else{
t8=t7;
f_31698(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31733,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[732]);}
else{
t9=t8;
f_31733(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31762,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31762(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31760 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31762,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31769,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31777,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31775 in k31760 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31769(2,t2,C_SCHEME_UNDEFINED);}}

/* k31767 in k31760 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31406(t5,t4);}

/* k31731 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31733,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31737,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31737(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31735 in k31731 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31406(t7,t6);}

/* k31696 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31698,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31702,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31702(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31700 in k31696 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31406(t7,t6);}

/* k31661 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31663,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31667,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31667(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31665 in k31661 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31406(t7,t6);}

/* k31626 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31632,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31632(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31630 in k31626 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31406(t7,t6);}

/* k31404 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_31406(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31406,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_31409,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_31409(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31458,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_31458(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31493,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[730]);}
else{
t7=t6;
f_31493(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[737]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31528,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[737]);}
else{
t8=t7;
f_31528(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31563,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[732]);}
else{
t9=t8;
f_31563(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31592,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_31592(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k31590 in k31404 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31592,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31599,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31607,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31605 in k31590 in k31404 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31599(2,t2,C_SCHEME_UNDEFINED);}}

/* k31597 in k31590 in k31404 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_31409(t5,t4);}

/* k31561 in k31404 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31563,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31567,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31567(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31565 in k31561 in k31404 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31409(t7,t6);}

/* k31526 in k31404 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31528,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31532,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31532(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31530 in k31526 in k31404 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31409(t7,t6);}

/* k31491 in k31404 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31497,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31497(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31495 in k31491 in k31404 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31409(t7,t6);}

/* k31456 in k31404 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31462,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31462(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31460 in k31456 in k31404 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_31409(t7,t6);}

/* k31407 in k31404 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_31409(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31409,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31412,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_31412(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k31410 in k31407 in k31404 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31416,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_retrieve(lf[723]),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_31416 in k31410 in k31407 in k31404 in k31401 in k31398 in mm:make-touch in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31416(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31416,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5335(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31377(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31377,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31382,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_retrieve(lf[721]));}

/* f_31382 in mm:off? in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31382(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31382,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5219(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30926(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_30926r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30926r(t0,t1,t2);}}

static void C_ccall f_30926r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30930,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_30930(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[729]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31255,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[729]);}
else{
t23=t22;
f_31255(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[730]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31290,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[730]);}
else{
t24=t23;
f_31290(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[732]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31325,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[732]);}
else{
t25=t24;
f_31325(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31354,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_31354(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k31352 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31354,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31361,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31369,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31367 in k31352 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31361(2,t2,C_SCHEME_UNDEFINED);}}

/* k31359 in k31352 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30930(t5,t4);}

/* k31323 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31325,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31329,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31329(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31327 in k31323 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30930(t7,t6);}

/* k31288 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31290,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31294,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31294(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31292 in k31288 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30930(t7,t6);}

/* k31253 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31255,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31259,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31259(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31257 in k31253 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30930(t7,t6);}

/* k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_30930(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30930,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30933,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30933(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31120,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_31120(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31155,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[730]);}
else{
t7=t6;
f_31155(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31190,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[732]);}
else{
t8=t7;
f_31190(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31219,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_31219(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k31217 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31219,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31226,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31234,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31232 in k31217 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31226(2,t2,C_SCHEME_UNDEFINED);}}

/* k31224 in k31217 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30933(t5,t4);}

/* k31188 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31190,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31194,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31194(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31192 in k31188 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30933(t7,t6);}

/* k31153 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31155(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31155,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31159,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31159(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31157 in k31153 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30933(t7,t6);}

/* k31118 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31124,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31124(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31122 in k31118 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30933(t7,t6);}

/* k30931 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_30933(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30933,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30936,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30936(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30985,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_30985(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31020,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[730]);}
else{
t7=t6;
f_31020(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31055,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[732]);}
else{
t8=t7;
f_31055(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31084,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_31084(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k31082 in k30931 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31084,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31091,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31099,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31097 in k31082 in k30931 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31091(2,t2,C_SCHEME_UNDEFINED);}}

/* k31089 in k31082 in k30931 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30936(t5,t4);}

/* k31053 in k30931 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31055,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31059,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31059(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31057 in k31053 in k30931 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30936(t7,t6);}

/* k31018 in k30931 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31020,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31024,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_31024(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k31022 in k31018 in k30931 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_31024(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30936(t7,t6);}

/* k30983 in k30931 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30985,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30989,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30989(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30987 in k30983 in k30931 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30936(t7,t6);}

/* k30934 in k30931 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_30936(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30936,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30939,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30939(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30937 in k30934 in k30931 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30939,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30943,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_retrieve(lf[721]),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_30943 in k30937 in k30934 in k30931 in k30928 in mm:make-off in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30943(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30943,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5204(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30907(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30907,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30912,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_retrieve(lf[722]));}

/* f_30912 in mm:on? in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30912(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30912,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5125(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30178(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_30178r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30178r(t0,t1,t2);}}

static void C_ccall f_30178r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30182,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_30182(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[729]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30750,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[729]);}
else{
t27=t26;
f_30750(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[730]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30785,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[730]);}
else{
t28=t27;
f_30785(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[731]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30820,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[731]);}
else{
t29=t28;
f_30820(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[732]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30855,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[732]);}
else{
t30=t29;
f_30855(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30884,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_30884(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k30882 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30884,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30891,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30899,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30897 in k30882 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30891(2,t2,C_SCHEME_UNDEFINED);}}

/* k30889 in k30882 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30182(t5,t4);}

/* k30853 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30855,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30859,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30859(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30857 in k30853 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30182(t7,t6);}

/* k30818 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30820,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30824,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30824(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30822 in k30818 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30182(t7,t6);}

/* k30783 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30785,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30789,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30789(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30787 in k30783 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30182(t7,t6);}

/* k30748 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30750,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30754,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30754(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30752 in k30748 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30182(t7,t6);}

/* k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_30182(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30182,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30185,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30185(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30580,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_30580(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30615,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[730]);}
else{
t7=t6;
f_30615(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[731]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30650,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[731]);}
else{
t8=t7;
f_30650(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30685,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[732]);}
else{
t9=t8;
f_30685(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30714,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30714(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30712 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30714,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30721,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30729,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30727 in k30712 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30721(2,t2,C_SCHEME_UNDEFINED);}}

/* k30719 in k30712 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30185(t5,t4);}

/* k30683 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30685(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30685,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30689,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30689(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30687 in k30683 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30185(t7,t6);}

/* k30648 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30650,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30654,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30654(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30652 in k30648 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30185(t7,t6);}

/* k30613 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30615,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30619,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30619(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30617 in k30613 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30185(t7,t6);}

/* k30578 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30580,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30584,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30584(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30582 in k30578 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30185(t7,t6);}

/* k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_30185(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30185,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_30188,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30188(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30410,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_30410(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30445,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[730]);}
else{
t7=t6;
f_30445(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[731]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30480,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[731]);}
else{
t8=t7;
f_30480(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30515,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[732]);}
else{
t9=t8;
f_30515(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30544,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30544(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30542 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30544,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30551,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30559,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30557 in k30542 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30551(2,t2,C_SCHEME_UNDEFINED);}}

/* k30549 in k30542 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30188(t5,t4);}

/* k30513 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30515,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30519,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30519(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30517 in k30513 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30188(t7,t6);}

/* k30478 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30480,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30484,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30484(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30482 in k30478 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30188(t7,t6);}

/* k30443 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30445,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30449,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30449(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30447 in k30443 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30188(t7,t6);}

/* k30408 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30410,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30414,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30414(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30412 in k30408 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30188(t7,t6);}

/* k30186 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_30188(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30188,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_30191,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_30191(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[729]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30240,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[729]);}
else{
t6=t5;
f_30240(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[730]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30275,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[730]);}
else{
t7=t6;
f_30275(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[731]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30310,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[731]);}
else{
t8=t7;
f_30310(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[732]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30345,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[732]);}
else{
t9=t8;
f_30345(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30374,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_30374(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k30372 in k30186 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30374,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30381,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30389,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30387 in k30372 in k30186 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30381(2,t2,C_SCHEME_UNDEFINED);}}

/* k30379 in k30372 in k30186 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30191(t5,t4);}

/* k30343 in k30186 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30345,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30349,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30349(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30347 in k30343 in k30186 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30191(t7,t6);}

/* k30308 in k30186 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30310,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30314,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30314(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30312 in k30308 in k30186 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30191(t7,t6);}

/* k30273 in k30186 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30275,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30279,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30279(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30277 in k30273 in k30186 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30191(t7,t6);}

/* k30238 in k30186 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30240,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30244,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30244(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30242 in k30238 in k30186 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30191(t7,t6);}

/* k30189 in k30186 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_30191(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30191,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30194,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30194(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30192 in k30189 in k30186 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30194,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30198,a[2]=((C_word)li471),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_retrieve(lf[722]),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_30198 in k30192 in k30189 in k30186 in k30183 in k30180 in mm:make-on in k30025 in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_30198(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30198,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5109(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29833(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29833,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29841,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29673,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_29673(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_29673(t12,(C_word)C_i_not(t11));}}

/* k29671 in parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29673(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29673,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29680,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_26617(t2,(C_word)C_a_i_list(&a,4,lf[541],lf[711],lf[546],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29681,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29706,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29708,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li469),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_29708(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do4907 in k29671 in parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29708(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29708,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29718,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[455]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_29718(t16,t13);}
else{
t13=t10;
f_29718(t13,C_SCHEME_UNDEFINED);}}}

/* k29716 in do4907 in k29671 in parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29718(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29718,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29722,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_26839(t2,t3,((C_word*)t0)[3]);}

/* k29720 in k29716 in do4907 in k29671 in parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29722,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29725,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_29725(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[716],t5,lf[717]));}}

/* k29723 in k29720 in k29716 in do4907 in k29671 in parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29725,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29728,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29777,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li467),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29786,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li468),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a29785 in k29723 in k29720 in k29716 in do4907 in k29671 in parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29786(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29786,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a29776 in k29723 in k29720 in k29716 in do4907 in k29671 in parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29777,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k29726 in k29723 in k29720 in k29716 in do4907 in k29671 in parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29728,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29731,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29747,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  op-type?");
f_29681(t3,((C_word*)((C_word*)t0)[6])[1],lf[702]);}

/* k29745 in k29726 in k29723 in k29720 in k29716 in do4907 in k29671 in parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29747,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_29731(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29754,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  op-type?");
f_29681(t2,((C_word*)((C_word*)t0)[6])[1],lf[715]);}}

/* k29752 in k29745 in k29726 in k29723 in k29720 in k29716 in do4907 in k29671 in parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29754,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_29731(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[712],t2,lf[713],t3,lf[714]));}}
else{
t2=((C_word*)t0)[5];
f_29731(2,t2,C_SCHEME_UNDEFINED);}}

/* k29729 in k29726 in k29723 in k29720 in k29716 in do4907 in k29671 in parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29731,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29737,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k29735 in k29729 in k29726 in k29723 in k29720 in k29716 in do4907 in k29671 in parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_29708(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k29704 in k29671 in parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_29841(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k29671 in parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29681(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29681,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k29678 in k29671 in parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29680,2,t0,t1);}
t2=((C_word*)t0)[2];
f_29841(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k29839 in parse-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29841(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  gather-clauses");
f_26768(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29419(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29419,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[705],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29441,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[708],t8,lf[709]));}
else{
t19=t17;
f_29441(2,t19,C_SCHEME_UNDEFINED);}}

/* k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29441,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29456,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[707]));}
else{
t9=t8;
f_29456(2,t9,C_SCHEME_UNDEFINED);}}

/* k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29456,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29459,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[6]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[457],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_29459(t6,t5);}
else{
t4=t2;
f_29459(t4,C_SCHEME_UNDEFINED);}}

/* k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29459(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29459,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29462,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29629,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li463),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29635,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li464),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a29634 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29635(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29635,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a29628 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29629,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  parse-then-else-dependents");
f_29288(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29462,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29465,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_29465(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29611,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  gather-clauses");
f_26768(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k29609 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29465(t3,t2);}

/* k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29465(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29465,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29468,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  loop-operator-set!");
f_26515(t2,((C_word*)((C_word*)t0)[7])[1],lf[20]);}

/* k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29468,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_29592,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29604,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping");
t4=C_retrieve2(lf[535],"loop-looping");
f_26569(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k29602 in k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29604,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[483],t1);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k29590 in k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29592,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29475,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29488,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_29488(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_29488(t7,(C_word)C_eqp(t6,lf[16]));}}

/* k29486 in k29590 in k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29488(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29488,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29495,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[706]));}
else{
t5=t4;
f_29495(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_29475(t2,C_SCHEME_UNDEFINED);}}

/* k29493 in k29486 in k29590 in k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29495,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29498,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29551,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li461),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29565,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li462),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a29564 in k29493 in k29486 in k29590 in k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29565(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29565,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a29550 in k29493 in k29486 in k29590 in k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29551,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29559,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k29557 in a29550 in k29493 in k29486 in k29590 in k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  parse-then-else-dependents");
f_29288(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k29496 in k29493 in k29486 in k29590 in k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29498,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29501,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_29501(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29537,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  gather-clauses");
f_26768(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k29535 in k29496 in k29493 in k29486 in k29590 in k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29501(t3,t2);}

/* k29499 in k29496 in k29493 in k29486 in k29590 in k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29501(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29501,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29530,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping");
t4=C_retrieve2(lf[535],"loop-looping");
f_26569(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k29528 in k29499 in k29496 in k29493 in k29486 in k29590 in k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29530,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[483],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29507,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping-set!");
f_26575(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k29505 in k29528 in k29499 in k29496 in k29493 in k29486 in k29590 in k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29507,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29510,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping-set!");
f_26575(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k29508 in k29505 in k29528 in k29499 in k29496 in k29493 in k29486 in k29590 in k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29510,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29514,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 379  gather-clauses");
f_26768(t2,lf[20],t3);}

/* k29512 in k29508 in k29505 in k29528 in k29499 in k29496 in k29493 in k29486 in k29590 in k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29514(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_29475(t3,t2);}

/* k29473 in k29590 in k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29475(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29475,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29478,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 379  loop-looping-set!");
f_26575(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k29476 in k29473 in k29590 in k29466 in k29463 in k29460 in k29457 in k29454 in k29439 in parse-conditional in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29288(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29288,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29292,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_29297,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li459),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_29297(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4840 in parse-then-else-dependents in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29297(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29297,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29245,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_26839(t12,t10,t11);}}

/* k29243 in do4840 in parse-then-else-dependents in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29245,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_29251,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_29251(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[702]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[703]);
t8=t2;
f_29251(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_29251(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_29251(t3,C_SCHEME_FALSE);}}

/* k29249 in k29243 in do4840 in parse-then-else-dependents in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29251(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29251,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_29314,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_29314(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[700],t6,lf[701]));}}

/* k29312 in k29249 in k29243 in do4840 in parse-then-else-dependents in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29314,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29317,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29387,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li457),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29400,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li458),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a29399 in k29312 in k29249 in k29243 in do4840 in parse-then-else-dependents in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29400(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29400,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a29386 in k29312 in k29249 in k29243 in do4840 in parse-then-else-dependents in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29387,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29395,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k29393 in a29386 in k29312 in k29249 in k29243 in do4840 in parse-then-else-dependents in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k29315 in k29312 in k29249 in k29243 in do4840 in parse-then-else-dependents in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29317,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29321,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k29319 in k29315 in k29312 in k29249 in k29243 in do4840 in parse-then-else-dependents in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29321,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29326,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_29326(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[455]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[699]));}
else{
t10=t5;
f_29326(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[16]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_29326(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29364,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_26839(t10,t11,((C_word*)t0)[3]);}}}}

/* k29362 in k29319 in k29315 in k29312 in k29249 in k29243 in do4840 in parse-then-else-dependents in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_29326(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_29326(2,t2,C_SCHEME_UNDEFINED);}}

/* k29324 in k29319 in k29315 in k29312 in k29249 in k29243 in do4840 in parse-then-else-dependents in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_29297(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k29290 in parse-then-else-dependents in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29187(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29187,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29194,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[696],t13,lf[697]));}
else{
t13=t11;
f_29194(2,t13,C_SCHEME_UNDEFINED);}}

/* k29192 in parse-return in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29194,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29225,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_26839(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29223 in k29192 in parse-return in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29225,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29213,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29221,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k29219 in k29223 in k29192 in parse-return in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29221,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_26617(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[541],lf[682],lf[546],t2));}

/* k29211 in k29223 in k29192 in parse-return in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29096(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29096,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_29103,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[693],t15,lf[694]));}
else{
t15=t13;
f_29103(2,t15,C_SCHEME_UNDEFINED);}}

/* k29101 in parse-thereis in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29103,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29171,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_26839(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k29169 in k29101 in parse-thereis in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29171,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29114,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[690]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_29114(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[691]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[457],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_29114(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[692]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_29114(t9,t8);}
else{
t8=t4;
f_29114(t8,C_SCHEME_UNDEFINED);}}}}

/* k29112 in k29169 in k29101 in parse-thereis in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29114(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29114,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29125,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29141,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k29139 in k29112 in k29169 in k29101 in parse-thereis in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29141,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_26617(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[541],lf[690],lf[546],t3,lf[549],t4));}

/* k29123 in k29112 in k29169 in k29101 in parse-thereis in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29030(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_29030,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29041,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[687],t7,lf[688]));}
else{
t13=t12;
f_29041(2,t13,C_SCHEME_UNDEFINED);}}

/* k29039 in parse-while-until in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29041,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29044,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[685]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_29044(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[686]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[457],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_29044(t10,t9);}
else{
t5=t2;
f_29044(t5,C_SCHEME_UNDEFINED);}}}

/* k29042 in k29039 in parse-while-until in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_29044(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29044,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29051,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],lf[684]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_26617(t2,(C_word)C_a_i_list(&a,4,lf[541],((C_word*)t0)[2],lf[546],t4));}

/* k29049 in k29042 in k29039 in parse-while-until in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_29024(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29024,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[682],t2));}

/* parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28478(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28478,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28487,a[2]=((C_word)li447),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28492,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28497,a[2]=((C_word)li449),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_28509,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[679],t7,lf[680]));}
else{
t30=t29;
f_28509(2,t30,C_SCHEME_UNDEFINED);}}

/* k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28509,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_28520,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_28520(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[675]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28973,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[678]));}
else{
t11=t9;
f_28973(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_28520(2,t9,C_SCHEME_UNDEFINED);}}}

/* k28971 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28973,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28979,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 379  loop-variable?");
f_26845(t2,t3);}

/* k28977 in k28971 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28979,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_28520(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[676],t2,lf[677]));}}

/* k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28520,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_28524,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28405,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li451),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_28405(t9,t2,C_SCHEME_FALSE);}

/* do4662 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_28405(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28405,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28419,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28430,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  loop-collectors");
t9=C_retrieve2(lf[532],"loop-collectors");
f_26533(3,t9,t7,t8);}}

/* k28428 in do4662 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28430,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28365,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li450),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_28365(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do4654 in k28428 in do4662 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_28365(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28365,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28378,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_28378(t12,t11);}
else{
t10=t6;
f_28378(t10,C_SCHEME_UNDEFINED);}}}

/* k28376 in do4654 in k28428 in do4662 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_28378(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_28365(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k28417 in do4662 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_28405(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28524,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_28527,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28957,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28961,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  collector-type");
f_28492(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_28527(2,t6,t5);}}

/* k28959 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[672];
t3=lf[673];
t4=lf[674];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_28957(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_28957(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_28957(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_28957(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k28955 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_28957(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28957,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_28527(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28953,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  collector-type");
f_28492(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28951 in k28955 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28953,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[669],t1,lf[670],((C_word*)t0)[2],lf[671]));}

/* k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28527,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28530,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[653]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[654]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28573,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28611,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_28611(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 379  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[655]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28640,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  collector-acc");
f_28497(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[656]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[657]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28652,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[659]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[18]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28747,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_28747(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[663]);
t10=t8;
f_28747(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[668])));}}}}

/* k28745 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_28747(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28747,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28750,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28863,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28921,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t9,((C_word*)((C_word*)t0)[13])[1],lf[667]);}
else{
t9=t8;
f_28863(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28856,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  collector-acc");
f_28497(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_28530(t2,C_SCHEME_UNDEFINED);}}

/* k28854 in k28745 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_28750(t6,t5);}

/* k28919 in k28745 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28921,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28863(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k28861 in k28745 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_28863(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28863,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28867,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[666]);}

/* k28865 in k28861 in k28745 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28867,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28871,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[665]);}

/* k28869 in k28865 in k28861 in k28745 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28871,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28913,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t3,((C_word*)((C_word*)t0)[11])[1],lf[664]);}

/* k28911 in k28869 in k28865 in k28861 in k28745 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28913,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28909,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k28907 in k28911 in k28869 in k28865 in k28861 in k28745 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28909,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28887,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-collector");
f_28487(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k28885 in k28907 in k28911 in k28869 in k28865 in k28861 in k28745 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28887,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_28750(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_28750(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28748 in k28745 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_28750(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28750,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28753,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[18]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[660]);
t5=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[661],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[662],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_28753(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[663]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[660],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[661],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_28753(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[661],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[662],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_28753(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k28751 in k28748 in k28745 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_28753(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28753,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_28530(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_28530(t2,C_SCHEME_UNDEFINED);}}

/* k28650 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28652,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[656]);
t3=(C_truep(t2)?lf[408]:lf[486]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28658,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28702,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_28702(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 379  gensym");
t9=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[658]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28735,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  collector-acc");
f_28497(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k28733 in k28650 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28658(t3,t2);}

/* k28700 in k28650 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28702,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28728,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k28726 in k28700 in k28650 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28728,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28710,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-collector");
f_28487(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k28708 in k28726 in k28700 in k28650 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28710,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_28658(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[456],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_28658(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28656 in k28650 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_28658(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28658,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28698,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k28696 in k28656 in k28650 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28698,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[457],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[456],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[20],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[483],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_28530(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k28638 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_28573(t3,t2);}

/* k28609 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28611,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28633,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k28631 in k28609 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28633,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28619,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-collector");
f_28487(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k28617 in k28631 in k28609 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28619,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_28573(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_28573(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k28571 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_28573(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28573,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[653]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[126],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28530(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[126],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_28530(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k28528 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_28530(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28530,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28537,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28541,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t4=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k28539 in k28528 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28541,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28545,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k28543 in k28539 in k28528 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28545,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28549,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k28547 in k28543 in k28539 in k28528 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28549,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28553,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k28551 in k28547 in k28543 in k28539 in k28528 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28553,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_26617(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[541],((C_word*)t0)[5],lf[542],((C_word*)t0)[4],lf[544],((C_word*)t0)[3],lf[546],((C_word*)t0)[2],lf[549],t1,lf[543],t2,lf[545],C_SCHEME_END_OF_LIST));}

/* k28535 in k28528 in k28525 in k28522 in k28518 in k28507 in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_28497(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28497,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_28492(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28492,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_28487(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28487,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28319(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28319,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28330,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[650],t6,lf[651]));}
else{
t12=t11;
f_28330(2,t12,C_SCHEME_UNDEFINED);}}

/* k28328 in parse-initially in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28330,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28345,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_26617(t6,(C_word)C_a_i_list(&a,4,lf[541],((C_word*)t0)[2],lf[544],t7));}

/* k28343 in k28328 in parse-initially in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28281(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28281,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28292,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[647],t6,lf[648]));}
else{
t12=t11;
f_28292(2,t12,C_SCHEME_UNDEFINED);}}

/* k28290 in parse-finally in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28292,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28307,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_26617(t6,(C_word)C_a_i_list(&a,4,lf[541],((C_word*)t0)[2],lf[548],t7));}

/* k28305 in k28290 in parse-finally in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28214(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28214,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28225,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28234,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li443),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_28234(t16,t12);}

/* do4611 in parse-do in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_28234(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28234,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28244,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_28244(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_26839(t3,t4,((C_word*)t0)[5]);}}

/* k28242 in do4611 in parse-do in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28244,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[644],((C_word*)t0)[4],lf[645]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28257,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_28234(t7,((C_word*)t0)[7]);}}

/* k28255 in k28242 in do4611 in parse-do in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k28223 in parse-do in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28225,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28232,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_26617(t2,(C_word)C_a_i_list(&a,4,lf[541],((C_word*)t0)[3],lf[546],((C_word*)((C_word*)t0)[2])[1]));}

/* k28230 in k28223 in parse-do in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28232(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28021(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_28021,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_28028,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_28081,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li441),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_28081(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do4567 in parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_28081(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28081,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28091,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_28091(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_26839(t7,t8,((C_word*)t0)[5]);}}

/* k28089 in do4567 in parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28091,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28102,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_28205,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 379  loop-variable?");
f_26845(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k28203 in k28089 in do4567 in parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28205,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_28111,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[634],((C_word*)((C_word*)t0)[10])[1],lf[635]));}
else{
t4=t3;
f_28111(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[455]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28133,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[636]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28162,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28170,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[637]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[465]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[638]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_28102(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[639],((C_word*)((C_word*)t0)[10])[1],lf[640]));}
else{
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[641],((C_word*)((C_word*)t0)[10])[1],lf[642]));}}}}}

/* k28168 in k28203 in k28089 in do4567 in parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28170(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28170,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28133(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k28160 in k28203 in k28089 in do4567 in parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28162,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28133(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k28131 in k28203 in k28089 in do4567 in parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_28102(2,t6,t5);}

/* k28109 in k28203 in k28089 in do4567 in parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28111,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28114,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[632],((C_word*)((C_word*)t0)[8])[1],lf[633]));}
else{
t3=t2;
f_28114(2,t3,C_SCHEME_UNDEFINED);}}

/* k28112 in k28109 in k28203 in k28089 in do4567 in parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_28102(2,t6,t5);}

/* k28100 in k28089 in do4567 in parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_28081(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k28026 in parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28028,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28031,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[631]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28071,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28079,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_28031(2,t3,C_SCHEME_UNDEFINED);}}}

/* k28077 in k28026 in parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28079,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_28031(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k28069 in k28026 in parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28071,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28031(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k28029 in k28026 in parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28031,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28038,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28042,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t4=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k28040 in k28029 in k28026 in parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28042,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28046,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k28044 in k28040 in k28029 in k28026 in parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28046,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_26617(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[541],lf[630],lf[542],((C_word*)t0)[2],lf[544],t1));}

/* k28036 in k28029 in k28026 in parse-with in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_28038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27879(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27879,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27889,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27927,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li439),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_27927(t22,t18,C_SCHEME_FALSE);}

/* do4529 in parse-general-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_27927(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27927,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27937,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_27937(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_26839(t5,t6,((C_word*)t0)[5]);}}

/* k27935 in do4529 in parse-general-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27937,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27948,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[628]));}
else{
t7=t6;
f_27948(2,t7,C_SCHEME_UNDEFINED);}}}

/* k27946 in k27935 in do4529 in parse-general-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27948,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27951,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[465]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27960,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[623]));}
else{
t6=t5;
f_27960(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[624]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27985,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[625]));}
else{
t7=t6;
f_27985(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[626],((C_word*)((C_word*)t0)[12])[1],lf[627]));}}}

/* k27983 in k27946 in k27935 in do4529 in parse-general-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27985,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_27951(2,t10,t9);}

/* k27958 in k27946 in k27935 in do4529 in parse-general-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27960,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_27951(2,t8,t7);}

/* k27949 in k27946 in k27935 in do4529 in parse-general-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_27927(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k27887 in parse-general-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27889,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27896,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27925,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k27923 in k27887 in parse-general-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27925,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_26617(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[541],lf[571],lf[542],t2,lf[544],t3,lf[546],t4,lf[547],t5));}

/* k27894 in k27887 in parse-general-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27528(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27528,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27535,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[621]);}

/* k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27535,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27541,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27769,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li437),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_27769(t25,t21,C_SCHEME_FALSE);}

/* do4462 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_27769(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27769,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27779,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_27779(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_26839(t5,t6,((C_word*)t0)[4]);}}

/* k27777 in do4462 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27779,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27790,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[620]));}
else{
t7=t6;
f_27790(2,t7,C_SCHEME_UNDEFINED);}}}

/* k27788 in k27777 in do4462 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27790,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27793,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[610]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27802,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_27802(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[619]);
if(C_truep(t6)){
t7=t5;
f_27802(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[604]);
t8=t5;
f_27802(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[609])));}}}

/* k27800 in k27788 in k27777 in do4462 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_27802(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27802,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27805,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[612],((C_word*)((C_word*)t0)[9])[1],lf[613],((C_word*)((C_word*)t0)[10])[1],lf[614]));}
else{
t3=t2;
f_27805(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[595]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[615]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[604]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[616]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_27793(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[617],((C_word*)((C_word*)t0)[9])[1],lf[618]));}}}

/* k27803 in k27800 in k27788 in k27777 in do4462 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_27793(2,t7,t6);}

/* k27791 in k27788 in k27777 in do4462 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_27769(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k27539 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27541,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27767,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k27765 in k27539 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27767,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27763,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k27761 in k27765 in k27539 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27763,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_27552,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[604]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_27569,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[608]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[609]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27645,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[335],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_27645(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[335],((C_word*)t0)[4]);
t9=t7;
f_27645(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27674,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27709,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_27709(t10,(C_word)C_eqp(t9,lf[611]));}
else{
t9=t8;
f_27709(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_27674(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k27707 in k27761 in k27765 in k27539 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_27709(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27709,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27674(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_27674(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k27672 in k27761 in k27765 in k27539 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_27674(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27674,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27690,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[610]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[6]);
t5=t2;
f_27690(t5,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_27690(t4,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k27688 in k27672 in k27761 in k27765 in k27539 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_27690(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27690,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27552(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k27643 in k27761 in k27765 in k27539 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_27645(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27645,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[333],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[483],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_27552(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k27567 in k27761 in k27765 in k27539 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27569,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27572,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[607]);}

/* k27570 in k27567 in k27761 in k27765 in k27539 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27572,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27636,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t2,((C_word*)t0)[7],C_fix(0));}

/* k27634 in k27570 in k27567 in k27761 in k27765 in k27539 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27636,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27632,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k27630 in k27634 in k27570 in k27567 in k27761 in k27765 in k27539 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27632,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[605],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[126],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[606],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[408],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[457],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_27552(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k27550 in k27761 in k27765 in k27539 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_27552(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27552,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27559,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27563,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t4=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27561 in k27550 in k27761 in k27765 in k27539 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27563,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_26617(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[541],lf[571],lf[542],t1,lf[545],((C_word*)((C_word*)t0)[5])[1],lf[544],((C_word*)((C_word*)t0)[4])[1],lf[546],((C_word*)((C_word*)t0)[3])[1],lf[547],((C_word*)((C_word*)t0)[2])[1]));}

/* k27557 in k27550 in k27761 in k27765 in k27539 in k27533 in parse-sequence-iteration in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27481(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27481,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[601]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27496,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li434),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27514,a[2]=t2,a[3]=((C_word)li435),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a27513 in parse-repeat in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27514(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27514,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,t1,t2,t4);}

/* a27495 in parse-repeat in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27496,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27508,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[602]);}

/* k27506 in a27495 in parse-repeat in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27508,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[571],t1,lf[576],t2);
C_trace("ChickenBridge.scm: 379  parse-numerical-for");
t4=C_retrieve2(lf[570],"parse-numerical-for");
f_27099(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27099(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27099,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27109,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27308,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li432),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_27308(t31,t27,C_SCHEME_FALSE);}

/* do4363 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_27308(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27308,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27318,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_27318(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_26839(t5,t6,((C_word*)t0)[6]);}}

/* k27316 in do4363 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27318,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_27329,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[599]));}
else{
t7=t6;
f_27329(2,t7,C_SCHEME_UNDEFINED);}}}

/* k27327 in k27316 in do4363 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27329,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27332,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[578]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[574]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27344,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[579],((C_word*)((C_word*)t0)[12])[1],lf[580],((C_word*)((C_word*)t0)[9])[1],lf[581]));}
else{
t7=t6;
f_27344(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[576]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27365,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[582],((C_word*)((C_word*)t0)[12])[1],lf[583],((C_word*)((C_word*)t0)[3])[1],lf[584]));}
else{
t8=t7;
f_27365(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[585]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27386,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[586],((C_word*)((C_word*)t0)[12])[1],lf[587],((C_word*)((C_word*)t0)[3])[1],lf[588]));}
else{
t9=t8;
f_27386(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[575]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27407,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[589],((C_word*)((C_word*)t0)[12])[1],lf[590],((C_word*)((C_word*)t0)[3])[1],lf[591]));}
else{
t10=t9;
f_27407(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[577]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27428,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[592],((C_word*)((C_word*)t0)[12])[1],lf[593],((C_word*)((C_word*)t0)[3])[1],lf[594]));}
else{
t11=t10;
f_27428(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[595]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27449,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[596]));}
else{
t12=t11;
f_27449(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[597],((C_word*)((C_word*)t0)[12])[1],lf[598]));}}}}}}}

/* k27447 in k27327 in k27316 in do4363 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_27332(2,t6,t5);}

/* k27426 in k27327 in k27316 in do4363 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27428(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_27332(2,t7,t6);}

/* k27405 in k27327 in k27316 in do4363 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_27332(2,t7,t6);}

/* k27384 in k27327 in k27316 in do4363 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_27332(2,t7,t6);}

/* k27363 in k27327 in k27316 in do4363 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_27332(2,t7,t6);}

/* k27342 in k27327 in k27316 in do4363 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_27332(2,t7,t6);}

/* k27330 in k27327 in k27316 in do4363 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_27308(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27109,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_27112,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_27112(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[578]);
t5=t2;
f_27112(t5,t4);}}

/* k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_27112(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27112,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27115,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[574]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27275,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_27275(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[577]);
t6=t4;
f_27275(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[575])));}}

/* k27273 in k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_27275(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[130]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[575]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[263]);
t5=((C_word*)t0)[2];
f_27115(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[408]);
t5=((C_word*)t0)[2];
f_27115(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[126]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[576]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[480]);
t5=((C_word*)t0)[2];
f_27115(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[486]);
t5=((C_word*)t0)[2];
f_27115(t5,t4);}}}

/* k27113 in k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_27115(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27115,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27118,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27246,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27266,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k27264 in k27113 in k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27266,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27118(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k27244 in k27113 in k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27246,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27118(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k27116 in k27113 in k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_27118(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27118,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_27121,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_27121(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27211,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t5=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[573]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_27121(t5,t4);}}

/* k27209 in k27116 in k27113 in k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27211,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27228,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t2,t1,C_SCHEME_FALSE);}

/* k27226 in k27209 in k27116 in k27113 in k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27228,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_27121(t8,t7);}

/* k27119 in k27116 in k27113 in k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_27121(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27121,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27128,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27160,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[572]);}
else{
t6=t5;
f_27128(t6,C_SCHEME_UNDEFINED);}}

/* k27158 in k27119 in k27116 in k27113 in k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27160,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27163,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27178,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27194,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_26851(t3,t1,C_SCHEME_FALSE);}}

/* k27192 in k27158 in k27119 in k27116 in k27113 in k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27194,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27163(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k27176 in k27158 in k27119 in k27116 in k27113 in k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27178,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27163(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k27161 in k27158 in k27119 in k27116 in k27113 in k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_27163(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27163,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_27128(t4,t3);}

/* k27126 in k27119 in k27116 in k27113 in k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_27128(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27128,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27135,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27139,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t4=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k27137 in k27126 in k27119 in k27116 in k27113 in k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27139,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27143,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k27141 in k27137 in k27126 in k27119 in k27116 in k27113 in k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27143,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_26617(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[541],lf[571],lf[542],((C_word*)t0)[2],lf[544],t1,lf[547],t2,lf[545],t4));}

/* k27133 in k27126 in k27119 in k27116 in k27113 in k27110 in k27107 in parse-numerical-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27017(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_27017,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27021,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_26839(t5,t6,t4);}

/* k27019 in parse-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27021,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[563]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27039,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  loop-variable?");
f_26845(t4,t3);}}

/* k27037 in k27019 in parse-for in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27039(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27039,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[564]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[565],t6,lf[566],lf[567]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_26857(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[568],t2,lf[569]));}}

/* loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26857(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26857,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26913,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26865,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li429),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_26865(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do4314 in loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26865(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26865,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26875,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_26875(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_26875(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_26839(t6,t8,((C_word*)t0)[2]);}}}

/* k26873 in do4314 in loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26875,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  reverse");
t2=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_26865(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k26911 in loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26913,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26916,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  newline");
t3=*((C_word*)lf[397]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k26914 in k26911 in loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26916,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26919,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  display");
t3=*((C_word*)lf[398]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[561]);}

/* k26917 in k26914 in k26911 in loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26919,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26922,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26994,a[2]=t4,a[3]=((C_word)li428),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_26994(t6,t2,((C_word*)t0)[2]);}

/* do4324 in k26917 in k26914 in k26911 in loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26994(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26994,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27004,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  display");
t5=*((C_word*)lf[398]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k27002 in do4324 in k26917 in k26914 in k26911 in loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_27004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26994(t3,((C_word*)t0)[2],t2);}

/* k26920 in k26917 in k26914 in k26911 in loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26922,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26925,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  newline");
t3=*((C_word*)lf[397]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k26923 in k26920 in k26917 in k26914 in k26911 in loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26925,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26928,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  display");
t3=*((C_word*)lf[398]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[560]);}

/* k26926 in k26923 in k26920 in k26917 in k26914 in k26911 in loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26928,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26931,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 379  display");
t3=*((C_word*)lf[398]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[556]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26948,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li427),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_26948(t6,t2,((C_word*)t0)[2]);}}

/* do4329 in k26926 in k26923 in k26920 in k26917 in k26914 in k26911 in loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26948(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26948,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26958,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 379  display");
t5=*((C_word*)lf[398]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[559]);}
else{
t5=t3;
f_26958(2,t5,C_SCHEME_UNDEFINED);}}}

/* k26956 in do4329 in k26926 in k26923 in k26920 in k26917 in k26914 in k26911 in loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26958,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26961,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  display");
t4=*((C_word*)lf[398]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k26959 in k26956 in do4329 in k26926 in k26923 in k26920 in k26917 in k26914 in k26911 in loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26961,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26964,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[557]:lf[558]);
C_trace("ChickenBridge.scm: 379  display");
t6=*((C_word*)lf[398]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k26962 in k26959 in k26956 in do4329 in k26926 in k26923 in k26920 in k26917 in k26914 in k26911 in loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26948(t3,((C_word*)t0)[2],t2);}

/* k26929 in k26926 in k26923 in k26920 in k26917 in k26914 in k26911 in loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26931,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26934,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  newline");
t3=*((C_word*)lf[397]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k26932 in k26929 in k26926 in k26923 in k26920 in k26917 in k26914 in k26911 in loop-error in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[555]);}

/* make-binding in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26851(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26851,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26845(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26845,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26839(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26839,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26768(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26768,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26770,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26809,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_26770(t5,t3,C_retrieve2(lf[531],"loop-bindings"));}

/* k26807 in gather-clauses in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26809,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26813,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_26770(t2,((C_word*)t0)[2],C_retrieve2(lf[532],"loop-collectors"));}

/* k26811 in k26807 in gather-clauses in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26813,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26817,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_26770(t2,((C_word*)t0)[2],C_retrieve2(lf[533],"loop-initially"));}

/* k26815 in k26811 in k26807 in gather-clauses in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26817,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_26770(t2,((C_word*)t0)[2],C_retrieve2(lf[534],"loop-end-tests"));}

/* k26819 in k26815 in k26811 in k26807 in gather-clauses in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26821,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26825,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_26770(t2,((C_word*)t0)[2],C_retrieve2(lf[535],"loop-looping"));}

/* k26823 in k26819 in k26815 in k26811 in k26807 in gather-clauses in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26825,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26829,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_26770(t2,((C_word*)t0)[2],C_retrieve2(lf[537],"loop-stepping"));}

/* k26827 in k26823 in k26819 in k26815 in k26811 in k26807 in gather-clauses in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26829,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26833,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_26770(t2,((C_word*)t0)[2],C_retrieve2(lf[538],"loop-finally"));}

/* k26831 in k26827 in k26823 in k26819 in k26815 in k26811 in k26807 in gather-clauses in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26837,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_26770(t2,((C_word*)t0)[2],C_retrieve2(lf[539],"loop-returning"));}

/* k26835 in k26831 in k26827 in k26823 in k26819 in k26815 in k26811 in k26807 in gather-clauses in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26837,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_26617(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[541],((C_word*)t0)[9],lf[542],((C_word*)t0)[8],lf[543],((C_word*)t0)[7],lf[544],((C_word*)t0)[6],lf[545],((C_word*)t0)[5],lf[546],((C_word*)t0)[4],lf[547],((C_word*)t0)[3],lf[548],((C_word*)t0)[2],lf[549],t1));}

/* gather-clause in gather-clauses in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26770(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26770,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26776,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li421),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_26776(t8,t1,C_SCHEME_END_OF_LIST);}

/* do4297 in gather-clause in gather-clauses in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26776(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26776,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26787,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26798,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k26796 in do4297 in gather-clause in gather-clauses in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k26785 in do4297 in gather-clause in gather-clauses in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_26776(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26617(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26617,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26632,a[2]=t5,a[3]=t3,a[4]=((C_word)li419),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_26632(t7,t1,t2);}}

/* do4285 in make-loop-clause in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26632(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26632,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26645,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[541]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 379  loop-operator-set!");
f_26515(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[542]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_26645(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[543]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_26645(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[544]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_26645(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[545]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_26645(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[546]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 379  loop-looping-set!");
f_26575(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[547]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_26645(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[548]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_26645(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[549]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_26645(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_26645(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k26643 in do4285 in make-loop-clause in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26632(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26605(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26605,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26593(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26593,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26581(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26581,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26575(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26575,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26569(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26569,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26557(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26557,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26545(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26545,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26533(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26533,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26521(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26521,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k26505 in k26502 in k26499 in k26496 in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26515(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26515,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26479(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26479,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  print-error");
t2=C_retrieve(lf[495]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[529]);}

/* sal:open in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26473(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26473,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  print-error");
t2=C_retrieve(lf[495]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[527]);}

/* sal:load in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26419(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26419,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26423,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  file-exists?");
t4=C_retrieve(lf[525]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k26421 in sal:load in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26426,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26445,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26471,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  string-append");
t6=*((C_word*)lf[53]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,lf[521],((C_word*)t0)[2],lf[522]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26439,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  string-append");
t4=*((C_word*)lf[53]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[523],((C_word*)t0)[2],lf[524]);}}

/* k26437 in k26421 in sal:load in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  print-error");
t2=C_retrieve(lf[495]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26469 in k26421 in sal:load in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  print-message");
t2=C_retrieve(lf[506]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26443 in k26421 in sal:load in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26445,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26451,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(4)))){
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(4));
C_trace("substring=?");
t4=C_retrieve(lf[519]);
((C_proc7)(void*)(*((C_word*)t4+1)))(7,t4,t2,((C_word*)t0)[3],lf[520],t3,C_fix(0),C_SCHEME_FALSE);}
else{
t3=t2;
f_26451(2,t3,C_SCHEME_FALSE);}}

/* k26449 in k26443 in k26421 in sal:load in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  load-sal-file");
t2=C_retrieve(lf[517]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 378  load");
t2=C_retrieve(lf[518]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k26424 in k26421 in sal:load in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26410(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_26410,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26414,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  chdir");
t4=C_retrieve(lf[44]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k26412 in sal:chdir in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26257(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_26257r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26257r(t0,t1,t2);}}

static void C_ccall f_26257r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26260,a[2]=t4,a[3]=((C_word)li402),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26379,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26384,a[2]=t4,a[3]=t8,a[4]=((C_word)li403),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_26384(t10,t6,t2);}

/* do4111 in sal:print in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26384(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26384,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 378  print-message");
t3=C_retrieve(lf[506]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[514]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26397,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_26260(t5,t3,t4,C_fix(0));}}

/* k26395 in do4111 in sal:print in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26384(t3,((C_word*)t0)[2],t2);}

/* k26377 in sal:print in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26379(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26260(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26260,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 378  print-message");
t5=C_retrieve(lf[506]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[507]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26288,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  print-message");
t6=C_retrieve(lf[506]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[510]);}
else{
t5=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 378  print-message");
t6=C_retrieve(lf[506]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[511]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26360,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  number->string");
C_number_to_string(3,0,t6,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 378  print-message");
t6=C_retrieve(lf[506]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}
else{
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26376,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  sprintf");
t7=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[512],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 378  print-message");
t5=C_retrieve(lf[506]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[513]);}}

/* k26374 in printer in sal:print in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  print-message");
t2=C_retrieve(lf[506]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26358 in printer in sal:print in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  print-message");
t2=C_retrieve(lf[506]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26286 in printer in sal:print in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26288,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26291,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26296,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li401),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_26296(t6,t2,((C_word*)t0)[2]);}

/* do4103 in k26286 in printer in sal:print in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26296(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26296,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26306,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 378  printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_26260(t6,t3,t4,t5);}}

/* k26304 in do4103 in k26286 in printer in sal:print in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26306,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26309,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_26309(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  print-message");
t4=C_retrieve(lf[506]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[509]);}}

/* k26307 in k26304 in do4103 in k26286 in printer in sal:print in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_26296(t3,((C_word*)t0)[2],t2);}

/* k26289 in k26286 in printer in sal:print in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  print-message");
t2=C_retrieve(lf[506]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[508]);}

/* sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26080(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_26080,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26084,a[2]=t4,a[3]=t6,a[4]=t5,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep(C_retrieve(lf[493]))){
C_trace("ChickenBridge.scm: 378  printf");
t8=C_retrieve(lf[474]);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[504],t4);}
else{
t8=t7;
f_26084(2,t8,C_SCHEME_UNDEFINED);}}

/* k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26084(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26084,2,t0,t1);}
t2=C_mutate(&lf[490],((C_word*)t0)[6]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26089,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)t0)[2];
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,C_retrieve2(lf[419],"list->token"),t4);}

/* k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26089,2,t0,t1);}
t2=C_mutate(&lf[491],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26092,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_26092(t5,t4);}
else{
t4=t3;
f_26092(t4,C_SCHEME_FALSE);}}

/* k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26092(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26092,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26096,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[491],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23827,a[2]=t4,a[3]=t3,a[4]=((C_word)li399),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  call/cc");
t7=*((C_word*)lf[503]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a23826 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23827(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23827,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23833,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li397),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23840,a[2]=t2,a[3]=((C_word)li398),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a23839 in a23826 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23840(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23840,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23847,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_23847(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_23847(t6,C_SCHEME_FALSE);}}

/* k23845 in a23839 in a23826 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23847(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23847,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23854,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_23484(t2,lf[500],lf[501],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_23304(((C_word*)t0)[4],lf[502],C_retrieve2(lf[468],"*maxtokpos*"));}}

/* k23852 in k23845 in a23839 in a23826 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_23512(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a23832 in a23826 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23833,2,t0,t1);}
t2=lf[468]=C_fix(0);;
C_trace("ChickenBridge.scm: 378  parser");
f_23865(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k26094 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26096,2,t0,t1);}
t2=C_mutate(&lf[492],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26099,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[492],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[435]))){
t5=C_retrieve2(lf[490],"*sal-string*");
t6=C_retrieve2(lf[492],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26133,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  parse-error-position");
f_23343(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 378  pp");
t5=C_retrieve(lf[498]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[492],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 378  eval");
t5=C_retrieve(lf[499]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[492],"*sal-output*"));}}}

/* k26131 in k26094 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26133,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26139,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26226,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li396),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_26226(t11,t7,C_SCHEME_FALSE);}

/* do4076 in k26131 in k26094 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26226(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26226,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26236,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_26236(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_26236(t11,t10);}}}

/* k26234 in do4076 in k26131 in k26094 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26236(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_26226(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k26137 in k26131 in k26094 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26139,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26147,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26196,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li395),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_26196(t9,t5,C_SCHEME_FALSE);}

/* do4083 in k26137 in k26131 in k26094 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26196(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26196,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26206,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_26206(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_26206(t11,t10);}}}

/* k26204 in do4083 in k26137 in k26131 in k26094 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_26206(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_26196(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k26145 in k26137 in k26131 in k26094 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26147,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26150,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26157,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26161,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  parse-error-string");
f_23325(t4,((C_word*)t0)[2]);}

/* k26159 in k26145 in k26137 in k26131 in k26094 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26161,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26165,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  make-string");
t3=*((C_word*)lf[406]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k26163 in k26159 in k26145 in k26137 in k26131 in k26094 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26165,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26169,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  substring");
t3=*((C_word*)lf[497]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k26167 in k26163 in k26159 in k26145 in k26137 in k26131 in k26094 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26169,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26173,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  make-string");
t3=*((C_word*)lf[406]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k26171 in k26167 in k26163 in k26159 in k26145 in k26137 in k26131 in k26094 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26173,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26180,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 378  make-string");
t5=*((C_word*)lf[406]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k26178 in k26171 in k26167 in k26163 in k26159 in k26145 in k26137 in k26131 in k26094 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26180,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 378  string-append");
t5=*((C_word*)lf[53]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[496],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k26155 in k26145 in k26137 in k26131 in k26094 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  print-error");
t2=C_retrieve(lf[495]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26148 in k26145 in k26137 in k26131 in k26094 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k26097 in k26094 in k26090 in k26087 in k26082 in sal in k26071 in k26068 in k26065 in k26062 in k26059 in k25476 in k25473 in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_26099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24954(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24954,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24961,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_24967,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t33,t34,C_fix(23296));}

/* k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24967,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24971,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_25017,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t2,t3,C_fix(10756));}}

/* k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25017,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25021,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_25114,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t2,t3,C_fix(22784));}}

/* k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25114,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25118,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25182,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25182,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25189,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25439,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_25189(t8,t7);}}

/* k25437 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25189(t3,t2);}

/* k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25189(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25189,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25192,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25378,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25427,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k25425 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25427(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25192(t3,t2);}

/* k25376 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25378,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25384,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k25382 in k25376 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25384,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25408,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t3=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_25192(t4,t3);}}

/* k25406 in k25382 in k25376 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25408,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25392,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25404,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t6=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k25402 in k25406 in k25382 in k25376 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k25390 in k25406 in k25382 in k25376 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25192(t3,t2);}

/* k25190 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25192(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25192,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25195,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_25195(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25354,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[489]);}}

/* k25352 in k25190 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25354,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25358,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k25356 in k25352 in k25190 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_25195(t4,t3);}

/* k25193 in k25190 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25195(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25195,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25198,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_25198(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25331,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[488]);}}

/* k25329 in k25193 in k25190 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25335,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k25333 in k25329 in k25193 in k25190 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_25198(t4,t3);}

/* k25196 in k25193 in k25190 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25198(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25198,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25201,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_25201(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25308,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[487]);}}
else{
t3=t2;
f_25201(t3,C_SCHEME_UNDEFINED);}}

/* k25306 in k25196 in k25193 in k25190 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25308,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25312,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k25310 in k25306 in k25196 in k25193 in k25190 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_25201(t4,t3);}

/* k25199 in k25196 in k25193 in k25190 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25201(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25201,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25204,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25233,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[126],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_25204(t7,t6);}}

/* k25231 in k25199 in k25196 in k25193 in k25190 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25233,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[480],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[126],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_25204(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25251,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k25249 in k25231 in k25199 in k25196 in k25193 in k25190 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25251,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[486],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[126],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_25204(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25269,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k25267 in k25249 in k25231 in k25199 in k25196 in k25193 in k25190 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25269,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[263],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[130],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_25204(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25287,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k25285 in k25267 in k25249 in k25231 in k25199 in k25196 in k25193 in k25190 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25287(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25287,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[408],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[130],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25204(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_25204(t2,C_SCHEME_UNDEFINED);}}

/* k25202 in k25199 in k25196 in k25193 in k25190 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25204(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25204,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25208,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k25206 in k25202 in k25199 in k25196 in k25193 in k25190 in k25187 in k25180 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24961(t3,t2);}

/* k25116 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25118,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25122,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k25120 in k25116 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25122,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25126,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[485]);}

/* k25124 in k25120 in k25116 in k25112 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25126,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_24961(t12,t11);}

/* k25019 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25021,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25025,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k25023 in k25019 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25025,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25029,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[66]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k25027 in k25023 in k25019 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25029,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25032,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25048,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_25032(t6,t5);}}

/* k25046 in k25027 in k25023 in k25019 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25048,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25052,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[484]);}

/* k25050 in k25046 in k25027 in k25023 in k25019 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25052,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[483],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_25032(t12,t11);}

/* k25030 in k25027 in k25023 in k25019 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_25032(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25032,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25036,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k25034 in k25030 in k25027 in k25023 in k25019 in k25015 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_25036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24961(t3,t2);}

/* k24969 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24971,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24975,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[482]);}

/* k24973 in k24969 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24975,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24979,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[481]);}

/* k24977 in k24973 in k24969 in k24965 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24979,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[126],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[480],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_24961(t10,t9);}

/* k24959 in sal-parse-stepping in k24950 in k24947 in k24944 in k24941 in k24938 in k24935 in k24932 in k24929 in k24926 in k24923 in k24920 in k24917 in k24914 in k24911 in k24908 in k24905 in k24902 in k24899 in k24896 in k24893 in k24890 in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24961(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24776(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24776,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24788,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li392),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_24788(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do3704 in inf->pre in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24788(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24788,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24807,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  is-op?");
f_24755(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k24805 in do3704 in inf->pre in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24807,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24810,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24825,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li391),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_24825(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_24810(2,t5,t4);}}

/* do3706 in k24805 in do3704 in inf->pre in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24825(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24825,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24839,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24853,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t12=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24857,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 378  is-op?");
f_24755(t10,t11);}}

/* k24855 in do3706 in k24805 in do3704 in inf->pre in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24857,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24860,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_24860(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_24860(t10,t9);}}

/* k24858 in k24855 in do3706 in k24805 in do3704 in inf->pre in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24860(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_24825(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24851 in do3706 in k24805 in do3704 in inf->pre in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  inf->pre");
f_24776(((C_word*)t0)[2],t1);}

/* k24837 in do3706 in k24805 in do3704 in inf->pre in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24839,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k24808 in k24805 in do3704 in inf->pre in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_24788(t2,((C_word*)t0)[2]);}

/* is-op? in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24755(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24755,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24762,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  token-unit?");
f_23424(t3,t2);}

/* k24760 in is-op? in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24762,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24765,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_23376(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k24763 in k24760 in is-op? in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24765,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24771,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  SalOpType?");
f_24532(t2,t1);}

/* k24769 in k24763 in k24760 in is-op? in k24751 in k24748 in k24745 in k24742 in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24771,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24690(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24690,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24699,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li388),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_24699(t10,t1,t2);}

/* do3670 in remove-token-type in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24699(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24699,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24712,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24722,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_23440(t4,t5,((C_word*)t0)[2]);}}

/* k24720 in do3670 in remove-token-type in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24722,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_24712(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_24712(t7,t6);}}

/* k24710 in do3670 in remove-token-type in k24686 in k24683 in k24680 in k24677 in k24674 in k24671 in k24668 in k24665 in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24712(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_24699(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24646(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24646,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24634(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24634,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24532(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24532,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24484(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24484,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23865(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23865,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23869,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 378  printf");
t10=C_retrieve(lf[474]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[475],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_23869(2,t10,C_SCHEME_UNDEFINED);}}

/* k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23869,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23872,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  null-tokens?");
f_23044(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23875,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_23875(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24290,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24294,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24298,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  first-token");
f_23032(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k24296 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  token-position");
f_22991(((C_word*)t0)[2],t1);}

/* k24292 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  max");
t2=*((C_word*)lf[294]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[468],"*maxtokpos*"),t1);}

/* k24288 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24290(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[468],t1);
t3=((C_word*)t0)[2];
f_23875(t3,t2);}

/* k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23875(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23875,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23884,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value");
t4=C_retrieve2(lf[314],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23998,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_23186(t3,((C_word*)t0)[8]);}}

/* k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23998,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24004,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23231,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_23186(t4,t3);}
else{
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[473],((C_word*)t0)[2]);}}

/* k23229 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_24004(t3,(C_word)C_eqp(t2,lf[455]));}
else{
t2=((C_word*)t0)[2];
f_24004(t2,C_SCHEME_FALSE);}}

/* k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24004(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24004,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24013,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 378  pattern-nsubs");
f_23204(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24092,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23247,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_23186(t5,t4);}}

/* k23245 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_24092(t3,(C_word)C_eqp(t2,lf[456]));}
else{
t2=((C_word*)t0)[2];
f_24092(t2,C_SCHEME_FALSE);}}

/* k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24092(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24092,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24098,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  pattern-nsubs");
f_23204(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24162,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  pattern-zero-or-more?");
f_23272(t2,((C_word*)t0)[2]);}}

/* k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24165,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_24165(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23263,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_23186(t4,t3);}}

/* k23261 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_24165(t3,(C_word)C_eqp(t2,lf[126]));}
else{
t2=((C_word*)t0)[2];
f_24165(t2,C_SCHEME_FALSE);}}

/* k24163 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24165(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24165,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24171,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24194,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li380),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_24194(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24243,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23295,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_23186(t4,t3);}}

/* k23293 in k24163 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_24243(t3,(C_word)C_eqp(t2,lf[472]));}
else{
t2=((C_word*)t0)[2];
f_24243(t2,C_SCHEME_FALSE);}}

/* k24241 in k24163 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24243(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24243,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24252,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24263,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li381),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24269,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li382),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[471],t3);}}

/* a24268 in k24241 in k24163 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24269(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24269,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a24262 in k24241 in k24163 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24263,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  parser");
f_23865(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k24250 in k24241 in k24163 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do3407 in k24163 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24194(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24194,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24204,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_24204(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 378  null-tokens?");
f_23044(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k24202 in do3407 in k24163 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24204,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24207,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24224,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li378),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24230,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li379),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a24229 in k24202 in do3407 in k24163 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24230(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24230,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a24223 in k24202 in do3407 in k24163 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24224,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  parser");
f_23865(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k24205 in k24202 in do3407 in k24163 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24207,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24210,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24217,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_24210(t3,C_SCHEME_UNDEFINED);}}

/* k24215 in k24205 in k24202 in do3407 in k24163 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24217,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_24210(t6,t5);}

/* k24208 in k24205 in k24202 in do3407 in k24163 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24210(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_24194(t2,((C_word*)t0)[2]);}

/* k24169 in k24163 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24174,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24180,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-zero-or-more?");
f_23272(t3,((C_word*)t0)[2]);}

/* k24178 in k24169 in k24163 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_24174(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_24174(t5,t4);}}

/* k24172 in k24169 in k24163 in k24160 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24174(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24096 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24101,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24116,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li377),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_24116(t6,t2,C_fix(0));}

/* do3387 in k24096 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24116(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24116,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24126,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24135,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li375),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24149,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li376),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a24148 in do3387 in k24096 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24149(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24149,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a24134 in do3387 in k24096 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24135,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24143,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pattern-sub");
f_23214(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k24141 in a24134 in do3387 in k24096 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24143,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 378  parser");
f_23865(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k24124 in do3387 in k24096 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24126,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_24116(t3,((C_word*)t0)[2],t2);}

/* k24099 in k24096 in k24090 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k24011 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24013,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24016,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24035,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li374),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_24035(t8,t4,C_fix(0));}

/* do3365 in k24011 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24035(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24035,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24048,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24068,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li372),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24082,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li373),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a24081 in do3365 in k24011 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24082(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24082,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a24067 in do3365 in k24011 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24068,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24076,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pattern-sub");
f_23214(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k24074 in a24067 in do3365 in k24011 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24076,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 378  parser");
f_23865(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k24046 in do3365 in k24011 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24048,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24051,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_24051(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_24051(t5,t4);}}

/* k24049 in k24046 in do3365 in k24011 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24051(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24051,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_24035(t3,((C_word*)t0)[2],t2);}

/* k24014 in k24011 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24016,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24019,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_24019(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24033,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t5=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k24031 in k24014 in k24011 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_24033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_24019(t3,t2);}

/* k24017 in k24014 in k24011 in k24002 in k23996 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_24019(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k23882 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23884(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23884,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23890,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  SalTokenType?");
f_24484(t2,t1);}

/* k23888 in k23882 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23890,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23896,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  null-tokens?");
f_23044(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23948,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  SalRuleType?");
f_24634(t2,((C_word*)t0)[5]);}}

/* k23946 in k23888 in k23882 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23948,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23951,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  get-rule");
f_23162(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[470],((C_word*)t0)[2]);}}

/* k23949 in k23946 in k23888 in k23882 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23951,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[425]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[425]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23962,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li370),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23972,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li371),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a23971 in k23949 in k23946 in k23888 in k23882 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23972(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23972,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23983,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 378  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_23983(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k23981 in a23971 in k23949 in k23946 in k23888 in k23882 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a23961 in k23949 in k23946 in k23888 in k23882 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23962,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 378  parser");
f_23865(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23894 in k23888 in k23882 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23896,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23906,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  first-token");
f_23032(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k23904 in k23894 in k23888 in k23882 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23906,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23912,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23942,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  token-type");
f_22955(t3,t1);}

/* k23940 in k23904 in k23894 in k23888 in k23882 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k23910 in k23904 in k23894 in k23888 in k23882 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23912,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23919,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23927,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  token-type");
f_22955(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k23925 in k23910 in k23904 in k23894 in k23888 in k23882 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23927,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23931,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-string");
f_22973(t2,((C_word*)t0)[2]);}

/* k23929 in k23925 in k23910 in k23904 in k23894 in k23888 in k23882 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23931,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23935,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-position");
f_22991(t2,((C_word*)t0)[2]);}

/* k23933 in k23929 in k23925 in k23910 in k23904 in k23894 in k23888 in k23882 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k23917 in k23910 in k23904 in k23894 in k23888 in k23882 in k23873 in k23870 in k23867 in parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23761(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23761,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23763,a[2]=t2,a[3]=((C_word)li368),tmp=(C_word)a,a+=4,tmp));}

/* f_23763 in simple-unit-emitter in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23763(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23763,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23767,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23811,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t6,t2);}

/* k23809 */
static void C_ccall f_23811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k23765 */
static void C_ccall f_23767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23767,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23770,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_23770(t9,t8);}
else{
t6=t5;
f_23770(t6,C_SCHEME_UNDEFINED);}}

/* k23768 in k23765 */
static void C_fcall f_23770(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23770,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23775,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li367),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_23775(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do3322 in k23768 in k23765 */
static void C_fcall f_23775(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23775,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23796,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k23794 in do3322 in k23768 in k23765 */
static void C_ccall f_23796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_23775(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23753(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23753,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23755,a[2]=t2,a[3]=((C_word)li365),tmp=(C_word)a,a+=4,tmp));}

/* f_23755 in simple-unit-parser in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23755(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_23755,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_23355(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* != in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23576(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2r,(void*)f_23576r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_23576r(t0,t1,t2);}}

static void C_ccall f_23576r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a=C_alloc(3);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23584,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(4,0,t3,*((C_word*)lf[465]+1),t2);}

/* k23582 in != in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_not(t1));}

/* emit-list in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23545(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23545,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23562,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  emit");
f_23512(t5,t6,t3,t4);}}

/* k23560 in emit-list in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23562,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23566,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  emit-list");
f_23545(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23564 in k23560 in emit-list in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23566,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23512(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23512,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23519,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  token-unit?");
f_23424(t5,t2);}

/* k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23519,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23590,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_23376(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23528,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23463,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit?");
f_23361(t4,t3);}}

/* k23461 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23463,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23470,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_23376(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_23528(2,t2,C_SCHEME_FALSE);}}

/* k23468 in k23461 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  SalRuleType?");
f_24634(((C_word*)t0)[2],t1);}

/* k23526 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23528,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23728,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23751,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_23376(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 378  emit-list");
f_23545(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[462],((C_word*)t0)[4]);}}}

/* k23749 in k23526 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  get-rule");
f_23162(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k23726 in k23526 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23728,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[425]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 378  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23744,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t4,((C_word*)t0)[4]);}}

/* k23742 in k23726 in k23526 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_23512(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k23588 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23590,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23593,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_23394(t2,((C_word*)t0)[2]);}

/* k23591 in k23588 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23593,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 378  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 378  string->symbol");
t8=*((C_word*)lf[453]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23617,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalOpType?");
f_24532(t8,((C_word*)t0)[4]);}}}

/* k23615 in k23591 in k23588 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23617,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23623,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23668,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23674,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k23672 in k23615 in k23591 in k23588 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23674,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23680,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k23678 in k23672 in k23615 in k23591 in k23588 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23680,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23689,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k23687 in k23678 in k23672 in k23615 in k23591 in k23588 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23689,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23698,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k23696 in k23687 in k23678 in k23672 in k23615 in k23591 in k23588 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23698,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  string->symbol");
t2=*((C_word*)lf[453]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23707,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k23705 in k23696 in k23687 in k23678 in k23672 in k23615 in k23591 in k23588 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23707,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[458],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23716,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k23714 in k23705 in k23696 in k23687 in k23678 in k23672 in k23615 in k23591 in k23588 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  string->symbol");
t2=*((C_word*)lf[453]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[459],((C_word*)t0)[2]);}}

/* k23666 in k23615 in k23591 in k23588 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k23621 in k23615 in k23591 in k23588 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23623,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[158]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23629,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k23627 in k23621 in k23615 in k23591 in k23588 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23629,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[136]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23635,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k23633 in k23627 in k23621 in k23615 in k23591 in k23588 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23635(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23635,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[454]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23641,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k23639 in k23633 in k23627 in k23621 in k23615 in k23591 in k23588 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23641,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[455]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23647,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k23645 in k23639 in k23633 in k23627 in k23621 in k23615 in k23591 in k23588 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23647,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[456]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23653,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k23651 in k23645 in k23639 in k23633 in k23627 in k23621 in k23615 in k23591 in k23588 in k23517 in emit in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[457]);}
else{
C_trace("ChickenBridge.scm: 378  string->symbol");
t2=*((C_word*)lf[453]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23494(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23494,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23501,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_23501(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[451],t2);}}

/* k23499 in set-emit-info! in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23484(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23484,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23472(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23472,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23440(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23440,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23447,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-unit?");
f_23424(t4,t2);}

/* k23445 in token-unit-type=? in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23447,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23454,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_23376(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k23452 in k23445 in token-unit-type=? in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  SalType=?");
f_24646(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23424(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23424,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23431,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit?");
f_23361(t3,t2);}

/* k23429 in token-unit? in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23431,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23438,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_23376(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k23436 in k23429 in token-unit? in k23420 in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  SalTokenType?");
f_24484(((C_word*)t0)[2],t1);}

/* parse-unit-position in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23412(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23412,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[439]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23394(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23394,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[439]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23376(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23376,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[439]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23361(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23361,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[439]));}

/* make-parse-unit in k23351 in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23355(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23355,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[439],t2,t3,t4));}

/* parse-error-position in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23343(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23343,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[435]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23325(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23325,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[435]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23304(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23304,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[435],t2,t3));}

/* pattern-zero-or-more? in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23272(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23272,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23279,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_23186(t3,t2);}

/* k23277 in pattern-zero-or-more? in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[128]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23214(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23214,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23222,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-subs");
f_23198(t4,t2);}

/* k23220 in pattern-sub in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23204(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23204,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23212,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-subs");
f_23198(t3,t2);}

/* k23210 in pattern-nsubs in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23198(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23198,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23186(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23186,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23183(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23183,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k23158 in k23155 in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23162(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23162,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[423],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 378  hash-table-ref/default");
t4=C_retrieve(lf[428]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[423],"*rules*"),t3);}}

/* rule-name in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23075(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23075,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[425]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k23050 in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23054(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23054,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[425],t2,t3,t4,t5,t6));}

/* null-tokens? in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23044(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23044,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_23032(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23032,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k22999 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_23003(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23003,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[420]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[414],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[414],"make-token"),t2);}}

/* token-position in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22991(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22991,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[415]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22973(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22973,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[415]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22955(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22955,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[415]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22934(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_22934,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[415],t2,t3,t4));}

/* markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21912(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+61)){
C_save_and_reclaim((void*)tr3r,(void*)f_21912r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21912r(t0,t1,t2,t3);}}

static void C_ccall f_21912r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(61);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_length(t2);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_fix(8);
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_fix(1);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_fix(1);
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t3;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_21922,a[2]=t22,a[3]=t26,a[4]=t20,a[5]=t3,a[6]=t24,a[7]=t2,a[8]=t8,a[9]=t14,a[10]=t10,a[11]=t1,a[12]=t12,a[13]=t18,a[14]=t7,a[15]=t16,a[16]=t5,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_21922(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[242]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22847,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t16,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t31=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[19],lf[242]);}
else{
t31=t30;
f_22847(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[413]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22882,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t18,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[19],lf[413]);}
else{
t32=t31;
f_22882(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22911,a[2]=t27,a[3]=t20,a[4]=t16,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[10],t3);}
else{
t32=t31;
f_22911(2,t32,C_SCHEME_UNDEFINED);}}}}}

/* k22909 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22911,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22918,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22926,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22924 in k22909 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22918(2,t2,C_SCHEME_UNDEFINED);}}

/* k22916 in k22909 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21922(t5,t4);}

/* k22880 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22882(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22882,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22886,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22886(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22884 in k22880 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21922(t7,t6);}

/* k22845 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22847,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22851,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22851(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22849 in k22845 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21922(t7,t6);}

/* k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_21922(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21922,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21925,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],a[13]=((C_word*)t0)[16],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_21925(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[242]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22747,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[242]);}
else{
t6=t5;
f_22747(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[413]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22782,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[413]);}
else{
t7=t6;
f_22782(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22811,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_22811(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k22809 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22811,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22818,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22826,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k22824 in k22809 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_22818(2,t2,C_SCHEME_UNDEFINED);}}

/* k22816 in k22809 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22818(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21925(t5,t4);}

/* k22780 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22782,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22786,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22786(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22784 in k22780 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21925(t7,t6);}

/* k22745 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22747,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22751,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_22751(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k22749 in k22745 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21925(t7,t6);}

/* k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_21925(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21925,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21928,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21928(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21928,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,((C_word*)((C_word*)t0)[10])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21933,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
t5=((C_word*)((C_word*)t0)[9])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t5,C_fix(1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(2)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(3)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t6=t4;
f_21933(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[412],((C_word*)((C_word*)t0)[9])[1]);}}

/* k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21933,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21935,a[2]=((C_word*)t0)[9],a[3]=((C_word)li311),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22017,a[2]=t4,a[3]=((C_word)li314),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22127,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22640,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=t8,a[7]=((C_word*)t0)[4],a[8]=((C_word)li331),tmp=(C_word)a,a+=9,tmp));
t10=((C_word*)t8)[1];
f_22640(t10,t6,C_fix(0));}

/* do2971 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22640(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22640,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22650,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22663,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=t5,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=((C_word)li330),tmp=(C_word)a,a+=10,tmp));
t7=((C_word*)t5)[1];
f_22663(t7,t3,C_SCHEME_END_OF_LIST,C_fix(0),C_SCHEME_FALSE);}}

/* do2974 in do2971 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22663(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22663,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)((C_word*)t0)[8])[1]))){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22673,a[2]=t1,a[3]=((C_word*)t0)[7],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22691,a[2]=t6,a[3]=t7,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  reverse");
t9=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t5)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22716,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t6,a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 377  modulo");
t9=*((C_word*)lf[158]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,((C_word*)t0)[2]);}}

/* k22714 in do2974 in do2971 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22716,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)t0)[8],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22698,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[2])[1]))){
t5=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t4;
f_22698(t7,t6);}
else{
t5=t4;
f_22698(t5,C_SCHEME_UNDEFINED);}}

/* k22696 in k22714 in do2974 in do2971 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22698(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22698,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_22663(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k22689 in do2974 in do2971 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  add-outcome");
t2=((C_word*)t0)[4];
f_21935(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k22671 in do2974 in do2971 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22673,2,t0,t1);}
if(C_truep((C_word)C_i_member(((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]))){
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}}

/* k22648 in do2971 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22650,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_22640(t3,((C_word*)t0)[2],t2);}

/* k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22127,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22130,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22596,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  sort");
t5=C_retrieve(lf[217]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[4])[1],*((C_word*)lf[408]+1));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22602,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=t4;
f_22602(t6,(C_word)C_i_symbolp(t5));}
else{
t5=t4;
f_22602(t5,C_SCHEME_FALSE);}}}

/* k22600 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22602(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22602,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22606,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22608,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  sort");
t4=C_retrieve(lf[217]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[3])[1],t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22624,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  reverse");
t3=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k22622 in k22600 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22130(t3,t2);}

/* a22607 in k22600 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22608(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22608,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22616,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  format");
t5=C_retrieve(lf[282]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[411],t2);}

/* k22614 in a22607 in k22600 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22616,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22620,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  format");
t3=C_retrieve(lf[282]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[410],((C_word*)t0)[2]);}

/* k22618 in k22614 in a22607 in k22600 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  string-ci<?");
t2=*((C_word*)lf[409]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22604 in k22600 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22130(t3,t2);}

/* k22594 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22130(t3,t2);}

/* k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22130(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22130,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22133,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22473,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li328),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_22473(t6,t2,((C_word*)((C_word*)t0)[7])[1],C_fix(0));}

/* do2987 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22473(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22473,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22484,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  max");
t6=*((C_word*)lf[294]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=(C_word)C_i_cddr(t5);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22497,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t9=(C_word)C_i_string_length(t6);
C_trace("ChickenBridge.scm: 377  max");
t10=*((C_word*)lf[294]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t8,((C_word*)t4)[1],t9);}}

/* k22495 in do2987 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22497,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22500,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22559,a[2]=t5,a[3]=((C_word)li327),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_22559(t7,t3,((C_word*)t0)[2],C_fix(0));}

/* do2995 in k22495 in do2987 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22559(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_22559,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t4);
t6=(C_word)C_a_i_plus(&a,2,t3,t5);
t7=t3=t6;
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t12=t3;
t1=t10;
t2=t11;
t3=t12;
goto loop;}}

/* k22498 in k22495 in do2987 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22500,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_times(&a,2,((C_word*)t3)[1],lf[407]);
t5=C_set_block_item(t3,0,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22507,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22516,a[2]=t3,a[3]=t8,a[4]=((C_word)li326),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_22516(t10,t6,((C_word*)t0)[2]);}

/* do3001 in k22498 in k22495 in do2987 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22516(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22516,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cdr(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22541,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t6);
t8=(C_word)C_a_i_divide(&a,2,t7,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 377  decimals");
t9=C_retrieve(lf[134]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,t8,C_fix(3));}}

/* k22539 in do3001 in k22498 in k22495 in do2987 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[5],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_22516(t4,((C_word*)t0)[2],t3);}

/* k22505 in k22498 in k22495 in do2987 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_22473(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k22482 in do2987 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22133,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22137,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22459,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word)li325),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  sort");
t4=C_retrieve(lf[217]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* a22458 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22459(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_22459,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 377  before?");
t6=((C_word*)((C_word*)t0)[3])[1];
f_22017(t6,t1,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22137,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22140,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],C_fix(1));
if(C_truep(t4)){
t5=lf[396];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22181,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  make-string");
t7=*((C_word*)lf[406]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(5),C_make_character(45));}
else{
t5=t3;
f_22140(2,t5,C_SCHEME_UNDEFINED);}}

/* k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22181,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22184,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  newline");
t3=*((C_word*)lf[397]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22184,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22187,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22440,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li324),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_22440(t6,t2,C_fix(0));}

/* do3014 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22440(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22440,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[3])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22450,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("write-char/port");
t4=C_retrieve(lf[399]);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t3,C_make_character(42),*((C_word*)lf[400]+1));}}

/* k22448 in do3014 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22450,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_22440(t3,((C_word*)t0)[2],t2);}

/* k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22187(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22187,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22190,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22378,a[2]=((C_word*)t0)[6],a[3]=t4,a[4]=((C_word)li323),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_22378(t6,t2,((C_word*)((C_word*)t0)[4])[1]);}

/* do3019 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22378(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22378,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22388,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  display");
t4=*((C_word*)lf[398]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k22386 in do3019 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22388(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22388,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22391,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  format");
t4=C_retrieve(lf[282]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[405],t3);}

/* k22389 in k22386 in do3019 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22391,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22397,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22411,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,C_fix(5),t2);
C_trace("ChickenBridge.scm: 377  max");
t6=*((C_word*)lf[294]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k22409 in k22389 in k22386 in do3019 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22411,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22413,a[2]=t3,a[3]=((C_word)li322),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_22413(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3024 in k22409 in k22389 in k22386 in do3019 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22413(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22413,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22423,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[399]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[400]+1));}}

/* k22421 in do3024 in k22409 in k22389 in k22386 in do3019 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22423,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_22413(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k22395 in k22389 in k22386 in do3019 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22397,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22400,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  display");
t3=*((C_word*)lf[398]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k22398 in k22395 in k22389 in k22386 in do3019 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_22378(t3,((C_word*)t0)[2],t2);}

/* k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22190,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22193,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22198,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t4,a[7]=((C_word)li321),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_22198(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22198(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22198,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22211,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 377  newline");
t5=*((C_word*)lf[397]+1);
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22211,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22214,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_22214(2,t4,lf[402]);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22085,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 377  format");
t6=C_retrieve(lf[282]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[404],t5);}}

/* k22083 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22085,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22094,a[2]=t6,a[3]=t3,a[4]=((C_word)li320),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_22094(t8,((C_word*)t0)[2],t4);}

/* do2966 in k22083 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22094(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22094,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22105,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22116,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  format");
t6=C_retrieve(lf[282]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[403],t5);}}

/* k22114 in do2966 in k22083 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  string-append");
t2=*((C_word*)lf[53]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k22103 in do2966 in k22083 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_22094(t4,((C_word*)t0)[2],t3);}

/* k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22214,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22220,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22349,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[2])[1],t2);
C_trace("ChickenBridge.scm: 377  max");
t6=*((C_word*)lf[294]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k22347 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22349,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22351,a[2]=t3,a[3]=((C_word)li319),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_22351(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3040 in k22347 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22351(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22351,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22361,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[399]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[400]+1));}}

/* k22359 in do3040 in k22347 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22361,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_22351(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k22218 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22220,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22223,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22322,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  min");
t4=*((C_word*)lf[401]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k22320 in k22218 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22322,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22324,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li318),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_22324(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3046 in k22320 in k22218 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22324(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22324,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22334,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_string_ref(((C_word*)t0)[2],t2);
C_trace("write-char/port");
t6=C_retrieve(lf[399]);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,*((C_word*)lf[400]+1));}}

/* k22332 in do3046 in k22320 in k22218 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22334,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_22324(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k22221 in k22218 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22223,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22226,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22235,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word*)t0)[5],a[6]=((C_word)li317),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_22235(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do3053 in k22221 in k22218 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22235(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22235,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[5]);
t5=(C_word)C_i_assoc(t3,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22248,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22267,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(t5);
C_trace("ChickenBridge.scm: 377  number->string");
C_number_to_string(3,0,t7,t8);}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22261,a[2]=((C_word*)t0)[2],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  display");
t8=*((C_word*)lf[398]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[3]);}}}

/* k22259 in do3053 in k22221 in k22218 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22261(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  display");
t2=*((C_word*)lf[398]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22265 in do3053 in k22221 in k22218 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22267,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22273,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  display");
t4=*((C_word*)lf[398]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k22271 in k22265 in do3053 in k22221 in k22218 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22273,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22276,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22283,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,C_fix(5),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  max");
t5=*((C_word*)lf[294]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_fix(0));}

/* k22281 in k22271 in k22265 in do3053 in k22221 in k22218 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22283,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22285,a[2]=t3,a[3]=((C_word)li316),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_22285(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do3060 in k22281 in k22271 in k22265 in do3053 in k22221 in k22218 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22285(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22285,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22295,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[399]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[400]+1));}}

/* k22293 in do3060 in k22281 in k22271 in k22265 in do3053 in k22221 in k22218 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22295,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_22285(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k22274 in k22271 in k22265 in do3053 in k22221 in k22218 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  display");
t2=*((C_word*)lf[398]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k22246 in do3053 in k22221 in k22218 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_22235(t3,((C_word*)t0)[2],t2);}

/* k22224 in k22221 in k22218 in k22212 in k22209 in do3034 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_22198(t3,((C_word*)t0)[2],t2);}

/* k22191 in k22188 in k22185 in k22182 in k22179 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  newline");
t2=*((C_word*)lf[397]+1);
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[2]);}

/* k22138 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22140,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(1)))){
C_trace("ChickenBridge.scm: 377  values");
C_values(2,0,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22152,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22163,a[2]=((C_word)li315),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a22162 in k22138 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22163(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22163,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(t2);
C_trace("ChickenBridge.scm: 377  append");
t5=*((C_word*)lf[18]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t3,lf[395],t4);}

/* k22150 in k22138 in k22135 in k22131 in k22128 in k22125 in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
C_trace("ChickenBridge.scm: 377  make-markov");
t2=C_retrieve(lf[374]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}}

/* before? in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_22017(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22017,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_TRUE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22027,a[2]=t4,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22065,a[2]=t2,a[3]=((C_word)li313),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  list-index");
t7=C_retrieve(lf[84]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,t6,t4);}}

/* a22064 in before? in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22065(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22065,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k22025 in before? in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22027,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22030,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22055,a[2]=((C_word*)t0)[4],a[3]=((C_word)li312),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  list-index");
t4=C_retrieve(lf[84]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a22054 in k22025 in before? in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22055(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22055,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k22028 in k22025 in before? in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[7],t1))){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[7],t1))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  before?");
t4=((C_word*)((C_word*)t0)[3])[1];
f_22017(t4,((C_word*)t0)[6],t2,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* add-outcome in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_21935(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21935,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21939,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22007,a[2]=t2,a[3]=((C_word)li310),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  list-find");
t6=C_retrieve(lf[85]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* a22006 in add-outcome in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_22007(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_22007,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(((C_word*)t0)[2],t3));}

/* k21937 in add-outcome in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21939,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_cddr(t1);
t4=(C_word)C_i_assoc(((C_word*)t0)[5],t3);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t4);
t6=(C_word)C_i_cadr(t4);
t7=(C_word)C_a_i_plus(&a,2,C_fix(1),t6);
t8=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_set_car(t5,t7));}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21989,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 377  tail");
t7=C_retrieve(lf[77]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21957,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  format");
t4=C_retrieve(lf[282]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[394],((C_word*)t0)[3]);}}

/* k21955 in k21937 in add-outcome in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21957,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],C_fix(1));
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* k21987 in k21937 in add-outcome in k21931 in k21926 in k21923 in k21920 in markov-analyze in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21989,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(1));
t3=(C_word)C_a_i_list(&a,1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_set_cdr(t1,t3));}

/* next-in-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21818(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21818,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21822,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t3,t2);}

/* k21820 in next-in-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21822,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21851,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[385]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 377  next-1");
f_16035(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  graph-node-datum");
f_21237(((C_word*)t0)[2],t6);}}

/* k21849 in k21820 in next-in-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21851,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21856,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li308),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_21856(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2889 in k21849 in k21820 in next-in-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_21856(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21856,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21866,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_21866(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[392],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21881,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[385]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_21881(t12,t11);}
else{
t10=t5;
f_21881(t10,C_SCHEME_UNDEFINED);}}}

/* k21879 in do2889 in k21849 in k21820 in next-in-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_21881(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21856(t3,((C_word*)t0)[2],t2);}

/* k21864 in do2889 in k21849 in k21820 in next-in-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  graph-node-datum");
f_21237(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21300(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_21300r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21300r(t0,t1,t2,t3);}}

static void C_ccall f_21300r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21304,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21562,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21571,a[2]=t9,a[3]=((C_word)li306),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[391],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21571(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21571,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21575,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_21575(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[390],t2);}}

/* k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21575,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21580,a[2]=((C_word*)t0)[4],a[3]=((C_word)li305),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21580(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_21580r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_21580r(t0,t1,t2,t3);}}

static void C_ccall f_21580r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_21584,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_21584(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[388]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21722,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[388]);}
else{
t20=t19;
f_21722(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[389]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21757,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[389]);}
else{
t21=t20;
f_21757(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21786,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_21786(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k21784 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21786,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21793,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21801,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21799 in k21784 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21793(2,t2,C_SCHEME_UNDEFINED);}}

/* k21791 in k21784 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21584(t5,t4);}

/* k21755 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21761,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21761(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21759 in k21755 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21584(t7,t6);}

/* k21720 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21722,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21726,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21726(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21724 in k21720 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21584(t7,t6);}

/* k21582 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_21584(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21584,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21587,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_21587(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[388]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21622,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[388]);}
else{
t6=t5;
f_21622(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[389]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21657,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[389]);}
else{
t7=t6;
f_21657(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21686,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_21686(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k21684 in k21582 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21686,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21693,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21701,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21699 in k21684 in k21582 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21693(2,t2,C_SCHEME_UNDEFINED);}}

/* k21691 in k21684 in k21582 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21587(t5,t4);}

/* k21655 in k21582 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21657,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21661,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21661(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21659 in k21655 in k21582 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21587(t7,t6);}

/* k21620 in k21582 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21622,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21626,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21626(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21624 in k21620 in k21582 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21587(t7,t6);}

/* k21585 in k21582 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_21587(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21587,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21590,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21590(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k21588 in k21585 in k21582 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21590,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21593,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_21593(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_21593(t4,t3);}}

/* k21591 in k21588 in k21585 in k21582 in a21579 in k21573 in parse-graph-item in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_21593(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21593,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[385],t5,t6,t7));}

/* k21560 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21304(2,t3,t2);}

/* k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21304,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21307,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_21307(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[343]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21467,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 377  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[343]);}
else{
t18=t17;
f_21467(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[344]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21502,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[344]);}
else{
t19=t18;
f_21502(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21531,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_21531(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k21529 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21531,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21538,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21546,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21544 in k21529 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21538(2,t2,C_SCHEME_UNDEFINED);}}

/* k21536 in k21529 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21307(t5,t4);}

/* k21500 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21502,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21506,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21506(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21504 in k21500 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21307(t7,t6);}

/* k21465 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21467,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21471,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21471(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21469 in k21465 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21307(t7,t6);}

/* k21305 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_21307(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21307,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21310,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_21310(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[343]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21367,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[343]);}
else{
t6=t5;
f_21367(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21402,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[344]);}
else{
t7=t6;
f_21402(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21431,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_21431(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k21429 in k21305 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21431,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21438,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21446,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k21444 in k21429 in k21305 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_21438(2,t2,C_SCHEME_UNDEFINED);}}

/* k21436 in k21429 in k21305 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_21310(t5,t4);}

/* k21400 in k21305 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21402,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21406,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21406(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21404 in k21400 in k21305 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21310(t7,t6);}

/* k21365 in k21305 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21367,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21371,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_21371(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k21369 in k21365 in k21305 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_21310(t7,t6);}

/* k21308 in k21305 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_21310(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21310,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21313,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_21313(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k21311 in k21308 in k21305 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21313,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21316,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_15684(t2);}

/* k21314 in k21311 in k21308 in k21305 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21316,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21322,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21328,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_15694(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[387],"next-in-graph"),t5);}

/* a21327 in k21314 in k21311 in k21308 in k21305 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21328(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21328,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21334,a[2]=((C_word)li303),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21346,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t5,t3);}

/* k21344 in a21327 in k21314 in k21311 in k21308 in k21305 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[236]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a21333 in a21327 in k21314 in k21311 in k21308 in k21305 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21334(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_21334,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 377  graph-node-datum");
f_21237(t1,t2);}

/* k21320 in k21314 in k21311 in k21308 in k21305 in k21302 in make-graph in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21322(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_21237(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21237,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[385]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20897(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20897,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20900,a[2]=t4,a[3]=((C_word)li297),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21079,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t6,t2);}

/* k21077 in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21079,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21083,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache");
f_15629(t2,((C_word*)t0)[4]);}

/* k21081 in k21077 in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21083,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21085,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li300),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_21085(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do2730 in k21081 in k21077 in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_21085(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21085,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21095,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_21095(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_21095(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21010,a[2]=t13,a[3]=((C_word)li299),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_21010(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do2715 in do2730 in k21081 in k21077 in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_21010(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21010,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21020,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_21020(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_21020(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k21018 in do2715 in do2730 in k21081 in k21077 in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_21020(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21020,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[128]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21027,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_21027(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_21027(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_21027(t9,(C_word)C_eqp(t8,lf[128]));}}}}

/* k21025 in k21018 in do2715 in do2730 in k21081 in k21077 in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_21027(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_21010(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k21093 in do2730 in k21081 in k21077 in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21095,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21098,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[383],((C_word*)t0)[6]);}
else{
t3=t2;
f_21098(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_21085(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k21096 in k21093 in do2730 in k21081 in k21077 in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21102,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 377  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_20900(t7,t2,t4,t6);}

/* k21100 in k21096 in k21093 in do2730 in k21081 in k21077 in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21102,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21105,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_21105(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_21105(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21122,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li298),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_21122(t8,t3,((C_word*)t0)[3]);}}}

/* do2739 in k21100 in k21096 in k21093 in do2730 in k21081 in k21077 in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_21122(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_21122,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21138,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_15620(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k21136 in do2739 in k21100 in k21096 in k21093 in do2730 in k21081 in k21077 in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21138(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k21103 in k21100 in k21096 in k21093 in do2730 in k21081 in k21077 in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_21105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_20900(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20900,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20968,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  tb:ranf");
f_8227(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20912,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li296),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_20912(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do2699 in select-output in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_20912(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20912,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 377  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_20900(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20948,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_20948(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 377  next-1");
f_16035(t9,t11);}}}

/* k20946 in do2699 in select-output in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20948,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_20912(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k20966 in select-output in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20968,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20973,a[2]=t3,a[3]=t1,a[4]=((C_word)li295),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_20973(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2709 in k20966 in select-output in next-in-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_20973(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20973,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20410(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_20410r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_20410r(t0,t1,t2,t3);}}

static void C_ccall f_20410r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20414,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20891,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20337,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li293),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_20337(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[382],((C_word*)t4)[1]);}}

/* do2600 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_20337(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20337,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20182,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_20182(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[381],((C_word*)t11)[1]);}}}

/* k20180 in do2600 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20182,2,t0,t1);}
t2=(C_word)C_i_member(lf[377],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_20188,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_20188(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[379],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_20188(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 377  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[380],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k20186 in k20180 in do2600 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20188,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20200,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20273,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li292),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_20273(t17,t13);}

/* do2578 in k20186 in k20180 in do2600 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_20273(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_20273,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k20198 in k20186 in k20180 in do2600 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20200,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20203,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20216,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li291),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[236]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a20215 in k20198 in k20186 in k20180 in do2600 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20216(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20216,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20220,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_20220(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_20220(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_20220(t13,t12);}}

/* k20218 in a20215 in k20198 in k20186 in k20180 in do2600 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_20220(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20220,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20223,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_20223(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_20223(t5,t4);}}

/* k20221 in k20218 in a20215 in k20198 in k20186 in k20180 in do2600 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_20223(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20223,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k20201 in k20198 in k20186 in k20180 in do2600 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20203,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20214,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 377  reverse");
t3=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k20212 in k20201 in k20198 in k20186 in k20180 in do2600 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20214,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20354,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_20354(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[378],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_20354(2,t10,t9);}}

/* k20352 in k20212 in k20201 in k20198 in k20186 in k20180 in do2600 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20354(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20354,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_20337(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k20889 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20414(2,t3,t2);}

/* k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20414,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20417,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_20417(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[343]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20761,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[343]);}
else{
t22=t21;
f_20761(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[344]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20796,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 377  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[344]);}
else{
t23=t22;
f_20796(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[376]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20831,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[376]);}
else{
t24=t23;
f_20831(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20860,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_20860(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k20858 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20860,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20867,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20875,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20873 in k20858 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20867(2,t2,C_SCHEME_UNDEFINED);}}

/* k20865 in k20858 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20417(t5,t4);}

/* k20829 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20831,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20835,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20835(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20833 in k20829 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20417(t7,t6);}

/* k20794 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20796,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20800,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20800(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20798 in k20794 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20417(t7,t6);}

/* k20759 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20765,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20765(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20763 in k20759 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20417(t7,t6);}

/* k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_20417(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20417,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20420,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_20420(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[343]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20626,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[343]);}
else{
t6=t5;
f_20626(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20661,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[344]);}
else{
t7=t6;
f_20661(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[376]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20696,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[376]);}
else{
t8=t7;
f_20696(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20725,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_20725(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k20723 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20725,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20732,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20740,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20738 in k20723 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20732(2,t2,C_SCHEME_UNDEFINED);}}

/* k20730 in k20723 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20420(t5,t4);}

/* k20694 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20696,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20700,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20700(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20698 in k20694 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20420(t7,t6);}

/* k20659 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20661,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20665,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20665(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20663 in k20659 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20420(t7,t6);}

/* k20624 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20630,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20630(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20628 in k20624 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20420(t7,t6);}

/* k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_20420(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20420,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20423,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_20423(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[343]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20491,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[343]);}
else{
t6=t5;
f_20491(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20526,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[344]);}
else{
t7=t6;
f_20526(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[376]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20561,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[376]);}
else{
t8=t7;
f_20561(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20590,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_20590(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k20588 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20590,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20597,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20605,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k20603 in k20588 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_20597(2,t2,C_SCHEME_UNDEFINED);}}

/* k20595 in k20588 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_20423(t5,t4);}

/* k20559 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20561,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20565,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20565(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20563 in k20559 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20565(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20423(t7,t6);}

/* k20524 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20526,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20530,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20530(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20528 in k20524 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20423(t7,t6);}

/* k20489 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20491,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20495,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_20495(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k20493 in k20489 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_20423(t7,t6);}

/* k20421 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_20423(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20423,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20426,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20426(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k20424 in k20421 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20426,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20429,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_15684(t2);}

/* k20427 in k20424 in k20421 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20429,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20435,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20462,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_15694(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[375],"next-in-markov"),t4);}

/* a20461 in k20427 in k20424 in k20421 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20462(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20462,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20470,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t4,t3);}

/* k20468 in a20461 in k20427 in k20424 in k20421 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[236]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k20433 in k20427 in k20424 in k20421 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20438,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_20438(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20448,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 377  make-list");
t7=C_retrieve(lf[82]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[128]);}}

/* k20446 in k20433 in k20427 in k20424 in k20421 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20438(t3,t2);}

/* k20436 in k20433 in k20427 in k20424 in k20421 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_20438(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20438,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20441,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_15620(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k20439 in k20436 in k20433 in k20427 in k20424 in k20421 in k20418 in k20415 in k20412 in make-markov in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19977(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19977,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19981,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t3,t2);}

/* k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19981,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19984,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_15467(t2,((C_word*)t0)[2]);}

/* k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19984(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19984,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19987,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-flags");
f_15395(t2,((C_word*)t0)[2]);}

/* k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19987,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19993,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20156,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_8016(t4,t1,C_fix(4));}

/* k20154 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20156,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_19993(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20169,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  period-count");
f_15245(t2,((C_word*)t0)[2]);}}

/* k20167 in k20154 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20169,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20173,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  period-length");
f_15263(t2,((C_word*)t0)[2]);}

/* k20171 in k20167 in k20154 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20173(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 377  recalc-weightings");
f_19865(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_19993(2,t2,C_SCHEME_UNDEFINED);}}

/* k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19993,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19999,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_19999(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20130,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20149,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-count");
f_19015(t4,((C_word*)t0)[4]);}}

/* k20147 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20149,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 377  random-item-count-set!");
f_19006(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k20128 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20130,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20137,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-count");
f_19015(t2,((C_word*)t0)[2]);}

/* k20135 in k20128 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20137,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20141,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-min");
f_18979(t2,((C_word*)t0)[2]);}

/* k20139 in k20135 in k20128 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_19999(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_19999(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19999,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  random-item-datum");
f_18925(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20005,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache");
f_15629(t2,((C_word*)t0)[2]);}}

/* k20003 in k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20005,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20009,a[2]=((C_word)li286),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20047,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20089,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  pick");
f_20009(t7,t2,t1);}

/* k20087 in k20003 in k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20089,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20091,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li288),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_20091(t5,((C_word*)t0)[2],t1);}

/* do2552 in k20087 in k20003 in k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_20091(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20091,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20110,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20113,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-max");
f_18997(t4,t2);}

/* k20111 in do2552 in k20087 in k20003 in k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20113,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20120,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-count");
f_19015(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_20110(t2,C_SCHEME_FALSE);}}

/* k20118 in k20111 in do2552 in k20087 in k20003 in k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20124,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-max");
f_18997(t2,((C_word*)t0)[2]);}

/* k20122 in k20118 in k20111 in do2552 in k20087 in k20003 in k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_20110(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k20108 in do2552 in k20087 in k20003 in k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_20110(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20110,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20106,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pick");
f_20009(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k20104 in k20108 in do2552 in k20087 in k20003 in k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_20091(t2,((C_word*)t0)[2],t1);}

/* k20045 in k20003 in k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20047,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20050,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_20050(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20064,a[2]=t5,a[3]=((C_word)li287),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_20064(t7,t2,((C_word*)t0)[2]);}}

/* do2556 in k20045 in k20003 in k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_20064(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20064,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20074,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  random-item-count-set!");
f_19006(t3,t4,C_fix(0));}}

/* k20072 in do2556 in k20045 in k20003 in k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_20064(t3,((C_word*)t0)[2],t2);}

/* k20048 in k20045 in k20003 in k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 377  random-item-datum");
f_18925(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k20003 in k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_20009(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20009,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20017,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  tb:ranf");
f_8227(t4,t3);}

/* k20015 in pick in k20003 in k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20017,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20019,a[2]=t3,a[3]=((C_word)li285),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_20019(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do2547 in k20015 in pick in k20003 in k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_20019(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20019,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20040,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  random-item-index");
f_18943(t4,t5);}

/* k20038 in do2547 in k20015 in pick in k20003 in k19997 in k19991 in k19985 in k19982 in k19979 in next-in-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_20040(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_20019(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_19865(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19865,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19975,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t4,t2);}

/* k19973 in recalc-weightings in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19975,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[373];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19872,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19934,a[2]=t7,a[3]=t4,a[4]=((C_word)li283),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_19934(t9,t5,t2);}

/* do2519 in k19973 in recalc-weightings in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_19934(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19934,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19963,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19967,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  random-item-weight");
f_18961(t4,t5);}}

/* k19965 in do2519 in k19973 in recalc-weightings in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  next-1");
f_16035(((C_word*)t0)[2],t1);}

/* k19961 in do2519 in k19973 in recalc-weightings in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19963,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19948,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  random-item-index-set!");
f_18934(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k19946 in k19961 in do2519 in k19973 in recalc-weightings in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19934(t3,((C_word*)t0)[2],t2);}

/* k19870 in k19973 in recalc-weightings in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19872,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19880,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li282),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_19880(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_15620(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do2525 in k19870 in k19973 in recalc-weightings in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_19880(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19880,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_15620(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19913,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19925,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  random-item-index");
f_18943(t8,t9);}}

/* k19923 in do2525 in k19870 in k19973 in recalc-weightings in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19925,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_retrieve(lf[123]));
C_trace("ChickenBridge.scm: 377  floor");
t4=*((C_word*)lf[200]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k19911 in do2525 in k19870 in k19973 in recalc-weightings in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19913,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19897,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  random-item-index-set!");
f_18934(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k19895 in k19911 in do2525 in k19870 in k19973 in recalc-weightings in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_19880(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19098(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_19098r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_19098r(t0,t1,t2,t3);}}

static void C_ccall f_19098r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19102,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19415,a[2]=((C_word)li280),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19415(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19415,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19422,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_19422(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_19422(t9,t8);}}

/* k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_19422(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19422,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19425,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_19425(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[372]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19728,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[372]);}
else{
t22=t21;
f_19728(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[246]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19763,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 377  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[246]);}
else{
t23=t22;
f_19763(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[247]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19798,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[247]);}
else{
t24=t23;
f_19798(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19827,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_19827(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k19825 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19827,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19834,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19842,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19840 in k19825 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19834(2,t2,C_SCHEME_UNDEFINED);}}

/* k19832 in k19825 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19425(t5,t4);}

/* k19796 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19798,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19802,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19802(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19800 in k19796 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19425(t7,t6);}

/* k19761 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19767,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19767(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19765 in k19761 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19425(t7,t6);}

/* k19726 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19728,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19732,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19732(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19730 in k19726 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19425(t7,t6);}

/* k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_19425(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19425,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19428,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_19428(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[372]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19593,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[372]);}
else{
t6=t5;
f_19593(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19628,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[246]);}
else{
t7=t6;
f_19628(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19663,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[247]);}
else{
t8=t7;
f_19663(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19692,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_19692(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k19690 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19692,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19707,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19705 in k19690 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19699(2,t2,C_SCHEME_UNDEFINED);}}

/* k19697 in k19690 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19428(t5,t4);}

/* k19661 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19663,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19667,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19667(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19665 in k19661 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19428(t7,t6);}

/* k19626 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19632,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19632(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19630 in k19626 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19428(t7,t6);}

/* k19591 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19597,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19597(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19595 in k19591 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19428(t7,t6);}

/* k19426 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_19428(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19428,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19431,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_19431(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[372]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19458,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[372]);}
else{
t6=t5;
f_19458(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19493,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[246]);}
else{
t7=t6;
f_19493(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19528,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[247]);}
else{
t8=t7;
f_19528(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19557,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_19557(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k19555 in k19426 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19557,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19564,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19572,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19570 in k19555 in k19426 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19572(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19564(2,t2,C_SCHEME_UNDEFINED);}}

/* k19562 in k19555 in k19426 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19431(t5,t4);}

/* k19526 in k19426 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19528,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19532,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19532(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19530 in k19526 in k19426 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19431(t7,t6);}

/* k19491 in k19426 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19497,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19497(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19495 in k19491 in k19426 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19431(t7,t6);}

/* k19456 in k19426 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19458,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19462,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_19462(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19460 in k19456 in k19426 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19431(t7,t6);}

/* k19429 in k19426 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_19431(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19431,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19434,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19434(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)((C_word*)t0)[2])[1]);}}

/* k19432 in k19429 in k19426 in k19423 in k19420 in %make-random-item in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19434,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[361],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19102,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19105,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_15684(t2);}

/* k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19105,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19111,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19379,a[2]=t8,a[3]=t6,a[4]=((C_word)li279),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[236]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a19378 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19379(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19379,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19383,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  random-item-min");
f_18979(t3,t2);}

/* k19381 in a19378 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19383,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19386,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  random-item-max");
f_18997(t2,((C_word*)t0)[2]);}

/* k19384 in k19381 in a19378 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19386,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19389,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  random-item-weight");
f_18961(t2,((C_word*)t0)[2]);}

/* k19387 in k19384 in k19381 in a19378 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19389,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19392,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  random-item-datum");
f_18925(t2,((C_word*)t0)[2]);}

/* k19390 in k19387 in k19384 in k19381 in a19378 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19392,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19395,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19405,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_15380(t3,t1);}

/* k19403 in k19390 in k19387 in k19384 in k19381 in a19378 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19405,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_19395(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_19395(t2,C_SCHEME_UNDEFINED);}}

/* k19393 in k19390 in k19387 in k19384 in k19381 in a19378 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_19395(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19111,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19118,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_19118(t8,t7);}
else{
t6=t5;
f_19118(t6,C_SCHEME_UNDEFINED);}}

/* k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_19118(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19118,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_19121,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_19121(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[343]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19285,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 377  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[343]);}
else{
t18=t17;
f_19285(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[344]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19320,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[344]);}
else{
t19=t18;
f_19320(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19349,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[9]);}
else{
t19=t18;
f_19349(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k19347 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19349,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19356,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19364,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19362 in k19347 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19356(2,t2,C_SCHEME_UNDEFINED);}}

/* k19354 in k19347 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19121(t5,t4);}

/* k19318 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19320,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19324,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19324(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19322 in k19318 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19121(t7,t6);}

/* k19283 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19285,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19289,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19289(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19287 in k19283 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19121(t7,t6);}

/* k19119 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_19121(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19121,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_19124,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_19124(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[343]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19185,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[343]);}
else{
t6=t5;
f_19185(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19220,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[344]);}
else{
t7=t6;
f_19220(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19249,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_19249(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k19247 in k19119 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19249,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19256,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19264,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19262 in k19247 in k19119 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19256(2,t2,C_SCHEME_UNDEFINED);}}

/* k19254 in k19247 in k19119 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_19124(t5,t4);}

/* k19218 in k19119 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19220(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19220,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19224,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19224(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19222 in k19218 in k19119 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19224(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19124(t7,t6);}

/* k19183 in k19119 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19185(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19185,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19189,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19189(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19187 in k19183 in k19119 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_19124(t7,t6);}

/* k19122 in k19119 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_19124(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19124,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_19127,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_19127(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k19125 in k19122 in k19119 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19127,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19130,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19142,a[2]=((C_word)li278),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_15694(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[371],"next-in-weighting"),t4);}

/* a19141 in k19125 in k19122 in k19119 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19142(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19142,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19148,a[2]=t2,a[3]=((C_word)li277),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19164,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t5,t3);}

/* k19162 in a19141 in k19125 in k19122 in k19119 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[236]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a19147 in a19141 in k19125 in k19122 in k19119 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19148(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19148,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19156,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-datum");
f_18925(t3,t2);}

/* k19154 in a19147 in a19141 in k19125 in k19122 in k19119 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k19128 in k19125 in k19122 in k19119 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19130,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19133,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  recalc-weightings");
f_19865(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_19133(2,t3,C_SCHEME_UNDEFINED);}}

/* k19131 in k19128 in k19125 in k19122 in k19119 in k19116 in k19109 in k19103 in k19100 in make-weighting in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_19133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_19015(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19015,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[361]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_19006(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19006,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[361]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_18997(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18997,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[361]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_18979(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18979,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[361]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_18961(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18961,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[361]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_18943(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18943,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[361]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_18934(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18934,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[361]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_18925(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18925,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[361]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18703(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18703,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18706,a[2]=((C_word)li267),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18753,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t4,t2);}

/* k18751 in next-in-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18753,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18756,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18779,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18898,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache");
f_15629(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_18756(t4,C_SCHEME_UNDEFINED);}}

/* k18896 in k18751 in next-in-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  next-1");
f_16035(((C_word*)t0)[2],t1);}

/* k18777 in k18751 in next-in-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18779,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18786,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18833,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  pattern-length");
f_15431(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18860,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  pattern-length");
f_15431(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18879,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-length");
f_15431(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18894,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-length");
f_15431(t3,((C_word*)t0)[2]);}}

/* k18892 in k18777 in k18751 in next-in-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18894,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  rotate-items");
t3=((C_word*)t0)[5];
f_18706(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k18877 in k18777 in k18751 in next-in-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18879,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  rotate-items");
t3=((C_word*)t0)[5];
f_18706(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k18858 in k18777 in k18751 in next-in-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18860,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  rotate-items");
t3=((C_word*)t0)[6];
f_18706(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k18831 in k18777 in k18751 in next-in-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18833,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 377  rotate-items");
t4=((C_word*)t0)[7];
f_18706(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k18784 in k18777 in k18751 in next-in-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_18756(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k18754 in k18751 in next-in-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_18756(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18706(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_18706,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18712,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li266),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_18712(t10,t1,t3);}

/* do2287 in rotate-items in next-in-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_18712(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18712,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18728,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  list-set!");
t7=C_retrieve(lf[80]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k18726 in do2287 in rotate-items in next-in-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18728,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18731,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  list-set!");
t4=C_retrieve(lf[80]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k18729 in k18726 in do2287 in rotate-items in next-in-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18731,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18712(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18229(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_18229r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18229r(t0,t1,t2,t3);}}

static void C_ccall f_18229r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18233,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18693,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_18233(t8,t7);}}

/* k18691 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18233(t3,t2);}

/* k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_18233(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18233,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18236,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_18236(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[343]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18566,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[343]);}
else{
t22=t21;
f_18566(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[344]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18601,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 377  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[344]);}
else{
t23=t22;
f_18601(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[359]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18636,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[359]);}
else{
t24=t23;
f_18636(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18665,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_18665(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k18663 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18665,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18672,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18680,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18678 in k18663 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18672(2,t2,C_SCHEME_UNDEFINED);}}

/* k18670 in k18663 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18236(t5,t4);}

/* k18634 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18636,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18640,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18640(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18638 in k18634 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18236(t7,t6);}

/* k18599 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18601(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18601,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18605,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18605(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18603 in k18599 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18236(t7,t6);}

/* k18564 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18566,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18570,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18570(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18568 in k18564 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18236(t7,t6);}

/* k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_18236(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18236,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_18239,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18239(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[343]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18431,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[343]);}
else{
t6=t5;
f_18431(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18466,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[344]);}
else{
t7=t6;
f_18466(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[359]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18501,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[359]);}
else{
t8=t7;
f_18501(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18530,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_18530(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18528 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18530,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18537,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18545,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18543 in k18528 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18537(2,t2,C_SCHEME_UNDEFINED);}}

/* k18535 in k18528 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18239(t5,t4);}

/* k18499 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18501,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18505,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18505(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18503 in k18499 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18239(t7,t6);}

/* k18464 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18470,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18470(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18468 in k18464 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18239(t7,t6);}

/* k18429 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18431,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18435,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18435(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18433 in k18429 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18239(t7,t6);}

/* k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_18239(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18239,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18242,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_18242(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[343]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18296,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[343]);}
else{
t6=t5;
f_18296(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18331,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[344]);}
else{
t7=t6;
f_18331(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[359]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18366,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[359]);}
else{
t8=t7;
f_18366(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18395,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_18395(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k18393 in k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18395(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18395,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18402,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18410,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18408 in k18393 in k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18402(2,t2,C_SCHEME_UNDEFINED);}}

/* k18400 in k18393 in k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18242(t5,t4);}

/* k18364 in k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18366,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18370,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18370(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18368 in k18364 in k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18242(t7,t6);}

/* k18329 in k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18331,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18335,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18335(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18333 in k18329 in k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18242(t7,t6);}

/* k18294 in k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18296,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18300,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18300(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18298 in k18294 in k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18242(t7,t6);}

/* k18240 in k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_18242(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18242,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18245,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18245(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k18243 in k18240 in k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18245,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18248,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_15684(t2);}

/* k18246 in k18243 in k18240 in k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18248,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18254,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18263,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_15694(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[358],"next-in-rotation"),t5);}

/* a18262 in k18246 in k18243 in k18240 in k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18263(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18263,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18275,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t4,t3);}

/* k18273 in a18262 in k18246 in k18243 in k18240 in k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[236]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k18252 in k18246 in k18243 in k18240 in k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18254(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18254,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18257,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_15620(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k18255 in k18252 in k18246 in k18243 in k18240 in k18237 in k18234 in k18231 in make-rotation in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18153(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18153,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18157,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t3,t2);}

/* k18155 in next-in-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18157,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18160,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18176,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-length");
f_15431(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_18160(2,t4,C_SCHEME_UNDEFINED);}}

/* k18174 in k18155 in next-in-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18176,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18186,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  tb:rani");
f_8220(t3,t1);}

/* k18184 in k18174 in k18155 in next-in-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18186,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18188,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li262),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_18188(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do2187 in k18184 in k18174 in k18155 in next-in-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_18188(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18188,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18205,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 377  list-set!");
t10=C_retrieve(lf[80]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k18203 in do2187 in k18184 in k18174 in k18155 in next-in-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18205,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18208,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  list-set!");
t3=C_retrieve(lf[80]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k18206 in k18203 in do2187 in k18184 in k18174 in k18155 in next-in-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18208,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18219,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  tb:rani");
f_8220(t3,((C_word*)t0)[2]);}

/* k18217 in k18206 in k18203 in do2187 in k18184 in k18174 in k18155 in next-in-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_18188(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k18158 in k18155 in next-in-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17890(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_17890r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17890r(t0,t1,t2,t3);}}

static void C_ccall f_17890r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17894,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18143,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_17894(t8,t7);}}

/* k18141 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17894(t3,t2);}

/* k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_17894(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17894,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17897,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_17897(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[343]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18051,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 377  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[343]);}
else{
t18=t17;
f_18051(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[344]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18086,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[344]);}
else{
t19=t18;
f_18086(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18115,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_18115(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k18113 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18115,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18122,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18130,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18128 in k18113 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18122(2,t2,C_SCHEME_UNDEFINED);}}

/* k18120 in k18113 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17897(t5,t4);}

/* k18084 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18090,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18090(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18088 in k18084 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17897(t7,t6);}

/* k18049 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18051,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18055,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18055(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18053 in k18049 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17897(t7,t6);}

/* k17895 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_17897(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17897,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17900,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_17900(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[343]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17951,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[343]);}
else{
t6=t5;
f_17951(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17986,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[344]);}
else{
t7=t6;
f_17986(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18015,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_18015(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k18013 in k17895 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18015,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18022,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18030,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18028 in k18013 in k17895 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18022(2,t2,C_SCHEME_UNDEFINED);}}

/* k18020 in k18013 in k17895 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_18022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17900(t5,t4);}

/* k17984 in k17895 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17986,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17990,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17990(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17988 in k17984 in k17895 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17900(t7,t6);}

/* k17949 in k17895 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17951,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17955,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17955(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17953 in k17949 in k17895 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17900(t7,t6);}

/* k17898 in k17895 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_17900(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17900,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17903,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17903(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17901 in k17898 in k17895 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17903,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17906,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_15684(t2);}

/* k17904 in k17901 in k17898 in k17895 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17906,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17912,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17918,a[2]=((C_word)li260),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_15694(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[356],"next-in-heap"),t5);}

/* a17917 in k17904 in k17901 in k17898 in k17895 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17918(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17918,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17930,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t4,t3);}

/* k17928 in a17917 in k17904 in k17901 in k17898 in k17895 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[236]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k17910 in k17904 in k17901 in k17898 in k17895 in k17892 in make-heap in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17854(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17854,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17858,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t3,t2);}

/* k17856 in next-in-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17858,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17867,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17874,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_15467(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17880,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 377  pattern-data-set!");
f_15404(t4,((C_word*)t0)[2],t5);}}

/* k17878 in k17856 in next-in-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k17872 in k17856 in next-in-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_15236(((C_word*)t0)[2],t1,C_fix(1));}

/* k17865 in k17856 in next-in-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17607(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_17607r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17607r(t0,t1,t2,t3);}}

static void C_ccall f_17607r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17611,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_17611(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_17611(t8,t7);}}

/* k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_17611(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17611,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17614,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_17614(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[343]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17760,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 377  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[343]);}
else{
t18=t17;
f_17760(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[344]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17795,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[344]);}
else{
t19=t18;
f_17795(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17824,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_17824(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k17822 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17824,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17831,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17839,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17837 in k17822 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17839(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17831(2,t2,C_SCHEME_UNDEFINED);}}

/* k17829 in k17822 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17614(t5,t4);}

/* k17793 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17795,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17799,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17799(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17797 in k17793 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17614(t7,t6);}

/* k17758 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17760,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17764,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17764(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17762 in k17758 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17614(t7,t6);}

/* k17612 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_17614(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17614,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17617,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_17617(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[343]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17660,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[343]);}
else{
t6=t5;
f_17660(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17695,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[344]);}
else{
t7=t6;
f_17695(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17724,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_17724(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k17722 in k17612 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17724,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17731,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17739,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17737 in k17722 in k17612 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17731(2,t2,C_SCHEME_UNDEFINED);}}

/* k17729 in k17722 in k17612 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17617(t5,t4);}

/* k17693 in k17612 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17695,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17699,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17699(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17697 in k17693 in k17612 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17617(t7,t6);}

/* k17658 in k17612 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17660,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17664,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17664(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17662 in k17658 in k17612 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17617(t7,t6);}

/* k17615 in k17612 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_17617(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17617,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17620,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17620(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17618 in k17615 in k17612 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17620,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17623,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_15684(t2);}

/* k17621 in k17618 in k17615 in k17612 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17623,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17629,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17631,a[2]=((C_word)li257),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_15694(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[354],"next-in-line"),t4);}

/* a17630 in k17621 in k17618 in k17615 in k17612 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17631(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17631,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17639,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t4,t3);}

/* k17637 in a17630 in k17621 in k17618 in k17615 in k17612 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[236]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k17627 in k17621 in k17618 in k17615 in k17612 in k17609 in make-line in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17629(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17392(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17392,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17396,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache");
f_15629(t3,t2);}

/* k17394 in next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17396,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[346]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17402,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17426,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[346]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 377  next-1");
f_16035(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17605,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  palin-len");
f_16833(t8,t1);}}

/* k17603 in k17394 in next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17605,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17558,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  palin-inc-set!");
f_16842(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_17402(2,t2,C_SCHEME_UNDEFINED);}}

/* k17556 in k17603 in k17394 in next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17558(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17558,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[346]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17570,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_17570(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_17570(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_17570(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_17570(t7,C_SCHEME_FALSE);}}}

/* k17568 in k17556 in k17603 in k17394 in next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_17570(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17570,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_17402(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_17402(2,t4,t3);}}

/* k17424 in k17394 in next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17426,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17429,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  palin-len");
f_16833(t2,((C_word*)t0)[2]);}

/* k17427 in k17424 in k17394 in next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17429,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17435,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[346]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t7=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k17433 in k17427 in k17424 in k17394 in next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17438,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  palin-inc-set!");
f_16842(t2,((C_word*)t0)[2],C_fix(1));}

/* k17436 in k17433 in k17427 in k17424 in k17394 in next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17438,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17441,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17526,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_17526(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_17526(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_17526(t5,C_SCHEME_FALSE);}}}

/* k17524 in k17436 in k17433 in k17427 in k17424 in k17394 in next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_17526(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_17441(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_17441(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_17441(t3,t2);}}

/* k17439 in k17436 in k17433 in k17427 in k17424 in k17394 in next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_17441(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17441,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17447,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17520,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-flags");
f_15395(t3,((C_word*)t0)[2]);}

/* k17518 in k17439 in k17436 in k17433 in k17427 in k17424 in k17394 in next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_8016(((C_word*)t0)[2],t1,C_fix(2));}

/* k17445 in k17439 in k17436 in k17433 in k17427 in k17424 in k17394 in next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17447,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17450,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_15467(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_17402(2,t2,C_SCHEME_UNDEFINED);}}

/* k17448 in k17445 in k17439 in k17436 in k17433 in k17427 in k17424 in k17394 in next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17450,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_15236(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_15236(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[351]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_15236(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[352]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_15236(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_15236(((C_word*)t0)[3],t1,t2);}}}}

/* k17400 in k17394 in next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17402,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17405,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[346]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[346]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t9=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k17403 in k17400 in k17394 in next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17405,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17412,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t2,((C_word*)t0)[2]);}

/* k17410 in k17403 in k17400 in k17394 in next-in-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16922(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_16922r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16922r(t0,t1,t2,t3);}}

static void C_ccall f_16922r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16926,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_16926(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_16926(t8,t7);}}

/* k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16926(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16926,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16929,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_16929(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[343]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17263,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[343]);}
else{
t22=t21;
f_17263(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[344]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17298,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 377  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[344]);}
else{
t23=t22;
f_17298(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[350]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17333,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[350]);}
else{
t24=t23;
f_17333(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17362,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_17362(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k17360 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17362,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17369,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17377,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17375 in k17360 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17369(2,t2,C_SCHEME_UNDEFINED);}}

/* k17367 in k17360 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16929(t5,t4);}

/* k17331 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17333,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17337,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17337(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17335 in k17331 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16929(t7,t6);}

/* k17296 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17298,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17302,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17302(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17300 in k17296 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16929(t7,t6);}

/* k17261 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17263,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17267,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17267(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17265 in k17261 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16929(t7,t6);}

/* k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16929(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16929,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16932,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16932(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[343]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17128,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[343]);}
else{
t6=t5;
f_17128(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17163,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[344]);}
else{
t7=t6;
f_17163(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17198,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[350]);}
else{
t8=t7;
f_17198(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17227,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17227(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17225 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17227,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17242,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17240 in k17225 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17234(2,t2,C_SCHEME_UNDEFINED);}}

/* k17232 in k17225 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16932(t5,t4);}

/* k17196 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17198,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17202,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17202(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17200 in k17196 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16932(t7,t6);}

/* k17161 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17163,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17167,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17167(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17165 in k17161 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16932(t7,t6);}

/* k17126 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17128,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17132,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17132(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17130 in k17126 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16932(t7,t6);}

/* k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16932(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16932,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16935,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16935(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[343]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16993,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[343]);}
else{
t6=t5;
f_16993(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17028,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[344]);}
else{
t7=t6;
f_17028(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[350]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17063,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[350]);}
else{
t8=t7;
f_17063(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17092,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17092(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17090 in k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17092,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17099,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17107,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17105 in k17090 in k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17099(2,t2,C_SCHEME_UNDEFINED);}}

/* k17097 in k17090 in k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16935(t5,t4);}

/* k17061 in k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17063,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17067,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17067(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17065 in k17061 in k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16935(t7,t6);}

/* k17026 in k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17028(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17028,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17032,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17032(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17030 in k17026 in k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_17032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16935(t7,t6);}

/* k16991 in k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16993,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16997,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16997(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16995 in k16991 in k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16935(t7,t6);}

/* k16933 in k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16935(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16935,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16938,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16938(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k16936 in k16933 in k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16938,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16941,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_15684(t2);}

/* k16939 in k16936 in k16933 in k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16941,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16947,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16964,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_15694(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[349],"next-in-palindrome"),t5);}

/* a16963 in k16939 in k16936 in k16933 in k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16964(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16964,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16972,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t4,t3);}

/* k16970 in a16963 in k16939 in k16936 in k16933 in k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[236]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16945 in k16939 in k16936 in k16933 in k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16950,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[346],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_15620(t2,((C_word*)t0)[4],t5);}

/* k16948 in k16945 in k16939 in k16936 in k16933 in k16930 in k16927 in k16924 in make-palindrome in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16842(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16842,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[346]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16833(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16833,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[346]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16761(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16761,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16765,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t3,t2);}

/* k16763 in next-in-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16765,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16768,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_16768(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_16768(t4,C_SCHEME_UNDEFINED);}}

/* k16766 in k16763 in next-in-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16768(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16506(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_16506r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16506r(t0,t1,t2,t3);}}

static void C_ccall f_16506r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16510,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_16510(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_16510(t8,t7);}}

/* k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16510(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16510,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_16513,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_16513(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[343]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16667,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 377  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[343]);}
else{
t18=t17;
f_16667(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[344]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16702,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[344]);}
else{
t19=t18;
f_16702(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16731,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_16731(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k16729 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16731,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16738,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16746,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16744 in k16729 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16738(2,t2,C_SCHEME_UNDEFINED);}}

/* k16736 in k16729 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16513(t5,t4);}

/* k16700 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16706,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16706(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16704 in k16700 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16706(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16513(t7,t6);}

/* k16665 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16667,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16671,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16671(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16669 in k16665 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16513(t7,t6);}

/* k16511 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16513(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16513,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16516,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_16516(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[343]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16567,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[343]);}
else{
t6=t5;
f_16567(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16602,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[344]);}
else{
t7=t6;
f_16602(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16631,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_16631(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16629 in k16511 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16631,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16638,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16646,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16644 in k16629 in k16511 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16638(2,t2,C_SCHEME_UNDEFINED);}}

/* k16636 in k16629 in k16511 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16516(t5,t4);}

/* k16600 in k16511 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16602,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16606,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16606(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16604 in k16600 in k16511 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16516(t7,t6);}

/* k16565 in k16511 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16567,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16571,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16571(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16569 in k16565 in k16511 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16516(t7,t6);}

/* k16514 in k16511 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16516(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16516,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16519,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16519(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k16517 in k16514 in k16511 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16519,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16522,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_15684(t2);}

/* k16520 in k16517 in k16514 in k16511 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16522,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16528,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16534,a[2]=((C_word)li249),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_15694(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[342],"next-in-cycle"),t5);}

/* a16533 in k16520 in k16517 in k16514 in k16511 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16534(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16534,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16546,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_15413(t4,t3);}

/* k16544 in a16533 in k16520 in k16517 in k16514 in k16511 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[236]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16526 in k16520 in k16517 in k16514 in k16511 in k16508 in make-cycle in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16391(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16391,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16504,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_15380(t3,t2);}

/* k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16504,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16401,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_15467(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16401,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16404,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16489,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-stream");
f_15281(t7,t1);}

/* k16487 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16489,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16496,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16500,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  period-stream");
f_15281(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_16404(2,t2,C_SCHEME_UNDEFINED);}}

/* k16498 in k16487 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16500(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  next-1");
f_16035(((C_word*)t0)[2],t1);}

/* k16494 in k16487 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[296]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t4=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k16402 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16486,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  period-length");
f_15263(t2,((C_word*)t0)[3]);}

/* k16484 in k16402 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16486,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16412,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[296]);
t7=t4;
f_16412(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 377  period-length");
f_15263(t4,((C_word*)t0)[3]);}}

/* k16410 in k16484 in k16402 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16412,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16415,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16421,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16476,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-flags");
f_15395(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_16421(2,t5,C_SCHEME_FALSE);}}

/* k16474 in k16410 in k16484 in k16402 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_8016(((C_word*)t0)[2],t1,C_fix(8));}

/* k16419 in k16410 in k16484 in k16402 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16421,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16424,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16440,a[2]=t3,a[3]=((C_word)li247),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  map-pattern-data");
f_16345(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_16415(t2,C_SCHEME_UNDEFINED);}}

/* a16439 in k16419 in k16410 in k16484 in k16402 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16440(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16440,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16469,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  reset-period");
f_16391(t3,t2);}

/* k16467 in a16439 in k16419 in k16410 in k16484 in k16402 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16469,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16450,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_15467(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k16448 in k16467 in a16439 in k16419 in k16410 in k16484 in k16402 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16450,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16453,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16465,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-omit");
f_15317(t3,t1);}

/* k16463 in k16448 in k16467 in a16439 in k16419 in k16410 in k16484 in k16402 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16465,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  period-omit-set!");
f_15308(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16451 in k16448 in k16467 in a16439 in k16419 in k16410 in k16484 in k16402 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16453,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k16422 in k16419 in k16410 in k16484 in k16402 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16424,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16434,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 377  max");
t4=*((C_word*)lf[294]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_16415(t2,C_SCHEME_UNDEFINED);}}

/* k16432 in k16422 in k16419 in k16410 in k16484 in k16402 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16415(t3,t2);}

/* k16413 in k16410 in k16484 in k16402 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16415(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16415,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16418,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_15236(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k16416 in k16413 in k16410 in k16484 in k16402 in k16399 in k16502 in reset-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16418(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16345(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16345,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[305]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16336(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16336,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[305]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16035(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16035,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16042,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_15380(t3,t2);}

/* k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16042(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16042,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16045,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_15467(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 377  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16331,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  promise?");
t3=C_retrieve(lf[340]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k16329 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  force");
t2=C_retrieve(lf[339]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16045,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16048,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16316,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  period-count");
f_15245(t5,t1);}

/* k16314 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16316,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16271,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16308,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  period-reps");
f_15335(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_16048(2,t2,C_SCHEME_UNDEFINED);}}

/* k16306 in k16314 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16308,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[305]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16300,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-value-set!");
f_15476(t5,((C_word*)t0)[4],lf[334]);}
else{
t5=((C_word*)t0)[2];
f_16271(t5,C_SCHEME_UNDEFINED);}}

/* k16298 in k16306 in k16314 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16300,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16303,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-state-set!");
f_15494(t2,((C_word*)t0)[2],lf[332]);}

/* k16301 in k16298 in k16306 in k16314 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[334]);
t3=((C_word*)t0)[2];
f_16271(t3,t2);}

/* k16269 in k16314 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16271(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16271,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16277,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_16277(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16294,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  reset-period");
f_16391(t4,((C_word*)t0)[2]);}}

/* k16292 in k16269 in k16314 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_16277(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k16275 in k16269 in k16314 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16277(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16277,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[320]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16281,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-value-set!");
f_15476(t3,((C_word*)t0)[2],lf[320]);}
else{
t2=((C_word*)t0)[3];
f_16048(2,t2,C_SCHEME_UNDEFINED);}}

/* k16279 in k16275 in k16269 in k16314 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  pattern-state-set!");
f_15494(((C_word*)t0)[3],((C_word*)t0)[2],lf[332]);}

/* k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16048,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16054,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-flags");
f_15395(t2,((C_word*)t0)[3]);}}

/* k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16054,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[305]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16060,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16146,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_8016(t10,t1,C_fix(1));}

/* k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16146,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16149,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16162,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  next-in-pattern");
f_16336(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16169,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16258,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_8016(t3,((C_word*)t0)[2],C_fix(8));}}

/* k16256 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16258,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16265,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  period-length");
f_15263(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_16169(t2,C_SCHEME_FALSE);}}

/* k16263 in k16256 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_16169(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16169(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16169,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16171,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li243),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_16171(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16171(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16171,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16178,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16220,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li242),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_16220(t9,t5);}}

/* do1839 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16220(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16220,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16255,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum");
f_15449(t2,((C_word*)t0)[3]);}

/* k16253 in do1839 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16255,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[320]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16230,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16237,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16244,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  next-in-pattern");
f_16336(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 377  next-in-pattern");
f_16336(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k16242 in k16253 in do1839 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16244,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16389,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_15380(t2,t1);}

/* k16387 in k16242 in k16253 in do1839 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16389,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_15467(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_16237(2,t2,((C_word*)t0)[2]);}}

/* k16362 in k16387 in k16242 in k16253 in do1839 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16385,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  period-omit");
f_15317(t2,t1);}

/* k16383 in k16362 in k16387 in k16242 in k16253 in do1839 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16385,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16373,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16381,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-omit");
f_15317(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_16237(2,t2,((C_word*)t0)[2]);}}

/* k16379 in k16383 in k16362 in k16387 in k16242 in k16253 in do1839 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16381,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  period-omit-set!");
f_15308(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16371 in k16383 in k16362 in k16387 in k16242 in k16253 in do1839 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_16237(2,t2,lf[320]);}

/* k16235 in k16253 in do1839 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  pattern-datum-set!");
f_15440(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16228 in k16253 in do1839 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_16220(t2,((C_word*)t0)[2]);}

/* k16176 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16178,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16182,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16218,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum");
f_15449(t3,((C_word*)t0)[3]);}

/* k16216 in k16176 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  next-1");
f_16035(((C_word*)t0)[2],t1);}

/* k16180 in k16176 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16182,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16185,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16201,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16214,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum");
f_15449(t5,((C_word*)t0)[3]);}

/* k16212 in k16180 in k16176 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  pattern?");
f_15380(((C_word*)t0)[2],t1);}

/* k16199 in k16180 in k16176 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16201,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16205,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16209,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum");
f_15449(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[332]);
t3=((C_word*)t0)[3];
f_16185(t3,t2);}}

/* k16207 in k16199 in k16180 in k16176 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  pattern-state");
f_15503(((C_word*)t0)[2],t1);}

/* k16203 in k16199 in k16180 in k16176 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16205(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16185(t3,t2);}

/* k16183 in k16180 in k16176 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16185(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16185,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16188,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[320]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 377  pattern-datum-set!");
f_15440(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_16188(2,t5,t4);}}

/* k16186 in k16183 in k16180 in k16176 in do1835 in k16167 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_16171(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k16160 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  pattern-datum-set!");
f_15440(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16147 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16149,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16153,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16158,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum");
f_15449(t3,((C_word*)t0)[2]);}

/* k16156 in k16147 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  next-1");
f_16035(((C_word*)t0)[2],t1);}

/* k16151 in k16147 in k16144 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[332]);
t4=((C_word*)t0)[2];
f_16060(2,t4,t3);}

/* k16058 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16060,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16063,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[332]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16105,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16117,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-count");
f_15245(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16120,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16140,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_8016(t5,((C_word*)t0)[2],C_fix(64));}}

/* k16138 in k16058 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  pattern-datum-set!");
f_15440(((C_word*)t0)[3],((C_word*)t0)[2],lf[320]);}
else{
t2=((C_word*)t0)[3];
f_16120(2,t2,C_SCHEME_UNDEFINED);}}

/* k16118 in k16058 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16120,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16126,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_8016(t2,((C_word*)t0)[2],C_fix(16));}

/* k16124 in k16118 in k16058 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16126,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16137,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-count");
f_15245(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_16063(2,t2,C_SCHEME_UNDEFINED);}}

/* k16135 in k16124 in k16118 in k16058 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16137,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_15236(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16115 in k16058 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16117,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_15236(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16103 in k16058 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16108,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum-set!");
f_15440(t2,((C_word*)t0)[2],lf[320]);}

/* k16106 in k16103 in k16058 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_16063(2,t3,t2);}

/* k16061 in k16058 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16063,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16066,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16099,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  period-count");
f_15245(t3,((C_word*)t0)[2]);}

/* k16097 in k16061 in k16058 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16099,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[332]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16094,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-reps");
f_15335(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_16066(2,t3,t2);}}

/* k16092 in k16097 in k16061 in k16058 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16094,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[296]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k16064 in k16061 in k16058 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16066,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16069,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16079,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_16069(t3,C_SCHEME_UNDEFINED);}}

/* k16077 in k16064 in k16061 in k16058 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16069(t3,t2);}

/* k16067 in k16064 in k16061 in k16058 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16069(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16069,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16072,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-state-set!");
f_15494(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k16070 in k16067 in k16064 in k16061 in k16058 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16072,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16075,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-value-set!");
f_15476(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k16073 in k16070 in k16067 in k16064 in k16061 in k16058 in k16052 in k16046 in k16043 in k16040 in next-1 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15912(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_15912r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_15912r(t0,t1,t2,t3);}}

static void C_ccall f_15912r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15933,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li239),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_15933(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15971,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_15380(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 377  next-1");
f_16035(t1,t2);}}

/* k15969 in next in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15971,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15981,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  next-1");
f_16035(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k15979 in k15969 in next in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15981,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15983,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li240),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_15983(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do1811 in k15979 in k15969 in next in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15983(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15983,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[334]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16002,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16012,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  eop?");
t13=C_retrieve(lf[331]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k16010 in do1811 in k15979 in k15969 in next in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16012,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_16002(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16017,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  next-1");
f_16035(t2,((C_word*)t0)[2]);}}

/* k16015 in k16010 in do1811 in k15979 in k15969 in next in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_16017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16002(t3,t2);}

/* k16000 in do1811 in k15979 in k15969 in next in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_16002(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_15983(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do1804 in next in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15933(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15933,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15965,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  next-1");
f_16035(t4,((C_word*)t0)[2]);}}

/* k15963 in do1804 in next in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15965,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_15933(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15893(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15893,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15900,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_15380(t3,t2);}

/* k15898 in eod? in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15900,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15907,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-value");
t3=C_retrieve2(lf[314],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[334]));}}

/* k15905 in k15898 in eod? in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  eod?");
t2=C_retrieve(lf[333]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15874(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15874,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15881,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_15380(t3,t2);}

/* k15879 in eop? in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15881,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15888,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-state");
f_15503(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[332]));}}

/* k15886 in k15879 in eop? in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  eop?");
t2=C_retrieve(lf[331]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15694(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15694,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15698,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data-set!");
f_15404(t12,t2,t3);}

/* k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15698,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_15701,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[305]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t6=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15701,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15704,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[305]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t6=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k15702 in k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15704,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15707,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[305]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t6=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k15705 in k15702 in k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15707,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15710,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15864,a[2]=t3,a[3]=((C_word)li235),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  map-pattern-data");
f_16345(t4,t5,((C_word*)t0)[7]);}

/* a15863 in k15705 in k15702 in k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15864(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15864,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15871,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_15380(t3,t2);}

/* k15869 in a15863 in k15705 in k15702 in k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k15708 in k15705 in k15702 in k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15710,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15713,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_15713(t5,t4);}
else{
t3=t2;
f_15713(t3,C_SCHEME_UNDEFINED);}}

/* k15711 in k15708 in k15705 in k15702 in k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15713(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15713,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[305]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15719,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[321]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_15719(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[328]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_15719(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[329],t4);}}}

/* k15717 in k15711 in k15708 in k15705 in k15702 in k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15719,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[305]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15725,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[322]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_15725(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[326]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_15725(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[327],t4);}}}

/* k15723 in k15717 in k15711 in k15708 in k15705 in k15702 in k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15725,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15728,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15788,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_8016(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k15786 in k15723 in k15717 in k15711 in k15708 in k15705 in k15702 in k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15788,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[324]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15728(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15802,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_8016(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k15800 in k15786 in k15723 in k15717 in k15711 in k15708 in k15705 in k15702 in k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15802,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[325]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15728(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15728(t4,t3);}}

/* k15726 in k15723 in k15717 in k15711 in k15708 in k15705 in k15702 in k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15728(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15728,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15731,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_retrieve(lf[123]));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[305]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t8=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k15729 in k15726 in k15723 in k15717 in k15711 in k15708 in k15705 in k15702 in k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15731,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15737,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_15737(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_15737(t8,t7);}}

/* k15735 in k15729 in k15726 in k15723 in k15717 in k15711 in k15708 in k15705 in k15702 in k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15737(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15737,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15740,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15750,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 377  make-period");
f_15224(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 377  make-period");
f_15224(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k15748 in k15735 in k15729 in k15726 in k15723 in k15717 in k15711 in k15708 in k15705 in k15702 in k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[305]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t4=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k15738 in k15735 in k15729 in k15726 in k15723 in k15717 in k15711 in k15708 in k15705 in k15702 in k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15740,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15743,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[305]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t6=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k15741 in k15738 in k15735 in k15729 in k15726 in k15723 in k15717 in k15711 in k15708 in k15705 in k15702 in k15699 in k15696 in initialize-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15684(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15684,NULL,1,t1);}
t2=lf[320];
t3=lf[320];
t4=lf[320];
t5=C_retrieve(lf[123]);
t6=lf[321];
t7=lf[322];
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,15,lf[305],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,t5,C_SCHEME_FALSE,t6,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15629(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15629,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[305]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15620(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15620,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[305]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15503(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15503,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[305]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15494(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15494,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[305]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_15485 in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15485(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15485,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[305]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15476(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15476,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[305]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15467(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15467,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[305]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15449(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15449,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[305]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15440(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15440,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[305]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15431(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15431,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[305]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15413(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15413,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[305]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15404(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15404,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[305]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15395(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15395,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[305]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15380(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15380,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[305]));}

/* period-reps in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15335(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15335,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[296]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15317(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15317,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[296]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15308(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15308,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[296]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15281(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15281,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[296]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15263(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15263,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[296]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15245(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15245,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[296]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15236(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15236,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[296]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15224(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15224,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[296],t2,t3,t4,t5,t6,t7));}

/* export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15028(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15028,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15032,a[2]=t3,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_15032(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15032(t8,t7);}}

/* k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15032(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15032,NULL,2,t0,t1);}
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_length(((C_word*)((C_word*)t0)[4])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15038,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t4,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15181,a[2]=t7,a[3]=t3,a[4]=((C_word)li210),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_15181(t9,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* do1547 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15181(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15181,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15192,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15207,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t6=C_retrieve(lf[227]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}}

/* k15205 in do1547 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_length(t1);
C_trace("ChickenBridge.scm: 376  max");
t3=*((C_word*)lf[294]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k15190 in do1547 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_15181(t4,((C_word*)t0)[2],t3);}

/* k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15038,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15043,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word)li209),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  with-output-to-file");
t3=C_retrieve(lf[293]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15043,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15047,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  current-output-port");
t3=*((C_word*)lf[292]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15047,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15050,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  format");
t3=C_retrieve(lf[282]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,lf[291]);}

/* k15048 in k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15050,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15053,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  format");
t3=C_retrieve(lf[282]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[6],lf[290]);}

/* k15051 in k15048 in k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15053,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15056,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  format");
t3=C_retrieve(lf[282]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[6],lf[289],((C_word*)((C_word*)t0)[2])[1]);}

/* k15054 in k15051 in k15048 in k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15056,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15059,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  format");
t3=C_retrieve(lf[282]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[5],lf[288],((C_word*)t0)[2]);}

/* k15057 in k15054 in k15051 in k15048 in k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15059,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15062,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  format");
t3=C_retrieve(lf[282]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[4],lf[287]);}

/* k15060 in k15057 in k15054 in k15051 in k15048 in k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15062,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15067,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word)li208),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_15067(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* do1553 in k15060 in k15057 in k15054 in k15051 in k15048 in k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15067(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15067,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15077,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15161,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  spectrum-time");
t7=C_retrieve(lf[222]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k15159 in do1553 in k15060 in k15057 in k15054 in k15051 in k15048 in k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15161,2,t0,t1);}
t2=(C_truep(t1)?t1:(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],lf[285]));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15168,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 376  spectrum-size");
t5=C_retrieve(lf[225]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k15166 in k15159 in do1553 in k15060 in k15057 in k15054 in k15051 in k15048 in k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  format");
t2=C_retrieve(lf[282]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[286],((C_word*)t0)[2],t1);}

/* k15075 in do1553 in k15060 in k15057 in k15054 in k15051 in k15048 in k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15077,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15080,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15098,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t5=C_retrieve(lf[227]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k15096 in k15075 in do1553 in k15060 in k15057 in k15054 in k15051 in k15048 in k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15098,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15102,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t4=C_retrieve(lf[229]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k15100 in k15096 in k15075 in do1553 in k15060 in k15057 in k15054 in k15051 in k15048 in k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15102,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15106,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 376  spectrum-size");
t4=C_retrieve(lf[225]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k15104 in k15100 in k15096 in k15075 in do1553 in k15060 in k15057 in k15054 in k15051 in k15048 in k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15106,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15108,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word)li207),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_15108(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do1559 in k15104 in k15100 in k15096 in k15075 in do1553 in k15060 in k15057 in k15054 in k15051 in k15048 in k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_15108(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15108,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_less_or_equalp(t4,C_fix(0)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15118,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(C_word)C_a_i_minus(&a,2,t4,C_fix(1));
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 376  format");
t9=C_retrieve(lf[282]);
((C_proc7)C_retrieve_proc(t9))(7,t9,t5,((C_word*)t0)[2],lf[284],t6,t7,t8);}}

/* k15116 in do1559 in k15104 in k15100 in k15096 in k15075 in do1553 in k15060 in k15057 in k15054 in k15051 in k15048 in k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15118,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
t5=((C_word*)((C_word*)t0)[3])[1];
f_15108(t5,((C_word*)t0)[2],t2,t3,t4);}

/* k15078 in k15075 in do1553 in k15060 in k15057 in k15054 in k15051 in k15048 in k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15080,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15083,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  format");
t3=C_retrieve(lf[282]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],lf[283]);}

/* k15081 in k15078 in k15075 in do1553 in k15060 in k15057 in k15054 in k15051 in k15048 in k15045 in a15042 in k15036 in k15030 in export-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15083,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_15067(t4,((C_word*)t0)[2],t2,t3);}

/* import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14902(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14902,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14908,a[2]=((C_word)li205),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  with-input-from-file");
t4=C_retrieve(lf[280]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14908,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14912,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  current-input-port");
t3=*((C_word*)lf[279]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14912,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14913,a[2]=((C_word)li200),tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14930,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  rhdr");
f_14913(t5,t1);}

/* k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14930,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14933,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[277]))){
t4=t3;
f_14933(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[278],((C_word*)t0)[4]);}}

/* k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14933,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14937,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  rhdr");
f_14913(t2,((C_word*)t0)[4]);}

/* k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14937,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14940,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[275]))){
t4=t3;
f_14940(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[276],((C_word*)t0)[4]);}}

/* k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14943,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14992,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li204),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_14992(t6,t2);}

/* do1524 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14992(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14992,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_equalp(((C_word*)((C_word*)t0)[5])[1],lf[274]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15003,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  rhdr");
f_14913(t2,((C_word*)t0)[2]);}}

/* k15001 in do1524 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_15003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14992(t3,((C_word*)t0)[2]);}

/* k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14943,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14953,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  read-line");
t6=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[3]);}

/* k14951 in k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14953,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14955,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li203),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_14955(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1534 in k14951 in k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14955(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14955,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_eofp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14969,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t6=t2;
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14799,a[2]=t5,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  open-input-string");
t8=C_retrieve(lf[273]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,t6);}}

/* k14797 in do1534 in k14951 in k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14799,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14800,a[2]=((C_word*)t0)[3],a[3]=((C_word)li201),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14823,a[2]=t1,a[3]=t2,a[4]=t7,a[5]=((C_word*)t0)[2],a[6]=t8,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 376  rdat");
t10=t2;
f_14800(t10,t9,t1);}

/* k14821 in k14797 in do1534 in k14951 in k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14823,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14827,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 376  rdat");
t4=((C_word*)t0)[3];
f_14800(t4,t3,((C_word*)t0)[2]);}

/* k14825 in k14821 in k14797 in do1534 in k14951 in k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14827,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14830,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14853,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[8],a[6]=((C_word)li202),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_14853(t7,t3,C_fix(0),((C_word*)t0)[5],((C_word*)t0)[7]);}

/* do1503 in k14825 in k14821 in k14797 in do1534 in k14951 in k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14853(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14853,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[5])[1]))){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,C_SCHEME_FALSE);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14863,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t5,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 376  rdat");
t8=((C_word*)t0)[3];
f_14800(t8,t7,((C_word*)t0)[2]);}}

/* k14861 in do1503 in k14825 in k14821 in k14797 in do1534 in k14951 in k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14863,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14900,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 376  rdat");
t3=((C_word*)t0)[3];
f_14800(t3,t2,((C_word*)t0)[2]);}

/* k14898 in k14861 in do1503 in k14825 in k14821 in k14797 in do1534 in k14951 in k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14900,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[8])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t4);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14892,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  rdat");
t7=((C_word*)t0)[3];
f_14800(t7,t6,((C_word*)t0)[2]);}

/* k14890 in k14898 in k14861 in do1503 in k14825 in k14821 in k14797 in do1534 in k14951 in k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14892,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t7=((C_word*)((C_word*)t0)[4])[1];
f_14853(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k14828 in k14825 in k14821 in k14797 in do1534 in k14951 in k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
t3=((C_word*)t0)[5];
f_14969(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_cdr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  make-spectrum");
f_11565(((C_word*)t0)[5],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],t3,t4);}}

/* rdat in k14797 in do1534 in k14951 in k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14800(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14800,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14804,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  read");
t4=*((C_word*)lf[272]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k14802 in rdat in k14797 in do1534 in k14951 in k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14804,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14807,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[271],((C_word*)t0)[2]);}
else{
t3=t2;
f_14807(2,t3,C_SCHEME_UNDEFINED);}}

/* k14805 in k14802 in rdat in k14797 in do1534 in k14951 in k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k14967 in do1534 in k14951 in k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14969,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14972,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t3;
f_14972(t8,t7);}
else{
t4=t3;
f_14972(t4,C_SCHEME_UNDEFINED);}}

/* k14970 in k14967 in do1534 in k14951 in k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14972(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14972,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14979,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  read-line");
t3=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k14977 in k14970 in k14967 in do1534 in k14951 in k14941 in k14938 in k14935 in k14931 in k14928 in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_14955(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* rhdr in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14913(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14913,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14917,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  read-line");
t4=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k14915 in rhdr in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14917,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14920,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_eofp(t1))){
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[270],((C_word*)t0)[2]);}
else{
t3=t2;
f_14920(2,t3,C_SCHEME_UNDEFINED);}}

/* k14918 in k14915 in rhdr in k14910 in a14907 in import-spear-frames in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14389(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+24)){
C_save_and_reclaim((void*)tr4r,(void*)f_14389r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_14389r(t0,t1,t2,t3,t4);}}

static void C_ccall f_14389r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a=C_alloc(24);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14393,a[2]=t5,a[3]=t10,a[4]=t8,a[5]=t6,a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t6)[1]))){
C_trace("ChickenBridge.scm: 376  error");
t12=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,lf[267]);}
else{
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14762,a[2]=t11,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_car(((C_word*)t6)[1]);
t15=(C_word)C_i_pairp(t14);
t16=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14768,a[2]=t6,a[3]=t13,tmp=(C_word)a,a+=4,tmp);
if(C_truep(t15)){
t17=t16;
f_14768(t17,t15);}
else{
t17=(C_word)C_i_car(((C_word*)t6)[1]);
t18=t16;
f_14768(t18,(C_word)C_i_numberp(t17));}}
else{
t13=t11;
f_14393(2,t13,C_SCHEME_UNDEFINED);}}}

/* k14766 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14768(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_14762(2,t2,(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]));}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 376  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],lf[268],t2);}}

/* k14760 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14393(2,t3,t2);}

/* k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14393,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14396,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14746,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  <=");
C_less_or_equal_p(5,0,t3,C_fix(1),((C_word*)((C_word*)t0)[2])[1],C_fix(8));}

/* k14744 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14746,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14396(2,t4,t3);}
else{
C_trace("ChickenBridge.scm: 376  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[266],((C_word*)((C_word*)t0)[3])[1]);}}

/* k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14396,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14399,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14728,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t4=C_retrieve(lf[229]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14732,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t4=C_retrieve(lf[227]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k14730 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14732(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14399(t3,t2);}

/* k14726 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14399(t3,t2);}

/* k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14399(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14399,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14402,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(1)))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14717,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t4=C_retrieve(lf[229]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14721,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t4=C_retrieve(lf[227]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[6]);}}

/* k14719 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_14402(t3,t2);}

/* k14715 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_SCHEME_UNDEFINED;
t3=((C_word*)t0)[2];
f_14402(t3,t2);}

/* k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14402(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14402,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14405,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=t2;
f_14405(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=t2;
f_14405(t4,t3);}}

/* k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14405(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14405,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14408,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14419,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li191),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_14419(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14449,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word)li192),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_14449(t6,t2,((C_word*)((C_word*)t0)[3])[1]);}}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14469,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14705,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  every?");
t5=C_retrieve(lf[86]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,*((C_word*)lf[265]+1),((C_word*)((C_word*)t0)[5])[1]);}}

/* k14703 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14705,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
f_14469(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14563,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=t5,a[6]=t3,a[7]=t9,a[8]=t7,a[9]=((C_word*)t0)[4],a[10]=((C_word*)t0)[5],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14689,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-minamp");
t12=C_retrieve(lf[235]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14697,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-minfreq");
t12=C_retrieve(lf[233]);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t0)[2]);}}}

/* k14695 in k14703 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14697,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14701,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-maxfreq");
t4=C_retrieve(lf[234]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14699 in k14695 in k14703 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14563(t3,t2);}

/* k14687 in k14703 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14689,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14693,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-maxamp");
t4=C_retrieve(lf[238]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14691 in k14687 in k14703 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14563(t3,t2);}

/* k14561 in k14703 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14563(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14563,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14566,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14670,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-minamp");
t4=C_retrieve(lf[235]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14678,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-minfreq");
t4=C_retrieve(lf[233]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k14676 in k14561 in k14703 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14678,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14682,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-maxfreq");
t4=C_retrieve(lf[234]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14680 in k14676 in k14561 in k14703 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14566(t3,t2);}

/* k14668 in k14561 in k14703 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14670,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14674,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-maxamp");
t4=C_retrieve(lf[238]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14672 in k14668 in k14561 in k14703 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14566(t3,t2);}

/* k14564 in k14561 in k14703 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14566(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14566,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14570,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 376  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_END_OF_LIST);}

/* k14568 in k14564 in k14561 in k14703 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14570,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14575,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t4,a[8]=((C_word)li198),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_14575(t6,((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}

/* do1466 in k14568 in k14564 in k14561 in k14703 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14575(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14575,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14585,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_eqp(t4,C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t3;
f_14585(t6,(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]));}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_eqp(t6,C_SCHEME_TRUE);
t8=t3;
f_14585(t8,(C_truep(t7)?(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[2])[1]):C_SCHEME_UNDEFINED));}}}

/* k14583 in do1466 in k14568 in k14564 in k14561 in k14703 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14585(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14585,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14588,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 376  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[264],t3);}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
t4=(C_word)C_eqp(t3,C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(((C_word*)t0)[7]);
t6=t2;
f_14588(2,t6,(C_word)C_i_set_car(t5,((C_word*)((C_word*)t0)[3])[1]));}
else{
t5=(C_word)C_i_cadr(((C_word*)t0)[7]);
t6=(C_word)C_eqp(t5,C_SCHEME_TRUE);
if(C_truep(t6)){
t7=(C_word)C_i_cdr(((C_word*)t0)[7]);
t8=t2;
f_14588(2,t8,(C_word)C_i_set_car(t7,((C_word*)((C_word*)t0)[2])[1]));}
else{
t7=t2;
f_14588(2,t7,C_SCHEME_UNDEFINED);}}}}

/* k14586 in k14583 in do1466 in k14568 in k14564 in k14561 in k14703 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14575(t3,((C_word*)t0)[2],t2);}

/* k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14472,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14494,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li196),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_14494(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14532,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li197),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_14532(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* do1480 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14532(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14532,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14553,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  interp");
t5=C_retrieve(lf[150]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k14551 in do1480 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_14532(t4,((C_word*)t0)[2],t3);}

/* do1475 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14494(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14494,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14523,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  interp");
t6=C_retrieve(lf[150]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}}

/* k14521 in do1475 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14523,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[4],t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_14494(t5,((C_word*)t0)[2],t4);}

/* k14470 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14485,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14489,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t4=C_retrieve(lf[227]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k14487 in k14470 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_apply(4,0,((C_word*)t0)[2],*((C_word*)lf[263]+1),t1);}

/* k14483 in k14470 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14485,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_14408(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=((C_word*)t0)[2];
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13852,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13927,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13935,a[2]=t2,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t6=C_retrieve(lf[227]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}

/* k13933 in k14483 in k14470 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13935,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13939,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t3=C_retrieve(lf[229]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k13937 in k13933 in k14483 in k14470 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  map");
t2=*((C_word*)lf[262]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a13926 in k14483 in k14470 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13927(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13927,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* k13850 in k14483 in k14470 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13852,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13856,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13913,a[2]=((C_word)li194),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  sort!");
t6=C_retrieve(lf[261]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)t3)[1],t5);}

/* a13912 in k13850 in k14483 in k14470 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13913(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13913,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_lessp(t4,t5));}

/* k13854 in k13850 in k14483 in k14470 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13856,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13864,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word)li193),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_13864(t8,((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1],t4);}

/* do1351 in k13854 in k13850 in k14483 in k14470 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_13864(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13864,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13874,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs-set!");
f_11613(t5,((C_word*)t0)[5],((C_word*)t0)[3]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_car(t5);
t7=(C_word)C_i_cdr(t5);
t8=(C_word)C_i_set_cdr(((C_word*)t4)[1],t7);
t9=(C_word)C_i_cdr(((C_word*)t4)[1]);
t10=C_set_block_item(t4,0,t9);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13897,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t12=*((C_word*)lf[249]+1);
t13=t12;
((C_proc4)C_retrieve_proc(t13))(4,t13,t11,t2,t6);}}

/* k13895 in do1351 in k13854 in k13850 in k14483 in k14470 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_13864(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k13872 in do1351 in k13854 in k13850 in k14483 in k14470 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13874,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13877,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 376  spectrum-amps-set!");
f_11631(t2,((C_word*)t0)[3],t3);}

/* k13875 in k13872 in do1351 in k13854 in k13850 in k14483 in k14470 in k14467 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* do1453 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14449(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14449,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_set_car(t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_cdr(t2);
t6=t1;
t7=t4;
t1=t6;
t2=t7;
goto loop;}}

/* do1448 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14419(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_14419,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_times(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_i_set_car(t2,t4);
t6=(C_word)C_i_cdr(t2);
t8=t1;
t9=t6;
t1=t8;
t2=t9;
goto loop;}}

/* k14406 in k14403 in k14400 in k14397 in k14394 in k14391 in spectrum-rescale! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* spectrum-flip! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14332(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14332,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14340,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-maxfreq");
t4=C_retrieve(lf[234]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k14338 in spectrum-flip! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14340,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14344,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-minfreq");
t3=C_retrieve(lf[233]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k14342 in k14338 in spectrum-flip! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14344,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14348,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t3=C_retrieve(lf[227]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[4]);}

/* k14346 in k14342 in k14338 in spectrum-flip! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14348,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14354,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word)li189),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_14354(t5,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* do1429 in k14346 in k14342 in k14338 in spectrum-flip! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14354(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(15);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_14354,NULL,6,t0,t1,t2,t3,t4,t5);}
if(C_truep((C_word)C_i_nullp(t4))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14364,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs-set!");
f_11613(t6,((C_word*)t0)[3],t5);}
else{
t6=(C_word)C_i_car(t4);
t7=(C_word)C_a_i_divide(&a,2,t2,t6);
t8=(C_word)C_a_i_times(&a,2,t3,t7);
t9=(C_word)C_a_i_cons(&a,2,t8,t5);
t10=t5=t9;
t11=(C_word)C_i_cdr(t4);
t14=t1;
t15=t2;
t16=t3;
t17=t11;
t18=t5;
t1=t14;
t2=t15;
t3=t16;
t4=t17;
t5=t18;
goto loop;}}

/* k14362 in do1429 in k14346 in k14342 in k14338 in spectrum-flip! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[17],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14120,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14122,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14139,a[2]=((C_word)li182),tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14156,a[2]=((C_word)li183),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14188,a[2]=t4,a[3]=t2,a[4]=t3,a[5]=t5,a[6]=t6,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 376  getfreqs");
f_14122(t7,t2);}

/* k14186 in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14188(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14188,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14191,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t1,a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 376  getfreqs");
f_14122(t2,((C_word*)t0)[4]);}

/* k14189 in k14186 in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14191,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14194,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 376  getamps");
f_14139(t2,((C_word*)t0)[2]);}

/* k14192 in k14189 in k14186 in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14194,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14197,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  getamps");
f_14139(t2,((C_word*)t0)[2]);}

/* k14195 in k14192 in k14189 in k14186 in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14197,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14200,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  make-spectrum");
f_11565(t2,C_SCHEME_FALSE,C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* k14198 in k14195 in k14192 in k14189 in k14186 in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14200,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14203,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[4]))){
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14217,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li185),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_14217(t6,t2,((C_word*)t0)[3]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14266,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li186),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_14266(t6,t2,((C_word*)t0)[4]);}}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[3]))){
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14298,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t4,a[6]=((C_word)li187),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_14298(t6,t2,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 376  sums-and-diffs");
f_14156(t2,t1,((C_word*)t0)[4],((C_word*)t0)[3]);}}}

/* do1422 in k14198 in k14195 in k14192 in k14189 in k14186 in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14298(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14298,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14308,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  sums-and-diffs");
f_14156(t3,((C_word*)t0)[3],((C_word*)t0)[2],t4);}}

/* k14306 in do1422 in k14198 in k14195 in k14192 in k14189 in k14186 in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14298(t3,((C_word*)t0)[2],t2);}

/* do1417 in k14198 in k14195 in k14192 in k14189 in k14186 in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14266(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14266,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14276,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 376  sums-and-diffs");
f_14156(t3,((C_word*)t0)[3],t4,((C_word*)t0)[2]);}}

/* k14274 in do1417 in k14198 in k14195 in k14192 in k14189 in k14186 in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14266(t3,((C_word*)t0)[2],t2);}

/* do1407 in k14198 in k14195 in k14192 in k14189 in k14186 in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14217(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14217,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14227,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14236,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t5,a[6]=((C_word)li184),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_14236(t7,t3,((C_word*)t0)[2]);}}

/* do1410 in do1407 in k14198 in k14195 in k14192 in k14189 in k14186 in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14236(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14236,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14246,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  sums-and-diffs");
f_14156(t3,((C_word*)t0)[2],t4,t5);}}

/* k14244 in do1410 in do1407 in k14198 in k14195 in k14192 in k14189 in k14186 in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14236(t3,((C_word*)t0)[2],t2);}

/* k14225 in do1407 in k14198 in k14195 in k14192 in k14189 in k14186 in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_14217(t3,((C_word*)t0)[2],t2);}

/* k14201 in k14198 in k14195 in k14192 in k14189 in k14186 in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* sums-and-diffs in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14156(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14156,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t3,t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14166,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_a_i_plus(&a,2,t3,t4);
C_trace("ChickenBridge.scm: 376  spectrum-add!");
t7=C_retrieve(lf[253]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,t2,t6,lf[258]);}}

/* k14164 in sums-and-diffs in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14166,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_abs(&a,1,t2);
C_trace("ChickenBridge.scm: 376  spectrum-add!");
t4=C_retrieve(lf[253]);
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3,lf[257]);}

/* getamps in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14139(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14139,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14146,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum?");
f_11571(t3,t2);}

/* k14144 in getamps in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t2=C_retrieve(lf[229]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?lf[255]:lf[256]));}}

/* getfreqs in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_14122(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14122,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14129,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum?");
f_11571(t3,t2);}

/* k14127 in getfreqs in rm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t2=C_retrieve(lf[227]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_pairp(((C_word*)t0)[2]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)t0)[2]:((C_word*)t0)[2]));}}

/* spectrum-add! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13941(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_13941,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13949,a[2]=t1,a[3]=t3,a[4]=t4,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t6=C_retrieve(lf[227]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k13947 in spectrum-add! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13949,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13953,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t3=C_retrieve(lf[229]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[5]);}

/* k13951 in k13947 in spectrum-add! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13953,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13955,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word)li179),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_13955(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}

/* do1367 in k13951 in k13947 in spectrum-add! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_13955(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13955,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13965,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t5,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t4,a[8]=t2,a[9]=((C_word*)t0)[5],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t6)){
t8=t7;
f_13965(t8,t6);}
else{
t8=(C_word)C_i_car(t2);
t9=t7;
f_13965(t9,(C_word)C_i_greater_or_equalp(t8,((C_word*)t0)[3]));}}

/* k13963 in do1367 in k13951 in k13947 in spectrum-add! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_13965(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13965,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13968,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13980,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 376  spectrum-freqs-set!");
f_11613(t3,((C_word*)t0)[9],t4);}
else{
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14011,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-size");
t8=C_retrieve(lf[225]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[9]);}}
else{
t3=(C_word)C_i_car(((C_word*)t0)[8]);
if(C_truep((C_word)C_i_nequalp(t3,((C_word*)t0)[5]))){
t4=(C_word)C_i_car(((C_word*)t0)[3]);
t5=(C_word)C_a_i_plus(&a,2,t4,((C_word*)t0)[6]);
t6=t2;
f_13968(2,t6,(C_word)C_i_set_car(((C_word*)t0)[3],t5));}
else{
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[7]))){
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14045,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 376  spectrum-freqs-set!");
f_11613(t4,((C_word*)t0)[9],t5);}
else{
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[5]);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t6=(C_word)C_i_set_cdr(t4,((C_word*)t0)[8]);
t7=(C_word)C_i_set_cdr(((C_word*)t0)[7],t4);
t8=(C_word)C_i_set_cdr(t5,((C_word*)t0)[3]);
t9=(C_word)C_i_set_cdr(((C_word*)t0)[4],t5);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14096,a[2]=((C_word*)t0)[9],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-size");
t11=C_retrieve(lf[225]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)t0)[9]);}}}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
t4=((C_word*)((C_word*)t0)[2])[1];
f_13955(t4,((C_word*)t0)[10],t2,t3,((C_word*)t0)[8],((C_word*)t0)[3]);}}

/* k14094 in k13963 in do1367 in k13951 in k13947 in spectrum-add! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14096,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 376  spectrum-size-set!");
f_11595(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14043 in k13963 in do1367 in k13951 in k13947 in spectrum-add! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14045,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14048,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 376  spectrum-amps-set!");
f_11631(t2,((C_word*)t0)[4],t3);}

/* k14046 in k14043 in k13963 in do1367 in k13951 in k13947 in spectrum-add! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14048,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14059,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-size");
t3=C_retrieve(lf[225]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k14057 in k14046 in k14043 in k13963 in do1367 in k13951 in k13947 in spectrum-add! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14059,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 376  spectrum-size-set!");
f_11595(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14009 in k13963 in do1367 in k13951 in k13947 in spectrum-add! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_14011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14011,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 376  spectrum-size-set!");
f_11595(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13978 in k13963 in do1367 in k13951 in k13947 in spectrum-add! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13980,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13983,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 376  spectrum-amps-set!");
f_11631(t2,((C_word*)t0)[3],t3);}

/* k13981 in k13978 in k13963 in do1367 in k13951 in k13947 in spectrum-add! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  spectrum-size-set!");
f_11595(((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}

/* k13966 in k13963 in do1367 in k13951 in k13947 in spectrum-add! in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13529(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_13529,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_times(&a,2,t2,t3);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13846,a[2]=t4,a[3]=t2,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  round");
t7=*((C_word*)lf[135]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t4);}

/* k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13846,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13542,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13775,a[2]=t9,a[3]=((C_word*)t0)[2],a[4]=t8,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t5,a[8]=t6,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 376  -");
C_minus(3,0,t10,t3);}

/* k13773 in k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13775,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13777,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word)li177),tmp=(C_word)a,a+=11,tmp));
t5=((C_word*)t3)[1];
f_13777(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1289 in k13773 in k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_13777(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13777,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)t0)[9]))){
t7=(C_word)C_i_cdr(((C_word*)t0)[8]);
t8=C_mutate(((C_word *)((C_word*)t0)[7])+1,t7);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,t8);}
else{
t7=(C_word)C_a_i_times(&a,2,((C_word*)t0)[6],t2);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],t7);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13796,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t11=t2;
t12=((C_word*)t0)[2];
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8322,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t10,t11,t12);}}

/* f_8322 in do1289 in k13773 in k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8322(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8322,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub408(t4,t5,t6));}

/* k13794 in do1289 in k13773 in k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13796,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13799,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[7])[1],lf[251]);
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],lf[252]));
if(C_truep(t5)){
t6=t3;
f_13799(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[7])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[2])+1,t9);
t11=t3;
f_13799(t11,t10);}}

/* k13797 in k13794 in do1289 in k13773 in k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_13799(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13799,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_13777(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k13540 in k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13542,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13545,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13618,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li175),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_13618(t6,t2,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1301 in k13540 in k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_13618(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13618,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13771,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t4,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  caar");
t7=*((C_word*)lf[250]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k13769 in do1301 in k13540 in k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13771,2,t0,t1);}
if(C_truep((C_word)C_i_negativep(t1))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_abs(&a,1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_i_set_car(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13755,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=t10,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 376  -");
C_minus(3,0,t11,t12);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k13753 in k13769 in do1301 in k13540 in k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13755,2,t0,t1);}
t2=(C_word)C_i_set_car(((C_word*)t0)[7],t1);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_i_assoc(t3,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13649,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_cadr(t4);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t9=(C_word)C_a_i_plus(&a,2,t7,t8);
t10=t5;
f_13649(t10,(C_word)C_i_set_car(t6,t9));}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13674,a[2]=t5,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13707,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=((C_word*)t0)[5],a[5]=((C_word)li174),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_13707(t12,t6,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}}

/* do1307 in k13753 in k13769 in do1301 in k13540 in k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_13707(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13707,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=((C_word*)t5)[1];
t8=(C_truep(t7)?t7:(C_word)C_i_lessp(t2,C_fix(0)));
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,((C_word*)t5)[1]);}
else{
t9=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[4])[1],t2);
t10=(C_word)C_i_car(t9);
t11=C_set_block_item(t6,0,t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13721,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],((C_word*)((C_word*)t0)[2])[1]))){
t13=C_set_block_item(t5,0,t2);
t14=t12;
f_13721(t14,t13);}
else{
t13=t12;
f_13721(t13,C_SCHEME_UNDEFINED);}}}

/* k13719 in do1307 in k13753 in k13769 in do1301 in k13540 in k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_13721(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13721,NULL,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_13707(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k13672 in k13753 in k13769 in do1301 in k13540 in k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13674,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_list_tail(((C_word*)((C_word*)t0)[4])[1],t1);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=(C_word)C_i_cdr(t3);
t7=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t6);
t8=((C_word*)t0)[2];
f_13649(t8,(C_word)C_i_set_cdr(t3,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_13649(t5,t4);}}

/* k13647 in k13753 in k13769 in do1301 in k13540 in k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_13649(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_13618(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k13543 in k13540 in k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13545,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13553,a[2]=t5,a[3]=t2,a[4]=t3,a[5]=((C_word)li173),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_13553(t7,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1],C_fix(0),t3);}

/* do1329 in k13543 in k13540 in k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_13553(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13553,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  make-spectrum");
f_11565(t1,C_SCHEME_FALSE,t3,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_car(t6);
t8=(C_word)C_i_cdr(t6);
t9=(C_word)C_i_cadr(t6);
t10=(C_word)C_a_i_abs(&a,1,t9);
t11=(C_word)C_i_set_car(t8,t10);
t12=(C_word)C_i_cdr(t6);
t13=(C_word)C_i_set_cdr(((C_word*)t5)[1],t12);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
t15=C_set_block_item(t5,0,t14);
t16=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13586,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t17=*((C_word*)lf[249]+1);
t18=t17;
((C_proc4)C_retrieve_proc(t18))(4,t18,t16,t2,t7);}}

/* k13584 in do1329 in k13543 in k13540 in k13844 in fm-spectrum in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13586,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_13553(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12056(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+101)){
C_save_and_reclaim((void*)tr3r,(void*)f_12056r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_12056r(t0,t1,t2,t3);}}

static void C_ccall f_12056r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word *a=C_alloc(101);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=t3;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_12060,a[2]=t27,a[3]=t25,a[4]=t23,a[5]=t21,a[6]=t19,a[7]=t31,a[8]=t17,a[9]=t3,a[10]=t29,a[11]=t15,a[12]=t13,a[13]=t11,a[14]=t9,a[15]=t7,a[16]=t5,a[17]=t2,a[18]=t1,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t29)[1]))){
t33=t32;
f_12060(t33,C_SCHEME_UNDEFINED);}
else{
t33=(C_word)C_i_car(((C_word*)t29)[1]);
t34=(C_word)C_eqp(t33,lf[242]);
if(C_truep(t34)){
t35=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13302,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t17,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("error");
t36=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t36))(4,t36,t35,lf[19],lf[242]);}
else{
t36=t35;
f_13302(2,t36,C_SCHEME_UNDEFINED);}}
else{
t35=(C_word)C_eqp(t33,lf[243]);
if(C_truep(t35)){
t36=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13337,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t19,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t37=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t37))(4,t37,t36,lf[19],lf[243]);}
else{
t37=t36;
f_13337(2,t37,C_SCHEME_UNDEFINED);}}
else{
t36=(C_word)C_eqp(t33,lf[244]);
if(C_truep(t36)){
t37=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13372,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t21,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t21)[1])){
C_trace("error");
t38=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t38))(4,t38,t37,lf[19],lf[244]);}
else{
t38=t37;
f_13372(2,t38,C_SCHEME_UNDEFINED);}}
else{
t37=(C_word)C_eqp(t33,lf[245]);
if(C_truep(t37)){
t38=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13407,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t11,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t23)[1])){
C_trace("error");
t39=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t39))(4,t39,t38,lf[19],lf[245]);}
else{
t39=t38;
f_13407(2,t39,C_SCHEME_UNDEFINED);}}
else{
t38=(C_word)C_eqp(t33,lf[246]);
if(C_truep(t38)){
t39=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13442,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t25,a[7]=t13,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t25)[1])){
C_trace("error");
t40=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t40))(4,t40,t39,lf[19],lf[246]);}
else{
t40=t39;
f_13442(2,t40,C_SCHEME_UNDEFINED);}}
else{
t39=(C_word)C_eqp(t33,lf[247]);
if(C_truep(t39)){
t40=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13477,a[2]=t3,a[3]=t32,a[4]=t29,a[5]=t31,a[6]=t27,a[7]=t15,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t27)[1])){
C_trace("error");
t41=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[19],lf[247]);}
else{
t41=t40;
f_13477(2,t41,C_SCHEME_UNDEFINED);}}
else{
t40=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13506,a[2]=t32,a[3]=t17,a[4]=t5,a[5]=t29,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t31)[1])){
C_trace("error");
t41=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t41))(4,t41,t40,lf[10],t3);}
else{
t41=t40;
f_13506(2,t41,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k13504 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13506,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13513,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13521,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13519 in k13504 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13513(2,t2,C_SCHEME_UNDEFINED);}}

/* k13511 in k13504 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12060(t5,t4);}

/* k13475 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13477,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13481,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13481(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13479 in k13475 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12060(t7,t6);}

/* k13440 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13442,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13446,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13446(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13444 in k13440 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12060(t7,t6);}

/* k13405 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13407,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13411,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13411(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13409 in k13405 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12060(t7,t6);}

/* k13370 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13372,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13376,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13376(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13374 in k13370 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12060(t7,t6);}

/* k13335 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13337,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13341,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13341(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13339 in k13335 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12060(t7,t6);}

/* k13300 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13302,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13306,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13306(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13304 in k13300 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12060(t7,t6);}

/* k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_12060(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12060,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_12063,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_12063(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[242]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13062,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[242]);}
else{
t6=t5;
f_13062(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[243]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13097,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[243]);}
else{
t7=t6;
f_13097(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[244]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13132,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[244]);}
else{
t8=t7;
f_13132(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13167,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[245]);}
else{
t9=t8;
f_13167(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13202,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[246]);}
else{
t10=t9;
f_13202(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13237,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[247]);}
else{
t11=t10;
f_13237(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13266,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[15],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_13266(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k13264 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13266,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13273,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13281,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13279 in k13264 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13273(2,t2,C_SCHEME_UNDEFINED);}}

/* k13271 in k13264 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12063(t5,t4);}

/* k13235 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13241,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13241(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13239 in k13235 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12063(t7,t6);}

/* k13200 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13202,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13206,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13206(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13204 in k13200 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12063(t7,t6);}

/* k13165 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13167,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13171,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13171(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13169 in k13165 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12063(t7,t6);}

/* k13130 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13132,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13136,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13136(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13134 in k13130 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12063(t7,t6);}

/* k13095 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13097,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13101,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13101(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13099 in k13095 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12063(t7,t6);}

/* k13060 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13062,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13066,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13066(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13064 in k13060 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13066(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12063(t7,t6);}

/* k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_12063(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12063,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_12066,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_12066(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[242]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12822,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[242]);}
else{
t6=t5;
f_12822(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[243]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12857,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[243]);}
else{
t7=t6;
f_12857(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[244]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12892,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[244]);}
else{
t8=t7;
f_12892(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12927,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[245]);}
else{
t9=t8;
f_12927(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12962,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[246]);}
else{
t10=t9;
f_12962(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12997,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[247]);}
else{
t11=t10;
f_12997(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13026,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[14],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_13026(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k13024 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13026,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13033,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13041,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13039 in k13024 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13033(2,t2,C_SCHEME_UNDEFINED);}}

/* k13031 in k13024 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12066(t5,t4);}

/* k12995 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12997,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13001,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13001(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12999 in k12995 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_13001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12066(t7,t6);}

/* k12960 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12962,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12966,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12966(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12964 in k12960 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12066(t7,t6);}

/* k12925 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12927,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12931,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12931(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12929 in k12925 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12066(t7,t6);}

/* k12890 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12892,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12896,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12896(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12894 in k12890 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12066(t7,t6);}

/* k12855 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12857,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12861,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12861(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12859 in k12855 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12066(t7,t6);}

/* k12820 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12822,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12826,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12826(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12824 in k12820 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12066(t7,t6);}

/* k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_12066(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12066,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_12069,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_12069(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[242]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12582,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[242]);}
else{
t6=t5;
f_12582(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[243]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12617,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[243]);}
else{
t7=t6;
f_12617(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[244]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12652,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[244]);}
else{
t8=t7;
f_12652(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12687,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[245]);}
else{
t9=t8;
f_12687(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12722,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[246]);}
else{
t10=t9;
f_12722(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12757,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[247]);}
else{
t11=t10;
f_12757(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12786,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12786(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12784 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12786,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12793,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12801,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12799 in k12784 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12793(2,t2,C_SCHEME_UNDEFINED);}}

/* k12791 in k12784 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12069(t5,t4);}

/* k12755 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12761,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12761(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12759 in k12755 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12069(t7,t6);}

/* k12720 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12722,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12726,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12726(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12724 in k12720 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12069(t7,t6);}

/* k12685 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12687,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12691,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12691(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12689 in k12685 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12069(t7,t6);}

/* k12650 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12652,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12656,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12656(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12654 in k12650 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12069(t7,t6);}

/* k12615 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12617,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12621,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12621(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12619 in k12615 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12069(t7,t6);}

/* k12580 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12582,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12586,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12586(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12584 in k12580 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12069(t7,t6);}

/* k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_12069(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[73],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12069,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_12072,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],a[17]=((C_word*)t0)[17],a[18]=((C_word*)t0)[18],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_12072(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[242]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12342,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[242]);}
else{
t6=t5;
f_12342(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[243]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12377,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[243]);}
else{
t7=t6;
f_12377(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[244]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12412,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[244]);}
else{
t8=t7;
f_12412(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12447,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[245]);}
else{
t9=t8;
f_12447(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12482,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[246]);}
else{
t10=t9;
f_12482(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12517,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[247]);}
else{
t11=t10;
f_12517(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12546,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[12],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12546(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12544 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12546,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12553,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12561,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12559 in k12544 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12553(2,t2,C_SCHEME_UNDEFINED);}}

/* k12551 in k12544 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12553(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12072(t5,t4);}

/* k12515 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12517,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12521,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12521(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12519 in k12515 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12072(t7,t6);}

/* k12480 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12482,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12486,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12486(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12484 in k12480 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12072(t7,t6);}

/* k12445 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12447,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12451,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12451(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12449 in k12445 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12072(t7,t6);}

/* k12410 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12416,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12416(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12414 in k12410 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12072(t7,t6);}

/* k12375 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12377,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12381,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12381(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12379 in k12375 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12072(t7,t6);}

/* k12340 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12342,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12346,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12346(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12344 in k12340 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12072(t7,t6);}

/* k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_12072(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12072,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_12075,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],a[11]=((C_word*)t0)[18],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]))){
t3=t2;
f_12075(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
t4=(C_word)C_eqp(t3,lf[242]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12102,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[16],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[242]);}
else{
t6=t5;
f_12102(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[243]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12137,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[243]);}
else{
t7=t6;
f_12137(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[244]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12172,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[14],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[244]);}
else{
t8=t7;
f_12172(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12207,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[245]);}
else{
t9=t8;
f_12207(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t3,lf[246]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12242,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t10=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t9,lf[19],lf[246]);}
else{
t10=t9;
f_12242(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t3,lf[247]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12277,a[2]=((C_word*)t0)[9],a[3]=t2,a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[19],lf[247]);}
else{
t11=t10;
f_12277(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12306,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t10,lf[10],((C_word*)t0)[9]);}
else{
t11=t10;
f_12306(2,t11,C_SCHEME_UNDEFINED);}}}}}}}}}

/* k12304 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12306,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12313,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12321,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k12319 in k12304 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_12313(2,t2,C_SCHEME_UNDEFINED);}}

/* k12311 in k12304 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12075(t5,t4);}

/* k12275 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12277(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12277,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12281,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12281(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12279 in k12275 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12075(t7,t6);}

/* k12240 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12242,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12246,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12246(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12244 in k12240 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12075(t7,t6);}

/* k12205 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12207,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12211,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12211(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12209 in k12205 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12075(t7,t6);}

/* k12170 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12172,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12176,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12176(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12174 in k12170 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12075(t7,t6);}

/* k12135 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12137,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12141,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12141(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12139 in k12135 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12075(t7,t6);}

/* k12100 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12102,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12106,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_12106(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k12104 in k12100 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_12075(t7,t6);}

/* k12073 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_12075(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12075,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12078,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_12078(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k12076 in k12073 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12078,2,t0,t1);}
t2=((C_word*)t0)[9];
t3=((C_word*)t0)[8];
t4=((C_word*)((C_word*)t0)[7])[1];
t5=((C_word*)((C_word*)t0)[6])[1];
t6=((C_word*)((C_word*)t0)[5])[1];
t7=((C_word*)((C_word*)t0)[4])[1];
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=((C_word*)((C_word*)t0)[3])[1];
t10=((C_word*)((C_word*)t0)[2])[1];
t11=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11837,a[2]=t3,a[3]=t8,a[4]=t5,a[5]=t2,a[6]=t4,a[7]=t6,a[8]=t10,a[9]=t9,tmp=(C_word)a,a+=10,tmp);
t12=(C_word)C_eqp(((C_word*)t8)[1],C_SCHEME_TRUE);
if(C_truep(t12)){
t13=C_set_block_item(t8,0,C_fix(1));
t14=t11;
f_11837(t14,t13);}
else{
t13=t11;
f_11837(t13,C_SCHEME_UNDEFINED);}}

/* k11835 in k12076 in k12073 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_11837(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11837,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t17=C_set_block_item(t3,0,t16);
t18=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_11846,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t15,a[7]=t13,a[8]=t3,a[9]=t16,a[10]=((C_word*)t0)[6],a[11]=t11,a[12]=((C_word*)t0)[7],a[13]=((C_word*)t0)[8],a[14]=((C_word*)t0)[9],a[15]=t9,a[16]=t7,a[17]=t5,tmp=(C_word)a,a+=18,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t19=C_retrieve(lf[227]);
((C_proc3)C_retrieve_proc(t19))(3,t19,t18,((C_word*)t0)[2]);}

/* k11844 in k11835 in k12076 in k12073 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11846,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_11850,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],tmp=(C_word)a,a+=17,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t4=C_retrieve(lf[229]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11848 in k11844 in k11835 in k12076 in k12073 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11850,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[16])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[15])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11852,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[13],a[4]=((C_word*)t0)[14],a[5]=((C_word)li166),tmp=(C_word)a,a+=6,tmp));
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11924,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word)li167),tmp=(C_word)a,a+=6,tmp));
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11957,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[11],a[4]=((C_word)li168),tmp=(C_word)a,a+=5,tmp));
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11967,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[9],a[5]=((C_word)li169),tmp=(C_word)a,a+=6,tmp));
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11987,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t8=(C_word)C_i_not(((C_word*)t0)[4]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)((C_word*)t0)[16])[1]));
if(C_truep(t9)){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t10=*((C_word*)lf[236]+1);
((C_proc4)(void*)(*((C_word*)t10+1)))(4,t10,t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
C_trace("for-each");
t10=*((C_word*)lf[236]+1);
((C_proc4)(void*)(*((C_word*)t10+1)))(4,t10,t7,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[2])[1]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12022,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word)li170),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  for-each");
t11=*((C_word*)lf[241]+1);
((C_proc5)C_retrieve_proc(t11))(5,t11,t7,t10,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12037,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[4],a[4]=((C_word)li171),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  for-each");
t11=*((C_word*)lf[241]+1);
((C_proc5)C_retrieve_proc(t11))(5,t11,t7,t10,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}}}

/* a12036 in k11848 in k11844 in k11835 in k12076 in k12073 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12037(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12037,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 376  addkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a12021 in k11848 in k11844 in k11835 in k12076 in k12073 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_12022(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12022,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 376  adduniquekey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* k11985 in k11848 in k11844 in k11835 in k12076 in k12073 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=(C_word)C_eqp(((C_word*)t0)[3],C_fix(0));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 376  shuffle!");
t4=C_retrieve(lf[170]);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t2);}
else{
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}}

/* f_11967 in k11848 in k11844 in k11835 in k12076 in k12073 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11967(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11967,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11971,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  getkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11969 */
static void C_ccall f_11971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_member(t1,t2))){
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  add");
t3=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[3],t1);}}

/* f_11957 in k11848 in k11844 in k11835 in k12076 in k12073 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11957(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11957,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11965,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  getkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11963 */
static void C_ccall f_11965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* f_11924 in k11848 in k11844 in k11835 in k12076 in k12073 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11924(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11924,3,t0,t1,t2);}
t3=(C_word)C_eqp(((C_word*)t0)[4],C_fix(-1));
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_cdr(((C_word*)t0)[3]);
t6=(C_word)C_i_set_cdr(t4,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_set_cdr(((C_word*)t0)[3],t4));}
else{
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}}

/* f_11852 in k11848 in k11844 in k11835 in k12076 in k12073 in k12070 in k12067 in k12064 in k12061 in k12058 in spectrum-keys in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11852(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11852,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11856,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[2])){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11919,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
C_trace("ChickenBridge.scm: 376  key");
t4=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}

/* k11917 */
static void C_ccall f_11919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  quantize");
t2=C_retrieve(lf[133]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k11854 */
static void C_ccall f_11856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11856,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_lessp(((C_word*)t3)[1],((C_word*)t0)[4]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11867,a[2]=t6,a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word)li164),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_11867(t8,((C_word*)t0)[3]);}
else{
t5=(C_truep(((C_word*)t0)[2])?(C_word)C_i_greaterp(((C_word*)t3)[1],((C_word*)t0)[2]):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11892,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=((C_word)li165),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_11892(t9,((C_word*)t0)[3]);}
else{
t6=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}}}

/* do1042 in k11854 */
static void C_fcall f_11892(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11892,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t5=t1;
t1=t5;
goto loop;}}

/* do1038 in k11854 */
static void C_fcall f_11867(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11867,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_greater_or_equalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(12));
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t5=t1;
t1=t5;
goto loop;}}

/* spectrum-maxamp in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11808(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11808,3,t0,t1,t2);}
t3=lf[239];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11812,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t6=C_retrieve(lf[229]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k11810 in spectrum-maxamp in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11812,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11821,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11823,a[2]=((C_word*)t0)[2],a[3]=((C_word)li162),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[236]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a11822 in k11810 in spectrum-maxamp in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11823(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11823,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)((C_word*)t0)[2])[1]))){
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}

/* k11819 in k11810 in spectrum-maxamp in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11821(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-minamp in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11777(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11777,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11781,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t6=C_retrieve(lf[229]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k11779 in spectrum-minamp in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11781,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11790,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11792,a[2]=((C_word*)t0)[2],a[3]=((C_word)li160),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[236]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[237]);}}

/* a11791 in k11779 in spectrum-minamp in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11792(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11792,3,t0,t1,t2);}
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_lessp(t2,((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}}

/* k11788 in k11779 in spectrum-minamp in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-maxfreq in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11759(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11759,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11767,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t4=C_retrieve(lf[227]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11765 in spectrum-maxfreq in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11767,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11775,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-size");
t3=C_retrieve(lf[225]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11773 in k11765 in spectrum-maxfreq in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11775,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_list_ref(((C_word*)t0)[2],t2));}

/* spectrum-minfreq in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11749(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11749,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11757,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t4=C_retrieve(lf[227]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11755 in spectrum-minfreq in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* spectrum-pairs in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11690(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11690,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11697,a[2]=t2,a[3]=t1,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t7=C_retrieve(lf[227]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}

/* k11695 in spectrum-pairs in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11697,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11700,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t3=C_retrieve(lf[229]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11698 in k11695 in spectrum-pairs in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11700,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11703,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-size");
t3=C_retrieve(lf[225]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11701 in k11698 in k11695 in spectrum-pairs in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11703,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11708,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word)li156),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_11708(t5,((C_word*)t0)[2],C_fix(0));}

/* do1001 in k11701 in k11698 in k11695 in spectrum-pairs in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_11708(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(10);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11708,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[6]));}
else{
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_list_ref(((C_word*)t0)[4],t2):lf[232]);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t5);
t7=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t11=t1;
t12=t9;
t1=t11;
t2=t12;
goto loop;}}

/* spectrum-copy in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11652(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11652,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11660,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-time");
t4=C_retrieve(lf[222]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k11658 in spectrum-copy in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11660(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11660,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11664,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-size");
t3=C_retrieve(lf[225]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11662 in k11658 in spectrum-copy in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11664,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11668,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11684,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t4=C_retrieve(lf[227]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11682 in k11662 in k11658 in spectrum-copy in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k11666 in k11662 in k11658 in spectrum-copy in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11672,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11676,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t4=C_retrieve(lf[229]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k11674 in k11666 in k11662 in k11658 in spectrum-copy in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k11670 in k11666 in k11662 in k11658 in spectrum-copy in k11648 in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  make-spectrum");
f_11565(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* spectrum-amps in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11640(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11640,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[220]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* spectrum-amps-set! in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_11631(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11631,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[220]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t5=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* spectrum-freqs in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11622(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11622,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[220]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* spectrum-freqs-set! in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_11613(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11613,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[220]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t5=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* spectrum-size in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11604(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11604,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[220]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* spectrum-size-set! in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_11595(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11595,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[220]);
C_trace("ChickenBridge.scm: 376  ##sys#block-set!");
t5=*((C_word*)lf[224]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* spectrum-time in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11586(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11586,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[220]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* spectrum? in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_11571(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11571,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[220]));}

/* make-spectrum in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_11565(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11565,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_record(&a,5,lf[220],t2,t3,t4,t5));}

/* scale-order in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11423(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_11423r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11423r(t0,t1,t2,t3);}}

static void C_ccall f_11423r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(7);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11427,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t4)[1]))){
t6=C_set_block_item(t4,0,C_fix(1));
t7=t5;
f_11427(t7,t6);}
else{
t6=(C_word)C_i_car(((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_11427(t8,t7);}}

/* k11425 in scale-order in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_11427(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11427,NULL,2,t0,t1);}
switch(((C_word*)((C_word*)t0)[4])[1]){
case C_fix(1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11438,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  sort");
t3=C_retrieve(lf[217]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(-1):
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11496,a[2]=((C_word)li144),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  sort");
t3=C_retrieve(lf[217]);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);
case C_fix(0):
C_trace("ChickenBridge.scm: 375  shuffle");
t2=C_retrieve(lf[171]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);
default:
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[218],((C_word*)((C_word*)t0)[4])[1]);}}

/* a11495 in k11425 in scale-order in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11496(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11496,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_greaterp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11519,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11532,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11539,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k11537 in a11495 in k11425 in scale-order in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11539,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11543,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  key");
t3=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11541 in k11537 in a11495 in k11425 in scale-order in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* k11530 in a11495 in k11425 in scale-order in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(t1,((C_word*)t0)[2]));}

/* k11517 in a11495 in k11425 in scale-order in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_greaterp(((C_word*)t0)[2],t1));}

/* a11437 in k11425 in scale-order in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11438(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11438,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_lessp(t2,t3));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11461,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11474,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11481,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}}

/* k11479 in a11437 in k11425 in scale-order in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11481,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11485,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  key");
t3=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k11483 in k11479 in a11437 in k11425 in scale-order in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k11472 in a11437 in k11425 in scale-order in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(t1,((C_word*)t0)[2]));}

/* k11459 in a11437 in k11425 in scale-order in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* transpose in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11257(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11257,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 375  modulo");
t7=*((C_word*)lf[158]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11303,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11310,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11358,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_11358(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 375  key");
t6=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 375  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[213],t2);}}}

/* k11356 in transpose in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11358(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11358,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11375,a[2]=t1,a[3]=((C_word)li141),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 375  transpkeys");
f_11310(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11403,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11407,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k11405 in k11356 in transpose in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  transpkeys");
f_11310(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k11401 in k11356 in transpose in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  note");
t2=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a11374 in k11356 in transpose in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11375(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11375,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 375  modulo");
t4=*((C_word*)lf[158]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_11310(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11310,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11319,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li139),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_11319(t8,t1,t2,t4);}

/* do859 in transpkeys in transpose in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_11319(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11319,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k11301 in transpose in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11303,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 375  note");
t3=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11122(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11122,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 375  modulo");
t4=*((C_word*)lf[158]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 375  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[210],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11152,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11222,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 375  invkeys");
f_11152(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11244,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11248,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  key");
t7=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 375  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[211],t2);}}}

/* k11246 in invert in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  invkeys");
f_11152(((C_word*)t0)[2],t1);}

/* k11242 in invert in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  note");
t2=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a11221 in invert in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11222(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11222,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 375  modulo");
t4=*((C_word*)lf[158]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_11152(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11152,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11168,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li135),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_11168(t9,t1,t5,t4);}

/* do844 in invkeys in invert in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_11168(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_11168,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11077(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11077,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 375  modulo");
t3=*((C_word*)lf[158]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[208]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11109,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11120,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  key");
t4=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k11118 in pc in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  modulo");
t2=*((C_word*)lf[158]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k11107 in pc in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[208]),t1);}

/* hz in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10961(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10961,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10976,a[2]=t5,a[3]=t3,a[4]=((C_word)li132),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10976(t7,t1,t2,lf[207],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 375  tb:keynum->hertz");
f_8196(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11075,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  note-aux");
f_10689(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k11073 in hz in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do824 in hz in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10976(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10976,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10989,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11006,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_11006(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_11006(t14,(C_word)C_i_listp(t13));}}}

/* k11004 in do824 in hz in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_11006(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11006,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11010,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 375  hz");
t4=C_retrieve(lf[206]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11025,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 375  note-aux");
f_10689(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k11023 in k11004 in do824 in hz in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11025,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_10989(t9,t8);}

/* k11008 in k11004 in do824 in hz in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_11010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11010,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10989(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10987 in do824 in hz in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10989(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10976(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10839(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10839,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10854,a[2]=t5,a[3]=t3,a[4]=((C_word)li130),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10854(t7,t1,t2,lf[205],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub328(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10959,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  note-aux");
f_10689(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k10957 in key in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do808 in key in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10854(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10854,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10867,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10884,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_10884(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_10884(t14,(C_word)C_i_numberp(t13));}}}

/* k10882 in do808 in key in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10884(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10884,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10888,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 375  key");
t4=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10903,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 375  note-aux");
f_10689(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k10901 in k10882 in do808 in key in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10903,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_10867(t9,t8);}

/* k10886 in k10882 in do808 in key in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10888(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10888,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10867(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10865 in do808 in key in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10867(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10854(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10742(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10742,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10757,a[2]=t5,a[3]=t3,a[4]=((C_word)li128),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_10757(t7,t1,t2,lf[203],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10837,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  note-aux");
f_10689(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k10835 in note in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10837(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do794 in note in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10757(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10757,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10770,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10788,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  note");
t13=C_retrieve(lf[202]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10803,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  note-aux");
f_10689(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k10801 in do794 in note in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10803,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_10770(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k10786 in do794 in note in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10788,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_10770(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k10768 in do794 in note in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10770(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_10757(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10689(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10689,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10639,a[2]=t6,a[3]=t7,a[4]=((C_word)li125),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-ref");
t9=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[190],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10687,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  floor");
t9=*((C_word*)lf[200]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10712,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 375  string->note-entry");
f_10587(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10727,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k10725 in note-aux in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10727,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10734,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  keyword->string");
t3=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[201],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k10732 in k10725 in note-aux in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  string->note-entry");
f_10587(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10710 in note-aux in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  string->note-entry");
f_10587(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10685 in note-aux in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10687,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10659,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[197]))){
t5=t4;
f_10659(t5,t2);}
else{
t5=(C_word)C_i_lessp(t3,lf[198]);
t6=t4;
f_10659(t6,(C_truep(t5)?(C_word)C_a_i_plus(&a,2,t2,lf[199]):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k10657 in k10685 in note-aux in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10659(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10659,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10661,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li126),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[190],"*notes*"),t1,t2);}

/* a10660 in k10657 in k10685 in note-aux in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10661,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[196],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a10638 in note-aux in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10639(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10639,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[195],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10587(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10587,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10591,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10624,a[2]=((C_word)li123),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-ref");
t7=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[190],"*notes*"),t2,t6);}

/* a10623 in string->note-entry in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10624,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k10589 in string->note-entry in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10591,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10607,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  string-append");
t4=*((C_word*)lf[53]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[193],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k10605 in k10589 in string->note-entry in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10607,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10609,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li122),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[190],"*notes*"),t1,t2);}

/* a10608 in k10605 in k10589 in string->note-entry in k10583 in k10580 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10609,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[192],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* segs in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10373(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr4r,(void*)f_10373r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_10373r(t0,t1,t2,t3,t4);}}

static void C_ccall f_10373r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(11);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(1)))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_END_OF_LIST);}
else{
t6=C_fix(1);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10386,a[2]=t1,a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t5)[1]))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t7,0,t9);
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
t12=C_set_block_item(t5,0,t11);
t13=t8;
f_10386(t13,t12);}
else{
t9=t8;
f_10386(t9,C_SCHEME_UNDEFINED);}}}

/* k10384 in segs in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10386(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10386,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(2)));
if(C_truep(t3)){
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t5=(C_truep(t4)?C_retrieve2(lf[96],"tb:explseg"):C_retrieve2(lf[97],"tb:geoseg"));
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_truep(t6)?C_fix(2):(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]));
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10407,a[2]=((C_word*)t0)[2],a[3]=t7,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t10,a[7]=t8,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_lessp(t7,C_fix(0)))){
C_trace("ChickenBridge.scm: 375  error");
t12=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[188],t7);}
else{
t12=t11;
f_10407(2,t12,C_SCHEME_UNDEFINED);}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(3));
if(C_truep(t4)){
t5=C_retrieve(lf[153]);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10468,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t8=t7;
f_10468(t8,C_SCHEME_UNDEFINED);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t7;
f_10468(t12,t11);}}
else{
C_trace("ChickenBridge.scm: 375  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],lf[189],((C_word*)((C_word*)t0)[6])[1]);}}}

/* k10466 in k10384 in segs in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10468(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10468,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10471,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_apply(4,0,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}

/* k10469 in k10466 in k10384 in segs in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10471,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10479,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t3,a[8]=t6,a[9]=((C_word*)t0)[6],a[10]=((C_word)li120),tmp=(C_word)a,a+=11,tmp));
t10=((C_word*)t8)[1];
f_10479(t10,((C_word*)t0)[2],C_fix(1),C_SCHEME_FALSE);}

/* do724 in k10469 in k10466 in k10384 in segs in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10479(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10479,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[9]))){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10520,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_apply(4,0,t5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10491,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=((C_word)li119),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_10491(t8,t1,((C_word*)t0)[3]);}}

/* do728 in do724 in k10469 in k10466 in k10384 in segs in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10491(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10491,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10512,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  tb:rescale");
f_8057(t3,t4,C_fix(0),((C_word*)((C_word*)t0)[3])[1],C_fix(0),((C_word*)t0)[2],C_fix(1));}}

/* k10510 in do728 in do724 in k10469 in k10466 in k10384 in segs in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_10491(t4,((C_word*)t0)[2],t3);}

/* k10518 in do724 in k10469 in k10466 in k10384 in segs in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10520,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t10=((C_word*)((C_word*)t0)[3])[1];
f_10479(t10,((C_word*)t0)[2],t9,((C_word*)((C_word*)t0)[7])[1]);}

/* k10405 in k10384 in segs in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10407,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10412,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word)li118),tmp=(C_word)a,a+=10,tmp));
t5=((C_word*)t3)[1];
f_10412(t5,((C_word*)t0)[2],C_fix(0));}

/* do712 in k10405 in k10384 in segs in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10412(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10412,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[8]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[7]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10444,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  func");
t4=((C_word*)t0)[4];
((C_proc6)C_retrieve_proc(t4))(6,t4,t3,t2,((C_word*)t0)[8],((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k10442 in do712 in k10405 in k10384 in segs in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10444,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t7=((C_word*)((C_word*)t0)[3])[1];
f_10412(t7,((C_word*)t0)[2],t6);}

/* rangamma in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10352(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_10352r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_10352r(t0,t1,t2);}}

static void C_ccall f_10352r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 375  tb:rangamma");
f_8294(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 375  tb:rangamma");
f_8294(t1,t3);}}

/* ranpoisson in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10333(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_10333r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_10333r(t0,t1,t2);}}

static void C_ccall f_10333r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[183])))){
C_trace("ChickenBridge.scm: 375  tb:ranpoisson");
f_8304(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 375  tb:ranpoisson");
f_8304(t1,t3);}}

/* rangauss in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10292(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_10292r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_10292r(t0,t1,t2);}}

static void C_ccall f_10292r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 375  tb:rangauss");
f_8265(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  tb:rangauss");
f_8265(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 375  tb:rangauss");
f_8265(t1,t4,t5);}}}

/* ranexp in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10273(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_10273r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_10273r(t0,t1,t2);}}

static void C_ccall f_10273r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 375  tb:ranexp");
f_8276(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 375  tb:ranexp");
f_8276(t1,t3);}}

/* ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10045(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_10045r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_10045r(t0,t1,t2);}}

static void C_ccall f_10045r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[176];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10049,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_10049(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[177]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10186,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[177]);}
else{
t19=t18;
f_10186(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[178]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10221,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[178]);}
else{
t20=t19;
f_10221(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10250,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_10250(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k10248 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10250,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10257,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10265,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10263 in k10248 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10257(2,t2,C_SCHEME_UNDEFINED);}}

/* k10255 in k10248 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10049(t5,t4);}

/* k10219 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10221(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10221,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10225,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10225(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10223 in k10219 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10049(t7,t6);}

/* k10184 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10186,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10190,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10190(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10188 in k10184 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10190(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10049(t7,t6);}

/* k10047 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10049(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10049,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10052,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_10052(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[177]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10086,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[177]);}
else{
t6=t5;
f_10086(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[178]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10121,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[178]);}
else{
t7=t6;
f_10121(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10150,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_10150(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k10148 in k10047 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10150,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10157,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10165,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k10163 in k10148 in k10047 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_10157(2,t2,C_SCHEME_UNDEFINED);}}

/* k10155 in k10148 in k10047 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_10052(t5,t4);}

/* k10119 in k10047 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10121,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10125,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10125(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10123 in k10119 in k10047 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10052(t7,t6);}

/* k10084 in k10047 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10090,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_10090(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k10088 in k10084 in k10047 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_10052(t7,t6);}

/* k10050 in k10047 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10052(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10052,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10055,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_10055(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k10053 in k10050 in k10047 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10055,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10058,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_10058(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_10058(t5,t4);}}

/* k10056 in k10053 in k10050 in k10047 in ranbeta in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_10058(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10058,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub381(t5,t6,t7));}

/* shuffle in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10003(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_10003r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_10003r(t0,t1,t2);}}

static void C_ccall f_10003r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(6);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10017,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10032,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_SCHEME_END_OF_LIST);}}

/* k10030 in shuffle in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  shuffle!");
t2=C_retrieve(lf[170]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k10015 in shuffle in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_10017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  shuffle!");
t2=C_retrieve(lf[170]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* shuffle! in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9948(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9948,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9959,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  tb:rani");
f_8220(t4,t3);}

/* k9957 in shuffle! in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9959,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9961,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word)li110),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_9961(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do644 in k9957 in shuffle! in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9961(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9961,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[4]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t0)[3]);}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(C_word)C_i_list_tail(((C_word*)t0)[3],t2);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
t10=(C_word)C_i_set_car(t8,t9);
t11=(C_word)C_i_list_tail(((C_word*)t0)[3],t3);
t12=(C_word)C_i_set_car(t11,((C_word*)t5)[1]);
t13=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t14=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9989,a[2]=t5,a[3]=t13,a[4]=t1,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  tb:rani");
f_8220(t14,((C_word*)t0)[4]);}}

/* k9987 in do644 in k9957 in shuffle! in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_9961(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* vary in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9849(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_9849r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9849r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9849r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9853,a[2]=t1,a[3]=t5,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,C_fix(0));
t8=t6;
f_9853(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_9853(t9,t8);}}

/* k9851 in vary in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9853(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9853,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9856,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t3,C_fix(0)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(-1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(1)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=t2;
f_9856(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 375  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[169],((C_word*)((C_word*)t0)[3])[1]);}}

/* k9854 in k9851 in vary in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9858,a[2]=((C_word)li107),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9921,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word)li108),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 375  vary1");
f_9858(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);}}

/* a9920 in k9854 in k9851 in vary in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9921(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9921,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  vary1");
f_9858(t1,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* vary1 in k9854 in k9851 in vary in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9858(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9858,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_less_or_equalp(t3,C_fix(0));
t6=(C_truep(t5)?t5:(C_word)C_i_nequalp(t2,C_fix(0)));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t7=(C_word)C_a_i_times(&a,2,t2,t3);
t8=(C_word)C_a_i_abs(&a,1,t7);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9874,a[2]=t1,a[3]=t2,a[4]=t8,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  tb:ranf");
f_8227(t9,t8);}}

/* k9872 in vary1 in k9854 in k9851 in vary in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9874,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[5],C_fix(0));
if(C_truep(t2)){
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[168]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_plus(&a,2,t4,t1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[5],C_fix(1));
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1):(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t1)));}}

/* odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9621(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_9621r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_9621r(t0,t1,t2,t3);}}

static void C_ccall f_9621r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9625,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_9625(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[165]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9762,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[165]);}
else{
t20=t19;
f_9762(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[166]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9797,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[166]);}
else{
t21=t20;
f_9797(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9826,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_9826(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k9824 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9826,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9833,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9841,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9839 in k9824 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9833(2,t2,C_SCHEME_UNDEFINED);}}

/* k9831 in k9824 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9625(t5,t4);}

/* k9795 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9797,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9801,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9801(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9799 in k9795 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9625(t7,t6);}

/* k9760 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9762(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9762,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9766,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9766(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9764 in k9760 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9625(t7,t6);}

/* k9623 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9625(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9625,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9628,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_9628(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[165]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9662,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[165]);}
else{
t6=t5;
f_9662(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[166]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9697,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[166]);}
else{
t7=t6;
f_9697(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9726,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_9726(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9724 in k9623 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9726,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9733,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9741,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9739 in k9724 in k9623 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9733(2,t2,C_SCHEME_UNDEFINED);}}

/* k9731 in k9724 in k9623 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9628(t5,t4);}

/* k9695 in k9623 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9697(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9697,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9701,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9701(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9699 in k9695 in k9623 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9628(t7,t6);}

/* k9660 in k9623 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9662,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9666,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9666(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9664 in k9660 in k9623 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9628(t7,t6);}

/* k9626 in k9623 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9628(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9628,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9631,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9631(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k9629 in k9626 in k9623 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9641,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  tb:ranf");
f_8227(t2,lf[164]);}

/* k9639 in k9629 in k9626 in k9623 in odds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9578(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_9578r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9578r(t0,t1,t2);}}

static void C_ccall f_9578r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9596,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 375  tb:rani");
f_8220(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9611,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 375  tb:rani");
f_8220(t4,t5);}}

/* k9609 in pick in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k9594 in pick in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9557(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_9557,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub347(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub353(t9,t10,t11));}}

/* ran in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9522(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_9522r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9522r(t0,t1,t2);}}

static void C_ccall f_9522r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9526,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_9526(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_9526(t7,t6);}}

/* k9524 in ran in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9526(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 375  tb:rani");
f_8220(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 375  tb:ranf");
f_8227(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 375  tb:ranf");
f_8227(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* scale in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9414(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_9414r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9414r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9414r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9421,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_9421(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9501,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 375  error");
t15=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[159],((C_word*)t8)[1]);}
else{
t15=t14;
f_9501(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_9421(t11,C_SCHEME_UNDEFINED);}}

/* k9499 in scale in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9421(t4,t3);}

/* k9419 in scale in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9421(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9421,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9430,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li101),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_9430(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do567 in k9419 in scale in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9430(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9430,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9443,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9477,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  fit");
t10=C_retrieve(lf[154]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_9443(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k9475 in do567 in k9419 in scale in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9443(t3,t2);}

/* k9441 in do567 in k9419 in scale in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9443(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9443,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9469,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 375  modulo");
t7=*((C_word*)lf[158]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k9467 in k9441 in do567 in k9419 in scale in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9469,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_9430(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9281(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_9281r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_9281r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_9281r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9285,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_9285(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_9285(t12,t11);}}

/* k9283 in fit in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9285(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9285,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9288,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_9288(t6,t5);}
else{
t3=t2;
f_9288(t3,C_SCHEME_UNDEFINED);}}

/* k9286 in k9283 in fit in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9288(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9288,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9290,a[2]=((C_word)li98),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9392,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li99),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 375  fit1");
f_9290(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a9391 in k9286 in k9283 in fit in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9392(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9392,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  fit1");
f_9290(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k9286 in k9283 in fit in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9290(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9290,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9297,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k9295 in fit1 in k9286 in k9283 in fit in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9297,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9320,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 375  remainder");
t9=*((C_word*)lf[155]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9339,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 375  remainder");
t8=*((C_word*)lf[155]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 375  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[156],((C_word*)t0)[2]);}}}

/* k9337 in k9295 in fit1 in k9286 in k9283 in fit in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9339,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9346,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[130]+1):*((C_word*)lf[126]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 375  -");
C_minus(3,0,t2,t1);}}

/* k9344 in k9337 in k9295 in fit1 in k9286 in k9283 in fit in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9346,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k9318 in k9295 in fit1 in k9286 in k9283 in fit in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9320,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* tendency in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9214(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr5r,(void*)f_9214r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_9214r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_9214r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a=C_alloc(16);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=C_retrieve(lf[153]);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9218,a[2]=t2,a[3]=t8,a[4]=t10,a[5]=t1,a[6]=t7,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t12=t11;
f_9218(t12,C_SCHEME_UNDEFINED);}
else{
t12=(C_word)C_i_car(((C_word*)t8)[1]);
t13=C_set_block_item(t10,0,t12);
t14=(C_word)C_i_cdr(((C_word*)t8)[1]);
t15=C_set_block_item(t8,0,t14);
t16=t11;
f_9218(t16,t15);}}

/* k9216 in tendency in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9218(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9218,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9221,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9264,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  interp1");
f_9082(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1],C_fix(1));}
else{
t3=t2;
f_9221(t3,C_SCHEME_UNDEFINED);}}

/* k9262 in k9216 in tendency in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9221(t3,t2);}

/* k9219 in k9216 in tendency in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9221(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9221,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9224,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[6])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9257,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  interp1");
f_9082(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1],C_fix(1));}
else{
t3=t2;
f_9224(t3,C_SCHEME_UNDEFINED);}}

/* k9255 in k9219 in k9216 in tendency in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_9224(t3,t2);}

/* k9222 in k9219 in k9216 in tendency in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9224(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9224,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9237,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]));
C_apply(5,0,t2,((C_word*)((C_word*)t0)[3])[1],t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k9235 in k9222 in k9219 in k9216 in tendency in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9237,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[2])[1],t1));}

/* interp in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9168(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_9168r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_9168r(t0,t1,t2,t3);}}

static void C_ccall f_9168r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9172,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 375  error");
t5=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[151]);}
else{
t5=t4;
f_9172(2,t5,C_SCHEME_UNDEFINED);}}

/* k9170 in interp in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=(C_word)C_i_nullp(t4);
t6=(C_truep(t5)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[4]));
C_trace("ChickenBridge.scm: 375  interp1");
f_9082(((C_word*)t0)[3],((C_word*)t0)[2],t3,t6);}
else{
C_trace("ChickenBridge.scm: 375  interp1");
f_9082(((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4],C_fix(1));}}

/* interp1 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9082(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9082,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9086,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 375  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[149],t3);}
else{
t6=t5;
f_9086(2,t6,(C_word)C_i_car(t3));}}

/* k9084 in interp1 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9086,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9089,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 375  err");
t6=C_retrieve(lf[147]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[148],((C_word*)t0)[4]);}
else{
t6=t4;
f_9089(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k9087 in k9084 in interp1 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9089,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=((C_word*)t0)[5];
t9=(C_word)C_i_cddr(((C_word*)t0)[4]);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9098,a[2]=((C_word*)t0)[4],a[3]=t11,a[4]=t8,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li94),tmp=(C_word)a,a+=11,tmp));
t13=((C_word*)t11)[1];
f_9098(t13,((C_word*)t0)[2],t9);}

/* do518 in k9087 in k9084 in interp1 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_9098(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9098,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 375  tb:rescale");
f_8057(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9120,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 375  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[146],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_9120(2,t13,t12);}}}

/* k9118 in do518 in k9087 in k9084 in interp1 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_9098(t3,((C_word*)t0)[2],t2);}

/* ratio->cents in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9067(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9067,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[95],"tb:scaler->cents"),t2);}
else{
C_trace("ChickenBridge.scm: 375  tb:scaler->cents");
t3=C_retrieve2(lf[95],"tb:scaler->cents");
f_8151(3,t3,t1,t2);}}

/* cents->ratio in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9052(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9052,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[94],"tb:cents->scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 375  tb:cents->scaler");
t3=C_retrieve2(lf[94],"tb:cents->scaler");
f_8144(3,t3,t1,t2);}}

/* rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8816(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_8816r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8816r(t0,t1,t2,t3);}}

static void C_ccall f_8816r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[139];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[140];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8820,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_8820(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[141]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8965,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[141]);}
else{
t20=t19;
f_8965(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[142]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9000,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[142]);}
else{
t21=t20;
f_9000(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9029,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_9029(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k9027 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9029,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9036,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9044,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9042 in k9027 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9036(2,t2,C_SCHEME_UNDEFINED);}}

/* k9034 in k9027 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9036(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8820(t5,t4);}

/* k8998 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9000(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9000,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9004,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9004(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9002 in k8998 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_9004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8820(t7,t6);}

/* k8963 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8965,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8969,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8969(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8967 in k8963 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8820(t7,t6);}

/* k8818 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8820(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8820,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8823,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_8823(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[141]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8865,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[141]);}
else{
t6=t5;
f_8865(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[142]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8900,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[142]);}
else{
t7=t6;
f_8900(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8929,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_8929(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k8927 in k8818 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8929,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8936,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8944,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8942 in k8927 in k8818 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8936(2,t2,C_SCHEME_UNDEFINED);}}

/* k8934 in k8927 in k8818 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8823(t5,t4);}

/* k8898 in k8818 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8900,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8904,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8904(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8902 in k8898 in k8818 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8823(t7,t6);}

/* k8863 in k8818 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8865,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8869,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8869(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8867 in k8863 in k8818 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8823(t7,t6);}

/* k8821 in k8818 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8823(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8823,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8826,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_8826(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k8824 in k8821 in k8818 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8826,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8837,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li90),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 375  tb:rhythm->seconds");
f_8129(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8836 in k8824 in k8821 in k8818 in rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8837(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8837,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  tb:rhythm->seconds");
f_8129(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8776,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8780,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  expt");
t5=*((C_word*)lf[136]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[137],t3);}

/* k8778 in decimals in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8780,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[3]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8791,a[2]=t1,a[3]=((C_word)li88),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8810,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 375  round");
t4=*((C_word*)lf[135]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}}

/* k8808 in k8778 in decimals in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8810,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* a8790 in k8778 in decimals in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8791(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8791,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8799,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 375  round");
t5=*((C_word*)lf[135]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k8797 in a8790 in k8778 in decimals in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8799,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* quantize in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8755(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8755,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8767,a[2]=t3,a[3]=((C_word)li86),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 375  tb:quantize");
f_8118(t1,t2,t3);}}

/* a8766 in quantize in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8767(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8767,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  tb:quantize");
f_8118(t1,t2,((C_word*)t0)[2]);}

/* divide in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8712(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_8712r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8712r(t0,t1,t2,t3);}}

static void C_ccall f_8712r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[132]+1),t2);}
else{
C_trace("ChickenBridge.scm: 375  /");
C_divide(3,0,t1,t2);}}
else{
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8742,a[2]=t3,a[3]=((C_word)li84),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_apply(5,0,t1,*((C_word*)lf[132]+1),t2,t3);}}}

/* a8741 in divide in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8742(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8742,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_divide(&a,2,t2,t3));}

/* minus in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8669(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3r,(void*)f_8669r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8669r(t0,t1,t2,t3);}}

static void C_ccall f_8669r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[130]+1),t2);}
else{
C_trace("ChickenBridge.scm: 375  -");
C_minus(3,0,t1,t2);}}
else{
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8699,a[2]=t3,a[3]=((C_word)li82),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_apply(5,0,t1,*((C_word*)lf[130]+1),t2,t3);}}}

/* a8698 in minus in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8699(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8699,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_minus(&a,2,t2,t3));}

/* times in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8600(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_8600r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8600r(t0,t1,t2);}}

static void C_ccall f_8600r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(1));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[128]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[128]+1),t2);}}
else{
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8644,a[2]=t2,a[3]=((C_word)li80),tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t5,t6);}
else{
C_apply(4,0,t1,*((C_word*)lf[128]+1),t2);}}}}

/* a8643 in times in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8644(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8644,3,t0,t1,t2);}
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_times(&a,2,t2,t3));}

/* plus in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8531(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_8531r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8531r(t0,t1,t2);}}

static void C_ccall f_8531r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[126]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[126]+1),t2);}}
else{
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8575,a[2]=t2,a[3]=((C_word)li78),tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t5,t6);}
else{
C_apply(4,0,t1,*((C_word*)lf[126]+1),t2);}}}}

/* a8574 in plus in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8575(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8575,3,t0,t1,t2);}
t3=(C_word)C_i_cadr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_plus(&a,2,t2,t3));}

/* float in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8507(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8507,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8519,a[2]=((C_word)li76),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,t3,t2);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_times(&a,2,t2,lf[120]));}}

/* a8518 in float in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8519(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8519,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_times(&a,2,t2,lf[119]));}

/* int in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8492(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8492,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[91],"tb:int"),t2);}
else{
C_trace("ChickenBridge.scm: 375  tb:int");
t3=C_retrieve2(lf[91],"tb:int");
f_8111(3,t3,t1,t2);}}

/* discrete in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8381(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_8381r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_8381r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_8381r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8385,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_8385(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8456,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 375  not?");
t20=C_retrieve(lf[116]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_8385(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_8385(t19,t18);}}}

/* k8454 in discrete in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8385(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_8385(t2,C_SCHEME_UNDEFINED);}}

/* k8383 in discrete in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8385(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8385,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8399,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li72),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8414,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  tb:discrete");
f_8084(t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8425,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li73),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 375  tb:discrete");
f_8084(((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a8424 in k8383 in discrete in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8425(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8425,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  tb:discrete");
f_8084(t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k8412 in k8383 in discrete in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a8398 in k8383 in discrete in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8399(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8399,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8407,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  tb:discrete");
f_8084(t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k8405 in a8398 in k8383 in discrete in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8347(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_8347r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_8347r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_8347r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8359,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li70),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 375  tb:rescale");
f_8057(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 375  tb:rescale");
f_8057(t1,t2,t3,t4,t5,t6,t8);}}}

/* a8358 in rescale in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8359(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8359,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[114]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* log2 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8340(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8340,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub419(t3,t4));}

/* log10 in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8333(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8333,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub414(t3,t4));}

/* tb:ranbrown in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8314,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub401(t2));}

/* tb:ranpink in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8311,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub398(t2));}

/* tb:ranpoisson in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8304(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8304,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub395(C_SCHEME_UNDEFINED,t3));}

/* tb:rancauchy in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8301(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8301,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub391(t2));}

/* tb:rangamma in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8294(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8294,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub387(t3,t4));}

/* tb:ranexp in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8276(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8276,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub375(t3,t4));}

/* tb:rangauss in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8265(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8265,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub369(t4,t5,t6));}

/* tb:ranmiddle in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8262,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub364(t2));}

/* tb:ranhigh in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8259,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub361(t2));}

/* tb:ranlow in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8256,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub358(t2));}

/* tb:ranf in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8227(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8227,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub341(t3,t4));}

/* tb:rani in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8220(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8220,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub337(C_SCHEME_UNDEFINED,t3));}

/* tb:ran-set! in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8217(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8217,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub333(C_SCHEME_UNDEFINED,t2));}

/* tb:keynum->hertz in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8196(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8196,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub319(t3,t4));}

/* tb:geoseg in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8177(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_8177,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub311(t6,t7,t8,t9,t10));}

/* tb:explseg in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8158(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_8158,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub300(t6,t7,t8,t9,t10));}

/* tb:scaler->cents in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8151(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8151,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub293(C_SCHEME_UNDEFINED,t3));}

/* tb:cents->scaler in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8144(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8144,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub288(t3,t4));}

/* tb:rhythm->seconds in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8129(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8129,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub281(t5,t6,t7,t8));}

/* tb:quantize in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8118(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8118,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub273(t4,t5,t6));}

/* tb:int in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_8111(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8111,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub268(C_SCHEME_UNDEFINED,t3));}

/* tb:discrete in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8084(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8084,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub259(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8057(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8057,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub244(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8016(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8016,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8022,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li43),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_8022(t9,t1,C_SCHEME_FALSE);}

/* do205 in bitwise-test in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8022(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8022,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8032,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_8032(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_8032(t7,t6);}}
else{
t5=t4;
f_8032(t5,C_SCHEME_UNDEFINED);}}}

/* k8030 in do205 in bitwise-test in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_8032(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8032,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_8022(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7930(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_7930r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_7930r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7930r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[87],"list-prop"),t7,t3,t4);}}}

/* every? in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7891(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7891,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7897,a[2]=t2,a[3]=t5,a[4]=((C_word)li40),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7897(t7,t1,t3,C_SCHEME_TRUE);}

/* do189 in every? in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_7897(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7897,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_not(((C_word*)t4)[1]);
t6=(C_truep(t5)?t5:(C_word)C_i_nullp(t2));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,((C_word*)t4)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7910,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7920,a[2]=t4,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  f");
t10=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t10))(3,t10,t8,t9);}}

/* k7918 in do189 in every? in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_7910(t2,C_SCHEME_FALSE);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_7910(t3,t2);}}

/* k7908 in do189 in every? in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_7910(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_7897(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* list-find in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7852(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7852,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7858,a[2]=t2,a[3]=t5,a[4]=((C_word)li38),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7858(t7,t1,t3,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do178 in list-find in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_7858(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7858,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7868,a[2]=t5,a[3]=t3,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7878,a[2]=t8,a[3]=t5,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k7876 in do178 in list-find in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7868(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_7868(t2,C_SCHEME_UNDEFINED);}}

/* k7866 in do178 in list-find in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_7868(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_7858(t3,((C_word*)t0)[4],t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-index in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7812(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7812,4,t0,t1,t2,t3);}
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7818,a[2]=t2,a[3]=t5,a[4]=((C_word)li36),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_7818(t7,t1,t3,C_fix(0),C_SCHEME_FALSE);}

/* do167 in list-index in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_7818(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7818,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_truep(t6)?t6:(C_word)C_i_nullp(t2));
if(C_truep(t7)){
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,((C_word*)t5)[1]);}
else{
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7828,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7842,a[2]=t8,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 374  p");
t11=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t11))(3,t11,t9,t10);}}

/* k7840 in do167 in list-index in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_7828(t3,t2);}
else{
t2=((C_word*)t0)[2];
f_7828(t2,C_SCHEME_UNDEFINED);}}

/* k7826 in do167 in list-index in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_7828(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7828,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_7818(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* make-list in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7713(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_7713r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7713r(t0,t1,t2,t3);}}

static void C_ccall f_7713r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7717,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 374  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[83],t2);}
else{
t5=t4;
f_7717(2,t5,C_SCHEME_UNDEFINED);}}

/* k7715 in make-list in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7717,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7719,a[2]=t3,a[3]=((C_word)li33),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7742,a[2]=t5,a[3]=((C_word)li34),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 374  l1");
t8=((C_word*)t3)[1];
f_7719(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 374  l2");
t9=((C_word*)t5)[1];
f_7742(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 374  l1");
t10=((C_word*)t3)[1];
f_7719(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k7715 in make-list in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_7742(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7742,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7759,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k7757 in l2 in k7715 in make-list in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7759,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7763,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 374  l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_7742(t4,t2,t3,((C_word*)t0)[2]);}

/* k7761 in k7757 in l2 in k7715 in make-list in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7763,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k7715 in make-list in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_7719(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7719,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7736,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 374  l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k7734 in l1 in k7715 in make-list in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7736,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* reverse! in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7652(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7652,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7665,a[2]=t2,a[3]=t6,a[4]=((C_word)li31),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_7665(t8,t1,C_fix(0),t4,t2);}

/* do144 in reverse! in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_7665(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(12);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7665,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_lessp(t2,t3))){
t5=(C_word)C_i_car(t4);
t6=(C_word)C_a_i_minus(&a,2,t3,t2);
t7=(C_word)C_i_list_tail(t4,t6);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_i_set_car(t4,t8);
t10=(C_word)C_i_set_car(t7,t5);
t11=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t12=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t13=(C_word)C_i_cdr(t4);
t15=t1;
t16=t11;
t17=t12;
t18=t13;
t1=t15;
t2=t16;
t3=t17;
t4=t18;
goto loop;}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}}

/* list-set! in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7642(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_7642,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7602(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_7602r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7602r(t0,t1,t2);}}

static void C_ccall f_7602r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 374  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[79]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7632,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[78]),t6);}}}

/* k7630 in list* in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7632,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* tail in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7512(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7512,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 374  tail");
t5=C_retrieve(lf[77]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* butlast in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7464(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7464,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7498,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 374  butlast");
t8=C_retrieve(lf[76]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k7496 in butlast in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7498,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7441(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7441,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 374  last");
t5=C_retrieve(lf[75]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7435(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7435,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7420(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7420,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7406(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7406,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7396(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7396,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7386(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7386,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7376(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7376,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7366(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7366,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* shell in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7340(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7340,3,t0,t1,t2);}
t3=lf[48];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7288,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7338,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 351  string-append");
t6=*((C_word*)lf[53]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,t2,lf[59],t3);}

/* k7336 in shell in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 351  system");
t2=C_retrieve(lf[52]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7286 in shell in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7288,2,t0,t1);}
t2=lf[49];
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7291,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_list(&a,1,C_make_character(10));
C_trace("list->string");
t6=C_retrieve(lf[58]);
((C_proc3)(void*)(*((C_word*)t6+1)))(3,t6,t4,t5);}

/* k7289 in k7286 in shell in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7291,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7294,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 354  open-input-file");
t3=*((C_word*)lf[57]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k7292 in k7289 in k7286 in shell in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7297,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 355  read-line");
t3=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,t1);}

/* k7295 in k7292 in k7289 in k7286 in shell in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7297,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7300,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7312,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t6,a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li17),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_7312(t8,t4);}

/* do106 in k7295 in k7292 in k7289 in k7286 in shell in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_7312(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7312,NULL,2,t0,t1);}
if(C_truep((C_word)C_eofp(((C_word*)((C_word*)t0)[6])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7323,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 358  string-append");
t3=*((C_word*)lf[53]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2]);}}

/* k7321 in do106 in k7295 in k7292 in k7289 in k7286 in shell in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7323,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7327,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 359  read-line");
t4=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k7325 in k7321 in do106 in k7295 in k7292 in k7289 in k7286 in shell in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7327(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7312(t3,((C_word*)t0)[2]);}

/* k7298 in k7295 in k7292 in k7289 in k7286 in shell in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7300,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7303,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 360  close-input-port");
t3=*((C_word*)lf[55]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k7301 in k7298 in k7295 in k7292 in k7289 in k7286 in shell in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7306,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7310,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 361  string-append");
t4=*((C_word*)lf[53]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[54],((C_word*)t0)[2]);}

/* k7308 in k7301 in k7298 in k7295 in k7292 in k7289 in k7286 in shell in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 361  system");
t2=C_retrieve(lf[52]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7304 in k7301 in k7298 in k7295 in k7292 in k7289 in k7286 in shell in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7306,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7347,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_equalp(t2,lf[50]))){
t4=t3;
f_7347(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 367  print");
t4=*((C_word*)lf[51]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}

/* k7345 in k7304 in k7301 in k7298 in k7295 in k7292 in k7289 in k7286 in shell in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 368  values");
C_values(2,0,((C_word*)t0)[2]);}

/* chdir in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7255(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_7255r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_7255r(t0,t1,t2);}}

static void C_ccall f_7255r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[45]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7264,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_7264 in chdir in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7264(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7264,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7269,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_7269(2,t4,C_SCHEME_FALSE);}}

/* k7267 */
static void C_ccall f_7269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7244,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7249,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_7249 in cwd in k7240 in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7249,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[43]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6951(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6951,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7231,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7220,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7229,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6961,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 266  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_6961(2,t11,t2);}}

/* k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6961,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6964,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7212,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 267  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[29]),t1,t3);}

/* a7211 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7212,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6964,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6967,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_6967(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 268  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[40],((C_word*)t0)[3]);}}

/* k6965 in k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6967,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6982,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_6982(t10,(C_word)C_eqp(t9,lf[39]));}
else{
t9=t8;
f_6982(t9,C_SCHEME_FALSE);}}

/* k6980 in k6965 in k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_6982(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6982,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6992,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 282  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k6990 in k6980 in k6965 in k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6992(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6992,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_6994,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_6994(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k6990 in k6980 in k6965 in k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_6994(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6994,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7006,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_7006(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7047,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_7053,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_7053(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 297  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k7051 in do63 in k6990 in k6980 in k6965 in k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7053,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_7047(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7107,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7180,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 318  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7063,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 308  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[38],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_7063(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k7061 in k7051 in do63 in k6990 in k6980 in k6965 in k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7063,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_7047(t9,t8);}

/* k7178 in k7051 in do63 in k6990 in k6980 in k6965 in k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7180,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7153,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 323  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_7107(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7166,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7168,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 319  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[37],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a7167 in k7178 in k7051 in do63 in k6990 in k6980 in k6965 in k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7168(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7168,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 327  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k7164 in k7178 in k7051 in do63 in k6990 in k6980 in k6965 in k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 325  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[36],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k7151 in k7178 in k7051 in do63 in k6990 in k6980 in k6965 in k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 322  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[35],((C_word*)t0)[2],t1);}

/* k7105 in k7051 in do63 in k6990 in k6980 in k6965 in k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7107,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7113,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_7113(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7134,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 334  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k7132 in k7105 in k7051 in do63 in k6990 in k6980 in k6965 in k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 333  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[34],((C_word*)t0)[2],t1);}

/* k7111 in k7105 in k7051 in do63 in k6990 in k6980 in k6965 in k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_7047(t6,t5);}

/* k7045 in do63 in k6990 in k6980 in k6965 in k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_7047(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_6994(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k6990 in k6980 in k6965 in k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_7006(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7006,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7019,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_7019(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_7019(t5,C_SCHEME_UNDEFINED);}}}

/* k7017 in do69 in do63 in k6990 in k6980 in k6965 in k6962 in k6959 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_fcall f_7019(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7006(t3,((C_word*)t0)[2],t2);}

/* f_7229 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7229(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7229,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_7220 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7220(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7220,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7228,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  keyword->string");
t4=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k7226 */
static void C_ccall f_7228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[32],t1);}

/* f_7231 in expand-send in k6947 in k6944 in k6940 in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_7231(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_7231r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7231r(t0,t1,t2,t3);}}

static void C_ccall f_7231r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7239,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[31]),t2,t3);}

/* k7237 */
static void C_ccall f_7239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 260  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6653(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6653,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6814,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6906,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a6905 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6906(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6906,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6920,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6924,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 212  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6935,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6939,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 213  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k6937 in a6905 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 213  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6933 in a6905 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6935,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k6922 in a6905 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 212  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6918 in a6905 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6920,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k6812 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6814,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6817,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 215  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[28]);}

/* k6815 in k6812 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6817,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6820,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 216  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[27]);}

/* k6818 in k6815 in k6812 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6820,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6823,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6900,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a6899 in k6818 in k6815 in k6812 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6900(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6900,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6666,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6725,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 176  symbol->string");
t10=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k6723 in a6899 in k6818 in k6815 in k6812 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 176  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6664 in a6899 in k6818 in k6815 in k6812 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6666,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[19],t1);
t4=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[3],t5);
t7=(C_word)C_a_i_list(&a,3,lf[4],lf[21],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[22],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[20],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[23],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k6821 in k6818 in k6815 in k6812 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6823,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6830,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[15]+1),((C_word*)t0)[2]);}

/* k6828 in k6821 in k6818 in k6815 in k6812 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6830,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6842,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6876,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6890,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6889 in k6828 in k6821 in k6818 in k6815 in k6812 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6890(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6890,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k6874 in k6828 in k6821 in k6818 in k6815 in k6812 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6876,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 222  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k6840 in k6828 in k6821 in k6818 in k6815 in k6812 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6842,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6846,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6850,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6868,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6867 in k6840 in k6828 in k6821 in k6818 in k6815 in k6812 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6868(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6868,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[3],t4);
t8=(C_word)C_a_i_list(&a,2,lf[8],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6803,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[4],lf[10],t5);
t13=(C_word)C_a_i_list(&a,3,lf[11],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[8],t4);
t15=(C_word)C_a_i_list(&a,3,lf[12],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[13],t11);
t17=(C_word)C_a_i_list(&a,3,lf[4],lf[14],t11);
t18=(C_word)C_a_i_list(&a,3,lf[11],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[12],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[15],t4);
t21=(C_word)C_a_i_list(&a,3,lf[12],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[16],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k6801 in a6867 in k6840 in k6828 in k6821 in k6818 in k6815 in k6812 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6803,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[9],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[6],((C_word*)t0)[2],t3));}

/* k6848 in k6840 in k6828 in k6821 in k6818 in k6815 in k6812 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6850,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[5],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[6],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k6844 in k6840 in k6828 in k6821 in k6818 in k6815 in k6812 in expand-optkeys in k6649 in k6646 in k6643 in k6640 */
static void C_ccall f_6846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6846,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2903] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_6642ChickenBridge.scm",(void*)f_6642},
{"f_6645ChickenBridge.scm",(void*)f_6645},
{"f_6648ChickenBridge.scm",(void*)f_6648},
{"f_6651ChickenBridge.scm",(void*)f_6651},
{"f_42223ChickenBridge.scm",(void*)f_42223},
{"f_6942ChickenBridge.scm",(void*)f_6942},
{"f_6946ChickenBridge.scm",(void*)f_6946},
{"f_42171ChickenBridge.scm",(void*)f_42171},
{"f_42218ChickenBridge.scm",(void*)f_42218},
{"f_42208ChickenBridge.scm",(void*)f_42208},
{"f_42175ChickenBridge.scm",(void*)f_42175},
{"f_6949ChickenBridge.scm",(void*)f_6949},
{"f_42165ChickenBridge.scm",(void*)f_42165},
{"f_7242ChickenBridge.scm",(void*)f_7242},
{"f_10582ChickenBridge.scm",(void*)f_10582},
{"f_41949ChickenBridge.scm",(void*)f_41949},
{"f_42163ChickenBridge.scm",(void*)f_42163},
{"f_41983ChickenBridge.scm",(void*)f_41983},
{"f_41995ChickenBridge.scm",(void*)f_41995},
{"f_41999ChickenBridge.scm",(void*)f_41999},
{"f_42003ChickenBridge.scm",(void*)f_42003},
{"f_42147ChickenBridge.scm",(void*)f_42147},
{"f_42009ChickenBridge.scm",(void*)f_42009},
{"f_42029ChickenBridge.scm",(void*)f_42029},
{"f_42032ChickenBridge.scm",(void*)f_42032},
{"f_42040ChickenBridge.scm",(void*)f_42040},
{"f_42047ChickenBridge.scm",(void*)f_42047},
{"f_42050ChickenBridge.scm",(void*)f_42050},
{"f_42054ChickenBridge.scm",(void*)f_42054},
{"f_42061ChickenBridge.scm",(void*)f_42061},
{"f_42064ChickenBridge.scm",(void*)f_42064},
{"f_42068ChickenBridge.scm",(void*)f_42068},
{"f_42075ChickenBridge.scm",(void*)f_42075},
{"f_42019ChickenBridge.scm",(void*)f_42019},
{"f_41972ChickenBridge.scm",(void*)f_41972},
{"f_41962ChickenBridge.scm",(void*)f_41962},
{"f_41965ChickenBridge.scm",(void*)f_41965},
{"f_10585ChickenBridge.scm",(void*)f_10585},
{"f_41939ChickenBridge.scm",(void*)f_41939},
{"f_41947ChickenBridge.scm",(void*)f_41947},
{"f_11650ChickenBridge.scm",(void*)f_11650},
{"f_41925ChickenBridge.scm",(void*)f_41925},
{"f_41933ChickenBridge.scm",(void*)f_41933},
{"f_41937ChickenBridge.scm",(void*)f_41937},
{"f_23001ChickenBridge.scm",(void*)f_23001},
{"f_23052ChickenBridge.scm",(void*)f_23052},
{"f_41915ChickenBridge.scm",(void*)f_41915},
{"f_41923ChickenBridge.scm",(void*)f_41923},
{"f_23157ChickenBridge.scm",(void*)f_23157},
{"f_41812ChickenBridge.scm",(void*)f_41812},
{"f_41875ChickenBridge.scm",(void*)f_41875},
{"f_41879ChickenBridge.scm",(void*)f_41879},
{"f_41893ChickenBridge.scm",(void*)f_41893},
{"f_41815ChickenBridge.scm",(void*)f_41815},
{"f_41835ChickenBridge.scm",(void*)f_41835},
{"f_41839ChickenBridge.scm",(void*)f_41839},
{"f_23160ChickenBridge.scm",(void*)f_23160},
{"f_41798ChickenBridge.scm",(void*)f_41798},
{"f_41806ChickenBridge.scm",(void*)f_41806},
{"f_41810ChickenBridge.scm",(void*)f_41810},
{"f_23353ChickenBridge.scm",(void*)f_23353},
{"f_41772ChickenBridge.scm",(void*)f_41772},
{"f_41776ChickenBridge.scm",(void*)f_41776},
{"f_41782ChickenBridge.scm",(void*)f_41782},
{"f_41793ChickenBridge.scm",(void*)f_41793},
{"f_41789ChickenBridge.scm",(void*)f_41789},
{"f_23422ChickenBridge.scm",(void*)f_23422},
{"f_41750ChickenBridge.scm",(void*)f_41750},
{"f_24667ChickenBridge.scm",(void*)f_24667},
{"f_41730ChickenBridge.scm",(void*)f_41730},
{"f_24670ChickenBridge.scm",(void*)f_24670},
{"f_41690ChickenBridge.scm",(void*)f_41690},
{"f_24673ChickenBridge.scm",(void*)f_24673},
{"f_41596ChickenBridge.scm",(void*)f_41596},
{"f_41600ChickenBridge.scm",(void*)f_41600},
{"f_41603ChickenBridge.scm",(void*)f_41603},
{"f_41621ChickenBridge.scm",(void*)f_41621},
{"f_41624ChickenBridge.scm",(void*)f_41624},
{"f_41655ChickenBridge.scm",(void*)f_41655},
{"f_41627ChickenBridge.scm",(void*)f_41627},
{"f_41633ChickenBridge.scm",(void*)f_41633},
{"f_41586ChickenBridge.scm",(void*)f_41586},
{"f_41580ChickenBridge.scm",(void*)f_41580},
{"f_24676ChickenBridge.scm",(void*)f_24676},
{"f_41488ChickenBridge.scm",(void*)f_41488},
{"f_41490ChickenBridge.scm",(void*)f_41490},
{"f_41494ChickenBridge.scm",(void*)f_41494},
{"f_41497ChickenBridge.scm",(void*)f_41497},
{"f_41500ChickenBridge.scm",(void*)f_41500},
{"f_41540ChickenBridge.scm",(void*)f_41540},
{"f_41532ChickenBridge.scm",(void*)f_41532},
{"f_41503ChickenBridge.scm",(void*)f_41503},
{"f_41506ChickenBridge.scm",(void*)f_41506},
{"f_41509ChickenBridge.scm",(void*)f_41509},
{"f_41480ChickenBridge.scm",(void*)f_41480},
{"f_24679ChickenBridge.scm",(void*)f_24679},
{"f_41452ChickenBridge.scm",(void*)f_41452},
{"f_24682ChickenBridge.scm",(void*)f_24682},
{"f_41416ChickenBridge.scm",(void*)f_41416},
{"f_41428ChickenBridge.scm",(void*)f_41428},
{"f_41424ChickenBridge.scm",(void*)f_41424},
{"f_41398ChickenBridge.scm",(void*)f_41398},
{"f_41392ChickenBridge.scm",(void*)f_41392},
{"f_24685ChickenBridge.scm",(void*)f_24685},
{"f_41306ChickenBridge.scm",(void*)f_41306},
{"f_41310ChickenBridge.scm",(void*)f_41310},
{"f_41313ChickenBridge.scm",(void*)f_41313},
{"f_41316ChickenBridge.scm",(void*)f_41316},
{"f_41329ChickenBridge.scm",(void*)f_41329},
{"f_41275ChickenBridge.scm",(void*)f_41275},
{"f_41279ChickenBridge.scm",(void*)f_41279},
{"f_41294ChickenBridge.scm",(void*)f_41294},
{"f_41269ChickenBridge.scm",(void*)f_41269},
{"f_24688ChickenBridge.scm",(void*)f_24688},
{"f_41155ChickenBridge.scm",(void*)f_41155},
{"f_41171ChickenBridge.scm",(void*)f_41171},
{"f_41182ChickenBridge.scm",(void*)f_41182},
{"f_41149ChickenBridge.scm",(void*)f_41149},
{"f_24744ChickenBridge.scm",(void*)f_24744},
{"f_41016ChickenBridge.scm",(void*)f_41016},
{"f_41039ChickenBridge.scm",(void*)f_41039},
{"f_41036ChickenBridge.scm",(void*)f_41036},
{"f_41010ChickenBridge.scm",(void*)f_41010},
{"f_24747ChickenBridge.scm",(void*)f_24747},
{"f_40864ChickenBridge.scm",(void*)f_40864},
{"f_40882ChickenBridge.scm",(void*)f_40882},
{"f_40891ChickenBridge.scm",(void*)f_40891},
{"f_40858ChickenBridge.scm",(void*)f_40858},
{"f_24750ChickenBridge.scm",(void*)f_24750},
{"f_40811ChickenBridge.scm",(void*)f_40811},
{"f_40815ChickenBridge.scm",(void*)f_40815},
{"f_40818ChickenBridge.scm",(void*)f_40818},
{"f_40834ChickenBridge.scm",(void*)f_40834},
{"f_40793ChickenBridge.scm",(void*)f_40793},
{"f_40787ChickenBridge.scm",(void*)f_40787},
{"f_24753ChickenBridge.scm",(void*)f_24753},
{"f_40711ChickenBridge.scm",(void*)f_40711},
{"f_24892ChickenBridge.scm",(void*)f_24892},
{"f_40637ChickenBridge.scm",(void*)f_40637},
{"f_40644ChickenBridge.scm",(void*)f_40644},
{"f_40631ChickenBridge.scm",(void*)f_40631},
{"f_24895ChickenBridge.scm",(void*)f_24895},
{"f_40527ChickenBridge.scm",(void*)f_40527},
{"f_40535ChickenBridge.scm",(void*)f_40535},
{"f_40501ChickenBridge.scm",(void*)f_40501},
{"f_40518ChickenBridge.scm",(void*)f_40518},
{"f_40509ChickenBridge.scm",(void*)f_40509},
{"f_40495ChickenBridge.scm",(void*)f_40495},
{"f_24898ChickenBridge.scm",(void*)f_24898},
{"f_40451ChickenBridge.scm",(void*)f_40451},
{"f_24901ChickenBridge.scm",(void*)f_24901},
{"f_40369ChickenBridge.scm",(void*)f_40369},
{"f_40380ChickenBridge.scm",(void*)f_40380},
{"f_40382ChickenBridge.scm",(void*)f_40382},
{"f_40411ChickenBridge.scm",(void*)f_40411},
{"f_40347ChickenBridge.scm",(void*)f_40347},
{"f_40363ChickenBridge.scm",(void*)f_40363},
{"f_40341ChickenBridge.scm",(void*)f_40341},
{"f_24904ChickenBridge.scm",(void*)f_24904},
{"f_40294ChickenBridge.scm",(void*)f_40294},
{"f_40298ChickenBridge.scm",(void*)f_40298},
{"f_40305ChickenBridge.scm",(void*)f_40305},
{"f_40272ChickenBridge.scm",(void*)f_40272},
{"f_40288ChickenBridge.scm",(void*)f_40288},
{"f_40266ChickenBridge.scm",(void*)f_40266},
{"f_24907ChickenBridge.scm",(void*)f_24907},
{"f_40134ChickenBridge.scm",(void*)f_40134},
{"f_40174ChickenBridge.scm",(void*)f_40174},
{"f_40138ChickenBridge.scm",(void*)f_40138},
{"f_40154ChickenBridge.scm",(void*)f_40154},
{"f_40166ChickenBridge.scm",(void*)f_40166},
{"f_40170ChickenBridge.scm",(void*)f_40170},
{"f_40162ChickenBridge.scm",(void*)f_40162},
{"f_40059ChickenBridge.scm",(void*)f_40059},
{"f_40102ChickenBridge.scm",(void*)f_40102},
{"f_40106ChickenBridge.scm",(void*)f_40106},
{"f_40066ChickenBridge.scm",(void*)f_40066},
{"f_40077ChickenBridge.scm",(void*)f_40077},
{"f_40053ChickenBridge.scm",(void*)f_40053},
{"f_24910ChickenBridge.scm",(void*)f_24910},
{"f_40033ChickenBridge.scm",(void*)f_40033},
{"f_40027ChickenBridge.scm",(void*)f_40027},
{"f_24913ChickenBridge.scm",(void*)f_24913},
{"f_40007ChickenBridge.scm",(void*)f_40007},
{"f_40011ChickenBridge.scm",(void*)f_40011},
{"f_39999ChickenBridge.scm",(void*)f_39999},
{"f_24916ChickenBridge.scm",(void*)f_24916},
{"f_39979ChickenBridge.scm",(void*)f_39979},
{"f_39983ChickenBridge.scm",(void*)f_39983},
{"f_39971ChickenBridge.scm",(void*)f_39971},
{"f_24919ChickenBridge.scm",(void*)f_24919},
{"f_39951ChickenBridge.scm",(void*)f_39951},
{"f_39955ChickenBridge.scm",(void*)f_39955},
{"f_39943ChickenBridge.scm",(void*)f_39943},
{"f_24922ChickenBridge.scm",(void*)f_24922},
{"f_39923ChickenBridge.scm",(void*)f_39923},
{"f_39927ChickenBridge.scm",(void*)f_39927},
{"f_39915ChickenBridge.scm",(void*)f_39915},
{"f_24925ChickenBridge.scm",(void*)f_24925},
{"f_39814ChickenBridge.scm",(void*)f_39814},
{"f_39784ChickenBridge.scm",(void*)f_39784},
{"f_39808ChickenBridge.scm",(void*)f_39808},
{"f_39778ChickenBridge.scm",(void*)f_39778},
{"f_24928ChickenBridge.scm",(void*)f_24928},
{"f_39728ChickenBridge.scm",(void*)f_39728},
{"f_39730ChickenBridge.scm",(void*)f_39730},
{"f_39734ChickenBridge.scm",(void*)f_39734},
{"f_39762ChickenBridge.scm",(void*)f_39762},
{"f_39754ChickenBridge.scm",(void*)f_39754},
{"f_39750ChickenBridge.scm",(void*)f_39750},
{"f_39737ChickenBridge.scm",(void*)f_39737},
{"f_39720ChickenBridge.scm",(void*)f_39720},
{"f_24931ChickenBridge.scm",(void*)f_24931},
{"f_39667ChickenBridge.scm",(void*)f_39667},
{"f_39669ChickenBridge.scm",(void*)f_39669},
{"f_39673ChickenBridge.scm",(void*)f_39673},
{"f_39704ChickenBridge.scm",(void*)f_39704},
{"f_39696ChickenBridge.scm",(void*)f_39696},
{"f_39692ChickenBridge.scm",(void*)f_39692},
{"f_39676ChickenBridge.scm",(void*)f_39676},
{"f_39679ChickenBridge.scm",(void*)f_39679},
{"f_39659ChickenBridge.scm",(void*)f_39659},
{"f_24934ChickenBridge.scm",(void*)f_24934},
{"f_39609ChickenBridge.scm",(void*)f_39609},
{"f_39623ChickenBridge.scm",(void*)f_39623},
{"f_39615ChickenBridge.scm",(void*)f_39615},
{"f_39574ChickenBridge.scm",(void*)f_39574},
{"f_39607ChickenBridge.scm",(void*)f_39607},
{"f_39568ChickenBridge.scm",(void*)f_39568},
{"f_24937ChickenBridge.scm",(void*)f_24937},
{"f_39515ChickenBridge.scm",(void*)f_39515},
{"f_39519ChickenBridge.scm",(void*)f_39519},
{"f_39532ChickenBridge.scm",(void*)f_39532},
{"f_39524ChickenBridge.scm",(void*)f_39524},
{"f_39472ChickenBridge.scm",(void*)f_39472},
{"f_39505ChickenBridge.scm",(void*)f_39505},
{"f_39466ChickenBridge.scm",(void*)f_39466},
{"f_24940ChickenBridge.scm",(void*)f_24940},
{"f_39386ChickenBridge.scm",(void*)f_39386},
{"f_39380ChickenBridge.scm",(void*)f_39380},
{"f_24943ChickenBridge.scm",(void*)f_24943},
{"f_39149ChickenBridge.scm",(void*)f_39149},
{"f_39153ChickenBridge.scm",(void*)f_39153},
{"f_39161ChickenBridge.scm",(void*)f_39161},
{"f_39184ChickenBridge.scm",(void*)f_39184},
{"f_39187ChickenBridge.scm",(void*)f_39187},
{"f_39190ChickenBridge.scm",(void*)f_39190},
{"f_39193ChickenBridge.scm",(void*)f_39193},
{"f_39253ChickenBridge.scm",(void*)f_39253},
{"f_39260ChickenBridge.scm",(void*)f_39260},
{"f_39270ChickenBridge.scm",(void*)f_39270},
{"f_39280ChickenBridge.scm",(void*)f_39280},
{"f_39294ChickenBridge.scm",(void*)f_39294},
{"f_39304ChickenBridge.scm",(void*)f_39304},
{"f_39314ChickenBridge.scm",(void*)f_39314},
{"f_39324ChickenBridge.scm",(void*)f_39324},
{"f_39196ChickenBridge.scm",(void*)f_39196},
{"f_39220ChickenBridge.scm",(void*)f_39220},
{"f_39199ChickenBridge.scm",(void*)f_39199},
{"f_39106ChickenBridge.scm",(void*)f_39106},
{"f_39139ChickenBridge.scm",(void*)f_39139},
{"f_39100ChickenBridge.scm",(void*)f_39100},
{"f_24946ChickenBridge.scm",(void*)f_24946},
{"f_39018ChickenBridge.scm",(void*)f_39018},
{"f_39022ChickenBridge.scm",(void*)f_39022},
{"f_39028ChickenBridge.scm",(void*)f_39028},
{"f_39048ChickenBridge.scm",(void*)f_39048},
{"f_38992ChickenBridge.scm",(void*)f_38992},
{"f_39002ChickenBridge.scm",(void*)f_39002},
{"f_38986ChickenBridge.scm",(void*)f_38986},
{"f_24949ChickenBridge.scm",(void*)f_24949},
{"f_38801ChickenBridge.scm",(void*)f_38801},
{"f_38805ChickenBridge.scm",(void*)f_38805},
{"f_38811ChickenBridge.scm",(void*)f_38811},
{"f_38820ChickenBridge.scm",(void*)f_38820},
{"f_38858ChickenBridge.scm",(void*)f_38858},
{"f_38850ChickenBridge.scm",(void*)f_38850},
{"f_38827ChickenBridge.scm",(void*)f_38827},
{"f_38831ChickenBridge.scm",(void*)f_38831},
{"f_38733ChickenBridge.scm",(void*)f_38733},
{"f_38752ChickenBridge.scm",(void*)f_38752},
{"f_38787ChickenBridge.scm",(void*)f_38787},
{"f_38758ChickenBridge.scm",(void*)f_38758},
{"f_38762ChickenBridge.scm",(void*)f_38762},
{"f_38776ChickenBridge.scm",(void*)f_38776},
{"f_38765ChickenBridge.scm",(void*)f_38765},
{"f_38746ChickenBridge.scm",(void*)f_38746},
{"f_38727ChickenBridge.scm",(void*)f_38727},
{"f_24952ChickenBridge.scm",(void*)f_24952},
{"f_38455ChickenBridge.scm",(void*)f_38455},
{"f_25475ChickenBridge.scm",(void*)f_25475},
{"f_38407ChickenBridge.scm",(void*)f_38407},
{"f_38399ChickenBridge.scm",(void*)f_38399},
{"f_25478ChickenBridge.scm",(void*)f_25478},
{"f_38279ChickenBridge.scm",(void*)f_38279},
{"f_25484ChickenBridge.scm",(void*)f_25484},
{"f_26020ChickenBridge.scm",(void*)f_26020},
{"f_26054ChickenBridge.scm",(void*)f_26054},
{"f_26046ChickenBridge.scm",(void*)f_26046},
{"f_26042ChickenBridge.scm",(void*)f_26042},
{"f_26027ChickenBridge.scm",(void*)f_26027},
{"f_26031ChickenBridge.scm",(void*)f_26031},
{"f_26024ChickenBridge.scm",(void*)f_26024},
{"f_25502ChickenBridge.scm",(void*)f_25502},
{"f_26013ChickenBridge.scm",(void*)f_26013},
{"f_26009ChickenBridge.scm",(void*)f_26009},
{"f_25509ChickenBridge.scm",(void*)f_25509},
{"f_25884ChickenBridge.scm",(void*)f_25884},
{"f_25905ChickenBridge.scm",(void*)f_25905},
{"f_25907ChickenBridge.scm",(void*)f_25907},
{"f_25921ChickenBridge.scm",(void*)f_25921},
{"f_25974ChickenBridge.scm",(void*)f_25974},
{"f_25924ChickenBridge.scm",(void*)f_25924},
{"f_25959ChickenBridge.scm",(void*)f_25959},
{"f_25927ChickenBridge.scm",(void*)f_25927},
{"f_25940ChickenBridge.scm",(void*)f_25940},
{"f_25952ChickenBridge.scm",(void*)f_25952},
{"f_25944ChickenBridge.scm",(void*)f_25944},
{"f_25930ChickenBridge.scm",(void*)f_25930},
{"f_25894ChickenBridge.scm",(void*)f_25894},
{"f_25512ChickenBridge.scm",(void*)f_25512},
{"f_25848ChickenBridge.scm",(void*)f_25848},
{"f_25874ChickenBridge.scm",(void*)f_25874},
{"f_25859ChickenBridge.scm",(void*)f_25859},
{"f_25518ChickenBridge.scm",(void*)f_25518},
{"f_25522ChickenBridge.scm",(void*)f_25522},
{"f_25725ChickenBridge.scm",(void*)f_25725},
{"f_25729ChickenBridge.scm",(void*)f_25729},
{"f_25733ChickenBridge.scm",(void*)f_25733},
{"f_25776ChickenBridge.scm",(void*)f_25776},
{"f_25786ChickenBridge.scm",(void*)f_25786},
{"f_25789ChickenBridge.scm",(void*)f_25789},
{"f_25810ChickenBridge.scm",(void*)f_25810},
{"f_25792ChickenBridge.scm",(void*)f_25792},
{"f_25796ChickenBridge.scm",(void*)f_25796},
{"f_25736ChickenBridge.scm",(void*)f_25736},
{"f_25739ChickenBridge.scm",(void*)f_25739},
{"f_25525ChickenBridge.scm",(void*)f_25525},
{"f_25529ChickenBridge.scm",(void*)f_25529},
{"f_25532ChickenBridge.scm",(void*)f_25532},
{"f_25685ChickenBridge.scm",(void*)f_25685},
{"f_25693ChickenBridge.scm",(void*)f_25693},
{"f_25689ChickenBridge.scm",(void*)f_25689},
{"f_25535ChickenBridge.scm",(void*)f_25535},
{"f_25563ChickenBridge.scm",(void*)f_25563},
{"f_25566ChickenBridge.scm",(void*)f_25566},
{"f_25569ChickenBridge.scm",(void*)f_25569},
{"f_25572ChickenBridge.scm",(void*)f_25572},
{"f_25575ChickenBridge.scm",(void*)f_25575},
{"f_25634ChickenBridge.scm",(void*)f_25634},
{"f_38233ChickenBridge.scm",(void*)f_38233},
{"f_38249ChickenBridge.scm",(void*)f_38249},
{"f_38252ChickenBridge.scm",(void*)f_38252},
{"f_38255ChickenBridge.scm",(void*)f_38255},
{"f_38258ChickenBridge.scm",(void*)f_38258},
{"f_38269ChickenBridge.scm",(void*)f_38269},
{"f_38227ChickenBridge.scm",(void*)f_38227},
{"f_26061ChickenBridge.scm",(void*)f_26061},
{"f_38088ChickenBridge.scm",(void*)f_38088},
{"f_38127ChickenBridge.scm",(void*)f_38127},
{"f_38101ChickenBridge.scm",(void*)f_38101},
{"f_38082ChickenBridge.scm",(void*)f_38082},
{"f_26064ChickenBridge.scm",(void*)f_26064},
{"f_37670ChickenBridge.scm",(void*)f_37670},
{"f_37674ChickenBridge.scm",(void*)f_37674},
{"f_37686ChickenBridge.scm",(void*)f_37686},
{"f_37744ChickenBridge.scm",(void*)f_37744},
{"f_37747ChickenBridge.scm",(void*)f_37747},
{"f_37750ChickenBridge.scm",(void*)f_37750},
{"f_37962ChickenBridge.scm",(void*)f_37962},
{"f_37900ChickenBridge.scm",(void*)f_37900},
{"f_37934ChickenBridge.scm",(void*)f_37934},
{"f_37909ChickenBridge.scm",(void*)f_37909},
{"f_37920ChickenBridge.scm",(void*)f_37920},
{"f_37916ChickenBridge.scm",(void*)f_37916},
{"f_37759ChickenBridge.scm",(void*)f_37759},
{"f_37837ChickenBridge.scm",(void*)f_37837},
{"f_37878ChickenBridge.scm",(void*)f_37878},
{"f_37882ChickenBridge.scm",(void*)f_37882},
{"f_37886ChickenBridge.scm",(void*)f_37886},
{"f_37841ChickenBridge.scm",(void*)f_37841},
{"f_37845ChickenBridge.scm",(void*)f_37845},
{"f_37872ChickenBridge.scm",(void*)f_37872},
{"f_37848ChickenBridge.scm",(void*)f_37848},
{"f_37762ChickenBridge.scm",(void*)f_37762},
{"f_37834ChickenBridge.scm",(void*)f_37834},
{"f_37776ChickenBridge.scm",(void*)f_37776},
{"f_37778ChickenBridge.scm",(void*)f_37778},
{"f_37826ChickenBridge.scm",(void*)f_37826},
{"f_37797ChickenBridge.scm",(void*)f_37797},
{"f_37814ChickenBridge.scm",(void*)f_37814},
{"f_37800ChickenBridge.scm",(void*)f_37800},
{"f_37793ChickenBridge.scm",(void*)f_37793},
{"f_37765ChickenBridge.scm",(void*)f_37765},
{"f_37695ChickenBridge.scm",(void*)f_37695},
{"f_37705ChickenBridge.scm",(void*)f_37705},
{"f_37711ChickenBridge.scm",(void*)f_37711},
{"f_37683ChickenBridge.scm",(void*)f_37683},
{"f_37631ChickenBridge.scm",(void*)f_37631},
{"f_37648ChickenBridge.scm",(void*)f_37648},
{"f_37664ChickenBridge.scm",(void*)f_37664},
{"f_37642ChickenBridge.scm",(void*)f_37642},
{"f_37625ChickenBridge.scm",(void*)f_37625},
{"f_26067ChickenBridge.scm",(void*)f_26067},
{"f_37549ChickenBridge.scm",(void*)f_37549},
{"f_26070ChickenBridge.scm",(void*)f_26070},
{"f_37525ChickenBridge.scm",(void*)f_37525},
{"f_37537ChickenBridge.scm",(void*)f_37537},
{"f_37533ChickenBridge.scm",(void*)f_37533},
{"f_37511ChickenBridge.scm",(void*)f_37511},
{"f_37519ChickenBridge.scm",(void*)f_37519},
{"f_37505ChickenBridge.scm",(void*)f_37505},
{"f_26073ChickenBridge.scm",(void*)f_26073},
{"f_37497ChickenBridge.scm",(void*)f_37497},
{"f_29851ChickenBridge.scm",(void*)f_29851},
{"f_29854ChickenBridge.scm",(void*)f_29854},
{"f_30020ChickenBridge.scm",(void*)f_30020},
{"f_30016ChickenBridge.scm",(void*)f_30016},
{"f_30006ChickenBridge.scm",(void*)f_30006},
{"f_29861ChickenBridge.scm",(void*)f_29861},
{"f_29865ChickenBridge.scm",(void*)f_29865},
{"f_29868ChickenBridge.scm",(void*)f_29868},
{"f_29879ChickenBridge.scm",(void*)f_29879},
{"f_29887ChickenBridge.scm",(void*)f_29887},
{"f_29959ChickenBridge.scm",(void*)f_29959},
{"f_29967ChickenBridge.scm",(void*)f_29967},
{"f_29963ChickenBridge.scm",(void*)f_29963},
{"f_29955ChickenBridge.scm",(void*)f_29955},
{"f_29951ChickenBridge.scm",(void*)f_29951},
{"f_29923ChickenBridge.scm",(void*)f_29923},
{"f_29919ChickenBridge.scm",(void*)f_29919},
{"f_29883ChickenBridge.scm",(void*)f_29883},
{"f_26498ChickenBridge.scm",(void*)f_26498},
{"f_37483ChickenBridge.scm",(void*)f_37483},
{"f_26501ChickenBridge.scm",(void*)f_26501},
{"f_37454ChickenBridge.scm",(void*)f_37454},
{"f_37458ChickenBridge.scm",(void*)f_37458},
{"f_26504ChickenBridge.scm",(void*)f_26504},
{"f_37451ChickenBridge.scm",(void*)f_37451},
{"f_26507ChickenBridge.scm",(void*)f_26507},
{"f_37309ChickenBridge.scm",(void*)f_37309},
{"f_30033ChickenBridge.scm",(void*)f_30033},
{"f_30165ChickenBridge.scm",(void*)f_30165},
{"f_30036ChickenBridge.scm",(void*)f_30036},
{"f_30047ChickenBridge.scm",(void*)f_30047},
{"f_30055ChickenBridge.scm",(void*)f_30055},
{"f_30079ChickenBridge.scm",(void*)f_30079},
{"f_30082ChickenBridge.scm",(void*)f_30082},
{"f_30090ChickenBridge.scm",(void*)f_30090},
{"f_30098ChickenBridge.scm",(void*)f_30098},
{"f_30118ChickenBridge.scm",(void*)f_30118},
{"f_30114ChickenBridge.scm",(void*)f_30114},
{"f_30094ChickenBridge.scm",(void*)f_30094},
{"f_30086ChickenBridge.scm",(void*)f_30086},
{"f_30075ChickenBridge.scm",(void*)f_30075},
{"f_30051ChickenBridge.scm",(void*)f_30051},
{"f_30027ChickenBridge.scm",(void*)f_30027},
{"f_35296ChickenBridge.scm",(void*)f_35296},
{"f_35299ChickenBridge.scm",(void*)f_35299},
{"f_35302ChickenBridge.scm",(void*)f_35302},
{"f_35305ChickenBridge.scm",(void*)f_35305},
{"f_35308ChickenBridge.scm",(void*)f_35308},
{"f_35311ChickenBridge.scm",(void*)f_35311},
{"f_35314ChickenBridge.scm",(void*)f_35314},
{"f_35317ChickenBridge.scm",(void*)f_35317},
{"f_35320ChickenBridge.scm",(void*)f_35320},
{"f_35323ChickenBridge.scm",(void*)f_35323},
{"f_35326ChickenBridge.scm",(void*)f_35326},
{"f_35329ChickenBridge.scm",(void*)f_35329},
{"f_35332ChickenBridge.scm",(void*)f_35332},
{"f_35335ChickenBridge.scm",(void*)f_35335},
{"f_35338ChickenBridge.scm",(void*)f_35338},
{"f_35341ChickenBridge.scm",(void*)f_35341},
{"f_35344ChickenBridge.scm",(void*)f_35344},
{"f_35347ChickenBridge.scm",(void*)f_35347},
{"f_35350ChickenBridge.scm",(void*)f_35350},
{"f_35353ChickenBridge.scm",(void*)f_35353},
{"f_36209ChickenBridge.scm",(void*)f_36209},
{"f_36212ChickenBridge.scm",(void*)f_36212},
{"f_36215ChickenBridge.scm",(void*)f_36215},
{"f_36218ChickenBridge.scm",(void*)f_36218},
{"f_36221ChickenBridge.scm",(void*)f_36221},
{"f_36224ChickenBridge.scm",(void*)f_36224},
{"f_36227ChickenBridge.scm",(void*)f_36227},
{"f_36230ChickenBridge.scm",(void*)f_36230},
{"f_37246ChickenBridge.scm",(void*)f_37246},
{"f_37274ChickenBridge.scm",(void*)f_37274},
{"f_36913ChickenBridge.scm",(void*)f_36913},
{"f_37240ChickenBridge.scm",(void*)f_37240},
{"f_36958ChickenBridge.scm",(void*)f_36958},
{"f_36964ChickenBridge.scm",(void*)f_36964},
{"f_36967ChickenBridge.scm",(void*)f_36967},
{"f_36970ChickenBridge.scm",(void*)f_36970},
{"f_36974ChickenBridge.scm",(void*)f_36974},
{"f_37184ChickenBridge.scm",(void*)f_37184},
{"f_37196ChickenBridge.scm",(void*)f_37196},
{"f_37192ChickenBridge.scm",(void*)f_37192},
{"f_36977ChickenBridge.scm",(void*)f_36977},
{"f_37141ChickenBridge.scm",(void*)f_37141},
{"f_37177ChickenBridge.scm",(void*)f_37177},
{"f_37170ChickenBridge.scm",(void*)f_37170},
{"f_36980ChickenBridge.scm",(void*)f_36980},
{"f_37079ChickenBridge.scm",(void*)f_37079},
{"f_37087ChickenBridge.scm",(void*)f_37087},
{"f_37083ChickenBridge.scm",(void*)f_37083},
{"f_37075ChickenBridge.scm",(void*)f_37075},
{"f_37071ChickenBridge.scm",(void*)f_37071},
{"f_37027ChickenBridge.scm",(void*)f_37027},
{"f_37023ChickenBridge.scm",(void*)f_37023},
{"f_36990ChickenBridge.scm",(void*)f_36990},
{"f_37001ChickenBridge.scm",(void*)f_37001},
{"f_37009ChickenBridge.scm",(void*)f_37009},
{"f_37005ChickenBridge.scm",(void*)f_37005},
{"f_37203ChickenBridge.scm",(void*)f_37203},
{"f_37211ChickenBridge.scm",(void*)f_37211},
{"f_37225ChickenBridge.scm",(void*)f_37225},
{"f_37215ChickenBridge.scm",(void*)f_37215},
{"f_37206ChickenBridge.scm",(void*)f_37206},
{"f_37209ChickenBridge.scm",(void*)f_37209},
{"f_36915ChickenBridge.scm",(void*)f_36915},
{"f_36931ChickenBridge.scm",(void*)f_36931},
{"f_36842ChickenBridge.scm",(void*)f_36842},
{"f_36853ChickenBridge.scm",(void*)f_36853},
{"f_36856ChickenBridge.scm",(void*)f_36856},
{"f_36863ChickenBridge.scm",(void*)f_36863},
{"f_36832ChickenBridge.scm",(void*)f_36832},
{"f_36511ChickenBridge.scm",(void*)f_36511},
{"f_36836ChickenBridge.scm",(void*)f_36836},
{"f_36774ChickenBridge.scm",(void*)f_36774},
{"f_36792ChickenBridge.scm",(void*)f_36792},
{"f_36802ChickenBridge.scm",(void*)f_36802},
{"f_36778ChickenBridge.scm",(void*)f_36778},
{"f_36765ChickenBridge.scm",(void*)f_36765},
{"f_36489ChickenBridge.scm",(void*)f_36489},
{"f_36769ChickenBridge.scm",(void*)f_36769},
{"f_36759ChickenBridge.scm",(void*)f_36759},
{"f_36471ChickenBridge.scm",(void*)f_36471},
{"f_36750ChickenBridge.scm",(void*)f_36750},
{"f_36480ChickenBridge.scm",(void*)f_36480},
{"f_36754ChickenBridge.scm",(void*)f_36754},
{"f_36747ChickenBridge.scm",(void*)f_36747},
{"f_36535ChickenBridge.scm",(void*)f_36535},
{"f_36699ChickenBridge.scm",(void*)f_36699},
{"f_36694ChickenBridge.scm",(void*)f_36694},
{"f_36537ChickenBridge.scm",(void*)f_36537},
{"f_36686ChickenBridge.scm",(void*)f_36686},
{"f_36690ChickenBridge.scm",(void*)f_36690},
{"f_36682ChickenBridge.scm",(void*)f_36682},
{"f_36642ChickenBridge.scm",(void*)f_36642},
{"f_36652ChickenBridge.scm",(void*)f_36652},
{"f_36606ChickenBridge.scm",(void*)f_36606},
{"f_36611ChickenBridge.scm",(void*)f_36611},
{"f_36636ChickenBridge.scm",(void*)f_36636},
{"f_36640ChickenBridge.scm",(void*)f_36640},
{"f_36621ChickenBridge.scm",(void*)f_36621},
{"f_36597ChickenBridge.scm",(void*)f_36597},
{"f_36567ChickenBridge.scm",(void*)f_36567},
{"f_36539ChickenBridge.scm",(void*)f_36539},
{"f_36516ChickenBridge.scm",(void*)f_36516},
{"f_36521ChickenBridge.scm",(void*)f_36521},
{"f_36526ChickenBridge.scm",(void*)f_36526},
{"f_36494ChickenBridge.scm",(void*)f_36494},
{"f_36498ChickenBridge.scm",(void*)f_36498},
{"f_36450ChickenBridge.scm",(void*)f_36450},
{"f_36454ChickenBridge.scm",(void*)f_36454},
{"f_36436ChickenBridge.scm",(void*)f_36436},
{"f_36441ChickenBridge.scm",(void*)f_36441},
{"f_36422ChickenBridge.scm",(void*)f_36422},
{"f_36427ChickenBridge.scm",(void*)f_36427},
{"f_36232ChickenBridge.scm",(void*)f_36232},
{"f_36293ChickenBridge.scm",(void*)f_36293},
{"f_36295ChickenBridge.scm",(void*)f_36295},
{"f_36305ChickenBridge.scm",(void*)f_36305},
{"f_36324ChickenBridge.scm",(void*)f_36324},
{"f_36364ChickenBridge.scm",(void*)f_36364},
{"f_36406ChickenBridge.scm",(void*)f_36406},
{"f_36376ChickenBridge.scm",(void*)f_36376},
{"f_36361ChickenBridge.scm",(void*)f_36361},
{"f_36279ChickenBridge.scm",(void*)f_36279},
{"f_36244ChickenBridge.scm",(void*)f_36244},
{"f_36271ChickenBridge.scm",(void*)f_36271},
{"f_36252ChickenBridge.scm",(void*)f_36252},
{"f_36259ChickenBridge.scm",(void*)f_36259},
{"f_36263ChickenBridge.scm",(void*)f_36263},
{"f_36267ChickenBridge.scm",(void*)f_36267},
{"f_36344ChickenBridge.scm",(void*)f_36344},
{"f_36322ChickenBridge.scm",(void*)f_36322},
{"f_36308ChickenBridge.scm",(void*)f_36308},
{"f_36311ChickenBridge.scm",(void*)f_36311},
{"f_36286ChickenBridge.scm",(void*)f_36286},
{"f_35758ChickenBridge.scm",(void*)f_35758},
{"f_36185ChickenBridge.scm",(void*)f_36185},
{"f_36200ChickenBridge.scm",(void*)f_36200},
{"f_36192ChickenBridge.scm",(void*)f_36192},
{"f_36156ChickenBridge.scm",(void*)f_36156},
{"f_36160ChickenBridge.scm",(void*)f_36160},
{"f_36121ChickenBridge.scm",(void*)f_36121},
{"f_36125ChickenBridge.scm",(void*)f_36125},
{"f_36086ChickenBridge.scm",(void*)f_36086},
{"f_36090ChickenBridge.scm",(void*)f_36090},
{"f_35762ChickenBridge.scm",(void*)f_35762},
{"f_36050ChickenBridge.scm",(void*)f_36050},
{"f_36065ChickenBridge.scm",(void*)f_36065},
{"f_36057ChickenBridge.scm",(void*)f_36057},
{"f_36021ChickenBridge.scm",(void*)f_36021},
{"f_36025ChickenBridge.scm",(void*)f_36025},
{"f_35986ChickenBridge.scm",(void*)f_35986},
{"f_35990ChickenBridge.scm",(void*)f_35990},
{"f_35951ChickenBridge.scm",(void*)f_35951},
{"f_35955ChickenBridge.scm",(void*)f_35955},
{"f_35765ChickenBridge.scm",(void*)f_35765},
{"f_35915ChickenBridge.scm",(void*)f_35915},
{"f_35930ChickenBridge.scm",(void*)f_35930},
{"f_35922ChickenBridge.scm",(void*)f_35922},
{"f_35886ChickenBridge.scm",(void*)f_35886},
{"f_35890ChickenBridge.scm",(void*)f_35890},
{"f_35851ChickenBridge.scm",(void*)f_35851},
{"f_35855ChickenBridge.scm",(void*)f_35855},
{"f_35816ChickenBridge.scm",(void*)f_35816},
{"f_35820ChickenBridge.scm",(void*)f_35820},
{"f_35768ChickenBridge.scm",(void*)f_35768},
{"f_35771ChickenBridge.scm",(void*)f_35771},
{"f_35774ChickenBridge.scm",(void*)f_35774},
{"f_35778ChickenBridge.scm",(void*)f_35778},
{"f_35520ChickenBridge.scm",(void*)f_35520},
{"f_35735ChickenBridge.scm",(void*)f_35735},
{"f_35750ChickenBridge.scm",(void*)f_35750},
{"f_35742ChickenBridge.scm",(void*)f_35742},
{"f_35706ChickenBridge.scm",(void*)f_35706},
{"f_35710ChickenBridge.scm",(void*)f_35710},
{"f_35671ChickenBridge.scm",(void*)f_35671},
{"f_35675ChickenBridge.scm",(void*)f_35675},
{"f_35524ChickenBridge.scm",(void*)f_35524},
{"f_35635ChickenBridge.scm",(void*)f_35635},
{"f_35650ChickenBridge.scm",(void*)f_35650},
{"f_35642ChickenBridge.scm",(void*)f_35642},
{"f_35606ChickenBridge.scm",(void*)f_35606},
{"f_35610ChickenBridge.scm",(void*)f_35610},
{"f_35571ChickenBridge.scm",(void*)f_35571},
{"f_35575ChickenBridge.scm",(void*)f_35575},
{"f_35527ChickenBridge.scm",(void*)f_35527},
{"f_35530ChickenBridge.scm",(void*)f_35530},
{"f_35533ChickenBridge.scm",(void*)f_35533},
{"f_35537ChickenBridge.scm",(void*)f_35537},
{"f_35463ChickenBridge.scm",(void*)f_35463},
{"f_35496ChickenBridge.scm",(void*)f_35496},
{"f_35476ChickenBridge.scm",(void*)f_35476},
{"f_35484ChickenBridge.scm",(void*)f_35484},
{"f_35467ChickenBridge.scm",(void*)f_35467},
{"f_35406ChickenBridge.scm",(void*)f_35406},
{"f_35439ChickenBridge.scm",(void*)f_35439},
{"f_35419ChickenBridge.scm",(void*)f_35419},
{"f_35427ChickenBridge.scm",(void*)f_35427},
{"f_35410ChickenBridge.scm",(void*)f_35410},
{"f_35398ChickenBridge.scm",(void*)f_35398},
{"f_35403ChickenBridge.scm",(void*)f_35403},
{"f_35355ChickenBridge.scm",(void*)f_35355},
{"f_35382ChickenBridge.scm",(void*)f_35382},
{"f_35376ChickenBridge.scm",(void*)f_35376},
{"f_35380ChickenBridge.scm",(void*)f_35380},
{"f_35366ChickenBridge.scm",(void*)f_35366},
{"f_35275ChickenBridge.scm",(void*)f_35275},
{"f_35286ChickenBridge.scm",(void*)f_35286},
{"f_35282ChickenBridge.scm",(void*)f_35282},
{"f_35264ChickenBridge.scm",(void*)f_35264},
{"f_35272ChickenBridge.scm",(void*)f_35272},
{"f_35268ChickenBridge.scm",(void*)f_35268},
{"f_35253ChickenBridge.scm",(void*)f_35253},
{"f_35261ChickenBridge.scm",(void*)f_35261},
{"f_35257ChickenBridge.scm",(void*)f_35257},
{"f_35242ChickenBridge.scm",(void*)f_35242},
{"f_35250ChickenBridge.scm",(void*)f_35250},
{"f_35246ChickenBridge.scm",(void*)f_35246},
{"f_35231ChickenBridge.scm",(void*)f_35231},
{"f_35239ChickenBridge.scm",(void*)f_35239},
{"f_35235ChickenBridge.scm",(void*)f_35235},
{"f_35220ChickenBridge.scm",(void*)f_35220},
{"f_35228ChickenBridge.scm",(void*)f_35228},
{"f_35224ChickenBridge.scm",(void*)f_35224},
{"f_35181ChickenBridge.scm",(void*)f_35181},
{"f_35194ChickenBridge.scm",(void*)f_35194},
{"f_35198ChickenBridge.scm",(void*)f_35198},
{"f_35188ChickenBridge.scm",(void*)f_35188},
{"f_35066ChickenBridge.scm",(void*)f_35066},
{"f_35091ChickenBridge.scm",(void*)f_35091},
{"f_35098ChickenBridge.scm",(void*)f_35098},
{"f_35104ChickenBridge.scm",(void*)f_35104},
{"f_35124ChickenBridge.scm",(void*)f_35124},
{"f_35114ChickenBridge.scm",(void*)f_35114},
{"f_35070ChickenBridge.scm",(void*)f_35070},
{"f_35074ChickenBridge.scm",(void*)f_35074},
{"f_34955ChickenBridge.scm",(void*)f_34955},
{"f_34980ChickenBridge.scm",(void*)f_34980},
{"f_34987ChickenBridge.scm",(void*)f_34987},
{"f_34993ChickenBridge.scm",(void*)f_34993},
{"f_35013ChickenBridge.scm",(void*)f_35013},
{"f_35003ChickenBridge.scm",(void*)f_35003},
{"f_34959ChickenBridge.scm",(void*)f_34959},
{"f_34963ChickenBridge.scm",(void*)f_34963},
{"f_34898ChickenBridge.scm",(void*)f_34898},
{"f_34952ChickenBridge.scm",(void*)f_34952},
{"f_34947ChickenBridge.scm",(void*)f_34947},
{"f_34910ChickenBridge.scm",(void*)f_34910},
{"f_34916ChickenBridge.scm",(void*)f_34916},
{"f_34942ChickenBridge.scm",(void*)f_34942},
{"f_34946ChickenBridge.scm",(void*)f_34946},
{"f_34922ChickenBridge.scm",(void*)f_34922},
{"f_34940ChickenBridge.scm",(void*)f_34940},
{"f_34937ChickenBridge.scm",(void*)f_34937},
{"f_34933ChickenBridge.scm",(void*)f_34933},
{"f_34926ChickenBridge.scm",(void*)f_34926},
{"f_34883ChickenBridge.scm",(void*)f_34883},
{"f_34888ChickenBridge.scm",(void*)f_34888},
{"f_34855ChickenBridge.scm",(void*)f_34855},
{"f_34860ChickenBridge.scm",(void*)f_34860},
{"f_34827ChickenBridge.scm",(void*)f_34827},
{"f_34832ChickenBridge.scm",(void*)f_34832},
{"f_34799ChickenBridge.scm",(void*)f_34799},
{"f_34804ChickenBridge.scm",(void*)f_34804},
{"f_34771ChickenBridge.scm",(void*)f_34771},
{"f_34776ChickenBridge.scm",(void*)f_34776},
{"f_34743ChickenBridge.scm",(void*)f_34743},
{"f_34748ChickenBridge.scm",(void*)f_34748},
{"f_34715ChickenBridge.scm",(void*)f_34715},
{"f_34720ChickenBridge.scm",(void*)f_34720},
{"f_34687ChickenBridge.scm",(void*)f_34687},
{"f_34692ChickenBridge.scm",(void*)f_34692},
{"f_34659ChickenBridge.scm",(void*)f_34659},
{"f_34664ChickenBridge.scm",(void*)f_34664},
{"f_34631ChickenBridge.scm",(void*)f_34631},
{"f_34636ChickenBridge.scm",(void*)f_34636},
{"f_34608ChickenBridge.scm",(void*)f_34608},
{"f_34613ChickenBridge.scm",(void*)f_34613},
{"f_34612ChickenBridge.scm",(void*)f_34612},
{"f_34589ChickenBridge.scm",(void*)f_34589},
{"f_34594ChickenBridge.scm",(void*)f_34594},
{"f_34534ChickenBridge.scm",(void*)f_34534},
{"f_34541ChickenBridge.scm",(void*)f_34541},
{"f_34544ChickenBridge.scm",(void*)f_34544},
{"f_34568ChickenBridge.scm",(void*)f_34568},
{"f_34548ChickenBridge.scm",(void*)f_34548},
{"f_34538ChickenBridge.scm",(void*)f_34538},
{"f_34487ChickenBridge.scm",(void*)f_34487},
{"f_34494ChickenBridge.scm",(void*)f_34494},
{"f_34497ChickenBridge.scm",(void*)f_34497},
{"f_34517ChickenBridge.scm",(void*)f_34517},
{"f_34501ChickenBridge.scm",(void*)f_34501},
{"f_34464ChickenBridge.scm",(void*)f_34464},
{"f_34469ChickenBridge.scm",(void*)f_34469},
{"f_34468ChickenBridge.scm",(void*)f_34468},
{"f_34445ChickenBridge.scm",(void*)f_34445},
{"f_34450ChickenBridge.scm",(void*)f_34450},
{"f_34422ChickenBridge.scm",(void*)f_34422},
{"f_34427ChickenBridge.scm",(void*)f_34427},
{"f_34426ChickenBridge.scm",(void*)f_34426},
{"f_34403ChickenBridge.scm",(void*)f_34403},
{"f_34408ChickenBridge.scm",(void*)f_34408},
{"f_34384ChickenBridge.scm",(void*)f_34384},
{"f_34389ChickenBridge.scm",(void*)f_34389},
{"f_34388ChickenBridge.scm",(void*)f_34388},
{"f_34369ChickenBridge.scm",(void*)f_34369},
{"f_34374ChickenBridge.scm",(void*)f_34374},
{"f_34350ChickenBridge.scm",(void*)f_34350},
{"f_34355ChickenBridge.scm",(void*)f_34355},
{"f_34354ChickenBridge.scm",(void*)f_34354},
{"f_34335ChickenBridge.scm",(void*)f_34335},
{"f_34340ChickenBridge.scm",(void*)f_34340},
{"f_34320ChickenBridge.scm",(void*)f_34320},
{"f_34325ChickenBridge.scm",(void*)f_34325},
{"f_34302ChickenBridge.scm",(void*)f_34302},
{"f_34310ChickenBridge.scm",(void*)f_34310},
{"f_34306ChickenBridge.scm",(void*)f_34306},
{"f_33832ChickenBridge.scm",(void*)f_33832},
{"f_34260ChickenBridge.scm",(void*)f_34260},
{"f_34275ChickenBridge.scm",(void*)f_34275},
{"f_34267ChickenBridge.scm",(void*)f_34267},
{"f_34231ChickenBridge.scm",(void*)f_34231},
{"f_34235ChickenBridge.scm",(void*)f_34235},
{"f_34196ChickenBridge.scm",(void*)f_34196},
{"f_34200ChickenBridge.scm",(void*)f_34200},
{"f_34161ChickenBridge.scm",(void*)f_34161},
{"f_34165ChickenBridge.scm",(void*)f_34165},
{"f_33836ChickenBridge.scm",(void*)f_33836},
{"f_34125ChickenBridge.scm",(void*)f_34125},
{"f_34140ChickenBridge.scm",(void*)f_34140},
{"f_34132ChickenBridge.scm",(void*)f_34132},
{"f_34096ChickenBridge.scm",(void*)f_34096},
{"f_34100ChickenBridge.scm",(void*)f_34100},
{"f_34061ChickenBridge.scm",(void*)f_34061},
{"f_34065ChickenBridge.scm",(void*)f_34065},
{"f_34026ChickenBridge.scm",(void*)f_34026},
{"f_34030ChickenBridge.scm",(void*)f_34030},
{"f_33839ChickenBridge.scm",(void*)f_33839},
{"f_33990ChickenBridge.scm",(void*)f_33990},
{"f_34005ChickenBridge.scm",(void*)f_34005},
{"f_33997ChickenBridge.scm",(void*)f_33997},
{"f_33961ChickenBridge.scm",(void*)f_33961},
{"f_33965ChickenBridge.scm",(void*)f_33965},
{"f_33926ChickenBridge.scm",(void*)f_33926},
{"f_33930ChickenBridge.scm",(void*)f_33930},
{"f_33891ChickenBridge.scm",(void*)f_33891},
{"f_33895ChickenBridge.scm",(void*)f_33895},
{"f_33842ChickenBridge.scm",(void*)f_33842},
{"f_33845ChickenBridge.scm",(void*)f_33845},
{"f_33849ChickenBridge.scm",(void*)f_33849},
{"f_33813ChickenBridge.scm",(void*)f_33813},
{"f_33818ChickenBridge.scm",(void*)f_33818},
{"f_33362ChickenBridge.scm",(void*)f_33362},
{"f_33790ChickenBridge.scm",(void*)f_33790},
{"f_33805ChickenBridge.scm",(void*)f_33805},
{"f_33797ChickenBridge.scm",(void*)f_33797},
{"f_33761ChickenBridge.scm",(void*)f_33761},
{"f_33765ChickenBridge.scm",(void*)f_33765},
{"f_33726ChickenBridge.scm",(void*)f_33726},
{"f_33730ChickenBridge.scm",(void*)f_33730},
{"f_33691ChickenBridge.scm",(void*)f_33691},
{"f_33695ChickenBridge.scm",(void*)f_33695},
{"f_33366ChickenBridge.scm",(void*)f_33366},
{"f_33655ChickenBridge.scm",(void*)f_33655},
{"f_33670ChickenBridge.scm",(void*)f_33670},
{"f_33662ChickenBridge.scm",(void*)f_33662},
{"f_33626ChickenBridge.scm",(void*)f_33626},
{"f_33630ChickenBridge.scm",(void*)f_33630},
{"f_33591ChickenBridge.scm",(void*)f_33591},
{"f_33595ChickenBridge.scm",(void*)f_33595},
{"f_33556ChickenBridge.scm",(void*)f_33556},
{"f_33560ChickenBridge.scm",(void*)f_33560},
{"f_33369ChickenBridge.scm",(void*)f_33369},
{"f_33520ChickenBridge.scm",(void*)f_33520},
{"f_33535ChickenBridge.scm",(void*)f_33535},
{"f_33527ChickenBridge.scm",(void*)f_33527},
{"f_33491ChickenBridge.scm",(void*)f_33491},
{"f_33495ChickenBridge.scm",(void*)f_33495},
{"f_33456ChickenBridge.scm",(void*)f_33456},
{"f_33460ChickenBridge.scm",(void*)f_33460},
{"f_33421ChickenBridge.scm",(void*)f_33421},
{"f_33425ChickenBridge.scm",(void*)f_33425},
{"f_33372ChickenBridge.scm",(void*)f_33372},
{"f_33375ChickenBridge.scm",(void*)f_33375},
{"f_33379ChickenBridge.scm",(void*)f_33379},
{"f_33343ChickenBridge.scm",(void*)f_33343},
{"f_33348ChickenBridge.scm",(void*)f_33348},
{"f_32892ChickenBridge.scm",(void*)f_32892},
{"f_33320ChickenBridge.scm",(void*)f_33320},
{"f_33335ChickenBridge.scm",(void*)f_33335},
{"f_33327ChickenBridge.scm",(void*)f_33327},
{"f_33291ChickenBridge.scm",(void*)f_33291},
{"f_33295ChickenBridge.scm",(void*)f_33295},
{"f_33256ChickenBridge.scm",(void*)f_33256},
{"f_33260ChickenBridge.scm",(void*)f_33260},
{"f_33221ChickenBridge.scm",(void*)f_33221},
{"f_33225ChickenBridge.scm",(void*)f_33225},
{"f_32896ChickenBridge.scm",(void*)f_32896},
{"f_33185ChickenBridge.scm",(void*)f_33185},
{"f_33200ChickenBridge.scm",(void*)f_33200},
{"f_33192ChickenBridge.scm",(void*)f_33192},
{"f_33156ChickenBridge.scm",(void*)f_33156},
{"f_33160ChickenBridge.scm",(void*)f_33160},
{"f_33121ChickenBridge.scm",(void*)f_33121},
{"f_33125ChickenBridge.scm",(void*)f_33125},
{"f_33086ChickenBridge.scm",(void*)f_33086},
{"f_33090ChickenBridge.scm",(void*)f_33090},
{"f_32899ChickenBridge.scm",(void*)f_32899},
{"f_33050ChickenBridge.scm",(void*)f_33050},
{"f_33065ChickenBridge.scm",(void*)f_33065},
{"f_33057ChickenBridge.scm",(void*)f_33057},
{"f_33021ChickenBridge.scm",(void*)f_33021},
{"f_33025ChickenBridge.scm",(void*)f_33025},
{"f_32986ChickenBridge.scm",(void*)f_32986},
{"f_32990ChickenBridge.scm",(void*)f_32990},
{"f_32951ChickenBridge.scm",(void*)f_32951},
{"f_32955ChickenBridge.scm",(void*)f_32955},
{"f_32902ChickenBridge.scm",(void*)f_32902},
{"f_32905ChickenBridge.scm",(void*)f_32905},
{"f_32909ChickenBridge.scm",(void*)f_32909},
{"f_32873ChickenBridge.scm",(void*)f_32873},
{"f_32878ChickenBridge.scm",(void*)f_32878},
{"f_32144ChickenBridge.scm",(void*)f_32144},
{"f_32850ChickenBridge.scm",(void*)f_32850},
{"f_32865ChickenBridge.scm",(void*)f_32865},
{"f_32857ChickenBridge.scm",(void*)f_32857},
{"f_32821ChickenBridge.scm",(void*)f_32821},
{"f_32825ChickenBridge.scm",(void*)f_32825},
{"f_32786ChickenBridge.scm",(void*)f_32786},
{"f_32790ChickenBridge.scm",(void*)f_32790},
{"f_32751ChickenBridge.scm",(void*)f_32751},
{"f_32755ChickenBridge.scm",(void*)f_32755},
{"f_32716ChickenBridge.scm",(void*)f_32716},
{"f_32720ChickenBridge.scm",(void*)f_32720},
{"f_32148ChickenBridge.scm",(void*)f_32148},
{"f_32680ChickenBridge.scm",(void*)f_32680},
{"f_32695ChickenBridge.scm",(void*)f_32695},
{"f_32687ChickenBridge.scm",(void*)f_32687},
{"f_32651ChickenBridge.scm",(void*)f_32651},
{"f_32655ChickenBridge.scm",(void*)f_32655},
{"f_32616ChickenBridge.scm",(void*)f_32616},
{"f_32620ChickenBridge.scm",(void*)f_32620},
{"f_32581ChickenBridge.scm",(void*)f_32581},
{"f_32585ChickenBridge.scm",(void*)f_32585},
{"f_32546ChickenBridge.scm",(void*)f_32546},
{"f_32550ChickenBridge.scm",(void*)f_32550},
{"f_32151ChickenBridge.scm",(void*)f_32151},
{"f_32510ChickenBridge.scm",(void*)f_32510},
{"f_32525ChickenBridge.scm",(void*)f_32525},
{"f_32517ChickenBridge.scm",(void*)f_32517},
{"f_32481ChickenBridge.scm",(void*)f_32481},
{"f_32485ChickenBridge.scm",(void*)f_32485},
{"f_32446ChickenBridge.scm",(void*)f_32446},
{"f_32450ChickenBridge.scm",(void*)f_32450},
{"f_32411ChickenBridge.scm",(void*)f_32411},
{"f_32415ChickenBridge.scm",(void*)f_32415},
{"f_32376ChickenBridge.scm",(void*)f_32376},
{"f_32380ChickenBridge.scm",(void*)f_32380},
{"f_32154ChickenBridge.scm",(void*)f_32154},
{"f_32340ChickenBridge.scm",(void*)f_32340},
{"f_32355ChickenBridge.scm",(void*)f_32355},
{"f_32347ChickenBridge.scm",(void*)f_32347},
{"f_32311ChickenBridge.scm",(void*)f_32311},
{"f_32315ChickenBridge.scm",(void*)f_32315},
{"f_32276ChickenBridge.scm",(void*)f_32276},
{"f_32280ChickenBridge.scm",(void*)f_32280},
{"f_32241ChickenBridge.scm",(void*)f_32241},
{"f_32245ChickenBridge.scm",(void*)f_32245},
{"f_32206ChickenBridge.scm",(void*)f_32206},
{"f_32210ChickenBridge.scm",(void*)f_32210},
{"f_32157ChickenBridge.scm",(void*)f_32157},
{"f_32160ChickenBridge.scm",(void*)f_32160},
{"f_32164ChickenBridge.scm",(void*)f_32164},
{"f_32125ChickenBridge.scm",(void*)f_32125},
{"f_32130ChickenBridge.scm",(void*)f_32130},
{"f_31396ChickenBridge.scm",(void*)f_31396},
{"f_32102ChickenBridge.scm",(void*)f_32102},
{"f_32117ChickenBridge.scm",(void*)f_32117},
{"f_32109ChickenBridge.scm",(void*)f_32109},
{"f_32073ChickenBridge.scm",(void*)f_32073},
{"f_32077ChickenBridge.scm",(void*)f_32077},
{"f_32038ChickenBridge.scm",(void*)f_32038},
{"f_32042ChickenBridge.scm",(void*)f_32042},
{"f_32003ChickenBridge.scm",(void*)f_32003},
{"f_32007ChickenBridge.scm",(void*)f_32007},
{"f_31968ChickenBridge.scm",(void*)f_31968},
{"f_31972ChickenBridge.scm",(void*)f_31972},
{"f_31400ChickenBridge.scm",(void*)f_31400},
{"f_31932ChickenBridge.scm",(void*)f_31932},
{"f_31947ChickenBridge.scm",(void*)f_31947},
{"f_31939ChickenBridge.scm",(void*)f_31939},
{"f_31903ChickenBridge.scm",(void*)f_31903},
{"f_31907ChickenBridge.scm",(void*)f_31907},
{"f_31868ChickenBridge.scm",(void*)f_31868},
{"f_31872ChickenBridge.scm",(void*)f_31872},
{"f_31833ChickenBridge.scm",(void*)f_31833},
{"f_31837ChickenBridge.scm",(void*)f_31837},
{"f_31798ChickenBridge.scm",(void*)f_31798},
{"f_31802ChickenBridge.scm",(void*)f_31802},
{"f_31403ChickenBridge.scm",(void*)f_31403},
{"f_31762ChickenBridge.scm",(void*)f_31762},
{"f_31777ChickenBridge.scm",(void*)f_31777},
{"f_31769ChickenBridge.scm",(void*)f_31769},
{"f_31733ChickenBridge.scm",(void*)f_31733},
{"f_31737ChickenBridge.scm",(void*)f_31737},
{"f_31698ChickenBridge.scm",(void*)f_31698},
{"f_31702ChickenBridge.scm",(void*)f_31702},
{"f_31663ChickenBridge.scm",(void*)f_31663},
{"f_31667ChickenBridge.scm",(void*)f_31667},
{"f_31628ChickenBridge.scm",(void*)f_31628},
{"f_31632ChickenBridge.scm",(void*)f_31632},
{"f_31406ChickenBridge.scm",(void*)f_31406},
{"f_31592ChickenBridge.scm",(void*)f_31592},
{"f_31607ChickenBridge.scm",(void*)f_31607},
{"f_31599ChickenBridge.scm",(void*)f_31599},
{"f_31563ChickenBridge.scm",(void*)f_31563},
{"f_31567ChickenBridge.scm",(void*)f_31567},
{"f_31528ChickenBridge.scm",(void*)f_31528},
{"f_31532ChickenBridge.scm",(void*)f_31532},
{"f_31493ChickenBridge.scm",(void*)f_31493},
{"f_31497ChickenBridge.scm",(void*)f_31497},
{"f_31458ChickenBridge.scm",(void*)f_31458},
{"f_31462ChickenBridge.scm",(void*)f_31462},
{"f_31409ChickenBridge.scm",(void*)f_31409},
{"f_31412ChickenBridge.scm",(void*)f_31412},
{"f_31416ChickenBridge.scm",(void*)f_31416},
{"f_31377ChickenBridge.scm",(void*)f_31377},
{"f_31382ChickenBridge.scm",(void*)f_31382},
{"f_30926ChickenBridge.scm",(void*)f_30926},
{"f_31354ChickenBridge.scm",(void*)f_31354},
{"f_31369ChickenBridge.scm",(void*)f_31369},
{"f_31361ChickenBridge.scm",(void*)f_31361},
{"f_31325ChickenBridge.scm",(void*)f_31325},
{"f_31329ChickenBridge.scm",(void*)f_31329},
{"f_31290ChickenBridge.scm",(void*)f_31290},
{"f_31294ChickenBridge.scm",(void*)f_31294},
{"f_31255ChickenBridge.scm",(void*)f_31255},
{"f_31259ChickenBridge.scm",(void*)f_31259},
{"f_30930ChickenBridge.scm",(void*)f_30930},
{"f_31219ChickenBridge.scm",(void*)f_31219},
{"f_31234ChickenBridge.scm",(void*)f_31234},
{"f_31226ChickenBridge.scm",(void*)f_31226},
{"f_31190ChickenBridge.scm",(void*)f_31190},
{"f_31194ChickenBridge.scm",(void*)f_31194},
{"f_31155ChickenBridge.scm",(void*)f_31155},
{"f_31159ChickenBridge.scm",(void*)f_31159},
{"f_31120ChickenBridge.scm",(void*)f_31120},
{"f_31124ChickenBridge.scm",(void*)f_31124},
{"f_30933ChickenBridge.scm",(void*)f_30933},
{"f_31084ChickenBridge.scm",(void*)f_31084},
{"f_31099ChickenBridge.scm",(void*)f_31099},
{"f_31091ChickenBridge.scm",(void*)f_31091},
{"f_31055ChickenBridge.scm",(void*)f_31055},
{"f_31059ChickenBridge.scm",(void*)f_31059},
{"f_31020ChickenBridge.scm",(void*)f_31020},
{"f_31024ChickenBridge.scm",(void*)f_31024},
{"f_30985ChickenBridge.scm",(void*)f_30985},
{"f_30989ChickenBridge.scm",(void*)f_30989},
{"f_30936ChickenBridge.scm",(void*)f_30936},
{"f_30939ChickenBridge.scm",(void*)f_30939},
{"f_30943ChickenBridge.scm",(void*)f_30943},
{"f_30907ChickenBridge.scm",(void*)f_30907},
{"f_30912ChickenBridge.scm",(void*)f_30912},
{"f_30178ChickenBridge.scm",(void*)f_30178},
{"f_30884ChickenBridge.scm",(void*)f_30884},
{"f_30899ChickenBridge.scm",(void*)f_30899},
{"f_30891ChickenBridge.scm",(void*)f_30891},
{"f_30855ChickenBridge.scm",(void*)f_30855},
{"f_30859ChickenBridge.scm",(void*)f_30859},
{"f_30820ChickenBridge.scm",(void*)f_30820},
{"f_30824ChickenBridge.scm",(void*)f_30824},
{"f_30785ChickenBridge.scm",(void*)f_30785},
{"f_30789ChickenBridge.scm",(void*)f_30789},
{"f_30750ChickenBridge.scm",(void*)f_30750},
{"f_30754ChickenBridge.scm",(void*)f_30754},
{"f_30182ChickenBridge.scm",(void*)f_30182},
{"f_30714ChickenBridge.scm",(void*)f_30714},
{"f_30729ChickenBridge.scm",(void*)f_30729},
{"f_30721ChickenBridge.scm",(void*)f_30721},
{"f_30685ChickenBridge.scm",(void*)f_30685},
{"f_30689ChickenBridge.scm",(void*)f_30689},
{"f_30650ChickenBridge.scm",(void*)f_30650},
{"f_30654ChickenBridge.scm",(void*)f_30654},
{"f_30615ChickenBridge.scm",(void*)f_30615},
{"f_30619ChickenBridge.scm",(void*)f_30619},
{"f_30580ChickenBridge.scm",(void*)f_30580},
{"f_30584ChickenBridge.scm",(void*)f_30584},
{"f_30185ChickenBridge.scm",(void*)f_30185},
{"f_30544ChickenBridge.scm",(void*)f_30544},
{"f_30559ChickenBridge.scm",(void*)f_30559},
{"f_30551ChickenBridge.scm",(void*)f_30551},
{"f_30515ChickenBridge.scm",(void*)f_30515},
{"f_30519ChickenBridge.scm",(void*)f_30519},
{"f_30480ChickenBridge.scm",(void*)f_30480},
{"f_30484ChickenBridge.scm",(void*)f_30484},
{"f_30445ChickenBridge.scm",(void*)f_30445},
{"f_30449ChickenBridge.scm",(void*)f_30449},
{"f_30410ChickenBridge.scm",(void*)f_30410},
{"f_30414ChickenBridge.scm",(void*)f_30414},
{"f_30188ChickenBridge.scm",(void*)f_30188},
{"f_30374ChickenBridge.scm",(void*)f_30374},
{"f_30389ChickenBridge.scm",(void*)f_30389},
{"f_30381ChickenBridge.scm",(void*)f_30381},
{"f_30345ChickenBridge.scm",(void*)f_30345},
{"f_30349ChickenBridge.scm",(void*)f_30349},
{"f_30310ChickenBridge.scm",(void*)f_30310},
{"f_30314ChickenBridge.scm",(void*)f_30314},
{"f_30275ChickenBridge.scm",(void*)f_30275},
{"f_30279ChickenBridge.scm",(void*)f_30279},
{"f_30240ChickenBridge.scm",(void*)f_30240},
{"f_30244ChickenBridge.scm",(void*)f_30244},
{"f_30191ChickenBridge.scm",(void*)f_30191},
{"f_30194ChickenBridge.scm",(void*)f_30194},
{"f_30198ChickenBridge.scm",(void*)f_30198},
{"f_29833ChickenBridge.scm",(void*)f_29833},
{"f_29673ChickenBridge.scm",(void*)f_29673},
{"f_29708ChickenBridge.scm",(void*)f_29708},
{"f_29718ChickenBridge.scm",(void*)f_29718},
{"f_29722ChickenBridge.scm",(void*)f_29722},
{"f_29725ChickenBridge.scm",(void*)f_29725},
{"f_29786ChickenBridge.scm",(void*)f_29786},
{"f_29777ChickenBridge.scm",(void*)f_29777},
{"f_29728ChickenBridge.scm",(void*)f_29728},
{"f_29747ChickenBridge.scm",(void*)f_29747},
{"f_29754ChickenBridge.scm",(void*)f_29754},
{"f_29731ChickenBridge.scm",(void*)f_29731},
{"f_29737ChickenBridge.scm",(void*)f_29737},
{"f_29706ChickenBridge.scm",(void*)f_29706},
{"f_29681ChickenBridge.scm",(void*)f_29681},
{"f_29680ChickenBridge.scm",(void*)f_29680},
{"f_29841ChickenBridge.scm",(void*)f_29841},
{"f_29419ChickenBridge.scm",(void*)f_29419},
{"f_29441ChickenBridge.scm",(void*)f_29441},
{"f_29456ChickenBridge.scm",(void*)f_29456},
{"f_29459ChickenBridge.scm",(void*)f_29459},
{"f_29635ChickenBridge.scm",(void*)f_29635},
{"f_29629ChickenBridge.scm",(void*)f_29629},
{"f_29462ChickenBridge.scm",(void*)f_29462},
{"f_29611ChickenBridge.scm",(void*)f_29611},
{"f_29465ChickenBridge.scm",(void*)f_29465},
{"f_29468ChickenBridge.scm",(void*)f_29468},
{"f_29604ChickenBridge.scm",(void*)f_29604},
{"f_29592ChickenBridge.scm",(void*)f_29592},
{"f_29488ChickenBridge.scm",(void*)f_29488},
{"f_29495ChickenBridge.scm",(void*)f_29495},
{"f_29565ChickenBridge.scm",(void*)f_29565},
{"f_29551ChickenBridge.scm",(void*)f_29551},
{"f_29559ChickenBridge.scm",(void*)f_29559},
{"f_29498ChickenBridge.scm",(void*)f_29498},
{"f_29537ChickenBridge.scm",(void*)f_29537},
{"f_29501ChickenBridge.scm",(void*)f_29501},
{"f_29530ChickenBridge.scm",(void*)f_29530},
{"f_29507ChickenBridge.scm",(void*)f_29507},
{"f_29510ChickenBridge.scm",(void*)f_29510},
{"f_29514ChickenBridge.scm",(void*)f_29514},
{"f_29475ChickenBridge.scm",(void*)f_29475},
{"f_29478ChickenBridge.scm",(void*)f_29478},
{"f_29288ChickenBridge.scm",(void*)f_29288},
{"f_29297ChickenBridge.scm",(void*)f_29297},
{"f_29245ChickenBridge.scm",(void*)f_29245},
{"f_29251ChickenBridge.scm",(void*)f_29251},
{"f_29314ChickenBridge.scm",(void*)f_29314},
{"f_29400ChickenBridge.scm",(void*)f_29400},
{"f_29387ChickenBridge.scm",(void*)f_29387},
{"f_29395ChickenBridge.scm",(void*)f_29395},
{"f_29317ChickenBridge.scm",(void*)f_29317},
{"f_29321ChickenBridge.scm",(void*)f_29321},
{"f_29364ChickenBridge.scm",(void*)f_29364},
{"f_29326ChickenBridge.scm",(void*)f_29326},
{"f_29292ChickenBridge.scm",(void*)f_29292},
{"f_29187ChickenBridge.scm",(void*)f_29187},
{"f_29194ChickenBridge.scm",(void*)f_29194},
{"f_29225ChickenBridge.scm",(void*)f_29225},
{"f_29221ChickenBridge.scm",(void*)f_29221},
{"f_29213ChickenBridge.scm",(void*)f_29213},
{"f_29096ChickenBridge.scm",(void*)f_29096},
{"f_29103ChickenBridge.scm",(void*)f_29103},
{"f_29171ChickenBridge.scm",(void*)f_29171},
{"f_29114ChickenBridge.scm",(void*)f_29114},
{"f_29141ChickenBridge.scm",(void*)f_29141},
{"f_29125ChickenBridge.scm",(void*)f_29125},
{"f_29030ChickenBridge.scm",(void*)f_29030},
{"f_29041ChickenBridge.scm",(void*)f_29041},
{"f_29044ChickenBridge.scm",(void*)f_29044},
{"f_29051ChickenBridge.scm",(void*)f_29051},
{"f_29024ChickenBridge.scm",(void*)f_29024},
{"f_28478ChickenBridge.scm",(void*)f_28478},
{"f_28509ChickenBridge.scm",(void*)f_28509},
{"f_28973ChickenBridge.scm",(void*)f_28973},
{"f_28979ChickenBridge.scm",(void*)f_28979},
{"f_28520ChickenBridge.scm",(void*)f_28520},
{"f_28405ChickenBridge.scm",(void*)f_28405},
{"f_28430ChickenBridge.scm",(void*)f_28430},
{"f_28365ChickenBridge.scm",(void*)f_28365},
{"f_28378ChickenBridge.scm",(void*)f_28378},
{"f_28419ChickenBridge.scm",(void*)f_28419},
{"f_28524ChickenBridge.scm",(void*)f_28524},
{"f_28961ChickenBridge.scm",(void*)f_28961},
{"f_28957ChickenBridge.scm",(void*)f_28957},
{"f_28953ChickenBridge.scm",(void*)f_28953},
{"f_28527ChickenBridge.scm",(void*)f_28527},
{"f_28747ChickenBridge.scm",(void*)f_28747},
{"f_28856ChickenBridge.scm",(void*)f_28856},
{"f_28921ChickenBridge.scm",(void*)f_28921},
{"f_28863ChickenBridge.scm",(void*)f_28863},
{"f_28867ChickenBridge.scm",(void*)f_28867},
{"f_28871ChickenBridge.scm",(void*)f_28871},
{"f_28913ChickenBridge.scm",(void*)f_28913},
{"f_28909ChickenBridge.scm",(void*)f_28909},
{"f_28887ChickenBridge.scm",(void*)f_28887},
{"f_28750ChickenBridge.scm",(void*)f_28750},
{"f_28753ChickenBridge.scm",(void*)f_28753},
{"f_28652ChickenBridge.scm",(void*)f_28652},
{"f_28735ChickenBridge.scm",(void*)f_28735},
{"f_28702ChickenBridge.scm",(void*)f_28702},
{"f_28728ChickenBridge.scm",(void*)f_28728},
{"f_28710ChickenBridge.scm",(void*)f_28710},
{"f_28658ChickenBridge.scm",(void*)f_28658},
{"f_28698ChickenBridge.scm",(void*)f_28698},
{"f_28640ChickenBridge.scm",(void*)f_28640},
{"f_28611ChickenBridge.scm",(void*)f_28611},
{"f_28633ChickenBridge.scm",(void*)f_28633},
{"f_28619ChickenBridge.scm",(void*)f_28619},
{"f_28573ChickenBridge.scm",(void*)f_28573},
{"f_28530ChickenBridge.scm",(void*)f_28530},
{"f_28541ChickenBridge.scm",(void*)f_28541},
{"f_28545ChickenBridge.scm",(void*)f_28545},
{"f_28549ChickenBridge.scm",(void*)f_28549},
{"f_28553ChickenBridge.scm",(void*)f_28553},
{"f_28537ChickenBridge.scm",(void*)f_28537},
{"f_28497ChickenBridge.scm",(void*)f_28497},
{"f_28492ChickenBridge.scm",(void*)f_28492},
{"f_28487ChickenBridge.scm",(void*)f_28487},
{"f_28319ChickenBridge.scm",(void*)f_28319},
{"f_28330ChickenBridge.scm",(void*)f_28330},
{"f_28345ChickenBridge.scm",(void*)f_28345},
{"f_28281ChickenBridge.scm",(void*)f_28281},
{"f_28292ChickenBridge.scm",(void*)f_28292},
{"f_28307ChickenBridge.scm",(void*)f_28307},
{"f_28214ChickenBridge.scm",(void*)f_28214},
{"f_28234ChickenBridge.scm",(void*)f_28234},
{"f_28244ChickenBridge.scm",(void*)f_28244},
{"f_28257ChickenBridge.scm",(void*)f_28257},
{"f_28225ChickenBridge.scm",(void*)f_28225},
{"f_28232ChickenBridge.scm",(void*)f_28232},
{"f_28021ChickenBridge.scm",(void*)f_28021},
{"f_28081ChickenBridge.scm",(void*)f_28081},
{"f_28091ChickenBridge.scm",(void*)f_28091},
{"f_28205ChickenBridge.scm",(void*)f_28205},
{"f_28170ChickenBridge.scm",(void*)f_28170},
{"f_28162ChickenBridge.scm",(void*)f_28162},
{"f_28133ChickenBridge.scm",(void*)f_28133},
{"f_28111ChickenBridge.scm",(void*)f_28111},
{"f_28114ChickenBridge.scm",(void*)f_28114},
{"f_28102ChickenBridge.scm",(void*)f_28102},
{"f_28028ChickenBridge.scm",(void*)f_28028},
{"f_28079ChickenBridge.scm",(void*)f_28079},
{"f_28071ChickenBridge.scm",(void*)f_28071},
{"f_28031ChickenBridge.scm",(void*)f_28031},
{"f_28042ChickenBridge.scm",(void*)f_28042},
{"f_28046ChickenBridge.scm",(void*)f_28046},
{"f_28038ChickenBridge.scm",(void*)f_28038},
{"f_27879ChickenBridge.scm",(void*)f_27879},
{"f_27927ChickenBridge.scm",(void*)f_27927},
{"f_27937ChickenBridge.scm",(void*)f_27937},
{"f_27948ChickenBridge.scm",(void*)f_27948},
{"f_27985ChickenBridge.scm",(void*)f_27985},
{"f_27960ChickenBridge.scm",(void*)f_27960},
{"f_27951ChickenBridge.scm",(void*)f_27951},
{"f_27889ChickenBridge.scm",(void*)f_27889},
{"f_27925ChickenBridge.scm",(void*)f_27925},
{"f_27896ChickenBridge.scm",(void*)f_27896},
{"f_27528ChickenBridge.scm",(void*)f_27528},
{"f_27535ChickenBridge.scm",(void*)f_27535},
{"f_27769ChickenBridge.scm",(void*)f_27769},
{"f_27779ChickenBridge.scm",(void*)f_27779},
{"f_27790ChickenBridge.scm",(void*)f_27790},
{"f_27802ChickenBridge.scm",(void*)f_27802},
{"f_27805ChickenBridge.scm",(void*)f_27805},
{"f_27793ChickenBridge.scm",(void*)f_27793},
{"f_27541ChickenBridge.scm",(void*)f_27541},
{"f_27767ChickenBridge.scm",(void*)f_27767},
{"f_27763ChickenBridge.scm",(void*)f_27763},
{"f_27709ChickenBridge.scm",(void*)f_27709},
{"f_27674ChickenBridge.scm",(void*)f_27674},
{"f_27690ChickenBridge.scm",(void*)f_27690},
{"f_27645ChickenBridge.scm",(void*)f_27645},
{"f_27569ChickenBridge.scm",(void*)f_27569},
{"f_27572ChickenBridge.scm",(void*)f_27572},
{"f_27636ChickenBridge.scm",(void*)f_27636},
{"f_27632ChickenBridge.scm",(void*)f_27632},
{"f_27552ChickenBridge.scm",(void*)f_27552},
{"f_27563ChickenBridge.scm",(void*)f_27563},
{"f_27559ChickenBridge.scm",(void*)f_27559},
{"f_27481ChickenBridge.scm",(void*)f_27481},
{"f_27514ChickenBridge.scm",(void*)f_27514},
{"f_27496ChickenBridge.scm",(void*)f_27496},
{"f_27508ChickenBridge.scm",(void*)f_27508},
{"f_27099ChickenBridge.scm",(void*)f_27099},
{"f_27308ChickenBridge.scm",(void*)f_27308},
{"f_27318ChickenBridge.scm",(void*)f_27318},
{"f_27329ChickenBridge.scm",(void*)f_27329},
{"f_27449ChickenBridge.scm",(void*)f_27449},
{"f_27428ChickenBridge.scm",(void*)f_27428},
{"f_27407ChickenBridge.scm",(void*)f_27407},
{"f_27386ChickenBridge.scm",(void*)f_27386},
{"f_27365ChickenBridge.scm",(void*)f_27365},
{"f_27344ChickenBridge.scm",(void*)f_27344},
{"f_27332ChickenBridge.scm",(void*)f_27332},
{"f_27109ChickenBridge.scm",(void*)f_27109},
{"f_27112ChickenBridge.scm",(void*)f_27112},
{"f_27275ChickenBridge.scm",(void*)f_27275},
{"f_27115ChickenBridge.scm",(void*)f_27115},
{"f_27266ChickenBridge.scm",(void*)f_27266},
{"f_27246ChickenBridge.scm",(void*)f_27246},
{"f_27118ChickenBridge.scm",(void*)f_27118},
{"f_27211ChickenBridge.scm",(void*)f_27211},
{"f_27228ChickenBridge.scm",(void*)f_27228},
{"f_27121ChickenBridge.scm",(void*)f_27121},
{"f_27160ChickenBridge.scm",(void*)f_27160},
{"f_27194ChickenBridge.scm",(void*)f_27194},
{"f_27178ChickenBridge.scm",(void*)f_27178},
{"f_27163ChickenBridge.scm",(void*)f_27163},
{"f_27128ChickenBridge.scm",(void*)f_27128},
{"f_27139ChickenBridge.scm",(void*)f_27139},
{"f_27143ChickenBridge.scm",(void*)f_27143},
{"f_27135ChickenBridge.scm",(void*)f_27135},
{"f_27017ChickenBridge.scm",(void*)f_27017},
{"f_27021ChickenBridge.scm",(void*)f_27021},
{"f_27039ChickenBridge.scm",(void*)f_27039},
{"f_26857ChickenBridge.scm",(void*)f_26857},
{"f_26865ChickenBridge.scm",(void*)f_26865},
{"f_26875ChickenBridge.scm",(void*)f_26875},
{"f_26913ChickenBridge.scm",(void*)f_26913},
{"f_26916ChickenBridge.scm",(void*)f_26916},
{"f_26919ChickenBridge.scm",(void*)f_26919},
{"f_26994ChickenBridge.scm",(void*)f_26994},
{"f_27004ChickenBridge.scm",(void*)f_27004},
{"f_26922ChickenBridge.scm",(void*)f_26922},
{"f_26925ChickenBridge.scm",(void*)f_26925},
{"f_26928ChickenBridge.scm",(void*)f_26928},
{"f_26948ChickenBridge.scm",(void*)f_26948},
{"f_26958ChickenBridge.scm",(void*)f_26958},
{"f_26961ChickenBridge.scm",(void*)f_26961},
{"f_26964ChickenBridge.scm",(void*)f_26964},
{"f_26931ChickenBridge.scm",(void*)f_26931},
{"f_26934ChickenBridge.scm",(void*)f_26934},
{"f_26851ChickenBridge.scm",(void*)f_26851},
{"f_26845ChickenBridge.scm",(void*)f_26845},
{"f_26839ChickenBridge.scm",(void*)f_26839},
{"f_26768ChickenBridge.scm",(void*)f_26768},
{"f_26809ChickenBridge.scm",(void*)f_26809},
{"f_26813ChickenBridge.scm",(void*)f_26813},
{"f_26817ChickenBridge.scm",(void*)f_26817},
{"f_26821ChickenBridge.scm",(void*)f_26821},
{"f_26825ChickenBridge.scm",(void*)f_26825},
{"f_26829ChickenBridge.scm",(void*)f_26829},
{"f_26833ChickenBridge.scm",(void*)f_26833},
{"f_26837ChickenBridge.scm",(void*)f_26837},
{"f_26770ChickenBridge.scm",(void*)f_26770},
{"f_26776ChickenBridge.scm",(void*)f_26776},
{"f_26798ChickenBridge.scm",(void*)f_26798},
{"f_26787ChickenBridge.scm",(void*)f_26787},
{"f_26617ChickenBridge.scm",(void*)f_26617},
{"f_26632ChickenBridge.scm",(void*)f_26632},
{"f_26645ChickenBridge.scm",(void*)f_26645},
{"f_26605ChickenBridge.scm",(void*)f_26605},
{"f_26593ChickenBridge.scm",(void*)f_26593},
{"f_26581ChickenBridge.scm",(void*)f_26581},
{"f_26575ChickenBridge.scm",(void*)f_26575},
{"f_26569ChickenBridge.scm",(void*)f_26569},
{"f_26557ChickenBridge.scm",(void*)f_26557},
{"f_26545ChickenBridge.scm",(void*)f_26545},
{"f_26533ChickenBridge.scm",(void*)f_26533},
{"f_26521ChickenBridge.scm",(void*)f_26521},
{"f_26515ChickenBridge.scm",(void*)f_26515},
{"f_26479ChickenBridge.scm",(void*)f_26479},
{"f_26473ChickenBridge.scm",(void*)f_26473},
{"f_26419ChickenBridge.scm",(void*)f_26419},
{"f_26423ChickenBridge.scm",(void*)f_26423},
{"f_26439ChickenBridge.scm",(void*)f_26439},
{"f_26471ChickenBridge.scm",(void*)f_26471},
{"f_26445ChickenBridge.scm",(void*)f_26445},
{"f_26451ChickenBridge.scm",(void*)f_26451},
{"f_26426ChickenBridge.scm",(void*)f_26426},
{"f_26410ChickenBridge.scm",(void*)f_26410},
{"f_26414ChickenBridge.scm",(void*)f_26414},
{"f_26257ChickenBridge.scm",(void*)f_26257},
{"f_26384ChickenBridge.scm",(void*)f_26384},
{"f_26397ChickenBridge.scm",(void*)f_26397},
{"f_26379ChickenBridge.scm",(void*)f_26379},
{"f_26260ChickenBridge.scm",(void*)f_26260},
{"f_26376ChickenBridge.scm",(void*)f_26376},
{"f_26360ChickenBridge.scm",(void*)f_26360},
{"f_26288ChickenBridge.scm",(void*)f_26288},
{"f_26296ChickenBridge.scm",(void*)f_26296},
{"f_26306ChickenBridge.scm",(void*)f_26306},
{"f_26309ChickenBridge.scm",(void*)f_26309},
{"f_26291ChickenBridge.scm",(void*)f_26291},
{"f_26080ChickenBridge.scm",(void*)f_26080},
{"f_26084ChickenBridge.scm",(void*)f_26084},
{"f_26089ChickenBridge.scm",(void*)f_26089},
{"f_26092ChickenBridge.scm",(void*)f_26092},
{"f_23827ChickenBridge.scm",(void*)f_23827},
{"f_23840ChickenBridge.scm",(void*)f_23840},
{"f_23847ChickenBridge.scm",(void*)f_23847},
{"f_23854ChickenBridge.scm",(void*)f_23854},
{"f_23833ChickenBridge.scm",(void*)f_23833},
{"f_26096ChickenBridge.scm",(void*)f_26096},
{"f_26133ChickenBridge.scm",(void*)f_26133},
{"f_26226ChickenBridge.scm",(void*)f_26226},
{"f_26236ChickenBridge.scm",(void*)f_26236},
{"f_26139ChickenBridge.scm",(void*)f_26139},
{"f_26196ChickenBridge.scm",(void*)f_26196},
{"f_26206ChickenBridge.scm",(void*)f_26206},
{"f_26147ChickenBridge.scm",(void*)f_26147},
{"f_26161ChickenBridge.scm",(void*)f_26161},
{"f_26165ChickenBridge.scm",(void*)f_26165},
{"f_26169ChickenBridge.scm",(void*)f_26169},
{"f_26173ChickenBridge.scm",(void*)f_26173},
{"f_26180ChickenBridge.scm",(void*)f_26180},
{"f_26157ChickenBridge.scm",(void*)f_26157},
{"f_26150ChickenBridge.scm",(void*)f_26150},
{"f_26099ChickenBridge.scm",(void*)f_26099},
{"f_24954ChickenBridge.scm",(void*)f_24954},
{"f_24967ChickenBridge.scm",(void*)f_24967},
{"f_25017ChickenBridge.scm",(void*)f_25017},
{"f_25114ChickenBridge.scm",(void*)f_25114},
{"f_25182ChickenBridge.scm",(void*)f_25182},
{"f_25439ChickenBridge.scm",(void*)f_25439},
{"f_25189ChickenBridge.scm",(void*)f_25189},
{"f_25427ChickenBridge.scm",(void*)f_25427},
{"f_25378ChickenBridge.scm",(void*)f_25378},
{"f_25384ChickenBridge.scm",(void*)f_25384},
{"f_25408ChickenBridge.scm",(void*)f_25408},
{"f_25404ChickenBridge.scm",(void*)f_25404},
{"f_25392ChickenBridge.scm",(void*)f_25392},
{"f_25192ChickenBridge.scm",(void*)f_25192},
{"f_25354ChickenBridge.scm",(void*)f_25354},
{"f_25358ChickenBridge.scm",(void*)f_25358},
{"f_25195ChickenBridge.scm",(void*)f_25195},
{"f_25331ChickenBridge.scm",(void*)f_25331},
{"f_25335ChickenBridge.scm",(void*)f_25335},
{"f_25198ChickenBridge.scm",(void*)f_25198},
{"f_25308ChickenBridge.scm",(void*)f_25308},
{"f_25312ChickenBridge.scm",(void*)f_25312},
{"f_25201ChickenBridge.scm",(void*)f_25201},
{"f_25233ChickenBridge.scm",(void*)f_25233},
{"f_25251ChickenBridge.scm",(void*)f_25251},
{"f_25269ChickenBridge.scm",(void*)f_25269},
{"f_25287ChickenBridge.scm",(void*)f_25287},
{"f_25204ChickenBridge.scm",(void*)f_25204},
{"f_25208ChickenBridge.scm",(void*)f_25208},
{"f_25118ChickenBridge.scm",(void*)f_25118},
{"f_25122ChickenBridge.scm",(void*)f_25122},
{"f_25126ChickenBridge.scm",(void*)f_25126},
{"f_25021ChickenBridge.scm",(void*)f_25021},
{"f_25025ChickenBridge.scm",(void*)f_25025},
{"f_25029ChickenBridge.scm",(void*)f_25029},
{"f_25048ChickenBridge.scm",(void*)f_25048},
{"f_25052ChickenBridge.scm",(void*)f_25052},
{"f_25032ChickenBridge.scm",(void*)f_25032},
{"f_25036ChickenBridge.scm",(void*)f_25036},
{"f_24971ChickenBridge.scm",(void*)f_24971},
{"f_24975ChickenBridge.scm",(void*)f_24975},
{"f_24979ChickenBridge.scm",(void*)f_24979},
{"f_24961ChickenBridge.scm",(void*)f_24961},
{"f_24776ChickenBridge.scm",(void*)f_24776},
{"f_24788ChickenBridge.scm",(void*)f_24788},
{"f_24807ChickenBridge.scm",(void*)f_24807},
{"f_24825ChickenBridge.scm",(void*)f_24825},
{"f_24857ChickenBridge.scm",(void*)f_24857},
{"f_24860ChickenBridge.scm",(void*)f_24860},
{"f_24853ChickenBridge.scm",(void*)f_24853},
{"f_24839ChickenBridge.scm",(void*)f_24839},
{"f_24810ChickenBridge.scm",(void*)f_24810},
{"f_24755ChickenBridge.scm",(void*)f_24755},
{"f_24762ChickenBridge.scm",(void*)f_24762},
{"f_24765ChickenBridge.scm",(void*)f_24765},
{"f_24771ChickenBridge.scm",(void*)f_24771},
{"f_24690ChickenBridge.scm",(void*)f_24690},
{"f_24699ChickenBridge.scm",(void*)f_24699},
{"f_24722ChickenBridge.scm",(void*)f_24722},
{"f_24712ChickenBridge.scm",(void*)f_24712},
{"f_24646ChickenBridge.scm",(void*)f_24646},
{"f_24634ChickenBridge.scm",(void*)f_24634},
{"f_24532ChickenBridge.scm",(void*)f_24532},
{"f_24484ChickenBridge.scm",(void*)f_24484},
{"f_23865ChickenBridge.scm",(void*)f_23865},
{"f_23869ChickenBridge.scm",(void*)f_23869},
{"f_23872ChickenBridge.scm",(void*)f_23872},
{"f_24298ChickenBridge.scm",(void*)f_24298},
{"f_24294ChickenBridge.scm",(void*)f_24294},
{"f_24290ChickenBridge.scm",(void*)f_24290},
{"f_23875ChickenBridge.scm",(void*)f_23875},
{"f_23998ChickenBridge.scm",(void*)f_23998},
{"f_23231ChickenBridge.scm",(void*)f_23231},
{"f_24004ChickenBridge.scm",(void*)f_24004},
{"f_23247ChickenBridge.scm",(void*)f_23247},
{"f_24092ChickenBridge.scm",(void*)f_24092},
{"f_24162ChickenBridge.scm",(void*)f_24162},
{"f_23263ChickenBridge.scm",(void*)f_23263},
{"f_24165ChickenBridge.scm",(void*)f_24165},
{"f_23295ChickenBridge.scm",(void*)f_23295},
{"f_24243ChickenBridge.scm",(void*)f_24243},
{"f_24269ChickenBridge.scm",(void*)f_24269},
{"f_24263ChickenBridge.scm",(void*)f_24263},
{"f_24252ChickenBridge.scm",(void*)f_24252},
{"f_24194ChickenBridge.scm",(void*)f_24194},
{"f_24204ChickenBridge.scm",(void*)f_24204},
{"f_24230ChickenBridge.scm",(void*)f_24230},
{"f_24224ChickenBridge.scm",(void*)f_24224},
{"f_24207ChickenBridge.scm",(void*)f_24207},
{"f_24217ChickenBridge.scm",(void*)f_24217},
{"f_24210ChickenBridge.scm",(void*)f_24210},
{"f_24171ChickenBridge.scm",(void*)f_24171},
{"f_24180ChickenBridge.scm",(void*)f_24180},
{"f_24174ChickenBridge.scm",(void*)f_24174},
{"f_24098ChickenBridge.scm",(void*)f_24098},
{"f_24116ChickenBridge.scm",(void*)f_24116},
{"f_24149ChickenBridge.scm",(void*)f_24149},
{"f_24135ChickenBridge.scm",(void*)f_24135},
{"f_24143ChickenBridge.scm",(void*)f_24143},
{"f_24126ChickenBridge.scm",(void*)f_24126},
{"f_24101ChickenBridge.scm",(void*)f_24101},
{"f_24013ChickenBridge.scm",(void*)f_24013},
{"f_24035ChickenBridge.scm",(void*)f_24035},
{"f_24082ChickenBridge.scm",(void*)f_24082},
{"f_24068ChickenBridge.scm",(void*)f_24068},
{"f_24076ChickenBridge.scm",(void*)f_24076},
{"f_24048ChickenBridge.scm",(void*)f_24048},
{"f_24051ChickenBridge.scm",(void*)f_24051},
{"f_24016ChickenBridge.scm",(void*)f_24016},
{"f_24033ChickenBridge.scm",(void*)f_24033},
{"f_24019ChickenBridge.scm",(void*)f_24019},
{"f_23884ChickenBridge.scm",(void*)f_23884},
{"f_23890ChickenBridge.scm",(void*)f_23890},
{"f_23948ChickenBridge.scm",(void*)f_23948},
{"f_23951ChickenBridge.scm",(void*)f_23951},
{"f_23972ChickenBridge.scm",(void*)f_23972},
{"f_23983ChickenBridge.scm",(void*)f_23983},
{"f_23962ChickenBridge.scm",(void*)f_23962},
{"f_23896ChickenBridge.scm",(void*)f_23896},
{"f_23906ChickenBridge.scm",(void*)f_23906},
{"f_23942ChickenBridge.scm",(void*)f_23942},
{"f_23912ChickenBridge.scm",(void*)f_23912},
{"f_23927ChickenBridge.scm",(void*)f_23927},
{"f_23931ChickenBridge.scm",(void*)f_23931},
{"f_23935ChickenBridge.scm",(void*)f_23935},
{"f_23919ChickenBridge.scm",(void*)f_23919},
{"f_23761ChickenBridge.scm",(void*)f_23761},
{"f_23763ChickenBridge.scm",(void*)f_23763},
{"f_23811ChickenBridge.scm",(void*)f_23811},
{"f_23767ChickenBridge.scm",(void*)f_23767},
{"f_23770ChickenBridge.scm",(void*)f_23770},
{"f_23775ChickenBridge.scm",(void*)f_23775},
{"f_23796ChickenBridge.scm",(void*)f_23796},
{"f_23753ChickenBridge.scm",(void*)f_23753},
{"f_23755ChickenBridge.scm",(void*)f_23755},
{"f_23576ChickenBridge.scm",(void*)f_23576},
{"f_23584ChickenBridge.scm",(void*)f_23584},
{"f_23545ChickenBridge.scm",(void*)f_23545},
{"f_23562ChickenBridge.scm",(void*)f_23562},
{"f_23566ChickenBridge.scm",(void*)f_23566},
{"f_23512ChickenBridge.scm",(void*)f_23512},
{"f_23519ChickenBridge.scm",(void*)f_23519},
{"f_23463ChickenBridge.scm",(void*)f_23463},
{"f_23470ChickenBridge.scm",(void*)f_23470},
{"f_23528ChickenBridge.scm",(void*)f_23528},
{"f_23751ChickenBridge.scm",(void*)f_23751},
{"f_23728ChickenBridge.scm",(void*)f_23728},
{"f_23744ChickenBridge.scm",(void*)f_23744},
{"f_23590ChickenBridge.scm",(void*)f_23590},
{"f_23593ChickenBridge.scm",(void*)f_23593},
{"f_23617ChickenBridge.scm",(void*)f_23617},
{"f_23674ChickenBridge.scm",(void*)f_23674},
{"f_23680ChickenBridge.scm",(void*)f_23680},
{"f_23689ChickenBridge.scm",(void*)f_23689},
{"f_23698ChickenBridge.scm",(void*)f_23698},
{"f_23707ChickenBridge.scm",(void*)f_23707},
{"f_23716ChickenBridge.scm",(void*)f_23716},
{"f_23668ChickenBridge.scm",(void*)f_23668},
{"f_23623ChickenBridge.scm",(void*)f_23623},
{"f_23629ChickenBridge.scm",(void*)f_23629},
{"f_23635ChickenBridge.scm",(void*)f_23635},
{"f_23641ChickenBridge.scm",(void*)f_23641},
{"f_23647ChickenBridge.scm",(void*)f_23647},
{"f_23653ChickenBridge.scm",(void*)f_23653},
{"f_23494ChickenBridge.scm",(void*)f_23494},
{"f_23501ChickenBridge.scm",(void*)f_23501},
{"f_23484ChickenBridge.scm",(void*)f_23484},
{"f_23472ChickenBridge.scm",(void*)f_23472},
{"f_23440ChickenBridge.scm",(void*)f_23440},
{"f_23447ChickenBridge.scm",(void*)f_23447},
{"f_23454ChickenBridge.scm",(void*)f_23454},
{"f_23424ChickenBridge.scm",(void*)f_23424},
{"f_23431ChickenBridge.scm",(void*)f_23431},
{"f_23438ChickenBridge.scm",(void*)f_23438},
{"f_23412ChickenBridge.scm",(void*)f_23412},
{"f_23394ChickenBridge.scm",(void*)f_23394},
{"f_23376ChickenBridge.scm",(void*)f_23376},
{"f_23361ChickenBridge.scm",(void*)f_23361},
{"f_23355ChickenBridge.scm",(void*)f_23355},
{"f_23343ChickenBridge.scm",(void*)f_23343},
{"f_23325ChickenBridge.scm",(void*)f_23325},
{"f_23304ChickenBridge.scm",(void*)f_23304},
{"f_23272ChickenBridge.scm",(void*)f_23272},
{"f_23279ChickenBridge.scm",(void*)f_23279},
{"f_23214ChickenBridge.scm",(void*)f_23214},
{"f_23222ChickenBridge.scm",(void*)f_23222},
{"f_23204ChickenBridge.scm",(void*)f_23204},
{"f_23212ChickenBridge.scm",(void*)f_23212},
{"f_23198ChickenBridge.scm",(void*)f_23198},
{"f_23186ChickenBridge.scm",(void*)f_23186},
{"f_23183ChickenBridge.scm",(void*)f_23183},
{"f_23162ChickenBridge.scm",(void*)f_23162},
{"f_23075ChickenBridge.scm",(void*)f_23075},
{"f_23054ChickenBridge.scm",(void*)f_23054},
{"f_23044ChickenBridge.scm",(void*)f_23044},
{"f_23032ChickenBridge.scm",(void*)f_23032},
{"f_23003ChickenBridge.scm",(void*)f_23003},
{"f_22991ChickenBridge.scm",(void*)f_22991},
{"f_22973ChickenBridge.scm",(void*)f_22973},
{"f_22955ChickenBridge.scm",(void*)f_22955},
{"f_22934ChickenBridge.scm",(void*)f_22934},
{"f_21912ChickenBridge.scm",(void*)f_21912},
{"f_22911ChickenBridge.scm",(void*)f_22911},
{"f_22926ChickenBridge.scm",(void*)f_22926},
{"f_22918ChickenBridge.scm",(void*)f_22918},
{"f_22882ChickenBridge.scm",(void*)f_22882},
{"f_22886ChickenBridge.scm",(void*)f_22886},
{"f_22847ChickenBridge.scm",(void*)f_22847},
{"f_22851ChickenBridge.scm",(void*)f_22851},
{"f_21922ChickenBridge.scm",(void*)f_21922},
{"f_22811ChickenBridge.scm",(void*)f_22811},
{"f_22826ChickenBridge.scm",(void*)f_22826},
{"f_22818ChickenBridge.scm",(void*)f_22818},
{"f_22782ChickenBridge.scm",(void*)f_22782},
{"f_22786ChickenBridge.scm",(void*)f_22786},
{"f_22747ChickenBridge.scm",(void*)f_22747},
{"f_22751ChickenBridge.scm",(void*)f_22751},
{"f_21925ChickenBridge.scm",(void*)f_21925},
{"f_21928ChickenBridge.scm",(void*)f_21928},
{"f_21933ChickenBridge.scm",(void*)f_21933},
{"f_22640ChickenBridge.scm",(void*)f_22640},
{"f_22663ChickenBridge.scm",(void*)f_22663},
{"f_22716ChickenBridge.scm",(void*)f_22716},
{"f_22698ChickenBridge.scm",(void*)f_22698},
{"f_22691ChickenBridge.scm",(void*)f_22691},
{"f_22673ChickenBridge.scm",(void*)f_22673},
{"f_22650ChickenBridge.scm",(void*)f_22650},
{"f_22127ChickenBridge.scm",(void*)f_22127},
{"f_22602ChickenBridge.scm",(void*)f_22602},
{"f_22624ChickenBridge.scm",(void*)f_22624},
{"f_22608ChickenBridge.scm",(void*)f_22608},
{"f_22616ChickenBridge.scm",(void*)f_22616},
{"f_22620ChickenBridge.scm",(void*)f_22620},
{"f_22606ChickenBridge.scm",(void*)f_22606},
{"f_22596ChickenBridge.scm",(void*)f_22596},
{"f_22130ChickenBridge.scm",(void*)f_22130},
{"f_22473ChickenBridge.scm",(void*)f_22473},
{"f_22497ChickenBridge.scm",(void*)f_22497},
{"f_22559ChickenBridge.scm",(void*)f_22559},
{"f_22500ChickenBridge.scm",(void*)f_22500},
{"f_22516ChickenBridge.scm",(void*)f_22516},
{"f_22541ChickenBridge.scm",(void*)f_22541},
{"f_22507ChickenBridge.scm",(void*)f_22507},
{"f_22484ChickenBridge.scm",(void*)f_22484},
{"f_22133ChickenBridge.scm",(void*)f_22133},
{"f_22459ChickenBridge.scm",(void*)f_22459},
{"f_22137ChickenBridge.scm",(void*)f_22137},
{"f_22181ChickenBridge.scm",(void*)f_22181},
{"f_22184ChickenBridge.scm",(void*)f_22184},
{"f_22440ChickenBridge.scm",(void*)f_22440},
{"f_22450ChickenBridge.scm",(void*)f_22450},
{"f_22187ChickenBridge.scm",(void*)f_22187},
{"f_22378ChickenBridge.scm",(void*)f_22378},
{"f_22388ChickenBridge.scm",(void*)f_22388},
{"f_22391ChickenBridge.scm",(void*)f_22391},
{"f_22411ChickenBridge.scm",(void*)f_22411},
{"f_22413ChickenBridge.scm",(void*)f_22413},
{"f_22423ChickenBridge.scm",(void*)f_22423},
{"f_22397ChickenBridge.scm",(void*)f_22397},
{"f_22400ChickenBridge.scm",(void*)f_22400},
{"f_22190ChickenBridge.scm",(void*)f_22190},
{"f_22198ChickenBridge.scm",(void*)f_22198},
{"f_22211ChickenBridge.scm",(void*)f_22211},
{"f_22085ChickenBridge.scm",(void*)f_22085},
{"f_22094ChickenBridge.scm",(void*)f_22094},
{"f_22116ChickenBridge.scm",(void*)f_22116},
{"f_22105ChickenBridge.scm",(void*)f_22105},
{"f_22214ChickenBridge.scm",(void*)f_22214},
{"f_22349ChickenBridge.scm",(void*)f_22349},
{"f_22351ChickenBridge.scm",(void*)f_22351},
{"f_22361ChickenBridge.scm",(void*)f_22361},
{"f_22220ChickenBridge.scm",(void*)f_22220},
{"f_22322ChickenBridge.scm",(void*)f_22322},
{"f_22324ChickenBridge.scm",(void*)f_22324},
{"f_22334ChickenBridge.scm",(void*)f_22334},
{"f_22223ChickenBridge.scm",(void*)f_22223},
{"f_22235ChickenBridge.scm",(void*)f_22235},
{"f_22261ChickenBridge.scm",(void*)f_22261},
{"f_22267ChickenBridge.scm",(void*)f_22267},
{"f_22273ChickenBridge.scm",(void*)f_22273},
{"f_22283ChickenBridge.scm",(void*)f_22283},
{"f_22285ChickenBridge.scm",(void*)f_22285},
{"f_22295ChickenBridge.scm",(void*)f_22295},
{"f_22276ChickenBridge.scm",(void*)f_22276},
{"f_22248ChickenBridge.scm",(void*)f_22248},
{"f_22226ChickenBridge.scm",(void*)f_22226},
{"f_22193ChickenBridge.scm",(void*)f_22193},
{"f_22140ChickenBridge.scm",(void*)f_22140},
{"f_22163ChickenBridge.scm",(void*)f_22163},
{"f_22152ChickenBridge.scm",(void*)f_22152},
{"f_22017ChickenBridge.scm",(void*)f_22017},
{"f_22065ChickenBridge.scm",(void*)f_22065},
{"f_22027ChickenBridge.scm",(void*)f_22027},
{"f_22055ChickenBridge.scm",(void*)f_22055},
{"f_22030ChickenBridge.scm",(void*)f_22030},
{"f_21935ChickenBridge.scm",(void*)f_21935},
{"f_22007ChickenBridge.scm",(void*)f_22007},
{"f_21939ChickenBridge.scm",(void*)f_21939},
{"f_21957ChickenBridge.scm",(void*)f_21957},
{"f_21989ChickenBridge.scm",(void*)f_21989},
{"f_21818ChickenBridge.scm",(void*)f_21818},
{"f_21822ChickenBridge.scm",(void*)f_21822},
{"f_21851ChickenBridge.scm",(void*)f_21851},
{"f_21856ChickenBridge.scm",(void*)f_21856},
{"f_21881ChickenBridge.scm",(void*)f_21881},
{"f_21866ChickenBridge.scm",(void*)f_21866},
{"f_21300ChickenBridge.scm",(void*)f_21300},
{"f_21571ChickenBridge.scm",(void*)f_21571},
{"f_21575ChickenBridge.scm",(void*)f_21575},
{"f_21580ChickenBridge.scm",(void*)f_21580},
{"f_21786ChickenBridge.scm",(void*)f_21786},
{"f_21801ChickenBridge.scm",(void*)f_21801},
{"f_21793ChickenBridge.scm",(void*)f_21793},
{"f_21757ChickenBridge.scm",(void*)f_21757},
{"f_21761ChickenBridge.scm",(void*)f_21761},
{"f_21722ChickenBridge.scm",(void*)f_21722},
{"f_21726ChickenBridge.scm",(void*)f_21726},
{"f_21584ChickenBridge.scm",(void*)f_21584},
{"f_21686ChickenBridge.scm",(void*)f_21686},
{"f_21701ChickenBridge.scm",(void*)f_21701},
{"f_21693ChickenBridge.scm",(void*)f_21693},
{"f_21657ChickenBridge.scm",(void*)f_21657},
{"f_21661ChickenBridge.scm",(void*)f_21661},
{"f_21622ChickenBridge.scm",(void*)f_21622},
{"f_21626ChickenBridge.scm",(void*)f_21626},
{"f_21587ChickenBridge.scm",(void*)f_21587},
{"f_21590ChickenBridge.scm",(void*)f_21590},
{"f_21593ChickenBridge.scm",(void*)f_21593},
{"f_21562ChickenBridge.scm",(void*)f_21562},
{"f_21304ChickenBridge.scm",(void*)f_21304},
{"f_21531ChickenBridge.scm",(void*)f_21531},
{"f_21546ChickenBridge.scm",(void*)f_21546},
{"f_21538ChickenBridge.scm",(void*)f_21538},
{"f_21502ChickenBridge.scm",(void*)f_21502},
{"f_21506ChickenBridge.scm",(void*)f_21506},
{"f_21467ChickenBridge.scm",(void*)f_21467},
{"f_21471ChickenBridge.scm",(void*)f_21471},
{"f_21307ChickenBridge.scm",(void*)f_21307},
{"f_21431ChickenBridge.scm",(void*)f_21431},
{"f_21446ChickenBridge.scm",(void*)f_21446},
{"f_21438ChickenBridge.scm",(void*)f_21438},
{"f_21402ChickenBridge.scm",(void*)f_21402},
{"f_21406ChickenBridge.scm",(void*)f_21406},
{"f_21367ChickenBridge.scm",(void*)f_21367},
{"f_21371ChickenBridge.scm",(void*)f_21371},
{"f_21310ChickenBridge.scm",(void*)f_21310},
{"f_21313ChickenBridge.scm",(void*)f_21313},
{"f_21316ChickenBridge.scm",(void*)f_21316},
{"f_21328ChickenBridge.scm",(void*)f_21328},
{"f_21346ChickenBridge.scm",(void*)f_21346},
{"f_21334ChickenBridge.scm",(void*)f_21334},
{"f_21322ChickenBridge.scm",(void*)f_21322},
{"f_21237ChickenBridge.scm",(void*)f_21237},
{"f_20897ChickenBridge.scm",(void*)f_20897},
{"f_21079ChickenBridge.scm",(void*)f_21079},
{"f_21083ChickenBridge.scm",(void*)f_21083},
{"f_21085ChickenBridge.scm",(void*)f_21085},
{"f_21010ChickenBridge.scm",(void*)f_21010},
{"f_21020ChickenBridge.scm",(void*)f_21020},
{"f_21027ChickenBridge.scm",(void*)f_21027},
{"f_21095ChickenBridge.scm",(void*)f_21095},
{"f_21098ChickenBridge.scm",(void*)f_21098},
{"f_21102ChickenBridge.scm",(void*)f_21102},
{"f_21122ChickenBridge.scm",(void*)f_21122},
{"f_21138ChickenBridge.scm",(void*)f_21138},
{"f_21105ChickenBridge.scm",(void*)f_21105},
{"f_20900ChickenBridge.scm",(void*)f_20900},
{"f_20912ChickenBridge.scm",(void*)f_20912},
{"f_20948ChickenBridge.scm",(void*)f_20948},
{"f_20968ChickenBridge.scm",(void*)f_20968},
{"f_20973ChickenBridge.scm",(void*)f_20973},
{"f_20410ChickenBridge.scm",(void*)f_20410},
{"f_20337ChickenBridge.scm",(void*)f_20337},
{"f_20182ChickenBridge.scm",(void*)f_20182},
{"f_20188ChickenBridge.scm",(void*)f_20188},
{"f_20273ChickenBridge.scm",(void*)f_20273},
{"f_20200ChickenBridge.scm",(void*)f_20200},
{"f_20216ChickenBridge.scm",(void*)f_20216},
{"f_20220ChickenBridge.scm",(void*)f_20220},
{"f_20223ChickenBridge.scm",(void*)f_20223},
{"f_20203ChickenBridge.scm",(void*)f_20203},
{"f_20214ChickenBridge.scm",(void*)f_20214},
{"f_20354ChickenBridge.scm",(void*)f_20354},
{"f_20891ChickenBridge.scm",(void*)f_20891},
{"f_20414ChickenBridge.scm",(void*)f_20414},
{"f_20860ChickenBridge.scm",(void*)f_20860},
{"f_20875ChickenBridge.scm",(void*)f_20875},
{"f_20867ChickenBridge.scm",(void*)f_20867},
{"f_20831ChickenBridge.scm",(void*)f_20831},
{"f_20835ChickenBridge.scm",(void*)f_20835},
{"f_20796ChickenBridge.scm",(void*)f_20796},
{"f_20800ChickenBridge.scm",(void*)f_20800},
{"f_20761ChickenBridge.scm",(void*)f_20761},
{"f_20765ChickenBridge.scm",(void*)f_20765},
{"f_20417ChickenBridge.scm",(void*)f_20417},
{"f_20725ChickenBridge.scm",(void*)f_20725},
{"f_20740ChickenBridge.scm",(void*)f_20740},
{"f_20732ChickenBridge.scm",(void*)f_20732},
{"f_20696ChickenBridge.scm",(void*)f_20696},
{"f_20700ChickenBridge.scm",(void*)f_20700},
{"f_20661ChickenBridge.scm",(void*)f_20661},
{"f_20665ChickenBridge.scm",(void*)f_20665},
{"f_20626ChickenBridge.scm",(void*)f_20626},
{"f_20630ChickenBridge.scm",(void*)f_20630},
{"f_20420ChickenBridge.scm",(void*)f_20420},
{"f_20590ChickenBridge.scm",(void*)f_20590},
{"f_20605ChickenBridge.scm",(void*)f_20605},
{"f_20597ChickenBridge.scm",(void*)f_20597},
{"f_20561ChickenBridge.scm",(void*)f_20561},
{"f_20565ChickenBridge.scm",(void*)f_20565},
{"f_20526ChickenBridge.scm",(void*)f_20526},
{"f_20530ChickenBridge.scm",(void*)f_20530},
{"f_20491ChickenBridge.scm",(void*)f_20491},
{"f_20495ChickenBridge.scm",(void*)f_20495},
{"f_20423ChickenBridge.scm",(void*)f_20423},
{"f_20426ChickenBridge.scm",(void*)f_20426},
{"f_20429ChickenBridge.scm",(void*)f_20429},
{"f_20462ChickenBridge.scm",(void*)f_20462},
{"f_20470ChickenBridge.scm",(void*)f_20470},
{"f_20435ChickenBridge.scm",(void*)f_20435},
{"f_20448ChickenBridge.scm",(void*)f_20448},
{"f_20438ChickenBridge.scm",(void*)f_20438},
{"f_20441ChickenBridge.scm",(void*)f_20441},
{"f_19977ChickenBridge.scm",(void*)f_19977},
{"f_19981ChickenBridge.scm",(void*)f_19981},
{"f_19984ChickenBridge.scm",(void*)f_19984},
{"f_19987ChickenBridge.scm",(void*)f_19987},
{"f_20156ChickenBridge.scm",(void*)f_20156},
{"f_20169ChickenBridge.scm",(void*)f_20169},
{"f_20173ChickenBridge.scm",(void*)f_20173},
{"f_19993ChickenBridge.scm",(void*)f_19993},
{"f_20149ChickenBridge.scm",(void*)f_20149},
{"f_20130ChickenBridge.scm",(void*)f_20130},
{"f_20137ChickenBridge.scm",(void*)f_20137},
{"f_20141ChickenBridge.scm",(void*)f_20141},
{"f_19999ChickenBridge.scm",(void*)f_19999},
{"f_20005ChickenBridge.scm",(void*)f_20005},
{"f_20089ChickenBridge.scm",(void*)f_20089},
{"f_20091ChickenBridge.scm",(void*)f_20091},
{"f_20113ChickenBridge.scm",(void*)f_20113},
{"f_20120ChickenBridge.scm",(void*)f_20120},
{"f_20124ChickenBridge.scm",(void*)f_20124},
{"f_20110ChickenBridge.scm",(void*)f_20110},
{"f_20106ChickenBridge.scm",(void*)f_20106},
{"f_20047ChickenBridge.scm",(void*)f_20047},
{"f_20064ChickenBridge.scm",(void*)f_20064},
{"f_20074ChickenBridge.scm",(void*)f_20074},
{"f_20050ChickenBridge.scm",(void*)f_20050},
{"f_20009ChickenBridge.scm",(void*)f_20009},
{"f_20017ChickenBridge.scm",(void*)f_20017},
{"f_20019ChickenBridge.scm",(void*)f_20019},
{"f_20040ChickenBridge.scm",(void*)f_20040},
{"f_19865ChickenBridge.scm",(void*)f_19865},
{"f_19975ChickenBridge.scm",(void*)f_19975},
{"f_19934ChickenBridge.scm",(void*)f_19934},
{"f_19967ChickenBridge.scm",(void*)f_19967},
{"f_19963ChickenBridge.scm",(void*)f_19963},
{"f_19948ChickenBridge.scm",(void*)f_19948},
{"f_19872ChickenBridge.scm",(void*)f_19872},
{"f_19880ChickenBridge.scm",(void*)f_19880},
{"f_19925ChickenBridge.scm",(void*)f_19925},
{"f_19913ChickenBridge.scm",(void*)f_19913},
{"f_19897ChickenBridge.scm",(void*)f_19897},
{"f_19098ChickenBridge.scm",(void*)f_19098},
{"f_19415ChickenBridge.scm",(void*)f_19415},
{"f_19422ChickenBridge.scm",(void*)f_19422},
{"f_19827ChickenBridge.scm",(void*)f_19827},
{"f_19842ChickenBridge.scm",(void*)f_19842},
{"f_19834ChickenBridge.scm",(void*)f_19834},
{"f_19798ChickenBridge.scm",(void*)f_19798},
{"f_19802ChickenBridge.scm",(void*)f_19802},
{"f_19763ChickenBridge.scm",(void*)f_19763},
{"f_19767ChickenBridge.scm",(void*)f_19767},
{"f_19728ChickenBridge.scm",(void*)f_19728},
{"f_19732ChickenBridge.scm",(void*)f_19732},
{"f_19425ChickenBridge.scm",(void*)f_19425},
{"f_19692ChickenBridge.scm",(void*)f_19692},
{"f_19707ChickenBridge.scm",(void*)f_19707},
{"f_19699ChickenBridge.scm",(void*)f_19699},
{"f_19663ChickenBridge.scm",(void*)f_19663},
{"f_19667ChickenBridge.scm",(void*)f_19667},
{"f_19628ChickenBridge.scm",(void*)f_19628},
{"f_19632ChickenBridge.scm",(void*)f_19632},
{"f_19593ChickenBridge.scm",(void*)f_19593},
{"f_19597ChickenBridge.scm",(void*)f_19597},
{"f_19428ChickenBridge.scm",(void*)f_19428},
{"f_19557ChickenBridge.scm",(void*)f_19557},
{"f_19572ChickenBridge.scm",(void*)f_19572},
{"f_19564ChickenBridge.scm",(void*)f_19564},
{"f_19528ChickenBridge.scm",(void*)f_19528},
{"f_19532ChickenBridge.scm",(void*)f_19532},
{"f_19493ChickenBridge.scm",(void*)f_19493},
{"f_19497ChickenBridge.scm",(void*)f_19497},
{"f_19458ChickenBridge.scm",(void*)f_19458},
{"f_19462ChickenBridge.scm",(void*)f_19462},
{"f_19431ChickenBridge.scm",(void*)f_19431},
{"f_19434ChickenBridge.scm",(void*)f_19434},
{"f_19102ChickenBridge.scm",(void*)f_19102},
{"f_19105ChickenBridge.scm",(void*)f_19105},
{"f_19379ChickenBridge.scm",(void*)f_19379},
{"f_19383ChickenBridge.scm",(void*)f_19383},
{"f_19386ChickenBridge.scm",(void*)f_19386},
{"f_19389ChickenBridge.scm",(void*)f_19389},
{"f_19392ChickenBridge.scm",(void*)f_19392},
{"f_19405ChickenBridge.scm",(void*)f_19405},
{"f_19395ChickenBridge.scm",(void*)f_19395},
{"f_19111ChickenBridge.scm",(void*)f_19111},
{"f_19118ChickenBridge.scm",(void*)f_19118},
{"f_19349ChickenBridge.scm",(void*)f_19349},
{"f_19364ChickenBridge.scm",(void*)f_19364},
{"f_19356ChickenBridge.scm",(void*)f_19356},
{"f_19320ChickenBridge.scm",(void*)f_19320},
{"f_19324ChickenBridge.scm",(void*)f_19324},
{"f_19285ChickenBridge.scm",(void*)f_19285},
{"f_19289ChickenBridge.scm",(void*)f_19289},
{"f_19121ChickenBridge.scm",(void*)f_19121},
{"f_19249ChickenBridge.scm",(void*)f_19249},
{"f_19264ChickenBridge.scm",(void*)f_19264},
{"f_19256ChickenBridge.scm",(void*)f_19256},
{"f_19220ChickenBridge.scm",(void*)f_19220},
{"f_19224ChickenBridge.scm",(void*)f_19224},
{"f_19185ChickenBridge.scm",(void*)f_19185},
{"f_19189ChickenBridge.scm",(void*)f_19189},
{"f_19124ChickenBridge.scm",(void*)f_19124},
{"f_19127ChickenBridge.scm",(void*)f_19127},
{"f_19142ChickenBridge.scm",(void*)f_19142},
{"f_19164ChickenBridge.scm",(void*)f_19164},
{"f_19148ChickenBridge.scm",(void*)f_19148},
{"f_19156ChickenBridge.scm",(void*)f_19156},
{"f_19130ChickenBridge.scm",(void*)f_19130},
{"f_19133ChickenBridge.scm",(void*)f_19133},
{"f_19015ChickenBridge.scm",(void*)f_19015},
{"f_19006ChickenBridge.scm",(void*)f_19006},
{"f_18997ChickenBridge.scm",(void*)f_18997},
{"f_18979ChickenBridge.scm",(void*)f_18979},
{"f_18961ChickenBridge.scm",(void*)f_18961},
{"f_18943ChickenBridge.scm",(void*)f_18943},
{"f_18934ChickenBridge.scm",(void*)f_18934},
{"f_18925ChickenBridge.scm",(void*)f_18925},
{"f_18703ChickenBridge.scm",(void*)f_18703},
{"f_18753ChickenBridge.scm",(void*)f_18753},
{"f_18898ChickenBridge.scm",(void*)f_18898},
{"f_18779ChickenBridge.scm",(void*)f_18779},
{"f_18894ChickenBridge.scm",(void*)f_18894},
{"f_18879ChickenBridge.scm",(void*)f_18879},
{"f_18860ChickenBridge.scm",(void*)f_18860},
{"f_18833ChickenBridge.scm",(void*)f_18833},
{"f_18786ChickenBridge.scm",(void*)f_18786},
{"f_18756ChickenBridge.scm",(void*)f_18756},
{"f_18706ChickenBridge.scm",(void*)f_18706},
{"f_18712ChickenBridge.scm",(void*)f_18712},
{"f_18728ChickenBridge.scm",(void*)f_18728},
{"f_18731ChickenBridge.scm",(void*)f_18731},
{"f_18229ChickenBridge.scm",(void*)f_18229},
{"f_18693ChickenBridge.scm",(void*)f_18693},
{"f_18233ChickenBridge.scm",(void*)f_18233},
{"f_18665ChickenBridge.scm",(void*)f_18665},
{"f_18680ChickenBridge.scm",(void*)f_18680},
{"f_18672ChickenBridge.scm",(void*)f_18672},
{"f_18636ChickenBridge.scm",(void*)f_18636},
{"f_18640ChickenBridge.scm",(void*)f_18640},
{"f_18601ChickenBridge.scm",(void*)f_18601},
{"f_18605ChickenBridge.scm",(void*)f_18605},
{"f_18566ChickenBridge.scm",(void*)f_18566},
{"f_18570ChickenBridge.scm",(void*)f_18570},
{"f_18236ChickenBridge.scm",(void*)f_18236},
{"f_18530ChickenBridge.scm",(void*)f_18530},
{"f_18545ChickenBridge.scm",(void*)f_18545},
{"f_18537ChickenBridge.scm",(void*)f_18537},
{"f_18501ChickenBridge.scm",(void*)f_18501},
{"f_18505ChickenBridge.scm",(void*)f_18505},
{"f_18466ChickenBridge.scm",(void*)f_18466},
{"f_18470ChickenBridge.scm",(void*)f_18470},
{"f_18431ChickenBridge.scm",(void*)f_18431},
{"f_18435ChickenBridge.scm",(void*)f_18435},
{"f_18239ChickenBridge.scm",(void*)f_18239},
{"f_18395ChickenBridge.scm",(void*)f_18395},
{"f_18410ChickenBridge.scm",(void*)f_18410},
{"f_18402ChickenBridge.scm",(void*)f_18402},
{"f_18366ChickenBridge.scm",(void*)f_18366},
{"f_18370ChickenBridge.scm",(void*)f_18370},
{"f_18331ChickenBridge.scm",(void*)f_18331},
{"f_18335ChickenBridge.scm",(void*)f_18335},
{"f_18296ChickenBridge.scm",(void*)f_18296},
{"f_18300ChickenBridge.scm",(void*)f_18300},
{"f_18242ChickenBridge.scm",(void*)f_18242},
{"f_18245ChickenBridge.scm",(void*)f_18245},
{"f_18248ChickenBridge.scm",(void*)f_18248},
{"f_18263ChickenBridge.scm",(void*)f_18263},
{"f_18275ChickenBridge.scm",(void*)f_18275},
{"f_18254ChickenBridge.scm",(void*)f_18254},
{"f_18257ChickenBridge.scm",(void*)f_18257},
{"f_18153ChickenBridge.scm",(void*)f_18153},
{"f_18157ChickenBridge.scm",(void*)f_18157},
{"f_18176ChickenBridge.scm",(void*)f_18176},
{"f_18186ChickenBridge.scm",(void*)f_18186},
{"f_18188ChickenBridge.scm",(void*)f_18188},
{"f_18205ChickenBridge.scm",(void*)f_18205},
{"f_18208ChickenBridge.scm",(void*)f_18208},
{"f_18219ChickenBridge.scm",(void*)f_18219},
{"f_18160ChickenBridge.scm",(void*)f_18160},
{"f_17890ChickenBridge.scm",(void*)f_17890},
{"f_18143ChickenBridge.scm",(void*)f_18143},
{"f_17894ChickenBridge.scm",(void*)f_17894},
{"f_18115ChickenBridge.scm",(void*)f_18115},
{"f_18130ChickenBridge.scm",(void*)f_18130},
{"f_18122ChickenBridge.scm",(void*)f_18122},
{"f_18086ChickenBridge.scm",(void*)f_18086},
{"f_18090ChickenBridge.scm",(void*)f_18090},
{"f_18051ChickenBridge.scm",(void*)f_18051},
{"f_18055ChickenBridge.scm",(void*)f_18055},
{"f_17897ChickenBridge.scm",(void*)f_17897},
{"f_18015ChickenBridge.scm",(void*)f_18015},
{"f_18030ChickenBridge.scm",(void*)f_18030},
{"f_18022ChickenBridge.scm",(void*)f_18022},
{"f_17986ChickenBridge.scm",(void*)f_17986},
{"f_17990ChickenBridge.scm",(void*)f_17990},
{"f_17951ChickenBridge.scm",(void*)f_17951},
{"f_17955ChickenBridge.scm",(void*)f_17955},
{"f_17900ChickenBridge.scm",(void*)f_17900},
{"f_17903ChickenBridge.scm",(void*)f_17903},
{"f_17906ChickenBridge.scm",(void*)f_17906},
{"f_17918ChickenBridge.scm",(void*)f_17918},
{"f_17930ChickenBridge.scm",(void*)f_17930},
{"f_17912ChickenBridge.scm",(void*)f_17912},
{"f_17854ChickenBridge.scm",(void*)f_17854},
{"f_17858ChickenBridge.scm",(void*)f_17858},
{"f_17880ChickenBridge.scm",(void*)f_17880},
{"f_17874ChickenBridge.scm",(void*)f_17874},
{"f_17867ChickenBridge.scm",(void*)f_17867},
{"f_17607ChickenBridge.scm",(void*)f_17607},
{"f_17611ChickenBridge.scm",(void*)f_17611},
{"f_17824ChickenBridge.scm",(void*)f_17824},
{"f_17839ChickenBridge.scm",(void*)f_17839},
{"f_17831ChickenBridge.scm",(void*)f_17831},
{"f_17795ChickenBridge.scm",(void*)f_17795},
{"f_17799ChickenBridge.scm",(void*)f_17799},
{"f_17760ChickenBridge.scm",(void*)f_17760},
{"f_17764ChickenBridge.scm",(void*)f_17764},
{"f_17614ChickenBridge.scm",(void*)f_17614},
{"f_17724ChickenBridge.scm",(void*)f_17724},
{"f_17739ChickenBridge.scm",(void*)f_17739},
{"f_17731ChickenBridge.scm",(void*)f_17731},
{"f_17695ChickenBridge.scm",(void*)f_17695},
{"f_17699ChickenBridge.scm",(void*)f_17699},
{"f_17660ChickenBridge.scm",(void*)f_17660},
{"f_17664ChickenBridge.scm",(void*)f_17664},
{"f_17617ChickenBridge.scm",(void*)f_17617},
{"f_17620ChickenBridge.scm",(void*)f_17620},
{"f_17623ChickenBridge.scm",(void*)f_17623},
{"f_17631ChickenBridge.scm",(void*)f_17631},
{"f_17639ChickenBridge.scm",(void*)f_17639},
{"f_17629ChickenBridge.scm",(void*)f_17629},
{"f_17392ChickenBridge.scm",(void*)f_17392},
{"f_17396ChickenBridge.scm",(void*)f_17396},
{"f_17605ChickenBridge.scm",(void*)f_17605},
{"f_17558ChickenBridge.scm",(void*)f_17558},
{"f_17570ChickenBridge.scm",(void*)f_17570},
{"f_17426ChickenBridge.scm",(void*)f_17426},
{"f_17429ChickenBridge.scm",(void*)f_17429},
{"f_17435ChickenBridge.scm",(void*)f_17435},
{"f_17438ChickenBridge.scm",(void*)f_17438},
{"f_17526ChickenBridge.scm",(void*)f_17526},
{"f_17441ChickenBridge.scm",(void*)f_17441},
{"f_17520ChickenBridge.scm",(void*)f_17520},
{"f_17447ChickenBridge.scm",(void*)f_17447},
{"f_17450ChickenBridge.scm",(void*)f_17450},
{"f_17402ChickenBridge.scm",(void*)f_17402},
{"f_17405ChickenBridge.scm",(void*)f_17405},
{"f_17412ChickenBridge.scm",(void*)f_17412},
{"f_16922ChickenBridge.scm",(void*)f_16922},
{"f_16926ChickenBridge.scm",(void*)f_16926},
{"f_17362ChickenBridge.scm",(void*)f_17362},
{"f_17377ChickenBridge.scm",(void*)f_17377},
{"f_17369ChickenBridge.scm",(void*)f_17369},
{"f_17333ChickenBridge.scm",(void*)f_17333},
{"f_17337ChickenBridge.scm",(void*)f_17337},
{"f_17298ChickenBridge.scm",(void*)f_17298},
{"f_17302ChickenBridge.scm",(void*)f_17302},
{"f_17263ChickenBridge.scm",(void*)f_17263},
{"f_17267ChickenBridge.scm",(void*)f_17267},
{"f_16929ChickenBridge.scm",(void*)f_16929},
{"f_17227ChickenBridge.scm",(void*)f_17227},
{"f_17242ChickenBridge.scm",(void*)f_17242},
{"f_17234ChickenBridge.scm",(void*)f_17234},
{"f_17198ChickenBridge.scm",(void*)f_17198},
{"f_17202ChickenBridge.scm",(void*)f_17202},
{"f_17163ChickenBridge.scm",(void*)f_17163},
{"f_17167ChickenBridge.scm",(void*)f_17167},
{"f_17128ChickenBridge.scm",(void*)f_17128},
{"f_17132ChickenBridge.scm",(void*)f_17132},
{"f_16932ChickenBridge.scm",(void*)f_16932},
{"f_17092ChickenBridge.scm",(void*)f_17092},
{"f_17107ChickenBridge.scm",(void*)f_17107},
{"f_17099ChickenBridge.scm",(void*)f_17099},
{"f_17063ChickenBridge.scm",(void*)f_17063},
{"f_17067ChickenBridge.scm",(void*)f_17067},
{"f_17028ChickenBridge.scm",(void*)f_17028},
{"f_17032ChickenBridge.scm",(void*)f_17032},
{"f_16993ChickenBridge.scm",(void*)f_16993},
{"f_16997ChickenBridge.scm",(void*)f_16997},
{"f_16935ChickenBridge.scm",(void*)f_16935},
{"f_16938ChickenBridge.scm",(void*)f_16938},
{"f_16941ChickenBridge.scm",(void*)f_16941},
{"f_16964ChickenBridge.scm",(void*)f_16964},
{"f_16972ChickenBridge.scm",(void*)f_16972},
{"f_16947ChickenBridge.scm",(void*)f_16947},
{"f_16950ChickenBridge.scm",(void*)f_16950},
{"f_16842ChickenBridge.scm",(void*)f_16842},
{"f_16833ChickenBridge.scm",(void*)f_16833},
{"f_16761ChickenBridge.scm",(void*)f_16761},
{"f_16765ChickenBridge.scm",(void*)f_16765},
{"f_16768ChickenBridge.scm",(void*)f_16768},
{"f_16506ChickenBridge.scm",(void*)f_16506},
{"f_16510ChickenBridge.scm",(void*)f_16510},
{"f_16731ChickenBridge.scm",(void*)f_16731},
{"f_16746ChickenBridge.scm",(void*)f_16746},
{"f_16738ChickenBridge.scm",(void*)f_16738},
{"f_16702ChickenBridge.scm",(void*)f_16702},
{"f_16706ChickenBridge.scm",(void*)f_16706},
{"f_16667ChickenBridge.scm",(void*)f_16667},
{"f_16671ChickenBridge.scm",(void*)f_16671},
{"f_16513ChickenBridge.scm",(void*)f_16513},
{"f_16631ChickenBridge.scm",(void*)f_16631},
{"f_16646ChickenBridge.scm",(void*)f_16646},
{"f_16638ChickenBridge.scm",(void*)f_16638},
{"f_16602ChickenBridge.scm",(void*)f_16602},
{"f_16606ChickenBridge.scm",(void*)f_16606},
{"f_16567ChickenBridge.scm",(void*)f_16567},
{"f_16571ChickenBridge.scm",(void*)f_16571},
{"f_16516ChickenBridge.scm",(void*)f_16516},
{"f_16519ChickenBridge.scm",(void*)f_16519},
{"f_16522ChickenBridge.scm",(void*)f_16522},
{"f_16534ChickenBridge.scm",(void*)f_16534},
{"f_16546ChickenBridge.scm",(void*)f_16546},
{"f_16528ChickenBridge.scm",(void*)f_16528},
{"f_16391ChickenBridge.scm",(void*)f_16391},
{"f_16504ChickenBridge.scm",(void*)f_16504},
{"f_16401ChickenBridge.scm",(void*)f_16401},
{"f_16489ChickenBridge.scm",(void*)f_16489},
{"f_16500ChickenBridge.scm",(void*)f_16500},
{"f_16496ChickenBridge.scm",(void*)f_16496},
{"f_16404ChickenBridge.scm",(void*)f_16404},
{"f_16486ChickenBridge.scm",(void*)f_16486},
{"f_16412ChickenBridge.scm",(void*)f_16412},
{"f_16476ChickenBridge.scm",(void*)f_16476},
{"f_16421ChickenBridge.scm",(void*)f_16421},
{"f_16440ChickenBridge.scm",(void*)f_16440},
{"f_16469ChickenBridge.scm",(void*)f_16469},
{"f_16450ChickenBridge.scm",(void*)f_16450},
{"f_16465ChickenBridge.scm",(void*)f_16465},
{"f_16453ChickenBridge.scm",(void*)f_16453},
{"f_16424ChickenBridge.scm",(void*)f_16424},
{"f_16434ChickenBridge.scm",(void*)f_16434},
{"f_16415ChickenBridge.scm",(void*)f_16415},
{"f_16418ChickenBridge.scm",(void*)f_16418},
{"f_16345ChickenBridge.scm",(void*)f_16345},
{"f_16336ChickenBridge.scm",(void*)f_16336},
{"f_16035ChickenBridge.scm",(void*)f_16035},
{"f_16042ChickenBridge.scm",(void*)f_16042},
{"f_16331ChickenBridge.scm",(void*)f_16331},
{"f_16045ChickenBridge.scm",(void*)f_16045},
{"f_16316ChickenBridge.scm",(void*)f_16316},
{"f_16308ChickenBridge.scm",(void*)f_16308},
{"f_16300ChickenBridge.scm",(void*)f_16300},
{"f_16303ChickenBridge.scm",(void*)f_16303},
{"f_16271ChickenBridge.scm",(void*)f_16271},
{"f_16294ChickenBridge.scm",(void*)f_16294},
{"f_16277ChickenBridge.scm",(void*)f_16277},
{"f_16281ChickenBridge.scm",(void*)f_16281},
{"f_16048ChickenBridge.scm",(void*)f_16048},
{"f_16054ChickenBridge.scm",(void*)f_16054},
{"f_16146ChickenBridge.scm",(void*)f_16146},
{"f_16258ChickenBridge.scm",(void*)f_16258},
{"f_16265ChickenBridge.scm",(void*)f_16265},
{"f_16169ChickenBridge.scm",(void*)f_16169},
{"f_16171ChickenBridge.scm",(void*)f_16171},
{"f_16220ChickenBridge.scm",(void*)f_16220},
{"f_16255ChickenBridge.scm",(void*)f_16255},
{"f_16244ChickenBridge.scm",(void*)f_16244},
{"f_16389ChickenBridge.scm",(void*)f_16389},
{"f_16364ChickenBridge.scm",(void*)f_16364},
{"f_16385ChickenBridge.scm",(void*)f_16385},
{"f_16381ChickenBridge.scm",(void*)f_16381},
{"f_16373ChickenBridge.scm",(void*)f_16373},
{"f_16237ChickenBridge.scm",(void*)f_16237},
{"f_16230ChickenBridge.scm",(void*)f_16230},
{"f_16178ChickenBridge.scm",(void*)f_16178},
{"f_16218ChickenBridge.scm",(void*)f_16218},
{"f_16182ChickenBridge.scm",(void*)f_16182},
{"f_16214ChickenBridge.scm",(void*)f_16214},
{"f_16201ChickenBridge.scm",(void*)f_16201},
{"f_16209ChickenBridge.scm",(void*)f_16209},
{"f_16205ChickenBridge.scm",(void*)f_16205},
{"f_16185ChickenBridge.scm",(void*)f_16185},
{"f_16188ChickenBridge.scm",(void*)f_16188},
{"f_16162ChickenBridge.scm",(void*)f_16162},
{"f_16149ChickenBridge.scm",(void*)f_16149},
{"f_16158ChickenBridge.scm",(void*)f_16158},
{"f_16153ChickenBridge.scm",(void*)f_16153},
{"f_16060ChickenBridge.scm",(void*)f_16060},
{"f_16140ChickenBridge.scm",(void*)f_16140},
{"f_16120ChickenBridge.scm",(void*)f_16120},
{"f_16126ChickenBridge.scm",(void*)f_16126},
{"f_16137ChickenBridge.scm",(void*)f_16137},
{"f_16117ChickenBridge.scm",(void*)f_16117},
{"f_16105ChickenBridge.scm",(void*)f_16105},
{"f_16108ChickenBridge.scm",(void*)f_16108},
{"f_16063ChickenBridge.scm",(void*)f_16063},
{"f_16099ChickenBridge.scm",(void*)f_16099},
{"f_16094ChickenBridge.scm",(void*)f_16094},
{"f_16066ChickenBridge.scm",(void*)f_16066},
{"f_16079ChickenBridge.scm",(void*)f_16079},
{"f_16069ChickenBridge.scm",(void*)f_16069},
{"f_16072ChickenBridge.scm",(void*)f_16072},
{"f_16075ChickenBridge.scm",(void*)f_16075},
{"f_15912ChickenBridge.scm",(void*)f_15912},
{"f_15971ChickenBridge.scm",(void*)f_15971},
{"f_15981ChickenBridge.scm",(void*)f_15981},
{"f_15983ChickenBridge.scm",(void*)f_15983},
{"f_16012ChickenBridge.scm",(void*)f_16012},
{"f_16017ChickenBridge.scm",(void*)f_16017},
{"f_16002ChickenBridge.scm",(void*)f_16002},
{"f_15933ChickenBridge.scm",(void*)f_15933},
{"f_15965ChickenBridge.scm",(void*)f_15965},
{"f_15893ChickenBridge.scm",(void*)f_15893},
{"f_15900ChickenBridge.scm",(void*)f_15900},
{"f_15907ChickenBridge.scm",(void*)f_15907},
{"f_15874ChickenBridge.scm",(void*)f_15874},
{"f_15881ChickenBridge.scm",(void*)f_15881},
{"f_15888ChickenBridge.scm",(void*)f_15888},
{"f_15694ChickenBridge.scm",(void*)f_15694},
{"f_15698ChickenBridge.scm",(void*)f_15698},
{"f_15701ChickenBridge.scm",(void*)f_15701},
{"f_15704ChickenBridge.scm",(void*)f_15704},
{"f_15707ChickenBridge.scm",(void*)f_15707},
{"f_15864ChickenBridge.scm",(void*)f_15864},
{"f_15871ChickenBridge.scm",(void*)f_15871},
{"f_15710ChickenBridge.scm",(void*)f_15710},
{"f_15713ChickenBridge.scm",(void*)f_15713},
{"f_15719ChickenBridge.scm",(void*)f_15719},
{"f_15725ChickenBridge.scm",(void*)f_15725},
{"f_15788ChickenBridge.scm",(void*)f_15788},
{"f_15802ChickenBridge.scm",(void*)f_15802},
{"f_15728ChickenBridge.scm",(void*)f_15728},
{"f_15731ChickenBridge.scm",(void*)f_15731},
{"f_15737ChickenBridge.scm",(void*)f_15737},
{"f_15750ChickenBridge.scm",(void*)f_15750},
{"f_15740ChickenBridge.scm",(void*)f_15740},
{"f_15743ChickenBridge.scm",(void*)f_15743},
{"f_15684ChickenBridge.scm",(void*)f_15684},
{"f_15629ChickenBridge.scm",(void*)f_15629},
{"f_15620ChickenBridge.scm",(void*)f_15620},
{"f_15503ChickenBridge.scm",(void*)f_15503},
{"f_15494ChickenBridge.scm",(void*)f_15494},
{"f_15485ChickenBridge.scm",(void*)f_15485},
{"f_15476ChickenBridge.scm",(void*)f_15476},
{"f_15467ChickenBridge.scm",(void*)f_15467},
{"f_15449ChickenBridge.scm",(void*)f_15449},
{"f_15440ChickenBridge.scm",(void*)f_15440},
{"f_15431ChickenBridge.scm",(void*)f_15431},
{"f_15413ChickenBridge.scm",(void*)f_15413},
{"f_15404ChickenBridge.scm",(void*)f_15404},
{"f_15395ChickenBridge.scm",(void*)f_15395},
{"f_15380ChickenBridge.scm",(void*)f_15380},
{"f_15335ChickenBridge.scm",(void*)f_15335},
{"f_15317ChickenBridge.scm",(void*)f_15317},
{"f_15308ChickenBridge.scm",(void*)f_15308},
{"f_15281ChickenBridge.scm",(void*)f_15281},
{"f_15263ChickenBridge.scm",(void*)f_15263},
{"f_15245ChickenBridge.scm",(void*)f_15245},
{"f_15236ChickenBridge.scm",(void*)f_15236},
{"f_15224ChickenBridge.scm",(void*)f_15224},
{"f_15028ChickenBridge.scm",(void*)f_15028},
{"f_15032ChickenBridge.scm",(void*)f_15032},
{"f_15181ChickenBridge.scm",(void*)f_15181},
{"f_15207ChickenBridge.scm",(void*)f_15207},
{"f_15192ChickenBridge.scm",(void*)f_15192},
{"f_15038ChickenBridge.scm",(void*)f_15038},
{"f_15043ChickenBridge.scm",(void*)f_15043},
{"f_15047ChickenBridge.scm",(void*)f_15047},
{"f_15050ChickenBridge.scm",(void*)f_15050},
{"f_15053ChickenBridge.scm",(void*)f_15053},
{"f_15056ChickenBridge.scm",(void*)f_15056},
{"f_15059ChickenBridge.scm",(void*)f_15059},
{"f_15062ChickenBridge.scm",(void*)f_15062},
{"f_15067ChickenBridge.scm",(void*)f_15067},
{"f_15161ChickenBridge.scm",(void*)f_15161},
{"f_15168ChickenBridge.scm",(void*)f_15168},
{"f_15077ChickenBridge.scm",(void*)f_15077},
{"f_15098ChickenBridge.scm",(void*)f_15098},
{"f_15102ChickenBridge.scm",(void*)f_15102},
{"f_15106ChickenBridge.scm",(void*)f_15106},
{"f_15108ChickenBridge.scm",(void*)f_15108},
{"f_15118ChickenBridge.scm",(void*)f_15118},
{"f_15080ChickenBridge.scm",(void*)f_15080},
{"f_15083ChickenBridge.scm",(void*)f_15083},
{"f_14902ChickenBridge.scm",(void*)f_14902},
{"f_14908ChickenBridge.scm",(void*)f_14908},
{"f_14912ChickenBridge.scm",(void*)f_14912},
{"f_14930ChickenBridge.scm",(void*)f_14930},
{"f_14933ChickenBridge.scm",(void*)f_14933},
{"f_14937ChickenBridge.scm",(void*)f_14937},
{"f_14940ChickenBridge.scm",(void*)f_14940},
{"f_14992ChickenBridge.scm",(void*)f_14992},
{"f_15003ChickenBridge.scm",(void*)f_15003},
{"f_14943ChickenBridge.scm",(void*)f_14943},
{"f_14953ChickenBridge.scm",(void*)f_14953},
{"f_14955ChickenBridge.scm",(void*)f_14955},
{"f_14799ChickenBridge.scm",(void*)f_14799},
{"f_14823ChickenBridge.scm",(void*)f_14823},
{"f_14827ChickenBridge.scm",(void*)f_14827},
{"f_14853ChickenBridge.scm",(void*)f_14853},
{"f_14863ChickenBridge.scm",(void*)f_14863},
{"f_14900ChickenBridge.scm",(void*)f_14900},
{"f_14892ChickenBridge.scm",(void*)f_14892},
{"f_14830ChickenBridge.scm",(void*)f_14830},
{"f_14800ChickenBridge.scm",(void*)f_14800},
{"f_14804ChickenBridge.scm",(void*)f_14804},
{"f_14807ChickenBridge.scm",(void*)f_14807},
{"f_14969ChickenBridge.scm",(void*)f_14969},
{"f_14972ChickenBridge.scm",(void*)f_14972},
{"f_14979ChickenBridge.scm",(void*)f_14979},
{"f_14913ChickenBridge.scm",(void*)f_14913},
{"f_14917ChickenBridge.scm",(void*)f_14917},
{"f_14920ChickenBridge.scm",(void*)f_14920},
{"f_14389ChickenBridge.scm",(void*)f_14389},
{"f_14768ChickenBridge.scm",(void*)f_14768},
{"f_14762ChickenBridge.scm",(void*)f_14762},
{"f_14393ChickenBridge.scm",(void*)f_14393},
{"f_14746ChickenBridge.scm",(void*)f_14746},
{"f_14396ChickenBridge.scm",(void*)f_14396},
{"f_14732ChickenBridge.scm",(void*)f_14732},
{"f_14728ChickenBridge.scm",(void*)f_14728},
{"f_14399ChickenBridge.scm",(void*)f_14399},
{"f_14721ChickenBridge.scm",(void*)f_14721},
{"f_14717ChickenBridge.scm",(void*)f_14717},
{"f_14402ChickenBridge.scm",(void*)f_14402},
{"f_14405ChickenBridge.scm",(void*)f_14405},
{"f_14705ChickenBridge.scm",(void*)f_14705},
{"f_14697ChickenBridge.scm",(void*)f_14697},
{"f_14701ChickenBridge.scm",(void*)f_14701},
{"f_14689ChickenBridge.scm",(void*)f_14689},
{"f_14693ChickenBridge.scm",(void*)f_14693},
{"f_14563ChickenBridge.scm",(void*)f_14563},
{"f_14678ChickenBridge.scm",(void*)f_14678},
{"f_14682ChickenBridge.scm",(void*)f_14682},
{"f_14670ChickenBridge.scm",(void*)f_14670},
{"f_14674ChickenBridge.scm",(void*)f_14674},
{"f_14566ChickenBridge.scm",(void*)f_14566},
{"f_14570ChickenBridge.scm",(void*)f_14570},
{"f_14575ChickenBridge.scm",(void*)f_14575},
{"f_14585ChickenBridge.scm",(void*)f_14585},
{"f_14588ChickenBridge.scm",(void*)f_14588},
{"f_14469ChickenBridge.scm",(void*)f_14469},
{"f_14532ChickenBridge.scm",(void*)f_14532},
{"f_14553ChickenBridge.scm",(void*)f_14553},
{"f_14494ChickenBridge.scm",(void*)f_14494},
{"f_14523ChickenBridge.scm",(void*)f_14523},
{"f_14472ChickenBridge.scm",(void*)f_14472},
{"f_14489ChickenBridge.scm",(void*)f_14489},
{"f_14485ChickenBridge.scm",(void*)f_14485},
{"f_13935ChickenBridge.scm",(void*)f_13935},
{"f_13939ChickenBridge.scm",(void*)f_13939},
{"f_13927ChickenBridge.scm",(void*)f_13927},
{"f_13852ChickenBridge.scm",(void*)f_13852},
{"f_13913ChickenBridge.scm",(void*)f_13913},
{"f_13856ChickenBridge.scm",(void*)f_13856},
{"f_13864ChickenBridge.scm",(void*)f_13864},
{"f_13897ChickenBridge.scm",(void*)f_13897},
{"f_13874ChickenBridge.scm",(void*)f_13874},
{"f_13877ChickenBridge.scm",(void*)f_13877},
{"f_14449ChickenBridge.scm",(void*)f_14449},
{"f_14419ChickenBridge.scm",(void*)f_14419},
{"f_14408ChickenBridge.scm",(void*)f_14408},
{"f_14332ChickenBridge.scm",(void*)f_14332},
{"f_14340ChickenBridge.scm",(void*)f_14340},
{"f_14344ChickenBridge.scm",(void*)f_14344},
{"f_14348ChickenBridge.scm",(void*)f_14348},
{"f_14354ChickenBridge.scm",(void*)f_14354},
{"f_14364ChickenBridge.scm",(void*)f_14364},
{"f_14120ChickenBridge.scm",(void*)f_14120},
{"f_14188ChickenBridge.scm",(void*)f_14188},
{"f_14191ChickenBridge.scm",(void*)f_14191},
{"f_14194ChickenBridge.scm",(void*)f_14194},
{"f_14197ChickenBridge.scm",(void*)f_14197},
{"f_14200ChickenBridge.scm",(void*)f_14200},
{"f_14298ChickenBridge.scm",(void*)f_14298},
{"f_14308ChickenBridge.scm",(void*)f_14308},
{"f_14266ChickenBridge.scm",(void*)f_14266},
{"f_14276ChickenBridge.scm",(void*)f_14276},
{"f_14217ChickenBridge.scm",(void*)f_14217},
{"f_14236ChickenBridge.scm",(void*)f_14236},
{"f_14246ChickenBridge.scm",(void*)f_14246},
{"f_14227ChickenBridge.scm",(void*)f_14227},
{"f_14203ChickenBridge.scm",(void*)f_14203},
{"f_14156ChickenBridge.scm",(void*)f_14156},
{"f_14166ChickenBridge.scm",(void*)f_14166},
{"f_14139ChickenBridge.scm",(void*)f_14139},
{"f_14146ChickenBridge.scm",(void*)f_14146},
{"f_14122ChickenBridge.scm",(void*)f_14122},
{"f_14129ChickenBridge.scm",(void*)f_14129},
{"f_13941ChickenBridge.scm",(void*)f_13941},
{"f_13949ChickenBridge.scm",(void*)f_13949},
{"f_13953ChickenBridge.scm",(void*)f_13953},
{"f_13955ChickenBridge.scm",(void*)f_13955},
{"f_13965ChickenBridge.scm",(void*)f_13965},
{"f_14096ChickenBridge.scm",(void*)f_14096},
{"f_14045ChickenBridge.scm",(void*)f_14045},
{"f_14048ChickenBridge.scm",(void*)f_14048},
{"f_14059ChickenBridge.scm",(void*)f_14059},
{"f_14011ChickenBridge.scm",(void*)f_14011},
{"f_13980ChickenBridge.scm",(void*)f_13980},
{"f_13983ChickenBridge.scm",(void*)f_13983},
{"f_13968ChickenBridge.scm",(void*)f_13968},
{"f_13529ChickenBridge.scm",(void*)f_13529},
{"f_13846ChickenBridge.scm",(void*)f_13846},
{"f_13775ChickenBridge.scm",(void*)f_13775},
{"f_13777ChickenBridge.scm",(void*)f_13777},
{"f_8322ChickenBridge.scm",(void*)f_8322},
{"f_13796ChickenBridge.scm",(void*)f_13796},
{"f_13799ChickenBridge.scm",(void*)f_13799},
{"f_13542ChickenBridge.scm",(void*)f_13542},
{"f_13618ChickenBridge.scm",(void*)f_13618},
{"f_13771ChickenBridge.scm",(void*)f_13771},
{"f_13755ChickenBridge.scm",(void*)f_13755},
{"f_13707ChickenBridge.scm",(void*)f_13707},
{"f_13721ChickenBridge.scm",(void*)f_13721},
{"f_13674ChickenBridge.scm",(void*)f_13674},
{"f_13649ChickenBridge.scm",(void*)f_13649},
{"f_13545ChickenBridge.scm",(void*)f_13545},
{"f_13553ChickenBridge.scm",(void*)f_13553},
{"f_13586ChickenBridge.scm",(void*)f_13586},
{"f_12056ChickenBridge.scm",(void*)f_12056},
{"f_13506ChickenBridge.scm",(void*)f_13506},
{"f_13521ChickenBridge.scm",(void*)f_13521},
{"f_13513ChickenBridge.scm",(void*)f_13513},
{"f_13477ChickenBridge.scm",(void*)f_13477},
{"f_13481ChickenBridge.scm",(void*)f_13481},
{"f_13442ChickenBridge.scm",(void*)f_13442},
{"f_13446ChickenBridge.scm",(void*)f_13446},
{"f_13407ChickenBridge.scm",(void*)f_13407},
{"f_13411ChickenBridge.scm",(void*)f_13411},
{"f_13372ChickenBridge.scm",(void*)f_13372},
{"f_13376ChickenBridge.scm",(void*)f_13376},
{"f_13337ChickenBridge.scm",(void*)f_13337},
{"f_13341ChickenBridge.scm",(void*)f_13341},
{"f_13302ChickenBridge.scm",(void*)f_13302},
{"f_13306ChickenBridge.scm",(void*)f_13306},
{"f_12060ChickenBridge.scm",(void*)f_12060},
{"f_13266ChickenBridge.scm",(void*)f_13266},
{"f_13281ChickenBridge.scm",(void*)f_13281},
{"f_13273ChickenBridge.scm",(void*)f_13273},
{"f_13237ChickenBridge.scm",(void*)f_13237},
{"f_13241ChickenBridge.scm",(void*)f_13241},
{"f_13202ChickenBridge.scm",(void*)f_13202},
{"f_13206ChickenBridge.scm",(void*)f_13206},
{"f_13167ChickenBridge.scm",(void*)f_13167},
{"f_13171ChickenBridge.scm",(void*)f_13171},
{"f_13132ChickenBridge.scm",(void*)f_13132},
{"f_13136ChickenBridge.scm",(void*)f_13136},
{"f_13097ChickenBridge.scm",(void*)f_13097},
{"f_13101ChickenBridge.scm",(void*)f_13101},
{"f_13062ChickenBridge.scm",(void*)f_13062},
{"f_13066ChickenBridge.scm",(void*)f_13066},
{"f_12063ChickenBridge.scm",(void*)f_12063},
{"f_13026ChickenBridge.scm",(void*)f_13026},
{"f_13041ChickenBridge.scm",(void*)f_13041},
{"f_13033ChickenBridge.scm",(void*)f_13033},
{"f_12997ChickenBridge.scm",(void*)f_12997},
{"f_13001ChickenBridge.scm",(void*)f_13001},
{"f_12962ChickenBridge.scm",(void*)f_12962},
{"f_12966ChickenBridge.scm",(void*)f_12966},
{"f_12927ChickenBridge.scm",(void*)f_12927},
{"f_12931ChickenBridge.scm",(void*)f_12931},
{"f_12892ChickenBridge.scm",(void*)f_12892},
{"f_12896ChickenBridge.scm",(void*)f_12896},
{"f_12857ChickenBridge.scm",(void*)f_12857},
{"f_12861ChickenBridge.scm",(void*)f_12861},
{"f_12822ChickenBridge.scm",(void*)f_12822},
{"f_12826ChickenBridge.scm",(void*)f_12826},
{"f_12066ChickenBridge.scm",(void*)f_12066},
{"f_12786ChickenBridge.scm",(void*)f_12786},
{"f_12801ChickenBridge.scm",(void*)f_12801},
{"f_12793ChickenBridge.scm",(void*)f_12793},
{"f_12757ChickenBridge.scm",(void*)f_12757},
{"f_12761ChickenBridge.scm",(void*)f_12761},
{"f_12722ChickenBridge.scm",(void*)f_12722},
{"f_12726ChickenBridge.scm",(void*)f_12726},
{"f_12687ChickenBridge.scm",(void*)f_12687},
{"f_12691ChickenBridge.scm",(void*)f_12691},
{"f_12652ChickenBridge.scm",(void*)f_12652},
{"f_12656ChickenBridge.scm",(void*)f_12656},
{"f_12617ChickenBridge.scm",(void*)f_12617},
{"f_12621ChickenBridge.scm",(void*)f_12621},
{"f_12582ChickenBridge.scm",(void*)f_12582},
{"f_12586ChickenBridge.scm",(void*)f_12586},
{"f_12069ChickenBridge.scm",(void*)f_12069},
{"f_12546ChickenBridge.scm",(void*)f_12546},
{"f_12561ChickenBridge.scm",(void*)f_12561},
{"f_12553ChickenBridge.scm",(void*)f_12553},
{"f_12517ChickenBridge.scm",(void*)f_12517},
{"f_12521ChickenBridge.scm",(void*)f_12521},
{"f_12482ChickenBridge.scm",(void*)f_12482},
{"f_12486ChickenBridge.scm",(void*)f_12486},
{"f_12447ChickenBridge.scm",(void*)f_12447},
{"f_12451ChickenBridge.scm",(void*)f_12451},
{"f_12412ChickenBridge.scm",(void*)f_12412},
{"f_12416ChickenBridge.scm",(void*)f_12416},
{"f_12377ChickenBridge.scm",(void*)f_12377},
{"f_12381ChickenBridge.scm",(void*)f_12381},
{"f_12342ChickenBridge.scm",(void*)f_12342},
{"f_12346ChickenBridge.scm",(void*)f_12346},
{"f_12072ChickenBridge.scm",(void*)f_12072},
{"f_12306ChickenBridge.scm",(void*)f_12306},
{"f_12321ChickenBridge.scm",(void*)f_12321},
{"f_12313ChickenBridge.scm",(void*)f_12313},
{"f_12277ChickenBridge.scm",(void*)f_12277},
{"f_12281ChickenBridge.scm",(void*)f_12281},
{"f_12242ChickenBridge.scm",(void*)f_12242},
{"f_12246ChickenBridge.scm",(void*)f_12246},
{"f_12207ChickenBridge.scm",(void*)f_12207},
{"f_12211ChickenBridge.scm",(void*)f_12211},
{"f_12172ChickenBridge.scm",(void*)f_12172},
{"f_12176ChickenBridge.scm",(void*)f_12176},
{"f_12137ChickenBridge.scm",(void*)f_12137},
{"f_12141ChickenBridge.scm",(void*)f_12141},
{"f_12102ChickenBridge.scm",(void*)f_12102},
{"f_12106ChickenBridge.scm",(void*)f_12106},
{"f_12075ChickenBridge.scm",(void*)f_12075},
{"f_12078ChickenBridge.scm",(void*)f_12078},
{"f_11837ChickenBridge.scm",(void*)f_11837},
{"f_11846ChickenBridge.scm",(void*)f_11846},
{"f_11850ChickenBridge.scm",(void*)f_11850},
{"f_12037ChickenBridge.scm",(void*)f_12037},
{"f_12022ChickenBridge.scm",(void*)f_12022},
{"f_11987ChickenBridge.scm",(void*)f_11987},
{"f_11967ChickenBridge.scm",(void*)f_11967},
{"f_11971ChickenBridge.scm",(void*)f_11971},
{"f_11957ChickenBridge.scm",(void*)f_11957},
{"f_11965ChickenBridge.scm",(void*)f_11965},
{"f_11924ChickenBridge.scm",(void*)f_11924},
{"f_11852ChickenBridge.scm",(void*)f_11852},
{"f_11919ChickenBridge.scm",(void*)f_11919},
{"f_11856ChickenBridge.scm",(void*)f_11856},
{"f_11892ChickenBridge.scm",(void*)f_11892},
{"f_11867ChickenBridge.scm",(void*)f_11867},
{"f_11808ChickenBridge.scm",(void*)f_11808},
{"f_11812ChickenBridge.scm",(void*)f_11812},
{"f_11823ChickenBridge.scm",(void*)f_11823},
{"f_11821ChickenBridge.scm",(void*)f_11821},
{"f_11777ChickenBridge.scm",(void*)f_11777},
{"f_11781ChickenBridge.scm",(void*)f_11781},
{"f_11792ChickenBridge.scm",(void*)f_11792},
{"f_11790ChickenBridge.scm",(void*)f_11790},
{"f_11759ChickenBridge.scm",(void*)f_11759},
{"f_11767ChickenBridge.scm",(void*)f_11767},
{"f_11775ChickenBridge.scm",(void*)f_11775},
{"f_11749ChickenBridge.scm",(void*)f_11749},
{"f_11757ChickenBridge.scm",(void*)f_11757},
{"f_11690ChickenBridge.scm",(void*)f_11690},
{"f_11697ChickenBridge.scm",(void*)f_11697},
{"f_11700ChickenBridge.scm",(void*)f_11700},
{"f_11703ChickenBridge.scm",(void*)f_11703},
{"f_11708ChickenBridge.scm",(void*)f_11708},
{"f_11652ChickenBridge.scm",(void*)f_11652},
{"f_11660ChickenBridge.scm",(void*)f_11660},
{"f_11664ChickenBridge.scm",(void*)f_11664},
{"f_11684ChickenBridge.scm",(void*)f_11684},
{"f_11668ChickenBridge.scm",(void*)f_11668},
{"f_11676ChickenBridge.scm",(void*)f_11676},
{"f_11672ChickenBridge.scm",(void*)f_11672},
{"f_11640ChickenBridge.scm",(void*)f_11640},
{"f_11631ChickenBridge.scm",(void*)f_11631},
{"f_11622ChickenBridge.scm",(void*)f_11622},
{"f_11613ChickenBridge.scm",(void*)f_11613},
{"f_11604ChickenBridge.scm",(void*)f_11604},
{"f_11595ChickenBridge.scm",(void*)f_11595},
{"f_11586ChickenBridge.scm",(void*)f_11586},
{"f_11571ChickenBridge.scm",(void*)f_11571},
{"f_11565ChickenBridge.scm",(void*)f_11565},
{"f_11423ChickenBridge.scm",(void*)f_11423},
{"f_11427ChickenBridge.scm",(void*)f_11427},
{"f_11496ChickenBridge.scm",(void*)f_11496},
{"f_11539ChickenBridge.scm",(void*)f_11539},
{"f_11543ChickenBridge.scm",(void*)f_11543},
{"f_11532ChickenBridge.scm",(void*)f_11532},
{"f_11519ChickenBridge.scm",(void*)f_11519},
{"f_11438ChickenBridge.scm",(void*)f_11438},
{"f_11481ChickenBridge.scm",(void*)f_11481},
{"f_11485ChickenBridge.scm",(void*)f_11485},
{"f_11474ChickenBridge.scm",(void*)f_11474},
{"f_11461ChickenBridge.scm",(void*)f_11461},
{"f_11257ChickenBridge.scm",(void*)f_11257},
{"f_11358ChickenBridge.scm",(void*)f_11358},
{"f_11407ChickenBridge.scm",(void*)f_11407},
{"f_11403ChickenBridge.scm",(void*)f_11403},
{"f_11375ChickenBridge.scm",(void*)f_11375},
{"f_11310ChickenBridge.scm",(void*)f_11310},
{"f_11319ChickenBridge.scm",(void*)f_11319},
{"f_11303ChickenBridge.scm",(void*)f_11303},
{"f_11122ChickenBridge.scm",(void*)f_11122},
{"f_11248ChickenBridge.scm",(void*)f_11248},
{"f_11244ChickenBridge.scm",(void*)f_11244},
{"f_11222ChickenBridge.scm",(void*)f_11222},
{"f_11152ChickenBridge.scm",(void*)f_11152},
{"f_11168ChickenBridge.scm",(void*)f_11168},
{"f_11077ChickenBridge.scm",(void*)f_11077},
{"f_11120ChickenBridge.scm",(void*)f_11120},
{"f_11109ChickenBridge.scm",(void*)f_11109},
{"f_10961ChickenBridge.scm",(void*)f_10961},
{"f_11075ChickenBridge.scm",(void*)f_11075},
{"f_10976ChickenBridge.scm",(void*)f_10976},
{"f_11006ChickenBridge.scm",(void*)f_11006},
{"f_11025ChickenBridge.scm",(void*)f_11025},
{"f_11010ChickenBridge.scm",(void*)f_11010},
{"f_10989ChickenBridge.scm",(void*)f_10989},
{"f_10839ChickenBridge.scm",(void*)f_10839},
{"f_10959ChickenBridge.scm",(void*)f_10959},
{"f_10854ChickenBridge.scm",(void*)f_10854},
{"f_10884ChickenBridge.scm",(void*)f_10884},
{"f_10903ChickenBridge.scm",(void*)f_10903},
{"f_10888ChickenBridge.scm",(void*)f_10888},
{"f_10867ChickenBridge.scm",(void*)f_10867},
{"f_10742ChickenBridge.scm",(void*)f_10742},
{"f_10837ChickenBridge.scm",(void*)f_10837},
{"f_10757ChickenBridge.scm",(void*)f_10757},
{"f_10803ChickenBridge.scm",(void*)f_10803},
{"f_10788ChickenBridge.scm",(void*)f_10788},
{"f_10770ChickenBridge.scm",(void*)f_10770},
{"f_10689ChickenBridge.scm",(void*)f_10689},
{"f_10727ChickenBridge.scm",(void*)f_10727},
{"f_10734ChickenBridge.scm",(void*)f_10734},
{"f_10712ChickenBridge.scm",(void*)f_10712},
{"f_10687ChickenBridge.scm",(void*)f_10687},
{"f_10659ChickenBridge.scm",(void*)f_10659},
{"f_10661ChickenBridge.scm",(void*)f_10661},
{"f_10639ChickenBridge.scm",(void*)f_10639},
{"f_10587ChickenBridge.scm",(void*)f_10587},
{"f_10624ChickenBridge.scm",(void*)f_10624},
{"f_10591ChickenBridge.scm",(void*)f_10591},
{"f_10607ChickenBridge.scm",(void*)f_10607},
{"f_10609ChickenBridge.scm",(void*)f_10609},
{"f_10373ChickenBridge.scm",(void*)f_10373},
{"f_10386ChickenBridge.scm",(void*)f_10386},
{"f_10468ChickenBridge.scm",(void*)f_10468},
{"f_10471ChickenBridge.scm",(void*)f_10471},
{"f_10479ChickenBridge.scm",(void*)f_10479},
{"f_10491ChickenBridge.scm",(void*)f_10491},
{"f_10512ChickenBridge.scm",(void*)f_10512},
{"f_10520ChickenBridge.scm",(void*)f_10520},
{"f_10407ChickenBridge.scm",(void*)f_10407},
{"f_10412ChickenBridge.scm",(void*)f_10412},
{"f_10444ChickenBridge.scm",(void*)f_10444},
{"f_10352ChickenBridge.scm",(void*)f_10352},
{"f_10333ChickenBridge.scm",(void*)f_10333},
{"f_10292ChickenBridge.scm",(void*)f_10292},
{"f_10273ChickenBridge.scm",(void*)f_10273},
{"f_10045ChickenBridge.scm",(void*)f_10045},
{"f_10250ChickenBridge.scm",(void*)f_10250},
{"f_10265ChickenBridge.scm",(void*)f_10265},
{"f_10257ChickenBridge.scm",(void*)f_10257},
{"f_10221ChickenBridge.scm",(void*)f_10221},
{"f_10225ChickenBridge.scm",(void*)f_10225},
{"f_10186ChickenBridge.scm",(void*)f_10186},
{"f_10190ChickenBridge.scm",(void*)f_10190},
{"f_10049ChickenBridge.scm",(void*)f_10049},
{"f_10150ChickenBridge.scm",(void*)f_10150},
{"f_10165ChickenBridge.scm",(void*)f_10165},
{"f_10157ChickenBridge.scm",(void*)f_10157},
{"f_10121ChickenBridge.scm",(void*)f_10121},
{"f_10125ChickenBridge.scm",(void*)f_10125},
{"f_10086ChickenBridge.scm",(void*)f_10086},
{"f_10090ChickenBridge.scm",(void*)f_10090},
{"f_10052ChickenBridge.scm",(void*)f_10052},
{"f_10055ChickenBridge.scm",(void*)f_10055},
{"f_10058ChickenBridge.scm",(void*)f_10058},
{"f_10003ChickenBridge.scm",(void*)f_10003},
{"f_10032ChickenBridge.scm",(void*)f_10032},
{"f_10017ChickenBridge.scm",(void*)f_10017},
{"f_9948ChickenBridge.scm",(void*)f_9948},
{"f_9959ChickenBridge.scm",(void*)f_9959},
{"f_9961ChickenBridge.scm",(void*)f_9961},
{"f_9989ChickenBridge.scm",(void*)f_9989},
{"f_9849ChickenBridge.scm",(void*)f_9849},
{"f_9853ChickenBridge.scm",(void*)f_9853},
{"f_9856ChickenBridge.scm",(void*)f_9856},
{"f_9921ChickenBridge.scm",(void*)f_9921},
{"f_9858ChickenBridge.scm",(void*)f_9858},
{"f_9874ChickenBridge.scm",(void*)f_9874},
{"f_9621ChickenBridge.scm",(void*)f_9621},
{"f_9826ChickenBridge.scm",(void*)f_9826},
{"f_9841ChickenBridge.scm",(void*)f_9841},
{"f_9833ChickenBridge.scm",(void*)f_9833},
{"f_9797ChickenBridge.scm",(void*)f_9797},
{"f_9801ChickenBridge.scm",(void*)f_9801},
{"f_9762ChickenBridge.scm",(void*)f_9762},
{"f_9766ChickenBridge.scm",(void*)f_9766},
{"f_9625ChickenBridge.scm",(void*)f_9625},
{"f_9726ChickenBridge.scm",(void*)f_9726},
{"f_9741ChickenBridge.scm",(void*)f_9741},
{"f_9733ChickenBridge.scm",(void*)f_9733},
{"f_9697ChickenBridge.scm",(void*)f_9697},
{"f_9701ChickenBridge.scm",(void*)f_9701},
{"f_9662ChickenBridge.scm",(void*)f_9662},
{"f_9666ChickenBridge.scm",(void*)f_9666},
{"f_9628ChickenBridge.scm",(void*)f_9628},
{"f_9631ChickenBridge.scm",(void*)f_9631},
{"f_9641ChickenBridge.scm",(void*)f_9641},
{"f_9578ChickenBridge.scm",(void*)f_9578},
{"f_9611ChickenBridge.scm",(void*)f_9611},
{"f_9596ChickenBridge.scm",(void*)f_9596},
{"f_9557ChickenBridge.scm",(void*)f_9557},
{"f_9522ChickenBridge.scm",(void*)f_9522},
{"f_9526ChickenBridge.scm",(void*)f_9526},
{"f_9414ChickenBridge.scm",(void*)f_9414},
{"f_9501ChickenBridge.scm",(void*)f_9501},
{"f_9421ChickenBridge.scm",(void*)f_9421},
{"f_9430ChickenBridge.scm",(void*)f_9430},
{"f_9477ChickenBridge.scm",(void*)f_9477},
{"f_9443ChickenBridge.scm",(void*)f_9443},
{"f_9469ChickenBridge.scm",(void*)f_9469},
{"f_9281ChickenBridge.scm",(void*)f_9281},
{"f_9285ChickenBridge.scm",(void*)f_9285},
{"f_9288ChickenBridge.scm",(void*)f_9288},
{"f_9392ChickenBridge.scm",(void*)f_9392},
{"f_9290ChickenBridge.scm",(void*)f_9290},
{"f_9297ChickenBridge.scm",(void*)f_9297},
{"f_9339ChickenBridge.scm",(void*)f_9339},
{"f_9346ChickenBridge.scm",(void*)f_9346},
{"f_9320ChickenBridge.scm",(void*)f_9320},
{"f_9214ChickenBridge.scm",(void*)f_9214},
{"f_9218ChickenBridge.scm",(void*)f_9218},
{"f_9264ChickenBridge.scm",(void*)f_9264},
{"f_9221ChickenBridge.scm",(void*)f_9221},
{"f_9257ChickenBridge.scm",(void*)f_9257},
{"f_9224ChickenBridge.scm",(void*)f_9224},
{"f_9237ChickenBridge.scm",(void*)f_9237},
{"f_9168ChickenBridge.scm",(void*)f_9168},
{"f_9172ChickenBridge.scm",(void*)f_9172},
{"f_9082ChickenBridge.scm",(void*)f_9082},
{"f_9086ChickenBridge.scm",(void*)f_9086},
{"f_9089ChickenBridge.scm",(void*)f_9089},
{"f_9098ChickenBridge.scm",(void*)f_9098},
{"f_9120ChickenBridge.scm",(void*)f_9120},
{"f_9067ChickenBridge.scm",(void*)f_9067},
{"f_9052ChickenBridge.scm",(void*)f_9052},
{"f_8816ChickenBridge.scm",(void*)f_8816},
{"f_9029ChickenBridge.scm",(void*)f_9029},
{"f_9044ChickenBridge.scm",(void*)f_9044},
{"f_9036ChickenBridge.scm",(void*)f_9036},
{"f_9000ChickenBridge.scm",(void*)f_9000},
{"f_9004ChickenBridge.scm",(void*)f_9004},
{"f_8965ChickenBridge.scm",(void*)f_8965},
{"f_8969ChickenBridge.scm",(void*)f_8969},
{"f_8820ChickenBridge.scm",(void*)f_8820},
{"f_8929ChickenBridge.scm",(void*)f_8929},
{"f_8944ChickenBridge.scm",(void*)f_8944},
{"f_8936ChickenBridge.scm",(void*)f_8936},
{"f_8900ChickenBridge.scm",(void*)f_8900},
{"f_8904ChickenBridge.scm",(void*)f_8904},
{"f_8865ChickenBridge.scm",(void*)f_8865},
{"f_8869ChickenBridge.scm",(void*)f_8869},
{"f_8823ChickenBridge.scm",(void*)f_8823},
{"f_8826ChickenBridge.scm",(void*)f_8826},
{"f_8837ChickenBridge.scm",(void*)f_8837},
{"f_8776ChickenBridge.scm",(void*)f_8776},
{"f_8780ChickenBridge.scm",(void*)f_8780},
{"f_8810ChickenBridge.scm",(void*)f_8810},
{"f_8791ChickenBridge.scm",(void*)f_8791},
{"f_8799ChickenBridge.scm",(void*)f_8799},
{"f_8755ChickenBridge.scm",(void*)f_8755},
{"f_8767ChickenBridge.scm",(void*)f_8767},
{"f_8712ChickenBridge.scm",(void*)f_8712},
{"f_8742ChickenBridge.scm",(void*)f_8742},
{"f_8669ChickenBridge.scm",(void*)f_8669},
{"f_8699ChickenBridge.scm",(void*)f_8699},
{"f_8600ChickenBridge.scm",(void*)f_8600},
{"f_8644ChickenBridge.scm",(void*)f_8644},
{"f_8531ChickenBridge.scm",(void*)f_8531},
{"f_8575ChickenBridge.scm",(void*)f_8575},
{"f_8507ChickenBridge.scm",(void*)f_8507},
{"f_8519ChickenBridge.scm",(void*)f_8519},
{"f_8492ChickenBridge.scm",(void*)f_8492},
{"f_8381ChickenBridge.scm",(void*)f_8381},
{"f_8456ChickenBridge.scm",(void*)f_8456},
{"f_8385ChickenBridge.scm",(void*)f_8385},
{"f_8425ChickenBridge.scm",(void*)f_8425},
{"f_8414ChickenBridge.scm",(void*)f_8414},
{"f_8399ChickenBridge.scm",(void*)f_8399},
{"f_8407ChickenBridge.scm",(void*)f_8407},
{"f_8347ChickenBridge.scm",(void*)f_8347},
{"f_8359ChickenBridge.scm",(void*)f_8359},
{"f_8340ChickenBridge.scm",(void*)f_8340},
{"f_8333ChickenBridge.scm",(void*)f_8333},
{"f_8314ChickenBridge.scm",(void*)f_8314},
{"f_8311ChickenBridge.scm",(void*)f_8311},
{"f_8304ChickenBridge.scm",(void*)f_8304},
{"f_8301ChickenBridge.scm",(void*)f_8301},
{"f_8294ChickenBridge.scm",(void*)f_8294},
{"f_8276ChickenBridge.scm",(void*)f_8276},
{"f_8265ChickenBridge.scm",(void*)f_8265},
{"f_8262ChickenBridge.scm",(void*)f_8262},
{"f_8259ChickenBridge.scm",(void*)f_8259},
{"f_8256ChickenBridge.scm",(void*)f_8256},
{"f_8227ChickenBridge.scm",(void*)f_8227},
{"f_8220ChickenBridge.scm",(void*)f_8220},
{"f_8217ChickenBridge.scm",(void*)f_8217},
{"f_8196ChickenBridge.scm",(void*)f_8196},
{"f_8177ChickenBridge.scm",(void*)f_8177},
{"f_8158ChickenBridge.scm",(void*)f_8158},
{"f_8151ChickenBridge.scm",(void*)f_8151},
{"f_8144ChickenBridge.scm",(void*)f_8144},
{"f_8129ChickenBridge.scm",(void*)f_8129},
{"f_8118ChickenBridge.scm",(void*)f_8118},
{"f_8111ChickenBridge.scm",(void*)f_8111},
{"f_8084ChickenBridge.scm",(void*)f_8084},
{"f_8057ChickenBridge.scm",(void*)f_8057},
{"f_8016ChickenBridge.scm",(void*)f_8016},
{"f_8022ChickenBridge.scm",(void*)f_8022},
{"f_8032ChickenBridge.scm",(void*)f_8032},
{"f_7930ChickenBridge.scm",(void*)f_7930},
{"f_7891ChickenBridge.scm",(void*)f_7891},
{"f_7897ChickenBridge.scm",(void*)f_7897},
{"f_7920ChickenBridge.scm",(void*)f_7920},
{"f_7910ChickenBridge.scm",(void*)f_7910},
{"f_7852ChickenBridge.scm",(void*)f_7852},
{"f_7858ChickenBridge.scm",(void*)f_7858},
{"f_7878ChickenBridge.scm",(void*)f_7878},
{"f_7868ChickenBridge.scm",(void*)f_7868},
{"f_7812ChickenBridge.scm",(void*)f_7812},
{"f_7818ChickenBridge.scm",(void*)f_7818},
{"f_7842ChickenBridge.scm",(void*)f_7842},
{"f_7828ChickenBridge.scm",(void*)f_7828},
{"f_7713ChickenBridge.scm",(void*)f_7713},
{"f_7717ChickenBridge.scm",(void*)f_7717},
{"f_7742ChickenBridge.scm",(void*)f_7742},
{"f_7759ChickenBridge.scm",(void*)f_7759},
{"f_7763ChickenBridge.scm",(void*)f_7763},
{"f_7719ChickenBridge.scm",(void*)f_7719},
{"f_7736ChickenBridge.scm",(void*)f_7736},
{"f_7652ChickenBridge.scm",(void*)f_7652},
{"f_7665ChickenBridge.scm",(void*)f_7665},
{"f_7642ChickenBridge.scm",(void*)f_7642},
{"f_7602ChickenBridge.scm",(void*)f_7602},
{"f_7632ChickenBridge.scm",(void*)f_7632},
{"f_7512ChickenBridge.scm",(void*)f_7512},
{"f_7464ChickenBridge.scm",(void*)f_7464},
{"f_7498ChickenBridge.scm",(void*)f_7498},
{"f_7441ChickenBridge.scm",(void*)f_7441},
{"f_7435ChickenBridge.scm",(void*)f_7435},
{"f_7420ChickenBridge.scm",(void*)f_7420},
{"f_7406ChickenBridge.scm",(void*)f_7406},
{"f_7396ChickenBridge.scm",(void*)f_7396},
{"f_7386ChickenBridge.scm",(void*)f_7386},
{"f_7376ChickenBridge.scm",(void*)f_7376},
{"f_7366ChickenBridge.scm",(void*)f_7366},
{"f_7340ChickenBridge.scm",(void*)f_7340},
{"f_7338ChickenBridge.scm",(void*)f_7338},
{"f_7288ChickenBridge.scm",(void*)f_7288},
{"f_7291ChickenBridge.scm",(void*)f_7291},
{"f_7294ChickenBridge.scm",(void*)f_7294},
{"f_7297ChickenBridge.scm",(void*)f_7297},
{"f_7312ChickenBridge.scm",(void*)f_7312},
{"f_7323ChickenBridge.scm",(void*)f_7323},
{"f_7327ChickenBridge.scm",(void*)f_7327},
{"f_7300ChickenBridge.scm",(void*)f_7300},
{"f_7303ChickenBridge.scm",(void*)f_7303},
{"f_7310ChickenBridge.scm",(void*)f_7310},
{"f_7306ChickenBridge.scm",(void*)f_7306},
{"f_7347ChickenBridge.scm",(void*)f_7347},
{"f_7255ChickenBridge.scm",(void*)f_7255},
{"f_7264ChickenBridge.scm",(void*)f_7264},
{"f_7269ChickenBridge.scm",(void*)f_7269},
{"f_7244ChickenBridge.scm",(void*)f_7244},
{"f_7249ChickenBridge.scm",(void*)f_7249},
{"f_6951ChickenBridge.scm",(void*)f_6951},
{"f_6961ChickenBridge.scm",(void*)f_6961},
{"f_7212ChickenBridge.scm",(void*)f_7212},
{"f_6964ChickenBridge.scm",(void*)f_6964},
{"f_6967ChickenBridge.scm",(void*)f_6967},
{"f_6982ChickenBridge.scm",(void*)f_6982},
{"f_6992ChickenBridge.scm",(void*)f_6992},
{"f_6994ChickenBridge.scm",(void*)f_6994},
{"f_7053ChickenBridge.scm",(void*)f_7053},
{"f_7063ChickenBridge.scm",(void*)f_7063},
{"f_7180ChickenBridge.scm",(void*)f_7180},
{"f_7168ChickenBridge.scm",(void*)f_7168},
{"f_7166ChickenBridge.scm",(void*)f_7166},
{"f_7153ChickenBridge.scm",(void*)f_7153},
{"f_7107ChickenBridge.scm",(void*)f_7107},
{"f_7134ChickenBridge.scm",(void*)f_7134},
{"f_7113ChickenBridge.scm",(void*)f_7113},
{"f_7047ChickenBridge.scm",(void*)f_7047},
{"f_7006ChickenBridge.scm",(void*)f_7006},
{"f_7019ChickenBridge.scm",(void*)f_7019},
{"f_7229ChickenBridge.scm",(void*)f_7229},
{"f_7220ChickenBridge.scm",(void*)f_7220},
{"f_7228ChickenBridge.scm",(void*)f_7228},
{"f_7231ChickenBridge.scm",(void*)f_7231},
{"f_7239ChickenBridge.scm",(void*)f_7239},
{"f_6653ChickenBridge.scm",(void*)f_6653},
{"f_6906ChickenBridge.scm",(void*)f_6906},
{"f_6939ChickenBridge.scm",(void*)f_6939},
{"f_6935ChickenBridge.scm",(void*)f_6935},
{"f_6924ChickenBridge.scm",(void*)f_6924},
{"f_6920ChickenBridge.scm",(void*)f_6920},
{"f_6814ChickenBridge.scm",(void*)f_6814},
{"f_6817ChickenBridge.scm",(void*)f_6817},
{"f_6820ChickenBridge.scm",(void*)f_6820},
{"f_6900ChickenBridge.scm",(void*)f_6900},
{"f_6725ChickenBridge.scm",(void*)f_6725},
{"f_6666ChickenBridge.scm",(void*)f_6666},
{"f_6823ChickenBridge.scm",(void*)f_6823},
{"f_6830ChickenBridge.scm",(void*)f_6830},
{"f_6890ChickenBridge.scm",(void*)f_6890},
{"f_6876ChickenBridge.scm",(void*)f_6876},
{"f_6842ChickenBridge.scm",(void*)f_6842},
{"f_6868ChickenBridge.scm",(void*)f_6868},
{"f_6803ChickenBridge.scm",(void*)f_6803},
{"f_6850ChickenBridge.scm",(void*)f_6850},
{"f_6846ChickenBridge.scm",(void*)f_6846},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
