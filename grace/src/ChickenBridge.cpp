/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-04-05 10:51
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-02-24 on zippy.local (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update

printf("in print_error\n");
printf("  str='%s'\n",st);

  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	// printf("FIX: buf[%d]=%d\n", i, C_unfix(w) );
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      // printf("FLO: buf[%d]=%f\n", i, (float)C_flonum_magnitude( w ));
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else {
      buf[i++] = 0.0;
    }
  }
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ((type==2) ? 'f' : 'i'), len, buf);  
}

void cs_clear_score () {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[912];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,11),40,97,54,50,51,54,32,105,51,50,41,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,11),40,97,54,50,53,56,32,105,51,49,41,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,11),40,97,54,50,54,56,32,105,51,48,41,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,11),40,97,54,50,55,52,32,118,50,54,41,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,111,112,116,107,101,121,115,32,117,115,101,114,48,32,115,112,101,99,49,32,98,111,100,121,50,41,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,23),40,102,95,54,54,48,48,32,115,116,114,53,48,32,46,32,97,114,103,115,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,12),40,102,95,54,53,56,57,32,107,53,52,41,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,12),40,102,95,54,53,57,56,32,107,53,53,41,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,13),40,100,111,54,57,32,116,97,105,108,55,49,41,0,0,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,97,54,53,51,54,32,120,55,55,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,31),40,100,111,54,51,32,97,114,103,115,54,53,32,107,101,121,54,54,32,97,114,103,54,55,32,112,111,115,54,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,7),40,97,54,53,56,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,34),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,52,52,32,100,97,116,97,52,53,32,101,114,114,102,52,54,41,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,8),40,102,95,54,54,49,56,41};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,14),40,102,95,54,54,51,51,32,97,57,52,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,12),40,102,105,102,116,104,32,108,49,48,48,41,0,0,0,0};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,12),40,115,105,120,116,104,32,108,49,48,49,41,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,115,101,118,101,110,116,104,32,108,49,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,13),40,101,105,103,104,116,104,32,108,49,48,51,41,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,12),40,110,105,110,116,104,32,108,49,48,52,41,0,0,0,0};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,12),40,116,101,110,116,104,32,108,49,48,53,41,0,0,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,11),40,114,101,115,116,32,108,49,48,54,41,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,11),40,108,97,115,116,32,108,49,48,55,41,0,0,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,14),40,98,117,116,108,97,115,116,32,108,49,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,17),40,108,105,115,116,42,32,46,32,97,114,103,115,49,49,57,41,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,32),40,108,105,115,116,45,115,101,116,33,32,108,105,115,49,50,48,32,112,111,115,49,50,49,32,118,97,108,49,50,50,41};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,22),40,100,111,49,50,54,32,105,49,50,56,32,106,49,50,57,32,116,49,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,15),40,114,101,118,101,114,115,101,33,32,108,49,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,14),40,108,49,32,97,49,52,48,32,98,49,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,14),40,108,50,32,97,49,52,50,32,98,49,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,25),40,109,97,107,101,45,108,105,115,116,32,110,49,51,54,32,46,32,111,98,106,49,51,55,41,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,35),40,108,105,115,116,45,112,114,111,112,32,108,105,115,49,52,55,32,112,114,111,112,49,52,56,32,46,32,100,101,102,49,52,57,41,0,0,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,12),40,100,111,49,53,53,32,102,49,53,55,41,0,0,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,24),40,98,105,116,119,105,115,101,45,116,101,115,116,32,97,49,53,51,32,98,49,53,52,41};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,60),40,116,98,58,114,101,115,99,97,108,101,32,97,49,56,54,49,56,57,32,97,49,56,53,49,57,48,32,97,49,56,52,49,57,49,32,97,49,56,51,49,57,50,32,97,49,56,50,49,57,51,32,97,49,56,49,49,57,52,41,0,0,0,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,61),40,116,98,58,100,105,115,99,114,101,116,101,32,97,50,48,49,50,48,52,32,97,50,48,48,50,48,53,32,97,49,57,57,50,48,54,32,97,49,57,56,50,48,55,32,97,49,57,55,50,48,56,32,97,49,57,54,50,48,57,41,0,0,0,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,16),40,116,98,58,105,110,116,32,97,50,49,48,50,49,51,41};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,29),40,116,98,58,113,117,97,110,116,105,122,101,32,97,50,50,50,50,50,53,32,97,50,50,49,50,50,54,41,0,0,0,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,44),40,116,98,58,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,97,50,51,48,50,51,51,32,97,50,50,57,50,51,52,32,97,50,50,56,50,51,53,41,0,0,0,0};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,26),40,116,98,58,99,101,110,116,115,45,62,115,99,97,108,101,114,32,97,50,51,55,50,52,48,41,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,26),40,116,98,58,115,99,97,108,101,114,45,62,99,101,110,116,115,32,97,50,52,50,50,52,53,41,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,44),40,116,98,58,101,120,112,108,115,101,103,32,97,50,52,57,50,53,50,32,97,50,52,56,50,53,51,32,97,50,52,55,50,53,52,32,97,50,52,54,50,53,53,41,0,0,0,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,43),40,116,98,58,103,101,111,115,101,103,32,97,50,54,48,50,54,51,32,97,50,53,57,50,54,52,32,97,50,53,56,50,54,53,32,97,50,53,55,50,54,54,41,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,26),40,116,98,58,107,101,121,110,117,109,45,62,104,101,114,116,122,32,97,50,54,56,50,55,49,41,0,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,45,115,101,116,33,32,97,50,56,50,50,56,53,41,0,0,0,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,50,56,54,50,56,57,41,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,50,57,48,50,57,51,41,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,11),40,116,98,58,114,97,110,108,111,119,41,0,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,104,105,103,104,41,0,0,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,109,105,100,100,108,101,41,0,0,0,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,51,49,56,51,50,49,32,97,51,49,55,51,50,50,41,0,0,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,51,50,52,51,50,55,41,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,51,51,54,51,51,57,41,0,0,0,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,14),40,116,98,58,114,97,110,99,97,117,99,104,121,41,0,0,0,0,0,0};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,51,52,52,51,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,12),40,116,98,58,114,97,110,112,105,110,107,41,0,0,0,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,13),40,116,98,58,114,97,110,98,114,111,119,110,41,0,0,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,12),40,97,55,53,50,52,32,122,51,54,57,41,0,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,51,54,51,32,120,49,51,54,52,32,120,50,51,54,53,32,121,49,51,54,54,32,121,50,51,54,55,32,46,32,98,51,54,56,41,0,0,0,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,12),40,97,55,53,54,52,32,122,51,56,49,41,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,12),40,97,55,53,57,48,32,122,51,56,50,41,0,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,51,55,48,32,120,49,51,55,49,32,120,50,51,55,50,32,105,49,51,55,51,32,46,32,97,114,103,115,51,55,52,41,0,0,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,51,56,52,41,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,16),40,112,108,117,115,32,46,32,97,114,103,115,51,56,53,41};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,24),40,109,105,110,117,115,32,97,114,103,51,56,54,32,46,32,97,114,103,115,51,56,55,41};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,12),40,97,55,55,53,50,32,110,51,57,48,41,0,0,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,51,56,56,32,115,116,101,112,115,51,56,57,41,0,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,12),40,97,55,55,55,54,32,118,51,57,52,41,0,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,118,97,108,117,101,51,57,49,32,112,108,97,99,101,115,51,57,50,41,0,0,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,12),40,97,55,56,50,50,32,120,52,51,53,41,0,0,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,51,57,53,32,46,32,97,114,103,115,51,57,54,41,0,0,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,23),40,99,101,110,116,115,45,62,114,97,116,105,111,32,99,101,110,116,115,52,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,21),40,114,97,116,105,111,45,62,99,101,110,116,115,32,110,117,109,52,52,48,41,0,0,0,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,15),40,100,111,52,52,57,32,116,97,105,108,52,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,32),40,105,110,116,101,114,112,49,32,120,52,52,49,32,99,111,111,114,100,115,52,52,50,32,98,97,115,101,52,52,51,41};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,52,53,57,32,46,32,97,114,103,115,52,54,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,40),40,116,101,110,100,101,110,99,121,32,120,52,54,50,32,108,111,119,52,54,51,32,104,105,103,104,52,54,52,32,46,32,97,114,103,115,52,54,53,41};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,33),40,102,105,116,49,32,110,117,109,52,55,56,32,108,98,52,55,57,32,117,98,52,56,48,32,109,111,100,101,52,56,49,41,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,12),40,97,56,51,55,55,32,110,52,56,54,41,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,34),40,102,105,116,32,110,117,109,52,55,49,32,108,98,52,55,50,32,117,98,52,55,51,32,46,32,109,111,100,101,52,55,52,41,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,27),40,100,111,52,57,56,32,105,53,48,48,32,107,53,48,49,32,108,53,48,50,32,116,53,48,51,41,0,0,0};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,34),40,115,99,97,108,101,32,108,101,110,52,57,48,32,107,101,121,110,117,109,52,57,49,32,46,32,97,114,103,115,52,57,50,41,0,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,14),40,114,97,110,32,46,32,110,117,109,53,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,53,49,50,32,98,53,49,51,41,0,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,53,49,52,41};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,53,49,53,32,46,32,97,114,103,115,53,49,54,41,0,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,30),40,118,97,114,121,49,32,118,97,108,53,54,50,32,118,97,114,105,53,54,51,32,109,111,100,101,53,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,12),40,97,56,57,48,54,32,118,53,54,57,41,0,0,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,31),40,118,97,114,121,32,118,97,108,53,53,56,32,118,97,114,105,53,53,57,32,46,32,109,111,100,101,53,54,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,22),40,100,111,53,55,53,32,105,53,55,55,32,106,53,55,56,32,118,53,55,57,41,0,0,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,15),40,115,104,117,102,102,108,101,33,32,108,53,55,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,19),40,115,104,117,102,102,108,101,32,46,32,97,114,103,115,53,56,52,41,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,53,56,53,41,0,0,0};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,54,50,56,41,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,54,50,57,41,0,0,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,54,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,54,51,49,41,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,12),40,100,111,54,52,51,32,105,54,52,53,41,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,15),40,100,111,54,53,57,32,116,97,105,108,54,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,17),40,100,111,54,53,53,32,105,54,53,55,32,110,54,53,56,41,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,30),40,115,101,103,115,32,110,117,109,54,51,50,32,115,117,109,54,51,51,32,46,32,97,114,103,115,54,51,52,41,0,0,0,0,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,7),40,97,57,53,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,7),40,97,57,54,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,41),40,115,116,114,105,110,103,45,62,110,111,116,101,45,101,110,116,114,121,32,115,116,114,55,49,50,32,111,99,116,55,49,51,32,101,114,114,55,49,52,41,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,7),40,97,57,54,50,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,7),40,97,57,54,52,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,34),40,110,111,116,101,45,97,117,120,32,102,114,101,113,55,50,48,32,100,111,99,116,55,50,49,32,101,114,114,63,55,50,50,41,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,39),40,100,111,55,50,53,32,116,97,105,108,55,50,55,32,100,101,102,111,55,50,56,32,116,104,105,115,55,50,57,32,114,101,115,108,55,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,14),40,110,111,116,101,32,102,114,101,113,55,50,51,41,0,0,0,0,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,39),40,100,111,55,51,57,32,116,97,105,108,55,52,49,32,100,101,102,111,55,52,50,32,116,104,105,115,55,52,51,32,114,101,115,108,55,52,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,13),40,107,101,121,32,102,114,101,113,55,51,55,41,0,0,0,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,39),40,100,111,55,53,53,32,116,97,105,108,55,53,55,32,100,101,102,111,55,53,56,32,116,104,105,115,55,53,57,32,114,101,115,108,55,54,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,12),40,104,122,32,102,114,101,113,55,53,51,41,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,9),40,112,99,32,120,55,54,57,41,0};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,23),40,100,111,55,55,53,32,116,97,105,108,55,55,55,32,108,97,115,116,55,55,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,17),40,105,110,118,107,101,121,115,32,107,101,121,115,55,55,50,41,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,13),40,97,49,48,50,48,55,32,122,55,56,50,41,0,0,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,13),40,105,110,118,101,114,116,32,120,55,55,48,41,0,0,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,23),40,100,111,55,57,48,32,116,97,105,108,55,57,50,32,108,97,115,116,55,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,28),40,116,114,97,110,115,112,107,101,121,115,32,107,101,121,115,55,56,55,32,111,114,105,103,55,56,56,41,0,0,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,13),40,97,49,48,51,54,48,32,122,55,57,55,41,0,0,0,0,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,21),40,116,114,97,110,115,112,111,115,101,32,120,55,56,51,32,121,55,56,52,41,0,0,0,0,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,48),40,109,97,107,101,45,115,112,101,107,116,114,117,109,32,116,105,109,101,56,56,52,32,115,105,122,101,56,56,53,32,102,114,101,113,115,56,56,54,32,97,109,112,115,56,56,55,41};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,20),40,115,112,101,107,116,114,117,109,45,116,105,109,101,32,120,56,57,50,41,0,0,0,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,20),40,115,112,101,107,116,114,117,109,45,115,105,122,101,32,120,56,57,56,41,0,0,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,21),40,115,112,101,107,116,114,117,109,45,102,114,101,113,115,32,120,57,48,52,41,0,0,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,20),40,115,112,101,107,116,114,117,109,45,97,109,112,115,32,120,57,49,48,41,0,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,34),40,109,97,107,101,45,115,112,101,99,116,114,117,109,32,102,114,101,113,115,57,50,48,32,46,32,97,114,103,115,57,50,49,41,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,12),40,100,111,57,51,48,32,105,57,51,50,41,0,0,0,0};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,28),40,115,112,101,99,116,114,117,109,45,112,97,105,114,115,32,115,112,101,99,116,114,117,109,57,50,52,41,0,0,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,105,110,102,114,101,113,32,115,112,101,99,116,114,117,109,57,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,30),40,115,112,101,99,116,114,117,109,45,109,97,120,102,114,101,113,32,115,112,101,99,116,114,117,109,57,51,55,41,0,0,0,0,0,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,13),40,97,49,48,55,54,57,32,97,57,52,49,41,0,0,0,0,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,109,105,110,97,109,112,32,115,112,101,99,116,114,117,109,57,51,56,41,0,0,0,0,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,13),40,97,49,48,56,48,48,32,97,57,52,56,41,0,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,29),40,115,112,101,99,116,114,117,109,45,109,97,120,97,109,112,32,115,112,101,99,116,114,117,109,57,52,53,41,0,0,0,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,56,51,48,32,120,57,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,56,54,51,32,120,57,54,57,41,0,0,0,0,0,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,56,55,51,32,104,57,55,48,41,0,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,56,56,51,32,104,57,55,49,41,0,0,0,0,0,0};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,56,57,55,32,104,57,55,50,41,0,0,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,14),40,102,95,49,48,57,49,50,32,104,57,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,18),40,97,49,48,57,56,49,32,97,57,55,56,32,98,57,55,57,41,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,18),40,97,49,48,57,57,54,32,97,57,56,48,32,98,57,56,49,41,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,18),40,97,49,49,48,49,52,32,97,57,56,50,32,98,57,56,51,41,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,18),40,97,49,49,48,50,57,32,97,57,56,52,32,98,57,56,53,41,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,38),40,115,112,101,99,116,114,117,109,45,107,101,121,115,32,115,112,101,99,116,114,117,109,57,57,57,32,46,32,97,114,103,115,49,48,48,48,41,0,0,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,35),40,100,111,49,49,53,52,32,116,97,105,108,49,49,53,54,32,115,105,122,101,49,49,53,55,32,97,109,112,108,49,49,53,56,41,0,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,26),40,100,111,49,49,51,50,32,105,49,49,51,52,32,102,49,49,51,53,32,120,49,49,51,54,41,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,24),40,100,111,49,49,50,54,32,110,101,103,49,49,50,56,32,112,111,115,49,49,50,57,41};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,24),40,102,95,55,53,48,50,32,97,51,53,55,51,54,48,32,97,51,53,54,51,54,49,41};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,20),40,100,111,49,49,49,56,32,107,49,49,50,48,32,97,49,49,50,49,41,0,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,46),40,102,109,45,115,112,101,99,116,114,117,109,32,99,97,114,114,105,101,114,49,49,49,48,32,109,114,97,116,105,111,49,49,49,49,32,105,110,100,101,120,49,49,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,75),40,109,97,107,101,45,112,101,114,105,111,100,32,99,111,117,110,116,49,49,56,50,32,108,101,110,103,116,104,49,49,56,51,32,115,116,114,101,97,109,49,49,56,52,32,100,101,102,97,117,108,116,49,49,56,53,32,111,109,105,116,49,49,56,54,32,114,101,112,115,49,49,56,55,41,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,33),40,112,101,114,105,111,100,45,99,111,117,110,116,45,115,101,116,33,32,120,49,49,56,57,32,118,97,108,49,49,57,48,41,0};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,20),40,112,101,114,105,111,100,45,99,111,117,110,116,32,120,49,49,57,50,41,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,108,101,110,103,116,104,32,120,49,49,57,56,41,0,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,21),40,112,101,114,105,111,100,45,115,116,114,101,97,109,32,120,49,50,48,52,41,0,0,0,0,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,32),40,112,101,114,105,111,100,45,111,109,105,116,45,115,101,116,33,32,120,49,50,49,51,32,118,97,108,49,50,49,52,41};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,111,109,105,116,32,120,49,50,49,54,41,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,19),40,112,101,114,105,111,100,45,114,101,112,115,32,120,49,50,50,50,41,0,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,16),40,112,97,116,116,101,114,110,63,32,120,49,50,52,56,41};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,102,108,97,103,115,32,120,49,50,53,50,41,0,0,0,0,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,33),40,112,97,116,116,101,114,110,45,100,97,116,97,45,115,101,116,33,32,120,49,50,53,53,32,118,97,108,49,50,53,54,41,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,100,97,116,97,32,120,49,50,53,56,41,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,108,101,110,103,116,104,32,120,49,50,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,100,97,116,117,109,45,115,101,116,33,32,120,49,50,54,55,32,118,97,108,49,50,54,56,41,0,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,100,97,116,117,109,32,120,49,50,55,48,41,0,0,0,0,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,112,101,114,105,111,100,32,120,49,50,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,118,97,108,117,101,45,115,101,116,33,32,120,49,50,55,57,32,118,97,108,49,50,56,48,41,0,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,15),40,102,95,49,50,51,51,48,32,120,49,50,56,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,115,116,97,116,101,45,115,101,116,33,32,120,49,50,56,53,32,118,97,108,49,50,56,54,41,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,115,116,97,116,101,32,120,49,50,56,56,41,0,0,0,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,34),40,112,97,116,116,101,114,110,45,99,97,99,104,101,45,115,101,116,33,32,120,49,51,50,55,32,118,97,108,49,51,50,56,41,0,0};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,99,97,99,104,101,32,120,49,51,51,48,41,0,0,0,0,0};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,16),40,37,97,108,108,111,99,45,112,97,116,116,101,114,110,41};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,14),40,97,49,50,55,48,56,32,120,49,51,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,98),40,105,110,105,116,105,97,108,105,122,101,45,112,97,116,116,101,114,110,32,111,98,106,49,51,53,48,32,100,97,116,97,49,51,53,49,32,102,111,114,49,51,53,50,32,114,101,112,49,51,53,51,32,102,108,97,103,115,49,51,53,52,32,108,101,110,49,51,53,53,32,100,112,101,114,49,51,53,54,32,103,101,116,114,49,51,53,55,32,109,97,112,114,49,51,53,56,41,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,12),40,101,111,112,63,32,120,49,51,56,53,41,0,0,0,0};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,12),40,101,111,100,63,32,120,49,51,56,54,41,0,0,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,20),40,100,111,49,51,57,49,32,105,49,51,57,51,32,101,49,51,57,52,41,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,26),40,100,111,49,51,57,56,32,110,49,52,48,48,32,101,49,52,48,49,32,102,49,52,48,50,41,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,32,111,98,106,49,51,56,55,32,46,32,97,114,103,115,49,51,56,56,41,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,8),40,100,111,49,52,50,54,41};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,26),40,100,111,49,52,50,50,32,100,121,110,63,49,52,50,52,32,115,116,111,112,49,52,50,53,41,0,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,16),40,110,101,120,116,45,49,32,111,98,106,49,52,48,56,41};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,25),40,110,101,120,116,45,105,110,45,112,97,116,116,101,114,110,32,111,98,106,49,52,52,54,41,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,33),40,109,97,112,45,112,97,116,116,101,114,110,45,100,97,116,97,32,102,110,49,52,52,55,32,111,98,106,49,52,52,56,41,0};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,14),40,97,49,51,50,56,52,32,120,49,52,53,55,41,0,0,0,0,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,22),40,114,101,115,101,116,45,112,101,114,105,111,100,32,111,98,106,49,52,53,50,41,0,0,0,0,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,23),40,97,49,51,51,55,56,32,102,110,49,53,48,57,32,111,98,106,49,53,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,99,121,99,108,101,32,100,97,116,97,49,52,54,54,32,46,32,97,114,103,115,49,52,54,55,41};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,99,121,99,108,101,32,111,98,106,49,53,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,17),40,112,97,108,105,110,45,108,101,110,32,120,49,53,51,54,41,0};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,30),40,112,97,108,105,110,45,105,110,99,45,115,101,116,33,32,120,49,53,51,57,32,118,97,108,49,53,52,48,41,0,0,0,0,0,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,23),40,97,49,51,56,48,56,32,102,110,49,54,51,55,32,111,98,106,49,54,51,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,37),40,109,97,107,101,45,112,97,108,105,110,100,114,111,109,101,32,100,97,116,97,49,53,54,53,32,46,32,97,114,103,115,49,53,54,54,41,0,0,0,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,28),40,110,101,120,116,45,105,110,45,112,97,108,105,110,100,114,111,109,101,32,111,98,106,49,54,52,54,41,0,0,0,0};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,23),40,97,49,52,52,55,53,32,102,110,49,55,48,56,32,111,98,106,49,55,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,108,105,110,101,32,100,97,116,97,49,54,54,53,32,46,32,97,114,103,115,49,54,54,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,108,105,110,101,32,111,98,106,49,55,49,53,41,0,0,0,0,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,23),40,97,49,52,55,54,50,32,102,110,49,55,54,51,32,111,98,106,49,55,54,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,31),40,109,97,107,101,45,104,101,97,112,32,100,97,116,97,49,55,50,48,32,46,32,97,114,103,115,49,55,50,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,26),40,100,111,49,55,55,52,32,105,49,55,55,54,32,106,49,55,55,55,32,118,49,55,55,56,41,0,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,22),40,110,101,120,116,45,105,110,45,104,101,97,112,32,111,98,106,49,55,55,48,41,0,0,0,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,23),40,97,49,53,49,48,55,32,102,110,49,56,53,56,32,111,98,106,49,56,53,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,35),40,109,97,107,101,45,114,111,116,97,116,105,111,110,32,100,97,116,97,49,55,56,54,32,46,32,97,114,103,115,49,55,56,55,41,0,0,0};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,14),40,100,111,49,56,55,52,32,105,49,56,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,61),40,114,111,116,97,116,101,45,105,116,101,109,115,32,105,116,101,109,115,49,56,54,57,32,115,116,97,114,116,49,56,55,48,32,115,116,101,112,49,56,55,49,32,119,105,100,116,104,49,56,55,50,32,101,110,100,49,56,55,51,41,0,0,0,0,0};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,26),40,110,101,120,116,45,105,110,45,114,111,116,97,116,105,111,110,32,111,98,106,49,56,54,55,41,0,0};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,100,97,116,117,109,32,120,49,57,48,49,41,0};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,45,115,101,116,33,32,120,49,57,48,52,32,118,97,108,49,57,48,53,41,0,0,0,0,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,105,110,100,101,120,32,120,49,57,48,55,41,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,26),40,114,97,110,100,111,109,45,105,116,101,109,45,119,101,105,103,104,116,32,120,49,57,49,51,41,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,105,110,32,120,49,57,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,23),40,114,97,110,100,111,109,45,105,116,101,109,45,109,97,120,32,120,49,57,50,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,38),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,45,115,101,116,33,32,120,49,57,50,56,32,118,97,108,49,57,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,25),40,114,97,110,100,111,109,45,105,116,101,109,45,99,111,117,110,116,32,120,49,57,51,49,41,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,14),40,97,49,53,57,57,50,32,105,50,48,49,52,41,0,0,0,0,0,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,23),40,97,49,53,57,56,54,32,102,110,50,48,49,50,32,111,98,106,50,48,49,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,17),40,97,49,54,50,50,51,32,105,116,101,109,49,57,54,55,41,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,25),40,37,109,97,107,101,45,114,97,110,100,111,109,45,105,116,101,109,32,119,50,48,50,53,41,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,36),40,109,97,107,101,45,119,101,105,103,104,116,105,110,103,32,100,97,116,97,49,57,53,55,32,46,32,97,114,103,115,49,57,53,56,41,0,0,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,37),40,100,111,50,49,49,50,32,116,97,105,108,50,49,49,52,32,105,110,100,101,120,50,49,49,53,32,116,111,116,97,108,50,49,49,54,41,0,0,0,0,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,17),40,100,111,50,49,48,54,32,116,97,105,108,50,49,48,56,41,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,36),40,114,101,99,97,108,99,45,119,101,105,103,104,116,105,110,103,115,32,111,98,106,50,49,48,50,32,102,105,120,63,50,49,48,51,41,0,0,0,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,27),40,100,111,50,49,51,52,32,116,97,105,108,50,49,51,54,32,105,110,100,101,120,50,49,51,55,41,0,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,18),40,112,105,99,107,32,99,50,49,51,50,32,114,50,49,51,51,41,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,17),40,100,111,50,49,52,51,32,116,97,105,108,50,49,52,53,41,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,17),40,100,111,50,49,51,57,32,105,116,101,109,50,49,52,49,41,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,27),40,110,101,120,116,45,105,110,45,119,101,105,103,104,116,105,110,103,32,111,98,106,50,49,50,50,41,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,23),40,97,49,55,51,48,54,32,102,110,50,50,55,49,32,111,98,106,50,50,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,14),40,97,49,55,48,54,48,32,115,50,49,55,50,41,0,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,8),40,100,111,50,49,54,53,41};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,41),40,100,111,50,49,56,55,32,116,97,105,108,50,49,56,57,32,111,114,100,101,114,50,49,57,48,32,108,105,115,50,49,57,49,32,112,50,49,57,50,41,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,33),40,109,97,107,101,45,109,97,114,107,111,118,32,100,97,116,97,50,49,57,57,32,46,32,97,114,103,115,50,50,48,48,41,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,17),40,100,111,50,50,57,54,32,116,97,105,108,50,50,57,56,41,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,33),40,100,111,50,50,56,54,32,116,97,105,108,50,50,56,56,32,111,117,116,50,50,56,57,32,115,117,109,50,50,57,48,41,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,37),40,115,101,108,101,99,116,45,111,117,116,112,117,116,32,114,97,110,103,101,50,50,56,52,32,111,117,116,112,117,116,115,50,50,56,53,41,0,0,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,17),40,100,111,50,51,50,54,32,108,97,115,116,50,51,50,56,41,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,26),40,100,111,50,51,48,50,32,105,50,51,48,52,32,106,50,51,48,53,32,102,50,51,48,54,41,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,35),40,100,111,50,51,49,55,32,116,97,105,108,50,51,49,57,32,112,97,115,116,50,51,50,48,32,105,116,101,109,50,51,50,49,41,0,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,24),40,110,101,120,116,45,105,110,45,109,97,114,107,111,118,32,111,98,106,50,50,56,49,41};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,24),40,103,114,97,112,104,45,110,111,100,101,45,100,97,116,117,109,32,120,50,51,52,54,41};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,14),40,97,49,56,49,55,56,32,110,50,52,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,23),40,97,49,56,49,55,50,32,102,110,50,52,49,48,32,111,98,106,50,52,49,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,28),40,97,49,56,52,50,52,32,105,116,101,109,50,52,50,50,32,46,32,97,114,103,115,50,52,50,51,41,0,0,0,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,29),40,112,97,114,115,101,45,103,114,97,112,104,45,105,116,101,109,32,101,120,116,101,114,110,50,52,50,49,41,0,0,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,32),40,109,97,107,101,45,103,114,97,112,104,32,100,97,116,97,50,51,54,55,32,46,32,97,114,103,115,50,51,54,56,41};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,17),40,100,111,50,52,55,54,32,116,97,105,108,50,52,55,56,41,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,23),40,110,101,120,116,45,105,110,45,103,114,97,112,104,32,111,98,106,50,52,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,14),40,97,49,56,56,53,49,32,120,50,53,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,31),40,97,100,100,45,111,117,116,99,111,109,101,32,112,114,101,118,50,53,51,57,32,110,101,120,116,50,53,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,14),40,97,49,56,56,57,57,32,122,50,53,53,48,41,0,0,0,0,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,14),40,97,49,56,57,48,57,32,122,50,53,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,27),40,98,101,102,111,114,101,63,32,120,50,53,52,52,32,121,50,53,52,53,32,108,50,53,52,54,41,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,16),40,97,49,57,48,48,55,32,114,111,119,50,54,55,51,41};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,20),40,100,111,50,54,52,55,32,105,50,54,52,57,32,109,50,54,53,48,41,0,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,14),40,100,111,50,54,52,48,32,108,50,54,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,20),40,100,111,50,54,51,51,32,105,50,54,51,53,32,109,50,54,51,54,41,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,20),40,100,111,50,54,50,55,32,105,50,54,50,57,32,109,50,54,51,48,41,0,0,0,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,14),40,100,111,50,53,53,51,32,120,50,53,53,53,41,0,0,0,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,17),40,100,111,50,54,50,49,32,116,97,105,108,50,54,50,51,41,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,20),40,100,111,50,54,49,49,32,105,50,54,49,51,32,109,50,54,49,52,41,0,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,14),40,100,111,50,54,48,54,32,108,50,54,48,56,41,0,0,0,0,0,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,14),40,100,111,50,54,48,49,32,105,50,54,48,51,41,0,0,0,0,0,0};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,20),40,97,49,57,51,48,51,32,120,50,53,57,55,32,121,50,53,57,56,41,0,0,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,14),40,100,111,50,53,56,56,32,101,50,53,57,48,41,0,0,0,0,0,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,20),40,100,111,50,53,56,50,32,101,50,53,56,52,32,115,50,53,56,53,41,0,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,25),40,100,111,50,53,55,52,32,116,97,105,108,50,53,55,54,32,108,101,110,50,53,55,55,41,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,20),40,97,49,57,52,53,50,32,120,50,53,55,50,32,121,50,53,55,51,41,0,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,29),40,100,111,50,53,54,49,32,112,114,101,118,50,53,54,51,32,106,50,53,54,52,32,120,50,53,54,53,41,0,0,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,14),40,100,111,50,53,53,56,32,105,50,53,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,35),40,109,97,114,107,111,118,45,97,110,97,108,121,122,101,32,115,101,113,50,52,56,52,32,46,32,97,114,103,115,50,52,56,53,41,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,45),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,50,55,49,55,32,115,116,114,105,110,103,50,55,49,56,32,112,111,115,105,116,105,111,110,50,55,49,57,41,0,0,0,0,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,116,121,112,101,32,120,50,55,50,52,41,0,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,20),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,50,55,51,48,41,0,0,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,22),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,50,55,51,54,41,0,0,0,0,0,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,19),40,108,105,115,116,45,62,116,111,107,101,110,32,108,50,55,52,53,41,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,22),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,50,55,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,23),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,50,55,52,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,63),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,50,55,53,48,32,116,121,112,101,50,55,53,49,32,112,97,116,116,101,114,110,50,55,53,50,32,112,97,114,115,101,114,50,55,53,51,32,101,109,105,116,101,114,50,55,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,17),40,114,117,108,101,45,110,97,109,101,32,120,50,55,53,57,41,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,26),40,103,101,116,45,114,117,108,101,32,116,121,112,50,56,48,51,32,100,101,102,50,56,48,52,41,0,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,118,97,108,117,101,32,120,50,56,48,54,41,0,0,0,0,0};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,50,56,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,50,56,48,57,41,0,0,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,21),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,50,56,49,48,41,0,0,0,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,25),40,112,97,116,116,101,114,110,45,115,117,98,32,120,50,56,49,49,32,105,50,56,49,50,41,0};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,29),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,50,56,49,54,41,0,0,0,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,50,56,49,56,32,112,111,115,105,116,105,111,110,50,56,49,57,41,0,0};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,50,56,50,52,41,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,28),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,50,56,51,48,41,0,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,50,56,51,56,32,112,97,114,115,101,100,50,56,51,57,32,112,111,115,105,116,105,111,110,50,56,52,48,41,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,19),40,112,97,114,115,101,45,117,110,105,116,63,32,120,50,56,52,49,41,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,23),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,50,56,52,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,50,56,53,49,41,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,50,56,53,55,41,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,117,110,105,116,63,32,120,50,56,54,55,41,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,33),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,50,56,54,56,32,116,121,112,50,56,54,57,41,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,33),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,56,55,49,32,105,110,102,111,50,56,55,50,41,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,42),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,50,56,55,52,32,100,97,116,97,50,56,55,53,32,105,110,102,111,50,56,55,54,41,0,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,43),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,50,56,55,55,32,100,97,116,97,50,56,55,56,32,105,110,102,111,50,56,55,57,41,0,0,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,30),40,101,109,105,116,32,120,50,56,56,50,32,105,110,102,111,50,56,56,51,32,101,114,114,102,50,56,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,37),40,101,109,105,116,45,108,105,115,116,32,108,105,115,50,56,56,53,32,105,110,102,111,50,56,56,54,32,101,114,114,102,50,56,56,55,41,0,0,0,0,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,27),40,102,95,50,48,54,48,48,32,97,114,103,115,50,57,48,48,32,101,114,114,102,50,57,48,49,41,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,50,56,57,57,41,0,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,17),40,100,111,50,57,48,57,32,116,97,105,108,50,57,49,49,41,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,36),40,102,95,50,48,54,48,56,32,117,110,105,116,50,57,48,51,32,105,110,102,111,50,57,48,52,32,101,114,114,102,50,57,48,53,41,0,0,0,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,30),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,50,57,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,8),40,97,50,48,56,48,54,41};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,26),40,97,50,48,56,49,54,32,97,50,57,52,49,32,98,50,57,52,50,32,99,50,57,52,51,41,0,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,8),40,97,50,48,57,49,50,41};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,26),40,97,50,48,57,50,54,32,97,50,57,53,55,32,98,50,57,53,56,32,99,50,57,53,57,41,0,0};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,53,50,32,105,50,57,53,52,41,0,0,0,0,0,0};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,8),40,97,50,48,57,55,57,41};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,26),40,97,50,48,57,57,51,32,97,50,57,55,57,32,98,50,57,56,48,32,99,50,57,56,49,41,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,14),40,100,111,50,57,55,52,32,105,50,57,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,8),40,97,50,49,48,54,56,41};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,26),40,97,50,49,48,55,52,32,97,50,57,57,56,32,98,50,57,57,57,32,99,51,48,48,48,41,0,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,8),40,100,111,50,57,57,52,41};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,8),40,97,50,49,49,48,55,41};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,26),40,97,50,49,49,49,51,32,97,51,48,49,54,32,98,51,48,49,55,32,99,51,48,49,56,41,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,70),40,112,97,114,115,101,114,32,112,97,116,50,57,50,56,32,116,111,107,101,110,115,50,57,50,57,32,102,111,114,99,101,45,97,110,100,50,57,51,48,32,108,101,118,101,108,50,57,51,49,32,116,114,97,99,101,50,57,51,50,32,101,114,114,102,50,57,51,51,41,0,0,0,0,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,21),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,51,49,57,51,41,0,0,0,0,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,18),40,83,97,108,79,112,84,121,112,101,63,32,105,51,49,57,55,41,0,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,20),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,51,50,48,54,41,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,29),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,51,50,48,55,32,116,121,112,50,51,50,48,56,41,0,0,0,0,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,17),40,100,111,51,50,53,55,32,116,111,107,115,51,50,53,57,41,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,36),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,51,50,53,51,32,116,121,112,51,50,53,52,41,0,0,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,14),40,105,115,45,111,112,63,32,120,51,50,56,52,41,0,0,0,0,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,29),40,100,111,51,50,57,51,32,119,50,51,50,57,53,32,111,107,51,50,57,54,32,108,105,51,50,57,55,41,0,0,0,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,8),40,100,111,51,50,57,49,41};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,18),40,105,110,102,45,62,112,114,101,32,105,110,102,51,50,56,54,41,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,51,52,53,50,32,101,114,114,102,51,52,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,14),40,100,111,51,54,54,50,32,102,51,54,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,14),40,100,111,51,54,53,53,32,102,51,54,53,55,41,0,0,0,0,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,8),40,97,50,48,54,55,55,41};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,44),40,97,50,48,54,56,52,32,115,117,99,99,101,115,115,50,57,50,51,32,114,101,115,117,108,116,115,50,57,50,52,32,114,101,109,97,105,110,115,50,57,50,53,41,0,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,17),40,97,50,48,54,55,49,32,101,114,114,102,50,57,50,49,41,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,51,54,51,57,32,114,117,108,101,51,54,52,48,32,116,111,107,101,110,115,51,54,52,49,32,116,114,97,99,101,63,51,54,52,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,17),40,100,111,51,54,56,50,32,116,97,105,108,51,54,56,52,41,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,27),40,112,114,105,110,116,101,114,32,116,104,105,110,103,51,54,56,48,32,108,101,118,51,54,56,49,41,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,17),40,100,111,51,54,57,48,32,116,97,105,108,51,54,57,50,41,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,51,54,55,56,41,0,0,0,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,51,54,57,55,41,0,0,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,51,54,57,57,41,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,51,55,48,51,41,0,0,0,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,51,55,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,51,56,51,53,32,120,51,56,51,54,41};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,51,56,51,55,41,0,0,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,51,56,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,51,56,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,51,56,52,54,41,0,0,0,0,0,0};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,51,56,52,57,41,0,0,0,0};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,51,56,53,48,32,120,51,56,53,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,51,56,53,50,41,0,0,0,0,0};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,51,56,53,53,41,0,0,0,0};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,51,56,53,56,41,0,0,0,0,0,0};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,14),40,100,111,51,56,54,51,32,97,51,56,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,51,56,54,49,41,0,0,0};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,14),40,100,111,51,56,55,53,32,108,51,56,55,55,41,0,0,0,0,0,0};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,51,56,55,51,32,97,99,99,101,115,115,111,114,51,56,55,52,41};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,51,56,55,48,32,99,108,97,117,115,101,115,51,56,55,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,51,56,56,49,32,111,112,115,51,56,56,50,41};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,51,56,56,51,41,0,0,0,0,0,0};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,51,56,56,52,32,118,97,108,51,56,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,48,55,32,116,97,105,108,51,57,48,57,41,0};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,48,50,32,116,97,105,108,51,57,48,52,41,0};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,20),40,100,111,51,56,57,50,32,104,51,56,57,52,32,108,51,56,57,53,41,0,0,0,0};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,51,56,56,54,32,102,111,114,109,115,51,56,56,55,32,97,114,103,115,51,56,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,51,57,50,49,32,99,108,97,117,115,101,115,51,57,50,50,32,111,112,115,51,57,50,51,41,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,17),40,100,111,51,57,52,49,32,110,101,120,116,51,57,52,51,41,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,51,57,50,55,32,99,108,97,117,115,101,115,51,57,50,56,32,111,112,115,51,57,50,57,41,0,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,8),40,97,50,52,50,53,54,41};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,30),40,97,50,52,50,55,52,32,99,108,97,117,115,101,52,48,50,50,32,105,103,110,111,114,101,52,48,50,51,41,0,0,0,0,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,52,48,49,57,32,99,108,97,117,115,101,115,52,48,50,48,32,111,112,115,52,48,50,49,41,0,0,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,17),40,100,111,52,48,52,48,32,110,101,120,116,52,48,52,50,41,0};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,48,50,53,32,99,108,97,117,115,101,115,52,48,50,54,32,111,112,115,52,48,50,55,41};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,17),40,100,111,52,49,48,55,32,110,101,120,116,52,49,48,57,41,0};
static C_char C_TLS li382[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,52,48,57,55,32,99,108,97,117,115,101,115,52,48,57,56,32,111,112,115,52,48,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li383[] C_aligned={C_lihdr(0,0,26),40,100,111,52,49,52,53,32,110,101,101,100,52,49,52,55,32,110,101,120,116,52,49,52,56,41,0,0};
static C_char C_TLS li384[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,52,49,51,53,32,99,108,97,117,115,101,115,52,49,51,54,32,111,112,115,52,49,51,55,41,0,0};
static C_char C_TLS li385[] C_aligned={C_lihdr(0,0,8),40,100,111,52,49,56,57,41};
static C_char C_TLS li386[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,52,49,56,48,32,99,108,97,117,115,101,115,52,49,56,49,32,111,112,115,52,49,56,50,41};
static C_char C_TLS li387[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,52,49,57,57,32,99,108,97,117,115,101,115,52,50,48,48,32,111,112,115,52,50,48,49,41,0,0,0,0,0};
static C_char C_TLS li388[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,52,50,49,51,32,99,108,97,117,115,101,115,52,50,49,52,32,111,112,115,52,50,49,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li389[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,52,50,56,48,32,116,121,112,101,52,50,56,49,32,97,99,99,52,50,56,50,32,104,101,97,100,52,50,56,51,41,0,0};
static C_char C_TLS li390[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,52,50,56,52,41};
static C_char C_TLS li391[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,52,50,56,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li392[] C_aligned={C_lihdr(0,0,14),40,100,111,52,50,51,50,32,97,52,50,51,52,41,0,0,0,0,0,0};
static C_char C_TLS li393[] C_aligned={C_lihdr(0,0,14),40,100,111,52,50,52,48,32,99,52,50,52,50,41,0,0,0,0,0,0};
static C_char C_TLS li394[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,52,50,53,57,32,99,108,97,117,115,101,115,52,50,54,48,32,111,112,115,52,50,54,49,41,0,0};
static C_char C_TLS li395[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,52,51,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li396[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,52,51,54,49,32,99,108,97,117,115,101,115,52,51,54,50,32,111,112,115,52,51,54,51,41,0};
static C_char C_TLS li397[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,52,51,56,50,32,99,108,97,117,115,101,115,52,51,56,51,32,111,112,115,52,51,56,52,41,0,0,0,0,0};
static C_char C_TLS li398[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,52,51,57,56,32,99,108,97,117,115,101,115,52,51,57,57,32,111,112,115,52,52,48,48,41,0,0,0,0};
static C_char C_TLS li399[] C_aligned={C_lihdr(0,0,8),40,97,50,54,49,52,55,41};
static C_char C_TLS li400[] C_aligned={C_lihdr(0,0,20),40,97,50,54,49,54,48,32,97,52,52,50,53,32,98,52,52,50,54,41,0,0,0,0};
static C_char C_TLS li401[] C_aligned={C_lihdr(0,0,38),40,100,111,52,52,49,56,32,111,112,52,52,50,48,32,99,108,97,117,115,101,52,52,50,49,32,114,101,109,97,105,110,115,52,52,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li402[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,52,52,49,50,32,99,108,97,117,115,101,115,52,52,49,51,32,111,112,115,52,52,49,52,41,0,0};
static C_char C_TLS li403[] C_aligned={C_lihdr(0,0,8),40,97,50,54,51,49,49,41};
static C_char C_TLS li404[] C_aligned={C_lihdr(0,0,20),40,97,50,54,51,50,53,32,97,52,52,53,52,32,98,52,52,53,53,41,0,0,0,0};
static C_char C_TLS li405[] C_aligned={C_lihdr(0,0,8),40,97,50,54,51,56,57,41};
static C_char C_TLS li406[] C_aligned={C_lihdr(0,0,20),40,97,50,54,51,57,53,32,97,52,52,53,49,32,98,52,52,53,50,41,0,0,0,0};
static C_char C_TLS li407[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,52,52,51,56,32,99,108,97,117,115,101,115,52,52,51,57,32,111,112,115,52,52,52,48,41,0};
static C_char C_TLS li408[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,52,52,56,49,32,116,121,112,101,52,52,56,50,41,0,0};
static C_char C_TLS li409[] C_aligned={C_lihdr(0,0,8),40,97,50,54,53,51,55,41};
static C_char C_TLS li410[] C_aligned={C_lihdr(0,0,20),40,97,50,54,53,52,54,32,97,52,52,57,52,32,98,52,52,57,53,41,0,0,0,0};
static C_char C_TLS li411[] C_aligned={C_lihdr(0,0,47),40,100,111,52,52,56,53,32,111,112,52,52,56,55,32,99,108,97,117,115,101,52,52,56,56,32,114,101,109,97,105,110,115,52,52,56,57,32,98,111,100,121,52,52,57,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li412[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,52,53,48,55,32,102,111,114,109,115,52,53,48,56,32,111,112,115,52,53,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li413[] C_aligned={C_lihdr(0,0,59),40,102,95,50,54,57,53,50,32,97,52,54,56,54,52,54,56,57,32,97,52,54,56,53,52,54,57,48,32,97,52,54,56,52,52,54,57,49,32,97,52,54,56,51,52,54,57,50,32,97,52,54,56,50,52,54,57,51,41,0,0,0};
static C_char C_TLS li414[] C_aligned={C_lihdr(0,0,23),40,109,109,58,109,97,107,101,45,111,110,32,46,32,97,114,103,115,52,53,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li415[] C_aligned={C_lihdr(0,0,29),40,102,95,50,55,54,54,54,32,97,52,55,48,50,52,55,48,54,32,97,52,55,48,49,52,55,48,55,41,0,0,0,0,0};
static C_char C_TLS li416[] C_aligned={C_lihdr(0,0,14),40,109,109,58,111,110,63,32,109,52,55,48,48,41,0,0,0,0,0,0};
static C_char C_TLS li417[] C_aligned={C_lihdr(0,0,59),40,102,95,50,55,54,57,55,32,97,52,55,56,49,52,55,56,52,32,97,52,55,56,48,52,55,56,53,32,97,52,55,55,57,52,55,56,54,32,97,52,55,55,56,52,55,56,55,32,97,52,55,55,55,52,55,56,56,41,0,0,0};
static C_char C_TLS li418[] C_aligned={C_lihdr(0,0,24),40,109,109,58,109,97,107,101,45,111,102,102,32,46,32,97,114,103,115,52,55,48,57,41};
static C_char C_TLS li419[] C_aligned={C_lihdr(0,0,29),40,102,95,50,56,49,51,54,32,97,52,55,57,54,52,56,48,48,32,97,52,55,57,53,52,56,48,49,41,0,0,0,0,0};
static C_char C_TLS li420[] C_aligned={C_lihdr(0,0,15),40,109,109,58,111,102,102,63,32,109,52,55,57,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li421[] C_aligned={C_lihdr(0,0,59),40,102,95,50,56,49,55,48,32,97,52,57,49,50,52,57,49,53,32,97,52,57,49,49,52,57,49,54,32,97,52,57,49,48,52,57,49,55,32,97,52,57,48,57,52,57,49,56,32,97,52,57,48,56,52,57,49,57,41,0,0,0};
static C_char C_TLS li422[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,116,111,117,99,104,32,46,32,97,114,103,115,52,56,48,51,41,0,0};
static C_char C_TLS li423[] C_aligned={C_lihdr(0,0,29),40,102,95,50,56,56,56,52,32,97,52,57,50,56,52,57,51,50,32,97,52,57,50,55,52,57,51,51,41,0,0,0,0,0};
static C_char C_TLS li424[] C_aligned={C_lihdr(0,0,17),40,109,109,58,116,111,117,99,104,63,32,109,52,57,50,54,41,0};
static C_char C_TLS li425[] C_aligned={C_lihdr(0,0,59),40,102,95,50,56,57,49,56,32,97,53,48,52,52,53,48,52,55,32,97,53,48,52,51,53,48,52,56,32,97,53,48,52,50,53,48,52,57,32,97,53,48,52,49,53,48,53,48,32,97,53,48,52,48,53,48,53,49,41,0,0,0};
static C_char C_TLS li426[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,99,116,114,108,32,46,32,97,114,103,115,52,57,51,53,41,0};
static C_char C_TLS li427[] C_aligned={C_lihdr(0,0,29),40,102,95,50,57,54,51,50,32,97,53,48,54,48,53,48,54,52,32,97,53,48,53,57,53,48,54,53,41,0,0,0,0,0};
static C_char C_TLS li428[] C_aligned={C_lihdr(0,0,16),40,109,109,58,99,116,114,108,63,32,109,53,48,53,56,41};
static C_char C_TLS li429[] C_aligned={C_lihdr(0,0,59),40,102,95,50,57,54,54,51,32,97,53,49,51,57,53,49,52,50,32,97,53,49,51,56,53,49,52,51,32,97,53,49,51,55,53,49,52,52,32,97,53,49,51,54,53,49,52,53,32,97,53,49,51,53,53,49,52,54,41,0,0,0};
static C_char C_TLS li430[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,112,114,111,103,32,46,32,97,114,103,115,53,48,54,55,41,0};
static C_char C_TLS li431[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,49,48,50,32,97,53,49,53,52,53,49,53,56,32,97,53,49,53,51,53,49,53,57,41,0,0,0,0,0};
static C_char C_TLS li432[] C_aligned={C_lihdr(0,0,16),40,109,109,58,112,114,111,103,63,32,109,53,49,53,50,41};
static C_char C_TLS li433[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,49,51,51,32,97,53,50,51,51,53,50,51,54,32,97,53,50,51,50,53,50,51,55,32,97,53,50,51,49,53,50,51,56,32,97,53,50,51,48,53,50,51,57,32,97,53,50,50,57,53,50,52,48,41,0,0,0};
static C_char C_TLS li434[] C_aligned={C_lihdr(0,0,26),40,109,109,58,109,97,107,101,45,112,114,101,115,115,32,46,32,97,114,103,115,53,49,54,49,41,0,0};
static C_char C_TLS li435[] C_aligned={C_lihdr(0,0,29),40,102,95,51,48,53,55,50,32,97,53,50,52,56,53,50,53,50,32,97,53,50,52,55,53,50,53,51,41,0,0,0,0,0};
static C_char C_TLS li436[] C_aligned={C_lihdr(0,0,17),40,109,109,58,112,114,101,115,115,63,32,109,53,50,52,54,41,0};
static C_char C_TLS li437[] C_aligned={C_lihdr(0,0,59),40,102,95,51,48,54,48,51,32,97,53,51,50,55,53,51,51,48,32,97,53,51,50,54,53,51,51,49,32,97,53,51,50,53,53,51,51,50,32,97,53,51,50,52,53,51,51,51,32,97,53,51,50,51,53,51,51,52,41,0,0,0};
static C_char C_TLS li438[] C_aligned={C_lihdr(0,0,25),40,109,109,58,109,97,107,101,45,98,101,110,100,32,46,32,97,114,103,115,53,50,53,53,41,0};
static C_char C_TLS li439[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,48,54,52,32,97,53,51,53,48,53,51,53,52,41,0,0,0};
static C_char C_TLS li440[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,53,51,52,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li441[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,48,55,57,32,97,53,51,53,56,53,51,54,50,41,0,0,0};
static C_char C_TLS li442[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,53,51,53,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li443[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,48,57,52,32,97,53,51,54,54,53,51,55,48,41,0,0,0};
static C_char C_TLS li444[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,53,51,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li445[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,49,48,57,32,97,53,51,55,54,53,51,56,48,32,97,53,51,55,53,53,51,56,49,41,0,0,0,0,0};
static C_char C_TLS li446[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,53,51,55,51,32,116,53,51,55,52,41,0,0};
static C_char C_TLS li447[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,49,50,56,32,97,53,51,56,53,53,51,56,57,41,0,0,0};
static C_char C_TLS li448[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,53,51,56,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li449[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,49,52,51,32,97,53,51,57,52,53,51,57,56,32,97,53,51,57,51,53,51,57,57,41,0,0,0,0,0};
static C_char C_TLS li450[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,53,51,57,49,32,99,53,51,57,50,41,0,0};
static C_char C_TLS li451[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,49,54,50,32,97,53,52,48,52,53,52,48,56,32,97,53,52,48,51,53,52,48,57,41,0,0,0,0,0};
static C_char C_TLS li452[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,53,52,48,50,41,0,0,0,0,0,0};
static C_char C_TLS li453[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,49,56,49,32,97,53,52,49,53,53,52,49,57,32,97,53,52,49,52,53,52,50,48,32,97,53,52,49,51,53,52,50,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li454[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,53,52,49,49,32,107,53,52,49,50,41,0};
static C_char C_TLS li455[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,50,48,52,32,97,53,52,50,54,53,52,51,48,32,97,53,52,50,53,53,52,51,49,41,0,0,0,0,0};
static C_char C_TLS li456[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,53,52,50,52,41,0,0,0,0,0,0};
static C_char C_TLS li457[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,50,50,51,32,97,53,52,51,55,53,52,52,49,32,97,53,52,51,54,53,52,52,50,32,97,53,52,51,53,53,52,52,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li458[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,53,52,51,51,32,118,53,52,51,52,41,0};
static C_char C_TLS li459[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,50,53,53,32,97,53,52,53,48,53,52,53,52,32,97,53,52,52,57,53,52,53,53,41,0,0,0,0,0};
static C_char C_TLS li460[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,50,55,49,32,97,53,52,53,56,53,52,54,50,32,97,53,52,53,55,53,52,54,51,41,0,0,0,0,0};
static C_char C_TLS li461[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,53,52,52,54,41,0,0,0,0,0,0};
static C_char C_TLS li462[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,51,48,50,32,97,53,52,55,49,53,52,55,53,32,97,53,52,55,48,53,52,55,54,32,97,53,52,54,57,53,52,55,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li463[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,51,50,50,32,97,53,52,56,49,53,52,56,53,32,97,53,52,56,48,53,52,56,54,32,97,53,52,55,57,53,52,56,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li464[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,53,52,54,53,32,118,53,52,54,54,41,0};
static C_char C_TLS li465[] C_aligned={C_lihdr(0,0,29),40,102,95,51,49,51,52,56,32,97,53,52,57,50,53,52,57,54,32,97,53,52,57,49,53,52,57,55,41,0,0,0,0,0};
static C_char C_TLS li466[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,53,52,57,48,41,0,0,0,0,0,0};
static C_char C_TLS li467[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,51,54,55,32,97,53,53,48,51,53,53,48,55,32,97,53,53,48,50,53,53,48,56,32,97,53,53,48,49,53,53,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li468[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,53,52,57,57,32,118,53,53,48,48,41,0};
static C_char C_TLS li469[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,51,57,48,32,97,53,53,50,49,53,53,50,52,32,97,53,53,50,48,53,53,50,53,32,97,53,53,49,57,53,53,50,54,32,97,53,53,49,56,53,53,50,55,32,97,53,53,49,55,53,53,50,56,41,0,0,0};
static C_char C_TLS li470[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,53,53,49,50,32,100,117,114,53,53,49,51,32,107,101,121,53,53,49,52,32,97,109,112,53,53,49,53,32,99,104,97,110,53,53,49,54,41,0,0,0};
static C_char C_TLS li471[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,52,49,56,32,97,53,53,51,56,53,53,52,49,32,97,53,53,51,55,53,53,52,50,32,97,53,53,51,54,53,53,52,51,32,97,53,53,51,53,53,53,52,52,32,97,53,53,51,52,53,53,52,53,41,0,0,0};
static C_char C_TLS li472[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,53,53,50,57,32,100,117,114,53,53,51,48,32,107,101,121,53,53,51,49,32,97,109,112,53,53,51,50,32,99,104,97,110,53,53,51,51,41,0,0,0};
static C_char C_TLS li473[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,52,52,54,32,97,53,53,53,51,53,53,53,54,32,97,53,53,53,50,53,53,53,55,32,97,53,53,53,49,53,53,53,56,32,97,53,53,53,48,53,53,53,57,32,97,53,53,52,57,53,53,54,48,41,0,0,0};
static C_char C_TLS li474[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,53,53,52,54,32,107,101,121,53,53,52,55,32,99,104,97,110,53,53,52,56,41,0,0};
static C_char C_TLS li475[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,52,55,52,32,97,53,53,54,57,53,53,55,50,32,97,53,53,54,56,53,53,55,51,32,97,53,53,54,55,53,53,55,52,32,97,53,53,54,54,53,53,55,53,32,97,53,53,54,53,53,53,55,54,41,0,0,0};
static C_char C_TLS li476[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,53,53,54,49,32,107,101,121,53,53,54,50,32,118,101,108,53,53,54,51,32,99,104,97,110,53,53,54,52,41,0};
static C_char C_TLS li477[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,53,48,50,32,97,53,53,56,53,53,53,56,56,32,97,53,53,56,52,53,53,56,57,32,97,53,53,56,51,53,53,57,48,32,97,53,53,56,50,53,53,57,49,32,97,53,53,56,49,53,53,57,50,41,0,0,0};
static C_char C_TLS li478[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,53,53,55,55,32,107,101,121,53,53,55,56,32,118,97,108,53,53,55,57,32,99,104,97,110,53,53,56,48,41,0,0,0,0};
static C_char C_TLS li479[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,53,51,48,32,97,53,54,48,49,53,54,48,52,32,97,53,54,48,48,53,54,48,53,32,97,53,53,57,57,53,54,48,54,32,97,53,53,57,56,53,54,48,55,32,97,53,53,57,55,53,54,48,56,41,0,0,0};
static C_char C_TLS li480[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,53,53,57,51,32,110,117,109,53,53,57,52,32,118,97,108,53,53,57,53,32,99,104,97,110,53,53,57,54,41,0,0,0};
static C_char C_TLS li481[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,53,53,56,32,97,53,54,49,54,53,54,49,57,32,97,53,54,49,53,53,54,50,48,32,97,53,54,49,52,53,54,50,49,32,97,53,54,49,51,53,54,50,50,32,97,53,54,49,50,53,54,50,51,41,0,0,0};
static C_char C_TLS li482[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,53,54,48,57,32,118,97,108,53,54,49,48,32,99,104,97,110,53,54,49,49,41,0,0,0};
static C_char C_TLS li483[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,53,56,54,32,97,53,54,51,49,53,54,51,52,32,97,53,54,51,48,53,54,51,53,32,97,53,54,50,57,53,54,51,54,32,97,53,54,50,56,53,54,51,55,32,97,53,54,50,55,53,54,51,56,41,0,0,0};
static C_char C_TLS li484[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,53,54,50,52,32,118,97,108,53,54,50,53,32,99,104,97,110,53,54,50,54,41,0,0,0,0};
static C_char C_TLS li485[] C_aligned={C_lihdr(0,0,59),40,102,95,51,49,54,49,52,32,97,53,54,52,54,53,54,52,57,32,97,53,54,52,53,53,54,53,48,32,97,53,54,52,52,53,54,53,49,32,97,53,54,52,51,53,54,53,50,32,97,53,54,52,50,53,54,53,51,41,0,0,0};
static C_char C_TLS li486[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,53,54,51,57,32,118,97,108,53,54,52,48,32,99,104,97,110,53,54,52,49,41,0,0,0};
static C_char C_TLS li487[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,54,52,50,32,97,53,54,53,53,53,54,53,57,41,0,0,0};
static C_char C_TLS li488[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,53,54,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li489[] C_aligned={C_lihdr(0,0,17),40,97,51,49,54,55,53,32,37,101,114,114,53,54,54,56,41,0};
static C_char C_TLS li490[] C_aligned={C_lihdr(0,0,8),40,97,51,49,54,57,53,41};
static C_char C_TLS li491[] C_aligned={C_lihdr(0,0,18),40,97,51,49,54,54,57,32,37,99,111,110,116,53,54,54,55,41,0,0};
static C_char C_TLS li492[] C_aligned={C_lihdr(0,0,17),40,97,51,49,54,54,51,32,37,109,115,103,53,54,54,54,41,0};
static C_char C_TLS li493[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,55,48,49,32,97,53,54,54,50,53,54,54,53,41,0,0,0};
static C_char C_TLS li494[] C_aligned={C_lihdr(0,0,19),40,102,95,51,49,55,48,54,32,97,53,54,55,49,53,54,55,52,41,0,0,0};
static C_char C_TLS li495[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,53,54,54,49,41,0,0,0,0,0};
static C_char C_TLS li496[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,55,54,51,32,97,53,55,50,55,53,55,51,48,32,97,53,55,50,54,53,55,51,49,32,97,53,55,50,53,53,55,51,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li497[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,53,55,50,52,41,0};
static C_char C_TLS li498[] C_aligned={C_lihdr(0,0,39),40,102,95,51,49,56,50,48,32,97,53,55,51,56,53,55,52,49,32,97,53,55,51,55,53,55,52,50,32,97,53,55,51,54,53,55,52,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li499[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,53,55,51,53,41,0};
static C_char C_TLS li500[] C_aligned={C_lihdr(0,0,9),40,102,95,51,49,56,54,49,41,0};
static C_char C_TLS li501[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li502[] C_aligned={C_lihdr(0,0,14),40,100,111,53,55,54,56,32,120,53,55,55,48,41,0,0,0,0,0,0};
static C_char C_TLS li503[] C_aligned={C_lihdr(0,0,26),40,100,111,53,55,53,52,32,101,53,55,54,53,32,118,53,55,54,54,32,121,53,55,54,55,41,0,0};
static C_char C_TLS li504[] C_aligned={C_lihdr(0,0,18),40,99,109,45,108,111,103,111,32,118,101,114,115,53,55,53,51,41,0,0};
static C_char C_TLS li505[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,53,55,55,57,53,55,56,51,41,0};
static C_char C_TLS li506[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,53,55,56,53,53,55,56,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li507[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li508[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li509[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li510[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,53,56,48,49,53,56,48,52,41,0,0,0};
static C_char C_TLS li511[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li512[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,53,56,48,57,53,56,49,50,32,97,53,56,48,56,53,56,49,51,32,97,53,56,48,55,53,56,49,52,41};
static C_char C_TLS li513[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li514[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,53,56,50,57,53,56,51,50,41,0,0};
static C_char C_TLS li515[] C_aligned={C_lihdr(0,0,19),40,102,95,51,50,49,56,54,32,97,53,56,52,48,53,56,52,52,41,0,0,0};
static C_char C_TLS li516[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,53,56,51,57,41};
static C_char C_TLS li517[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li518[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li519[] C_aligned={C_lihdr(0,0,14),40,100,111,53,56,54,52,32,112,53,56,54,54,41,0,0,0,0,0,0};
static C_char C_TLS li520[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,53,56,53,48,32,115,116,97,114,116,53,56,53,54,32,105,100,53,56,53,55,41,0,0,0};
static C_char C_TLS li521[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,53,56,53,51,32,37,115,116,97,114,116,53,56,52,56,53,56,55,50,41,0,0,0};
static C_char C_TLS li522[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,53,56,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li523[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,53,56,52,54,32,46,32,97,114,103,115,53,56,52,55,41,0,0,0,0};
static C_char C_TLS li524[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li525[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,53,56,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li526[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li527[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li528[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li529[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li530[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li531[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li532[] C_aligned={C_lihdr(0,0,17),40,100,111,53,56,57,51,32,116,97,105,108,53,56,57,53,41,0};
static C_char C_TLS li533[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,53,56,57,50,41,0,0,0};
static C_char C_TLS li534[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li535[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li536[] C_aligned={C_lihdr(0,0,47),40,114,117,110,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,53,57,48,48,32,99,108,97,117,115,101,115,53,57,48,49,32,111,112,115,53,57,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li537[] C_aligned={C_lihdr(0,0,44),40,112,114,111,99,101,115,115,45,99,111,100,101,45,116,101,114,109,105,110,97,116,101,115,63,32,99,111,100,101,53,57,51,48,32,115,116,111,112,53,57,51,49,41,0,0,0,0};
static C_char C_TLS li538[] C_aligned={C_lihdr(0,0,31),40,97,51,50,56,57,57,32,102,111,114,109,97,108,115,53,57,53,49,32,46,32,98,111,100,121,53,57,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li539[] C_aligned={C_lihdr(0,0,17),40,97,51,50,57,50,56,32,97,114,103,115,53,57,53,48,41,0};
static C_char C_TLS li540[] C_aligned={C_lihdr(0,0,16),40,100,111,53,57,50,51,32,111,112,115,53,57,50,53,41};
static C_char C_TLS li541[] C_aligned={C_lihdr(0,0,17),40,97,51,50,57,57,55,32,97,114,103,115,52,53,50,48,41,0};
static C_char C_TLS li542[] C_aligned={C_lihdr(0,0,16),40,97,51,51,49,51,57,32,115,121,109,51,56,51,51,41};
static C_char C_TLS li543[] C_aligned={C_lihdr(0,0,16),40,97,51,51,49,52,50,32,115,121,109,51,56,51,49,41};
static C_char C_TLS li544[] C_aligned={C_lihdr(0,0,24),40,97,51,51,49,55,49,32,118,97,108,51,56,50,57,32,115,121,109,51,56,51,48,41};
static C_char C_TLS li545[] C_aligned={C_lihdr(0,0,17),40,97,51,51,49,56,53,32,97,114,103,115,51,56,50,56,41,0};
static C_char C_TLS li546[] C_aligned={C_lihdr(0,0,26),40,97,51,51,49,57,57,32,97,114,103,115,51,54,51,52,32,101,114,114,102,51,54,51,53,41,0,0};
static C_char C_TLS li547[] C_aligned={C_lihdr(0,0,35),40,97,51,51,50,49,51,32,117,110,105,116,51,54,51,54,32,105,110,102,111,51,54,51,55,32,101,114,114,102,51,54,51,56,41,0,0,0};
static C_char C_TLS li548[] C_aligned={C_lihdr(0,0,26),40,97,51,51,51,49,57,32,97,114,103,115,51,53,56,51,32,101,114,114,102,51,53,56,52,41,0,0};
static C_char C_TLS li549[] C_aligned={C_lihdr(0,0,17),40,100,111,51,53,57,53,32,114,101,115,116,51,53,57,55,41,0};
static C_char C_TLS li550[] C_aligned={C_lihdr(0,0,26),40,100,111,51,54,50,49,32,97,114,103,115,51,54,50,51,32,116,97,105,108,51,54,50,52,41,0,0};
static C_char C_TLS li551[] C_aligned={C_lihdr(0,0,35),40,97,51,51,51,53,56,32,117,110,105,116,51,53,56,56,32,105,110,102,111,51,53,56,57,32,101,114,114,102,51,53,57,48,41,0,0,0};
static C_char C_TLS li552[] C_aligned={C_lihdr(0,0,26),40,97,51,51,55,55,54,32,97,114,103,115,51,53,55,54,32,101,114,114,102,51,53,55,55,41,0,0};
static C_char C_TLS li553[] C_aligned={C_lihdr(0,0,26),40,97,51,51,57,50,49,32,97,114,103,115,51,53,54,50,32,101,114,114,102,51,53,54,51,41,0,0};
static C_char C_TLS li554[] C_aligned={C_lihdr(0,0,17),40,100,111,51,53,51,57,32,116,97,105,108,51,53,52,49,41,0};
static C_char C_TLS li555[] C_aligned={C_lihdr(0,0,17),40,100,111,51,53,51,52,32,116,97,105,108,51,53,51,54,41,0};
static C_char C_TLS li556[] C_aligned={C_lihdr(0,0,20),40,100,111,51,53,50,51,32,99,108,97,117,115,101,115,51,53,50,53,41,0,0,0,0};
static C_char C_TLS li557[] C_aligned={C_lihdr(0,0,17),40,100,111,51,53,50,48,32,116,97,105,108,51,53,50,50,41,0};
static C_char C_TLS li558[] C_aligned={C_lihdr(0,0,35),40,97,51,51,57,54,55,32,117,110,105,116,51,53,55,50,32,105,110,102,111,51,53,55,51,32,101,114,114,102,51,53,55,52,41,0,0,0};
static C_char C_TLS li559[] C_aligned={C_lihdr(0,0,26),40,97,51,52,52,50,49,32,97,114,103,115,51,52,51,54,32,101,114,114,102,51,52,51,55,41,0,0};
static C_char C_TLS li560[] C_aligned={C_lihdr(0,0,35),40,97,51,52,52,56,57,32,117,110,105,116,51,52,52,56,32,105,110,102,111,51,52,52,57,32,101,114,114,102,51,52,53,48,41,0,0,0};
static C_char C_TLS li561[] C_aligned={C_lihdr(0,0,26),40,97,51,52,54,49,56,32,97,114,103,115,51,52,50,52,32,101,114,114,102,51,52,50,53,41,0,0};
static C_char C_TLS li562[] C_aligned={C_lihdr(0,0,35),40,97,51,52,54,52,52,32,117,110,105,116,51,52,50,57,32,105,110,102,111,51,52,51,48,32,101,114,114,102,51,52,51,49,41,0,0,0};
static C_char C_TLS li563[] C_aligned={C_lihdr(0,0,26),40,97,51,52,55,51,50,32,97,114,103,115,51,52,48,50,32,101,114,114,102,51,52,48,51,41,0,0};
static C_char C_TLS li564[] C_aligned={C_lihdr(0,0,17),40,100,111,51,52,49,48,32,105,116,101,114,51,52,49,50,41,0};
static C_char C_TLS li565[] C_aligned={C_lihdr(0,0,35),40,97,51,52,55,55,53,32,117,110,105,116,51,52,48,52,32,105,110,102,111,51,52,48,53,32,101,114,114,102,51,52,48,54,41,0,0,0};
static C_char C_TLS li566[] C_aligned={C_lihdr(0,0,26),40,97,51,53,48,49,50,32,97,114,103,115,51,51,57,57,32,101,114,114,102,51,52,48,48,41,0,0};
static C_char C_TLS li567[] C_aligned={C_lihdr(0,0,26),40,97,51,53,48,57,56,32,97,114,103,115,51,51,57,49,32,101,114,114,102,51,51,57,50,41,0,0};
static C_char C_TLS li568[] C_aligned={C_lihdr(0,0,14),40,97,51,53,49,53,48,32,101,51,51,57,55,41,0,0,0,0,0,0};
static C_char C_TLS li569[] C_aligned={C_lihdr(0,0,35),40,97,51,53,49,52,49,32,117,110,105,116,51,51,57,51,32,105,110,102,111,51,51,57,52,32,101,114,114,102,51,51,57,53,41,0,0,0};
static C_char C_TLS li570[] C_aligned={C_lihdr(0,0,26),40,97,51,53,50,48,48,32,97,114,103,115,51,51,56,52,32,101,114,114,102,51,51,56,53,41,0,0};
static C_char C_TLS li571[] C_aligned={C_lihdr(0,0,14),40,97,51,53,50,52,49,32,101,51,51,56,57,41,0,0,0,0,0,0};
static C_char C_TLS li572[] C_aligned={C_lihdr(0,0,35),40,97,51,53,50,51,53,32,117,110,105,116,51,51,56,54,32,105,110,102,111,51,51,56,55,32,101,114,114,102,51,51,56,56,41,0,0,0};
static C_char C_TLS li573[] C_aligned={C_lihdr(0,0,35),40,97,51,53,50,57,53,32,117,110,105,116,51,51,55,55,32,105,110,102,111,51,51,55,56,32,101,114,114,102,51,51,55,57,41,0,0,0};
static C_char C_TLS li574[] C_aligned={C_lihdr(0,0,35),40,97,51,53,51,53,54,32,117,110,105,116,51,51,55,49,32,105,110,102,111,51,51,55,50,32,101,114,114,102,51,51,55,51,41,0,0,0};
static C_char C_TLS li575[] C_aligned={C_lihdr(0,0,26),40,97,51,53,52,49,48,32,97,114,103,115,51,51,54,53,32,101,114,114,102,51,51,54,54,41,0,0};
static C_char C_TLS li576[] C_aligned={C_lihdr(0,0,35),40,97,51,53,52,52,48,32,117,110,105,116,51,51,54,55,32,105,110,102,111,51,51,54,56,32,101,114,114,102,51,51,54,57,41,0,0,0};
static C_char C_TLS li577[] C_aligned={C_lihdr(0,0,26),40,97,51,53,54,53,57,32,97,114,103,115,51,51,53,56,32,101,114,114,102,51,51,53,57,41,0,0};
static C_char C_TLS li578[] C_aligned={C_lihdr(0,0,26),40,97,51,53,54,56,53,32,97,114,103,115,51,51,52,53,32,101,114,114,102,51,51,52,54,41,0,0};
static C_char C_TLS li579[] C_aligned={C_lihdr(0,0,27),40,97,51,53,55,56,48,32,115,116,114,51,51,53,53,32,46,32,97,114,103,115,51,51,53,54,41,0,0,0};
static C_char C_TLS li580[] C_aligned={C_lihdr(0,0,35),40,97,51,53,55,54,48,32,117,110,105,116,51,51,53,48,32,105,110,102,111,51,51,53,49,32,101,114,114,102,51,51,53,50,41,0,0,0};
static C_char C_TLS li581[] C_aligned={C_lihdr(0,0,26),40,97,51,53,56,57,56,32,97,114,103,115,51,51,51,56,32,101,114,114,102,51,51,51,57,41,0,0};
static C_char C_TLS li582[] C_aligned={C_lihdr(0,0,35),40,97,51,53,57,50,48,32,117,110,105,116,51,51,52,48,32,105,110,102,111,51,51,52,49,32,101,114,114,102,51,51,52,50,41,0,0,0};
static C_char C_TLS li583[] C_aligned={C_lihdr(0,0,26),40,97,51,53,57,55,51,32,97,114,103,115,51,51,50,52,32,101,114,114,102,51,51,50,53,41,0,0};
static C_char C_TLS li584[] C_aligned={C_lihdr(0,0,17),40,100,111,51,51,51,49,32,97,114,103,115,51,51,51,51,41,0};
static C_char C_TLS li585[] C_aligned={C_lihdr(0,0,35),40,97,51,53,57,57,53,32,117,110,105,116,51,51,50,54,32,105,110,102,111,51,51,50,55,32,101,114,114,102,51,51,50,56,41,0,0,0};
static C_char C_TLS li586[] C_aligned={C_lihdr(0,0,26),40,97,51,54,49,50,55,32,97,114,103,115,51,51,49,55,32,101,114,114,102,51,51,49,56,41,0,0};
static C_char C_TLS li587[] C_aligned={C_lihdr(0,0,35),40,97,51,54,49,53,51,32,117,110,105,116,51,51,49,57,32,105,110,102,111,51,51,50,48,32,101,114,114,102,51,51,50,49,41,0,0,0};
static C_char C_TLS li588[] C_aligned={C_lihdr(0,0,26),40,97,51,54,50,54,51,32,97,114,103,115,51,51,49,51,32,101,114,114,102,51,51,49,52,41,0,0};
static C_char C_TLS li589[] C_aligned={C_lihdr(0,0,26),40,97,51,54,52,49,57,32,97,114,103,115,51,50,55,54,32,101,114,114,102,51,50,55,55,41,0,0};
static C_char C_TLS li590[] C_aligned={C_lihdr(0,0,35),40,97,51,54,52,51,55,32,117,110,105,116,51,50,55,56,32,105,110,102,111,51,50,55,57,32,101,114,114,102,51,50,56,48,41,0,0,0};
static C_char C_TLS li591[] C_aligned={C_lihdr(0,0,26),40,97,51,54,52,57,48,32,97,114,103,115,51,50,55,48,32,101,114,114,102,51,50,55,49,41,0,0};
static C_char C_TLS li592[] C_aligned={C_lihdr(0,0,26),40,97,51,54,54,52,50,32,97,114,103,115,51,50,54,55,32,101,114,114,102,51,50,54,56,41,0,0};
static C_char C_TLS li593[] C_aligned={C_lihdr(0,0,26),40,97,51,54,55,56,49,32,97,114,103,115,51,50,54,52,32,101,114,114,102,51,50,54,53,41,0,0};
static C_char C_TLS li594[] C_aligned={C_lihdr(0,0,26),40,97,51,54,57,48,49,32,97,114,103,115,51,50,52,51,32,101,114,114,102,51,50,52,52,41,0,0};
static C_char C_TLS li595[] C_aligned={C_lihdr(0,0,35),40,97,51,54,57,51,50,32,117,110,105,116,51,50,52,54,32,105,110,102,111,51,50,52,55,32,101,114,114,102,51,50,52,56,41,0,0,0};
static C_char C_TLS li596[] C_aligned={C_lihdr(0,0,26),40,97,51,55,48,50,52,32,97,114,103,115,51,50,51,55,32,101,114,114,102,51,50,51,56,41,0,0};
static C_char C_TLS li597[] C_aligned={C_lihdr(0,0,35),40,97,51,55,48,52,50,32,117,110,105,116,51,50,51,57,32,105,110,102,111,51,50,52,48,32,101,114,114,102,51,50,52,49,41,0,0,0};
static C_char C_TLS li598[] C_aligned={C_lihdr(0,0,35),40,97,51,55,49,49,54,32,117,110,105,116,51,50,50,54,32,105,110,102,111,51,50,50,55,32,101,114,114,102,51,50,50,56,41,0,0,0};
static C_char C_TLS li599[] C_aligned={C_lihdr(0,0,26),40,97,51,55,50,49,50,32,97,114,103,115,51,50,49,52,32,101,114,114,102,51,50,49,53,41,0,0};
static C_char C_TLS li600[] C_aligned={C_lihdr(0,0,35),40,97,51,55,50,50,50,32,117,110,105,116,51,50,49,54,32,105,110,102,111,51,50,49,55,32,101,114,114,102,51,50,49,56,41,0,0,0};
static C_char C_TLS li601[] C_aligned={C_lihdr(0,0,20),40,97,51,55,51,57,56,32,117,50,56,54,52,32,112,50,56,54,53,41,0,0,0,0};
static C_char C_TLS li602[] C_aligned={C_lihdr(0,0,20),40,97,51,55,52,50,52,32,101,50,56,51,54,32,112,50,56,51,55,41,0,0,0,0};
static C_char C_TLS li603[] C_aligned={C_lihdr(0,0,12),40,112,112,97,116,32,112,50,55,57,57,41,0,0,0,0};
static C_char C_TLS li604[] C_aligned={C_lihdr(0,0,35),40,97,51,55,52,51,56,32,116,121,112,50,55,57,53,32,112,97,116,50,55,57,54,32,46,32,97,114,103,115,50,55,57,55,41,0,0,0};
static C_char C_TLS li605[] C_aligned={C_lihdr(0,0,20),40,97,51,55,53,52,49,32,114,50,55,57,50,32,112,50,55,57,51,41,0,0,0,0};
static C_char C_TLS li606[] C_aligned={C_lihdr(0,0,20),40,97,51,55,53,53,49,32,116,50,55,52,51,32,112,50,55,52,52,41,0,0,0,0};
static C_char C_TLS li607[] C_aligned={C_lihdr(0,0,23),40,97,51,55,53,54,53,32,111,98,106,57,49,56,32,112,111,114,116,57,49,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li608[] C_aligned={C_lihdr(0,0,71),40,100,111,54,56,48,32,100,54,56,50,32,107,54,56,51,32,112,54,56,52,32,107,60,54,56,53,32,107,62,54,56,54,32,102,54,56,55,32,102,62,54,56,56,32,102,60,54,56,57,32,111,54,57,48,32,120,54,57,49,32,110,54,57,50,32,101,54,57,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li609[] C_aligned={C_lihdr(0,0,14),40,100,111,54,55,52,32,107,101,121,54,55,54,41,0,0,0,0,0,0};
static C_char C_TLS li610[] C_aligned={C_lihdr(0,0,24),40,97,51,55,55,57,49,32,109,101,115,115,56,56,32,46,32,100,97,116,97,56,57,41};
static C_char C_TLS li611[] C_aligned={C_lihdr(0,0,22),40,97,51,55,55,57,55,32,102,117,110,99,51,56,32,105,110,102,111,51,57,41,0,0,0,0,0,0};
static C_char C_TLS li612[] C_aligned={C_lihdr(0,0,24),40,97,51,55,56,52,57,32,115,112,101,99,51,54,32,46,32,98,111,100,121,51,55,41};
static C_char C_TLS li613[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k32189 */
static C_word C_fcall stub5841(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5841(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k32174 in hush in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
C_noret_decl(stub5835)
static void C_ccall stub5835(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5835(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k32168 */
C_noret_decl(stub5830)
static void C_ccall stub5830(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5830(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k32152 in cont in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
C_noret_decl(stub5825)
static void C_ccall stub5825(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5825(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k32143 in pause in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
C_noret_decl(stub5821)
static void C_ccall stub5821(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5821(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k32134 in paused? in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
C_noret_decl(stub5817)
static void C_ccall stub5817(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5817(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k32128 */
C_noret_decl(stub5810)
static void C_ccall stub5810(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub5810(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k32108 in scheduler-set-time-milliseconds in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
C_noret_decl(stub5802)
static void C_ccall stub5802(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub5802(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k32099 in time-format in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
C_noret_decl(stub5797)
static void C_ccall stub5797(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub5797(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5794(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5794(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub5791(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5791(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k32080 in print-error in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static C_word C_fcall stub5786(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5786(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k32066 in print-message in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static C_word C_fcall stub5780(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5780(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from f_31861 in cs:clear in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static C_word C_fcall stub5746(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub5746(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from k31827 */
static C_word C_fcall stub5739(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5739(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k31770 */
static C_word C_fcall stub5728(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5728(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_31706 in mp:inhook in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static C_word C_fcall stub5672(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5672(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_31701 in mp:inhook in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static C_word C_fcall stub5663(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5663(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k31645 */
static C_word C_fcall stub5656(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5656(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k31633 */
static C_word C_fcall stub5647(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5647(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31605 */
static C_word C_fcall stub5632(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5632(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31577 */
static C_word C_fcall stub5617(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5617(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31549 */
static C_word C_fcall stub5602(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5602(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31521 */
static C_word C_fcall stub5586(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5586(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31493 */
static C_word C_fcall stub5570(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5570(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31465 */
static C_word C_fcall stub5554(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5554(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k31437 */
static C_word C_fcall stub5539(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5539(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k31409 */
static C_word C_fcall stub5522(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5522(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k31378 */
static C_word C_fcall stub5504(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5504(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k31355 */
static C_word C_fcall stub5493(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5493(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k31333 */
static C_word C_fcall stub5482(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5482(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k31313 */
static C_word C_fcall stub5472(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5472(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k31278 */
static C_word C_fcall stub5459(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5459(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k31262 */
static C_word C_fcall stub5451(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5451(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k31234 */
static C_word C_fcall stub5438(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5438(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k31211 */
static C_word C_fcall stub5427(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5427(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k31192 */
static C_word C_fcall stub5416(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub5416(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k31169 */
static C_word C_fcall stub5405(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5405(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k31150 */
static C_word C_fcall stub5395(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5395(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k31131 */
static C_word C_fcall stub5386(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5386(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k31116 */
static C_word C_fcall stub5377(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5377(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k31097 */
static C_word C_fcall stub5367(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5367(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k31082 */
static C_word C_fcall stub5359(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5359(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k31067 */
static C_word C_fcall stub5351(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub5351(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k31049 */
static C_word C_fcall stub5343(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5343(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30622 */
static C_word C_fcall stub5328(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5328(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k30579 */
static C_word C_fcall stub5249(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5249(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k30152 */
static C_word C_fcall stub5234(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5234(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k30109 */
static C_word C_fcall stub5155(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5155(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k29682 */
static C_word C_fcall stub5140(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5140(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k29639 */
static C_word C_fcall stub5061(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub5061(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k28937 */
static C_word C_fcall stub5045(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub5045(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k28891 */
static C_word C_fcall stub4929(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4929(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k28189 */
static C_word C_fcall stub4913(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4913(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k28143 */
static C_word C_fcall stub4797(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4797(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k27716 */
static C_word C_fcall stub4782(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4782(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k27673 */
static C_word C_fcall stub4703(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub4703(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k26971 */
static C_word C_fcall stub4687(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub4687(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k7509 */
static C_word C_fcall stub358(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub358(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
C_r=C_flonum(&C_a,jn(t0,t1));
return C_r;}

/* from tb:ranbrown in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static C_word C_fcall stub351(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub351(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static C_word C_fcall stub348(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub348(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k7487 */
static C_word C_fcall stub345(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub345(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static C_word C_fcall stub341(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub341(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k7477 */
static C_word C_fcall stub337(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub337(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k7470 */
static C_word C_fcall stub331(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub331(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k7459 */
static C_word C_fcall stub325(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub325(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k7452 */
static C_word C_fcall stub319(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub319(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static C_word C_fcall stub314(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub314(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static C_word C_fcall stub311(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub311(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static C_word C_fcall stub308(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub308(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k7432 */
static C_word C_fcall stub303(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub303(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k7421 */
static C_word C_fcall stub297(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub297(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k7410 */
static C_word C_fcall stub291(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub291(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k7403 */
static C_word C_fcall stub287(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub287(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static C_word C_fcall stub283(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub283(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k7393 */
static C_word C_fcall stub278(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub278(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k7386 */
static C_word C_fcall stub274(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub274(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k7379 */
static C_word C_fcall stub269(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub269(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k7372 */
static C_word C_fcall stub261(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub261(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::geoseg(t0,t1,t2,t3));
return C_r;}

/* from k7353 */
static C_word C_fcall stub250(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3) C_regparm;
C_regparm static C_word C_fcall stub250(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
C_r=C_flonum(&C_a,Toolbox::explseg(t0,t1,t2,t3));
return C_r;}

/* from k7334 */
static C_word C_fcall stub243(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub243(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k7327 */
static C_word C_fcall stub238(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub238(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k7320 */
static C_word C_fcall stub231(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub231(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k7305 */
static C_word C_fcall stub223(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub223(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k7294 */
static C_word C_fcall stub216(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub216(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_flonum(&C_a,Toolbox::decimals(t0,t1));
return C_r;}

/* from k7283 */
static C_word C_fcall stub211(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub211(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k7276 */
static C_word C_fcall stub202(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub202(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k7249 */
static C_word C_fcall stub187(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub187(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k6636 */
static C_word C_fcall stub95(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub95(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_6618 in cwd in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static C_word C_fcall stub90(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub90(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6011)
static void C_ccall f_6011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6014)
static void C_ccall f_6014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6017)
static void C_ccall f_6017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6020)
static void C_ccall f_6020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37850)
static void C_ccall f_37850(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_37850)
static void C_ccall f_37850r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6311)
static void C_ccall f_6311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6315)
static void C_ccall f_6315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37798)
static void C_ccall f_37798(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37845)
static void C_ccall f_37845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37835)
static void C_ccall f_37835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37802)
static void C_ccall f_37802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6318)
static void C_ccall f_6318(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37792)
static void C_ccall f_37792(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_37792)
static void C_ccall f_37792r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6611)
static void C_ccall f_6611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9568)
static void C_ccall f_9568(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37576)
static void C_fcall f_37576(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37790)
static void C_ccall f_37790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37610)
static void C_ccall f_37610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37622)
static void C_ccall f_37622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37626)
static void C_ccall f_37626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37630)
static void C_ccall f_37630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37774)
static void C_ccall f_37774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37636)
static void C_fcall f_37636(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13) C_noret;
C_noret_decl(f_37656)
static void C_fcall f_37656(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37659)
static void C_fcall f_37659(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37667)
static void C_ccall f_37667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37674)
static void C_ccall f_37674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37677)
static void C_ccall f_37677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37681)
static void C_ccall f_37681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37688)
static void C_ccall f_37688(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37691)
static void C_ccall f_37691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37695)
static void C_ccall f_37695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37702)
static void C_ccall f_37702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37646)
static void C_ccall f_37646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37599)
static void C_ccall f_37599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37589)
static void C_ccall f_37589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37592)
static void C_ccall f_37592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9571)
static void C_ccall f_9571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37566)
static void C_ccall f_37566(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37574)
static void C_ccall f_37574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10636)
static void C_ccall f_10636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37552)
static void C_ccall f_37552(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37560)
static void C_ccall f_37560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37564)
static void C_ccall f_37564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19846)
static void C_ccall f_19846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19897)
static void C_ccall f_19897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37542)
static void C_ccall f_37542(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37550)
static void C_ccall f_37550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20002)
static void C_ccall f_20002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37439)
static void C_ccall f_37439(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_37439)
static void C_ccall f_37439r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_37502)
static void C_ccall f_37502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37506)
static void C_ccall f_37506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37520)
static void C_fcall f_37520(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37442)
static void C_fcall f_37442(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_37462)
static void C_ccall f_37462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37466)
static void C_ccall f_37466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20005)
static void C_ccall f_20005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37425)
static void C_ccall f_37425(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37433)
static void C_ccall f_37433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37437)
static void C_ccall f_37437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20198)
static void C_ccall f_20198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37399)
static void C_ccall f_37399(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37403)
static void C_ccall f_37403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37409)
static void C_ccall f_37409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37420)
static void C_ccall f_37420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37416)
static void C_ccall f_37416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20267)
static void C_ccall f_20267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37377)
static void C_ccall f_37377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21512)
static void C_ccall f_21512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37357)
static void C_ccall f_37357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21515)
static void C_ccall f_21515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37317)
static void C_ccall f_37317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21518)
static void C_ccall f_21518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37223)
static void C_ccall f_37223(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37227)
static void C_ccall f_37227(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37230)
static void C_ccall f_37230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37248)
static void C_ccall f_37248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37251)
static void C_ccall f_37251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37282)
static void C_ccall f_37282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37254)
static void C_fcall f_37254(C_word t0,C_word t1) C_noret;
C_noret_decl(f_37260)
static void C_ccall f_37260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37213)
static void C_ccall f_37213(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37207)
static void C_ccall f_37207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21521)
static void C_ccall f_21521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37115)
static void C_ccall f_37115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37117)
static void C_ccall f_37117(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37121)
static void C_ccall f_37121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37124)
static void C_ccall f_37124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37127)
static void C_ccall f_37127(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37167)
static void C_ccall f_37167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37159)
static void C_ccall f_37159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37130)
static void C_ccall f_37130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37133)
static void C_ccall f_37133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37136)
static void C_ccall f_37136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37107)
static void C_ccall f_37107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21524)
static void C_ccall f_21524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37079)
static void C_ccall f_37079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21527)
static void C_ccall f_21527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37043)
static void C_ccall f_37043(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_37055)
static void C_ccall f_37055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37051)
static void C_ccall f_37051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_37025)
static void C_ccall f_37025(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_37019)
static void C_ccall f_37019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21530)
static void C_ccall f_21530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36933)
static void C_ccall f_36933(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36937)
static void C_ccall f_36937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36940)
static void C_ccall f_36940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36943)
static void C_ccall f_36943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36956)
static void C_ccall f_36956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36902)
static void C_ccall f_36902(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36906)
static void C_ccall f_36906(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36921)
static void C_ccall f_36921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36896)
static void C_ccall f_36896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21533)
static void C_ccall f_21533(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36782)
static void C_ccall f_36782(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36798)
static void C_ccall f_36798(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36809)
static void C_ccall f_36809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36776)
static void C_ccall f_36776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21589)
static void C_ccall f_21589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36643)
static void C_ccall f_36643(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36666)
static void C_ccall f_36666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36663)
static void C_ccall f_36663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36637)
static void C_ccall f_36637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21592)
static void C_ccall f_21592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36491)
static void C_ccall f_36491(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36509)
static void C_ccall f_36509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36518)
static void C_ccall f_36518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36485)
static void C_ccall f_36485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21595)
static void C_ccall f_21595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36438)
static void C_ccall f_36438(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36442)
static void C_ccall f_36442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36445)
static void C_ccall f_36445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36461)
static void C_ccall f_36461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36420)
static void C_ccall f_36420(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36414)
static void C_ccall f_36414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21598)
static void C_ccall f_21598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36338)
static void C_ccall f_36338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21737)
static void C_ccall f_21737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36264)
static void C_ccall f_36264(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36271)
static void C_ccall f_36271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36258)
static void C_ccall f_36258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21740)
static void C_ccall f_21740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36154)
static void C_ccall f_36154(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36162)
static void C_ccall f_36162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36128)
static void C_ccall f_36128(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_36145)
static void C_ccall f_36145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36136)
static void C_fcall f_36136(C_word t0,C_word t1) C_noret;
C_noret_decl(f_36122)
static void C_ccall f_36122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21743)
static void C_ccall f_21743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36078)
static void C_ccall f_36078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21746)
static void C_ccall f_21746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35996)
static void C_ccall f_35996(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_36007)
static void C_ccall f_36007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_36009)
static void C_fcall f_36009(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_36038)
static void C_ccall f_36038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35974)
static void C_ccall f_35974(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35990)
static void C_ccall f_35990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35968)
static void C_ccall f_35968(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21749)
static void C_ccall f_21749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35921)
static void C_ccall f_35921(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35925)
static void C_ccall f_35925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35932)
static void C_ccall f_35932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35899)
static void C_ccall f_35899(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35915)
static void C_ccall f_35915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35893)
static void C_ccall f_35893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21752)
static void C_ccall f_21752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35761)
static void C_ccall f_35761(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35801)
static void C_ccall f_35801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35765)
static void C_ccall f_35765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35781)
static void C_ccall f_35781(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_35781)
static void C_ccall f_35781r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_35793)
static void C_ccall f_35793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35797)
static void C_ccall f_35797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35789)
static void C_ccall f_35789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35686)
static void C_ccall f_35686(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35729)
static void C_ccall f_35729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35733)
static void C_ccall f_35733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35693)
static void C_fcall f_35693(C_word t0,C_word t1) C_noret;
C_noret_decl(f_35704)
static void C_ccall f_35704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35680)
static void C_ccall f_35680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21755)
static void C_ccall f_21755(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35660)
static void C_ccall f_35660(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35654)
static void C_ccall f_35654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21758)
static void C_ccall f_21758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35634)
static void C_ccall f_35634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35638)
static void C_ccall f_35638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35626)
static void C_ccall f_35626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21761)
static void C_ccall f_21761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35606)
static void C_ccall f_35606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35610)
static void C_ccall f_35610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35598)
static void C_ccall f_35598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21764)
static void C_ccall f_21764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35578)
static void C_ccall f_35578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35582)
static void C_ccall f_35582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35570)
static void C_ccall f_35570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21767)
static void C_ccall f_21767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35550)
static void C_ccall f_35550(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35554)
static void C_ccall f_35554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35542)
static void C_ccall f_35542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21770)
static void C_ccall f_21770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35441)
static void C_ccall f_35441(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35411)
static void C_ccall f_35411(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35435)
static void C_ccall f_35435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35405)
static void C_ccall f_35405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21773)
static void C_ccall f_21773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35355)
static void C_ccall f_35355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35357)
static void C_ccall f_35357(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35361)
static void C_ccall f_35361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35389)
static void C_ccall f_35389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35381)
static void C_ccall f_35381(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35377)
static void C_ccall f_35377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35364)
static void C_ccall f_35364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35347)
static void C_ccall f_35347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21776)
static void C_ccall f_21776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35294)
static void C_ccall f_35294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35296)
static void C_ccall f_35296(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35300)
static void C_ccall f_35300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35331)
static void C_ccall f_35331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35323)
static void C_ccall f_35323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35319)
static void C_ccall f_35319(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35303)
static void C_ccall f_35303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35306)
static void C_ccall f_35306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35286)
static void C_ccall f_35286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21779)
static void C_ccall f_21779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35236)
static void C_ccall f_35236(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35250)
static void C_ccall f_35250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35242)
static void C_ccall f_35242(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35201)
static void C_ccall f_35201(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35234)
static void C_ccall f_35234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35195)
static void C_ccall f_35195(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21782)
static void C_ccall f_21782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35142)
static void C_ccall f_35142(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_35146)
static void C_ccall f_35146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35159)
static void C_ccall f_35159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35151)
static void C_ccall f_35151(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_35099)
static void C_ccall f_35099(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35132)
static void C_ccall f_35132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35093)
static void C_ccall f_35093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21785)
static void C_ccall f_21785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_35013)
static void C_ccall f_35013(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_35007)
static void C_ccall f_35007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21788)
static void C_ccall f_21788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34776)
static void C_ccall f_34776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34780)
static void C_ccall f_34780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34788)
static void C_fcall f_34788(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_34811)
static void C_ccall f_34811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34814)
static void C_ccall f_34814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34817)
static void C_ccall f_34817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34820)
static void C_ccall f_34820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34880)
static void C_ccall f_34880(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34887)
static void C_ccall f_34887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34897)
static void C_ccall f_34897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34907)
static void C_ccall f_34907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34921)
static void C_ccall f_34921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34931)
static void C_ccall f_34931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34941)
static void C_ccall f_34941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34951)
static void C_ccall f_34951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34823)
static void C_fcall f_34823(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34847)
static void C_fcall f_34847(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34826)
static void C_fcall f_34826(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34733)
static void C_ccall f_34733(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34766)
static void C_ccall f_34766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34727)
static void C_ccall f_34727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21791)
static void C_ccall f_21791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34645)
static void C_ccall f_34645(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34649)
static void C_ccall f_34649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34655)
static void C_ccall f_34655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34675)
static void C_ccall f_34675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34619)
static void C_ccall f_34619(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34629)
static void C_fcall f_34629(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34613)
static void C_ccall f_34613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21794)
static void C_ccall f_21794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34490)
static void C_ccall f_34490(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_34494)
static void C_ccall f_34494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34422)
static void C_ccall f_34422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_34441)
static void C_ccall f_34441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34476)
static void C_ccall f_34476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34447)
static void C_fcall f_34447(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34451)
static void C_ccall f_34451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34465)
static void C_ccall f_34465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34454)
static void C_fcall f_34454(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34435)
static void C_fcall f_34435(C_word t0,C_word t1) C_noret;
C_noret_decl(f_34416)
static void C_ccall f_34416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21797)
static void C_ccall f_21797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34144)
static void C_ccall f_34144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22320)
static void C_ccall f_22320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34096)
static void C_ccall f_34096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_34088)
static void C_ccall f_34088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22323)
static void C_ccall f_22323(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33968)
static void C_ccall f_33968(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_22329)
static void C_ccall f_22329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22788)
static void C_ccall f_22788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22822)
static void C_ccall f_22822(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22814)
static void C_ccall f_22814(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22810)
static void C_ccall f_22810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22795)
static void C_ccall f_22795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22799)
static void C_ccall f_22799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22792)
static void C_ccall f_22792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22347)
static void C_fcall f_22347(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22781)
static void C_ccall f_22781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22777)
static void C_ccall f_22777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22354)
static void C_fcall f_22354(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22652)
static void C_fcall f_22652(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22673)
static void C_ccall f_22673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22675)
static void C_fcall f_22675(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22689)
static void C_ccall f_22689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22742)
static void C_ccall f_22742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22692)
static void C_fcall f_22692(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22727)
static void C_ccall f_22727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22695)
static void C_fcall f_22695(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22708)
static void C_ccall f_22708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22720)
static void C_ccall f_22720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22712)
static void C_ccall f_22712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22698)
static void C_fcall f_22698(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22662)
static void C_ccall f_22662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22357)
static void C_ccall f_22357(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22616)
static void C_fcall f_22616(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22642)
static void C_ccall f_22642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22627)
static void C_ccall f_22627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22360)
static void C_ccall f_22360(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22364)
static void C_ccall f_22364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22560)
static void C_fcall f_22560(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22570)
static void C_ccall f_22570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22573)
static void C_ccall f_22573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22594)
static void C_ccall f_22594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22576)
static void C_fcall f_22576(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22580)
static void C_ccall f_22580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22367)
static void C_ccall f_22367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22370)
static void C_fcall f_22370(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22523)
static void C_ccall f_22523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22531)
static void C_ccall f_22531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22527)
static void C_ccall f_22527(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22373)
static void C_fcall f_22373(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22401)
static void C_ccall f_22401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22404)
static void C_ccall f_22404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22407)
static void C_ccall f_22407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22410)
static void C_ccall f_22410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22413)
static void C_ccall f_22413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22472)
static void C_ccall f_22472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33922)
static void C_ccall f_33922(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33938)
static void C_ccall f_33938(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33941)
static void C_ccall f_33941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33944)
static void C_fcall f_33944(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33947)
static void C_fcall f_33947(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33958)
static void C_ccall f_33958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33916)
static void C_ccall f_33916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22829)
static void C_ccall f_22829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33777)
static void C_ccall f_33777(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33816)
static void C_ccall f_33816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33790)
static void C_fcall f_33790(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33771)
static void C_ccall f_33771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22832)
static void C_ccall f_22832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33359)
static void C_ccall f_33359(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33363)
static void C_ccall f_33363(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33375)
static void C_ccall f_33375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33433)
static void C_ccall f_33433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33436)
static void C_ccall f_33436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33439)
static void C_ccall f_33439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33651)
static void C_ccall f_33651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33589)
static void C_ccall f_33589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33623)
static void C_ccall f_33623(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33598)
static void C_fcall f_33598(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33609)
static void C_ccall f_33609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33605)
static void C_ccall f_33605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33448)
static void C_fcall f_33448(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33526)
static void C_ccall f_33526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33567)
static void C_ccall f_33567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33571)
static void C_ccall f_33571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33575)
static void C_ccall f_33575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33530)
static void C_ccall f_33530(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33534)
static void C_ccall f_33534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33561)
static void C_ccall f_33561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33537)
static void C_fcall f_33537(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33451)
static void C_fcall f_33451(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33523)
static void C_ccall f_33523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33465)
static void C_ccall f_33465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33467)
static void C_fcall f_33467(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33515)
static void C_ccall f_33515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33486)
static void C_ccall f_33486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33503)
static void C_ccall f_33503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33489)
static void C_fcall f_33489(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33482)
static void C_ccall f_33482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33454)
static void C_ccall f_33454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33384)
static void C_fcall f_33384(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33394)
static void C_ccall f_33394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33400)
static void C_ccall f_33400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33372)
static void C_ccall f_33372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33320)
static void C_ccall f_33320(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33337)
static void C_ccall f_33337(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33353)
static void C_ccall f_33353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33331)
static void C_fcall f_33331(C_word t0,C_word t1) C_noret;
C_noret_decl(f_33314)
static void C_ccall f_33314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22835)
static void C_ccall f_22835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33238)
static void C_ccall f_33238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22838)
static void C_ccall f_22838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33214)
static void C_ccall f_33214(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_33226)
static void C_ccall f_33226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33222)
static void C_ccall f_33222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33200)
static void C_ccall f_33200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_33208)
static void C_ccall f_33208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33194)
static void C_ccall f_33194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22841)
static void C_ccall f_22841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33186)
static void C_ccall f_33186(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26612)
static void C_ccall f_26612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26615)
static void C_ccall f_26615(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26781)
static void C_ccall f_26781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26777)
static void C_ccall f_26777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26767)
static void C_fcall f_26767(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26622)
static void C_ccall f_26622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26626)
static void C_ccall f_26626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26629)
static void C_fcall f_26629(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26640)
static void C_ccall f_26640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26648)
static void C_ccall f_26648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26720)
static void C_ccall f_26720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26728)
static void C_ccall f_26728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26724)
static void C_ccall f_26724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26716)
static void C_ccall f_26716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26712)
static void C_ccall f_26712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26684)
static void C_ccall f_26684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26680)
static void C_ccall f_26680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26644)
static void C_ccall f_26644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23259)
static void C_ccall f_23259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33172)
static void C_ccall f_33172(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23262)
static void C_ccall f_23262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33143)
static void C_ccall f_33143(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_33147)
static void C_ccall f_33147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23265)
static void C_ccall f_23265(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_33140)
static void C_ccall f_33140(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23268)
static void C_ccall f_23268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32998)
static void C_ccall f_32998(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26794)
static void C_ccall f_26794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26926)
static void C_ccall f_26926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26797)
static void C_ccall f_26797(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26808)
static void C_ccall f_26808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26816)
static void C_ccall f_26816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26840)
static void C_ccall f_26840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26843)
static void C_fcall f_26843(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26851)
static void C_ccall f_26851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26859)
static void C_ccall f_26859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26879)
static void C_ccall f_26879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26875)
static void C_ccall f_26875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26855)
static void C_ccall f_26855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26847)
static void C_ccall f_26847(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26836)
static void C_ccall f_26836(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26812)
static void C_ccall f_26812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26788)
static void C_ccall f_26788(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31710)
static void C_ccall f_31710(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31713)
static void C_ccall f_31713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31716)
static void C_ccall f_31716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31719)
static void C_ccall f_31719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31722)
static void C_ccall f_31722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31725)
static void C_ccall f_31725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31728)
static void C_ccall f_31728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31731)
static void C_ccall f_31731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31734)
static void C_ccall f_31734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31737)
static void C_ccall f_31737(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31740)
static void C_ccall f_31740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31865)
static void C_ccall f_31865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31868)
static void C_ccall f_31868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31871)
static void C_ccall f_31871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32935)
static void C_fcall f_32935(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32963)
static void C_fcall f_32963(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32602)
static void C_ccall f_32602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32929)
static void C_ccall f_32929(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32647)
static void C_ccall f_32647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32653)
static void C_ccall f_32653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32656)
static void C_ccall f_32656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32659)
static void C_ccall f_32659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32663)
static void C_ccall f_32663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32873)
static void C_ccall f_32873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32885)
static void C_ccall f_32885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32881)
static void C_ccall f_32881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32666)
static void C_fcall f_32666(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32830)
static void C_fcall f_32830(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32866)
static void C_ccall f_32866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32859)
static void C_ccall f_32859(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32669)
static void C_ccall f_32669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32768)
static void C_ccall f_32768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32776)
static void C_ccall f_32776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32772)
static void C_ccall f_32772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32764)
static void C_ccall f_32764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32760)
static void C_ccall f_32760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32716)
static void C_ccall f_32716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32712)
static void C_ccall f_32712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32679)
static void C_fcall f_32679(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32690)
static void C_ccall f_32690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32698)
static void C_ccall f_32698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32694)
static void C_ccall f_32694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32892)
static void C_ccall f_32892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32900)
static void C_ccall f_32900(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_32900)
static void C_ccall f_32900r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_32914)
static void C_fcall f_32914(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32904)
static void C_ccall f_32904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32895)
static void C_ccall f_32895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32898)
static void C_ccall f_32898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32604)
static void C_fcall f_32604(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32620)
static void C_ccall f_32620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32531)
static void C_ccall f_32531(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_32542)
static void C_ccall f_32542(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32545)
static void C_fcall f_32545(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32552)
static void C_ccall f_32552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32521)
static void C_ccall f_32521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32176)
static void C_ccall f_32176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32525)
static void C_ccall f_32525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32463)
static void C_ccall f_32463(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32463)
static void C_ccall f_32463r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32481)
static void C_fcall f_32481(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32491)
static void C_ccall f_32491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32467)
static void C_ccall f_32467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32454)
static void C_ccall f_32454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32154)
static void C_ccall f_32154(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32458)
static void C_ccall f_32458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32448)
static void C_ccall f_32448(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32136)
static void C_ccall f_32136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32439)
static void C_ccall f_32439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32145)
static void C_ccall f_32145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32443)
static void C_ccall f_32443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32376)
static void C_ccall f_32376(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_32376)
static void C_ccall f_32376r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_32401)
static void C_fcall f_32401(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32101)
static void C_ccall f_32101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32389)
static void C_ccall f_32389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32200)
static void C_ccall f_32200(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_32200)
static void C_ccall f_32200r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_32327)
static void C_fcall f_32327(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32322)
static void C_fcall f_32322(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32202)
static void C_fcall f_32202(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32321)
static void C_ccall f_32321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32317)
static void C_ccall f_32317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32309)
static void C_ccall f_32309(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32273)
static void C_fcall f_32273(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32306)
static void C_ccall f_32306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32302)
static void C_ccall f_32302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32283)
static void C_ccall f_32283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32262)
static void C_ccall f_32262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32232)
static void C_fcall f_32232(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32204)
static void C_fcall f_32204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32181)
static void C_ccall f_32181(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32186)
static void C_ccall f_32186(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32191)
static void C_ccall f_32191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32159)
static void C_fcall f_32159(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32163)
static void C_ccall f_32163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32115)
static void C_fcall f_32115(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_32119)
static void C_ccall f_32119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32106)
static void C_fcall f_32106(C_word t0,C_word t1) C_noret;
C_noret_decl(f_32110)
static void C_ccall f_32110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32094)
static void C_ccall f_32094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32091)
static void C_ccall f_32091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32077)
static void C_ccall f_32077(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32082)
static void C_ccall f_32082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32063)
static void C_ccall f_32063(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32068)
static void C_ccall f_32068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31873)
static void C_ccall f_31873(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31934)
static void C_ccall f_31934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31936)
static void C_fcall f_31936(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31946)
static void C_ccall f_31946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31965)
static void C_fcall f_31965(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_32005)
static void C_ccall f_32005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32047)
static void C_ccall f_32047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32017)
static void C_ccall f_32017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_32002)
static void C_fcall f_32002(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31920)
static void C_ccall f_31920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31885)
static void C_ccall f_31885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31912)
static void C_ccall f_31912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31893)
static void C_ccall f_31893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31900)
static void C_ccall f_31900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31904)
static void C_ccall f_31904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31908)
static void C_ccall f_31908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31985)
static void C_ccall f_31985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31963)
static void C_ccall f_31963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31949)
static void C_ccall f_31949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31952)
static void C_ccall f_31952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31927)
static void C_ccall f_31927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31856)
static void C_ccall f_31856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31861)
static void C_ccall f_31861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31799)
static void C_ccall f_31799(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31799)
static void C_ccall f_31799r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31832)
static void C_fcall f_31832(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31812)
static void C_fcall f_31812(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31820)
static void C_ccall f_31820(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31803)
static void C_ccall f_31803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31742)
static void C_ccall f_31742(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_31742)
static void C_ccall f_31742r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31775)
static void C_fcall f_31775(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31755)
static void C_fcall f_31755(C_word t0,C_word t1) C_noret;
C_noret_decl(f_31763)
static void C_ccall f_31763(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31746)
static void C_ccall f_31746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31652)
static void C_ccall f_31652(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31706)
static void C_ccall f_31706(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31701)
static void C_ccall f_31701(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31664)
static void C_ccall f_31664(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31670)
static void C_ccall f_31670(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31696)
static void C_ccall f_31696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31700)
static void C_ccall f_31700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31676)
static void C_ccall f_31676(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31694)
static void C_ccall f_31694(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31691)
static void C_ccall f_31691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31687)
static void C_ccall f_31687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31680)
static void C_ccall f_31680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31637)
static void C_ccall f_31637(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31642)
static void C_ccall f_31642(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31609)
static void C_ccall f_31609(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31614)
static void C_ccall f_31614(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31581)
static void C_ccall f_31581(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31586)
static void C_ccall f_31586(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31553)
static void C_ccall f_31553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31558)
static void C_ccall f_31558(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31525)
static void C_ccall f_31525(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_31530)
static void C_ccall f_31530(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31497)
static void C_ccall f_31497(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_31502)
static void C_ccall f_31502(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31469)
static void C_ccall f_31469(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_31474)
static void C_ccall f_31474(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31441)
static void C_ccall f_31441(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31446)
static void C_ccall f_31446(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31413)
static void C_ccall f_31413(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31418)
static void C_ccall f_31418(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31385)
static void C_ccall f_31385(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31390)
static void C_ccall f_31390(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_31362)
static void C_ccall f_31362(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31367)
static void C_ccall f_31367(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31366)
static void C_ccall f_31366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31343)
static void C_ccall f_31343(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31348)
static void C_ccall f_31348(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31288)
static void C_ccall f_31288(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31295)
static void C_ccall f_31295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31298)
static void C_ccall f_31298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31322)
static void C_ccall f_31322(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31302)
static void C_ccall f_31302(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31292)
static void C_ccall f_31292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31241)
static void C_ccall f_31241(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31248)
static void C_ccall f_31248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31251)
static void C_ccall f_31251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31271)
static void C_ccall f_31271(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31255)
static void C_ccall f_31255(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31218)
static void C_ccall f_31218(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31223)
static void C_ccall f_31223(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31222)
static void C_ccall f_31222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31199)
static void C_ccall f_31199(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31204)
static void C_ccall f_31204(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31176)
static void C_ccall f_31176(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31181)
static void C_ccall f_31181(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_31180)
static void C_ccall f_31180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31157)
static void C_ccall f_31157(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31162)
static void C_ccall f_31162(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31138)
static void C_ccall f_31138(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31143)
static void C_ccall f_31143(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31142)
static void C_ccall f_31142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31123)
static void C_ccall f_31123(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31128)
static void C_ccall f_31128(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31104)
static void C_ccall f_31104(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31109)
static void C_ccall f_31109(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_31108)
static void C_ccall f_31108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31089)
static void C_ccall f_31089(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31094)
static void C_ccall f_31094(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31074)
static void C_ccall f_31074(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31079)
static void C_ccall f_31079(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31056)
static void C_ccall f_31056(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31064)
static void C_ccall f_31064(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_31060)
static void C_ccall f_31060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30586)
static void C_ccall f_30586(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30586)
static void C_ccall f_30586r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_31014)
static void C_ccall f_31014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31029)
static void C_ccall f_31029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_31021)
static void C_ccall f_31021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30985)
static void C_ccall f_30985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30989)
static void C_ccall f_30989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30950)
static void C_ccall f_30950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30954)
static void C_ccall f_30954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30915)
static void C_ccall f_30915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30919)
static void C_ccall f_30919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30590)
static void C_fcall f_30590(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30879)
static void C_ccall f_30879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30894)
static void C_ccall f_30894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30886)
static void C_ccall f_30886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30850)
static void C_ccall f_30850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30854)
static void C_ccall f_30854(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30815)
static void C_ccall f_30815(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30819)
static void C_ccall f_30819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30780)
static void C_ccall f_30780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30784)
static void C_ccall f_30784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30593)
static void C_fcall f_30593(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30744)
static void C_ccall f_30744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30759)
static void C_ccall f_30759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30751)
static void C_ccall f_30751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30715)
static void C_ccall f_30715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30719)
static void C_ccall f_30719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30680)
static void C_ccall f_30680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30684)
static void C_ccall f_30684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30645)
static void C_ccall f_30645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30649)
static void C_ccall f_30649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30596)
static void C_fcall f_30596(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30599)
static void C_ccall f_30599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30603)
static void C_ccall f_30603(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30567)
static void C_ccall f_30567(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30572)
static void C_ccall f_30572(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_30116)
static void C_ccall f_30116(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_30116)
static void C_ccall f_30116r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30544)
static void C_ccall f_30544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30559)
static void C_ccall f_30559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30551)
static void C_ccall f_30551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30515)
static void C_ccall f_30515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30519)
static void C_ccall f_30519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30480)
static void C_ccall f_30480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30484)
static void C_ccall f_30484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30445)
static void C_ccall f_30445(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30449)
static void C_ccall f_30449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30120)
static void C_fcall f_30120(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30409)
static void C_ccall f_30409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30424)
static void C_ccall f_30424(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30416)
static void C_ccall f_30416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30380)
static void C_ccall f_30380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30384)
static void C_ccall f_30384(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30345)
static void C_ccall f_30345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30349)
static void C_ccall f_30349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30310)
static void C_ccall f_30310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30314)
static void C_ccall f_30314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30123)
static void C_fcall f_30123(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30274)
static void C_ccall f_30274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30289)
static void C_ccall f_30289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30281)
static void C_ccall f_30281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30245)
static void C_ccall f_30245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30249)
static void C_ccall f_30249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30210)
static void C_ccall f_30210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30214)
static void C_ccall f_30214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30175)
static void C_ccall f_30175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30179)
static void C_ccall f_30179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30126)
static void C_fcall f_30126(C_word t0,C_word t1) C_noret;
C_noret_decl(f_30129)
static void C_ccall f_30129(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30133)
static void C_ccall f_30133(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_30097)
static void C_ccall f_30097(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_30102)
static void C_ccall f_30102(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_29646)
static void C_ccall f_29646(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_29646)
static void C_ccall f_29646r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_30074)
static void C_ccall f_30074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30089)
static void C_ccall f_30089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30081)
static void C_ccall f_30081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30045)
static void C_ccall f_30045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30049)
static void C_ccall f_30049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30010)
static void C_ccall f_30010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_30014)
static void C_ccall f_30014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29975)
static void C_ccall f_29975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29979)
static void C_ccall f_29979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29650)
static void C_fcall f_29650(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29939)
static void C_ccall f_29939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29954)
static void C_ccall f_29954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29946)
static void C_ccall f_29946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29910)
static void C_ccall f_29910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29914)
static void C_ccall f_29914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29875)
static void C_ccall f_29875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29879)
static void C_ccall f_29879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29840)
static void C_ccall f_29840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29844)
static void C_ccall f_29844(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29653)
static void C_fcall f_29653(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29804)
static void C_ccall f_29804(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29819)
static void C_ccall f_29819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29811)
static void C_ccall f_29811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29775)
static void C_ccall f_29775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29779)
static void C_ccall f_29779(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29740)
static void C_ccall f_29740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29744)
static void C_ccall f_29744(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29705)
static void C_ccall f_29705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29709)
static void C_ccall f_29709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29656)
static void C_fcall f_29656(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29659)
static void C_ccall f_29659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29663)
static void C_ccall f_29663(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_29627)
static void C_ccall f_29627(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_29632)
static void C_ccall f_29632(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28898)
static void C_ccall f_28898(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28898)
static void C_ccall f_28898r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_29604)
static void C_ccall f_29604(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29619)
static void C_ccall f_29619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29611)
static void C_ccall f_29611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29575)
static void C_ccall f_29575(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29579)
static void C_ccall f_29579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29540)
static void C_ccall f_29540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29544)
static void C_ccall f_29544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29505)
static void C_ccall f_29505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29509)
static void C_ccall f_29509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29470)
static void C_ccall f_29470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29474)
static void C_ccall f_29474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28902)
static void C_fcall f_28902(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29434)
static void C_ccall f_29434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29449)
static void C_ccall f_29449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29441)
static void C_ccall f_29441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29405)
static void C_ccall f_29405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29409)
static void C_ccall f_29409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29370)
static void C_ccall f_29370(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29374)
static void C_ccall f_29374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29335)
static void C_ccall f_29335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29339)
static void C_ccall f_29339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29300)
static void C_ccall f_29300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29304)
static void C_ccall f_29304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28905)
static void C_fcall f_28905(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29264)
static void C_ccall f_29264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29279)
static void C_ccall f_29279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29271)
static void C_ccall f_29271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29235)
static void C_ccall f_29235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29239)
static void C_ccall f_29239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29200)
static void C_ccall f_29200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29204)
static void C_ccall f_29204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29165)
static void C_ccall f_29165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29169)
static void C_ccall f_29169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29130)
static void C_ccall f_29130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29134)
static void C_ccall f_29134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28908)
static void C_fcall f_28908(C_word t0,C_word t1) C_noret;
C_noret_decl(f_29094)
static void C_ccall f_29094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29109)
static void C_ccall f_29109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29101)
static void C_ccall f_29101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29065)
static void C_ccall f_29065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29069)
static void C_ccall f_29069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29030)
static void C_ccall f_29030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_29034)
static void C_ccall f_29034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28995)
static void C_ccall f_28995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28999)
static void C_ccall f_28999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28960)
static void C_ccall f_28960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28964)
static void C_ccall f_28964(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28911)
static void C_fcall f_28911(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28914)
static void C_ccall f_28914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28918)
static void C_ccall f_28918(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_28879)
static void C_ccall f_28879(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28884)
static void C_ccall f_28884(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_28150)
static void C_ccall f_28150(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_28150)
static void C_ccall f_28150r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28856)
static void C_ccall f_28856(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28871)
static void C_ccall f_28871(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28863)
static void C_ccall f_28863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28827)
static void C_ccall f_28827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28831)
static void C_ccall f_28831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28792)
static void C_ccall f_28792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28796)
static void C_ccall f_28796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28757)
static void C_ccall f_28757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28761)
static void C_ccall f_28761(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28722)
static void C_ccall f_28722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28726)
static void C_ccall f_28726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28154)
static void C_fcall f_28154(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28686)
static void C_ccall f_28686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28701)
static void C_ccall f_28701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28693)
static void C_ccall f_28693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28657)
static void C_ccall f_28657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28661)
static void C_ccall f_28661(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28622)
static void C_ccall f_28622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28626)
static void C_ccall f_28626(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28587)
static void C_ccall f_28587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28591)
static void C_ccall f_28591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28552)
static void C_ccall f_28552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28556)
static void C_ccall f_28556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28157)
static void C_fcall f_28157(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28516)
static void C_ccall f_28516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28531)
static void C_ccall f_28531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28523)
static void C_ccall f_28523(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28487)
static void C_ccall f_28487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28491)
static void C_ccall f_28491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28452)
static void C_ccall f_28452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28456)
static void C_ccall f_28456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28417)
static void C_ccall f_28417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28421)
static void C_ccall f_28421(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28382)
static void C_ccall f_28382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28386)
static void C_ccall f_28386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28160)
static void C_fcall f_28160(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28346)
static void C_ccall f_28346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28361)
static void C_ccall f_28361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28353)
static void C_ccall f_28353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28317)
static void C_ccall f_28317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28321)
static void C_ccall f_28321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28282)
static void C_ccall f_28282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28286)
static void C_ccall f_28286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28247)
static void C_ccall f_28247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28251)
static void C_ccall f_28251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28212)
static void C_ccall f_28212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28216)
static void C_ccall f_28216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28163)
static void C_fcall f_28163(C_word t0,C_word t1) C_noret;
C_noret_decl(f_28166)
static void C_ccall f_28166(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28170)
static void C_ccall f_28170(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_28131)
static void C_ccall f_28131(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_28136)
static void C_ccall f_28136(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_27680)
static void C_ccall f_27680(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_27680)
static void C_ccall f_27680r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_28108)
static void C_ccall f_28108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28123)
static void C_ccall f_28123(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28115)
static void C_ccall f_28115(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28079)
static void C_ccall f_28079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28083)
static void C_ccall f_28083(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28044)
static void C_ccall f_28044(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28048)
static void C_ccall f_28048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28009)
static void C_ccall f_28009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_28013)
static void C_ccall f_28013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27684)
static void C_fcall f_27684(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27973)
static void C_ccall f_27973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27988)
static void C_ccall f_27988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27980)
static void C_ccall f_27980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27944)
static void C_ccall f_27944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27948)
static void C_ccall f_27948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27909)
static void C_ccall f_27909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27913)
static void C_ccall f_27913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27874)
static void C_ccall f_27874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27878)
static void C_ccall f_27878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27687)
static void C_fcall f_27687(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27838)
static void C_ccall f_27838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27853)
static void C_ccall f_27853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27845)
static void C_ccall f_27845(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27809)
static void C_ccall f_27809(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27813)
static void C_ccall f_27813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27774)
static void C_ccall f_27774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27778)
static void C_ccall f_27778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27739)
static void C_ccall f_27739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27743)
static void C_ccall f_27743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27690)
static void C_fcall f_27690(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27693)
static void C_ccall f_27693(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27697)
static void C_ccall f_27697(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_27661)
static void C_ccall f_27661(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_27666)
static void C_ccall f_27666(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26932)
static void C_ccall f_26932(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_26932)
static void C_ccall f_26932r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_27638)
static void C_ccall f_27638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27653)
static void C_ccall f_27653(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27645)
static void C_ccall f_27645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27609)
static void C_ccall f_27609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27613)
static void C_ccall f_27613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27574)
static void C_ccall f_27574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27578)
static void C_ccall f_27578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27539)
static void C_ccall f_27539(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27543)
static void C_ccall f_27543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27504)
static void C_ccall f_27504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27508)
static void C_ccall f_27508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26936)
static void C_fcall f_26936(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27468)
static void C_ccall f_27468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27483)
static void C_ccall f_27483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27475)
static void C_ccall f_27475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27439)
static void C_ccall f_27439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27443)
static void C_ccall f_27443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27404)
static void C_ccall f_27404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27408)
static void C_ccall f_27408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27369)
static void C_ccall f_27369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27373)
static void C_ccall f_27373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27334)
static void C_ccall f_27334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27338)
static void C_ccall f_27338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26939)
static void C_fcall f_26939(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27298)
static void C_ccall f_27298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27313)
static void C_ccall f_27313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27305)
static void C_ccall f_27305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27269)
static void C_ccall f_27269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27273)
static void C_ccall f_27273(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27234)
static void C_ccall f_27234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27238)
static void C_ccall f_27238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27199)
static void C_ccall f_27199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27203)
static void C_ccall f_27203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27164)
static void C_ccall f_27164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27168)
static void C_ccall f_27168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26942)
static void C_fcall f_26942(C_word t0,C_word t1) C_noret;
C_noret_decl(f_27128)
static void C_ccall f_27128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27143)
static void C_ccall f_27143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27135)
static void C_ccall f_27135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27099)
static void C_ccall f_27099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27103)
static void C_ccall f_27103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27064)
static void C_ccall f_27064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27068)
static void C_ccall f_27068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27029)
static void C_ccall f_27029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_27033)
static void C_ccall f_27033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26994)
static void C_ccall f_26994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26998)
static void C_ccall f_26998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26945)
static void C_fcall f_26945(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26948)
static void C_ccall f_26948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26952)
static void C_ccall f_26952(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_26594)
static void C_fcall f_26594(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26434)
static void C_fcall f_26434(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26469)
static void C_fcall f_26469(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_26479)
static void C_fcall f_26479(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26483)
static void C_ccall f_26483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26486)
static void C_ccall f_26486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26547)
static void C_ccall f_26547(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26538)
static void C_ccall f_26538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26489)
static void C_ccall f_26489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26508)
static void C_ccall f_26508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26515)
static void C_ccall f_26515(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26492)
static void C_ccall f_26492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26498)
static void C_ccall f_26498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26467)
static void C_ccall f_26467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26442)
static void C_fcall f_26442(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_26441)
static void C_ccall f_26441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26602)
static void C_fcall f_26602(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26180)
static void C_ccall f_26180(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26202)
static void C_ccall f_26202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26217)
static void C_ccall f_26217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26220)
static void C_fcall f_26220(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26396)
static void C_ccall f_26396(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26390)
static void C_ccall f_26390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26223)
static void C_ccall f_26223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26372)
static void C_ccall f_26372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26226)
static void C_fcall f_26226(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26229)
static void C_ccall f_26229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26365)
static void C_ccall f_26365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26353)
static void C_ccall f_26353(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26249)
static void C_fcall f_26249(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26256)
static void C_ccall f_26256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26326)
static void C_ccall f_26326(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26312)
static void C_ccall f_26312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26320)
static void C_ccall f_26320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26259)
static void C_ccall f_26259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26298)
static void C_ccall f_26298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26262)
static void C_fcall f_26262(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26291)
static void C_ccall f_26291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26268)
static void C_ccall f_26268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26271)
static void C_ccall f_26271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26275)
static void C_ccall f_26275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26236)
static void C_fcall f_26236(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26239)
static void C_ccall f_26239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26049)
static void C_fcall f_26049(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26058)
static void C_fcall f_26058(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_26006)
static void C_ccall f_26006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26012)
static void C_fcall f_26012(C_word t0,C_word t1) C_noret;
C_noret_decl(f_26075)
static void C_ccall f_26075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26161)
static void C_ccall f_26161(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_26148)
static void C_ccall f_26148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26156)
static void C_ccall f_26156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26078)
static void C_ccall f_26078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26082)
static void C_ccall f_26082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26125)
static void C_ccall f_26125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26087)
static void C_ccall f_26087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_26053)
static void C_ccall f_26053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25948)
static void C_ccall f_25948(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25955)
static void C_ccall f_25955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25986)
static void C_ccall f_25986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25982)
static void C_ccall f_25982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25974)
static void C_ccall f_25974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25857)
static void C_ccall f_25857(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25864)
static void C_ccall f_25864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25932)
static void C_ccall f_25932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25875)
static void C_fcall f_25875(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25902)
static void C_ccall f_25902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25886)
static void C_ccall f_25886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25791)
static void C_ccall f_25791(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25802)
static void C_ccall f_25802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25805)
static void C_fcall f_25805(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25812)
static void C_ccall f_25812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25785)
static void C_ccall f_25785(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25239)
static void C_ccall f_25239(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25270)
static void C_ccall f_25270(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25734)
static void C_ccall f_25734(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25740)
static void C_ccall f_25740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25281)
static void C_ccall f_25281(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25166)
static void C_fcall f_25166(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25191)
static void C_ccall f_25191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25126)
static void C_fcall f_25126(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_25139)
static void C_fcall f_25139(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25180)
static void C_ccall f_25180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25285)
static void C_ccall f_25285(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25722)
static void C_ccall f_25722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25718)
static void C_fcall f_25718(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25714)
static void C_ccall f_25714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25288)
static void C_ccall f_25288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25508)
static void C_fcall f_25508(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25617)
static void C_ccall f_25617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25682)
static void C_ccall f_25682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25624)
static void C_fcall f_25624(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25628)
static void C_ccall f_25628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25632)
static void C_ccall f_25632(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25674)
static void C_ccall f_25674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25670)
static void C_ccall f_25670(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25648)
static void C_ccall f_25648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25511)
static void C_fcall f_25511(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25514)
static void C_fcall f_25514(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25413)
static void C_ccall f_25413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25496)
static void C_ccall f_25496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25463)
static void C_ccall f_25463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25489)
static void C_ccall f_25489(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25471)
static void C_ccall f_25471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25419)
static void C_fcall f_25419(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25459)
static void C_ccall f_25459(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25401)
static void C_ccall f_25401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25372)
static void C_ccall f_25372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25394)
static void C_ccall f_25394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25380)
static void C_ccall f_25380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25334)
static void C_fcall f_25334(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25291)
static void C_fcall f_25291(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25302)
static void C_ccall f_25302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25306)
static void C_ccall f_25306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25310)
static void C_ccall f_25310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25314)
static void C_ccall f_25314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25298)
static void C_ccall f_25298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25258)
static void C_fcall f_25258(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25253)
static void C_fcall f_25253(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25248)
static void C_fcall f_25248(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25080)
static void C_ccall f_25080(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25091)
static void C_ccall f_25091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25106)
static void C_ccall f_25106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25042)
static void C_ccall f_25042(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_25053)
static void C_ccall f_25053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25068)
static void C_ccall f_25068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24975)
static void C_ccall f_24975(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24995)
static void C_fcall f_24995(C_word t0,C_word t1) C_noret;
C_noret_decl(f_25005)
static void C_ccall f_25005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_25018)
static void C_ccall f_25018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24986)
static void C_ccall f_24986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24993)
static void C_ccall f_24993(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24782)
static void C_ccall f_24782(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24842)
static void C_fcall f_24842(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24852)
static void C_ccall f_24852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24966)
static void C_ccall f_24966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24931)
static void C_ccall f_24931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24923)
static void C_ccall f_24923(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24894)
static void C_ccall f_24894(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24872)
static void C_ccall f_24872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24875)
static void C_ccall f_24875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24863)
static void C_ccall f_24863(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24789)
static void C_ccall f_24789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24840)
static void C_ccall f_24840(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24832)
static void C_ccall f_24832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24792)
static void C_ccall f_24792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24803)
static void C_ccall f_24803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24807)
static void C_ccall f_24807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24799)
static void C_ccall f_24799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24640)
static void C_ccall f_24640(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24688)
static void C_fcall f_24688(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24698)
static void C_ccall f_24698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24709)
static void C_ccall f_24709(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24746)
static void C_ccall f_24746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24721)
static void C_ccall f_24721(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24712)
static void C_ccall f_24712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24650)
static void C_ccall f_24650(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24686)
static void C_ccall f_24686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24657)
static void C_ccall f_24657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24289)
static void C_ccall f_24289(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24296)
static void C_ccall f_24296(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24530)
static void C_fcall f_24530(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24540)
static void C_ccall f_24540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24551)
static void C_ccall f_24551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24563)
static void C_fcall f_24563(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24566)
static void C_ccall f_24566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24554)
static void C_ccall f_24554(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24302)
static void C_ccall f_24302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24528)
static void C_ccall f_24528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24524)
static void C_ccall f_24524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24470)
static void C_fcall f_24470(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24435)
static void C_fcall f_24435(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24451)
static void C_fcall f_24451(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24406)
static void C_fcall f_24406(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24330)
static void C_ccall f_24330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24333)
static void C_ccall f_24333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24397)
static void C_ccall f_24397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24393)
static void C_ccall f_24393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24313)
static void C_fcall f_24313(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24324)
static void C_ccall f_24324(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24320)
static void C_ccall f_24320(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24242)
static void C_ccall f_24242(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24275)
static void C_ccall f_24275(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_24257)
static void C_ccall f_24257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24269)
static void C_ccall f_24269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23860)
static void C_ccall f_23860(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_24069)
static void C_fcall f_24069(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_24079)
static void C_ccall f_24079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24090)
static void C_ccall f_24090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24210)
static void C_ccall f_24210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24189)
static void C_ccall f_24189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24168)
static void C_ccall f_24168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24147)
static void C_ccall f_24147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24126)
static void C_ccall f_24126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24105)
static void C_ccall f_24105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24093)
static void C_ccall f_24093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23870)
static void C_ccall f_23870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23873)
static void C_fcall f_23873(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24036)
static void C_fcall f_24036(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23876)
static void C_fcall f_23876(C_word t0,C_word t1) C_noret;
C_noret_decl(f_24027)
static void C_ccall f_24027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_24007)
static void C_ccall f_24007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23879)
static void C_fcall f_23879(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23972)
static void C_ccall f_23972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23989)
static void C_ccall f_23989(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23882)
static void C_fcall f_23882(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23921)
static void C_ccall f_23921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23955)
static void C_ccall f_23955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23939)
static void C_ccall f_23939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23924)
static void C_fcall f_23924(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23889)
static void C_fcall f_23889(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23900)
static void C_ccall f_23900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23904)
static void C_ccall f_23904(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23896)
static void C_ccall f_23896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23778)
static void C_ccall f_23778(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_23782)
static void C_ccall f_23782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23800)
static void C_ccall f_23800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23618)
static void C_fcall f_23618(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23626)
static void C_fcall f_23626(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23636)
static void C_ccall f_23636(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23674)
static void C_ccall f_23674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23677)
static void C_ccall f_23677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23680)
static void C_ccall f_23680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23755)
static void C_fcall f_23755(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23765)
static void C_ccall f_23765(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23683)
static void C_ccall f_23683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23686)
static void C_ccall f_23686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23689)
static void C_ccall f_23689(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23709)
static void C_fcall f_23709(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23719)
static void C_ccall f_23719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23722)
static void C_ccall f_23722(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23725)
static void C_ccall f_23725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23692)
static void C_ccall f_23692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23695)
static void C_ccall f_23695(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23612)
static void C_fcall f_23612(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23606)
static void C_fcall f_23606(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23600)
static void C_fcall f_23600(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23529)
static void C_fcall f_23529(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23570)
static void C_ccall f_23570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23574)
static void C_ccall f_23574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23578)
static void C_ccall f_23578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23582)
static void C_ccall f_23582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23586)
static void C_ccall f_23586(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23590)
static void C_ccall f_23590(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23594)
static void C_ccall f_23594(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23598)
static void C_ccall f_23598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23531)
static void C_fcall f_23531(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23537)
static void C_fcall f_23537(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23559)
static void C_ccall f_23559(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23548)
static void C_ccall f_23548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23378)
static void C_fcall f_23378(C_word t0,C_word t1) C_noret;
C_noret_decl(f_23393)
static void C_fcall f_23393(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23406)
static void C_ccall f_23406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23366)
static void C_ccall f_23366(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23354)
static void C_ccall f_23354(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23342)
static void C_ccall f_23342(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23336)
static void C_fcall f_23336(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23330)
static void C_ccall f_23330(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23318)
static void C_ccall f_23318(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23306)
static void C_ccall f_23306(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23294)
static void C_ccall f_23294(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23282)
static void C_ccall f_23282(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23276)
static void C_fcall f_23276(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23240)
static void C_ccall f_23240(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23234)
static void C_ccall f_23234(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23187)
static void C_ccall f_23187(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23191)
static void C_ccall f_23191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23207)
static void C_ccall f_23207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23216)
static void C_ccall f_23216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23194)
static void C_ccall f_23194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23178)
static void C_ccall f_23178(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23182)
static void C_ccall f_23182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23025)
static void C_ccall f_23025(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_23025)
static void C_ccall f_23025r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_23152)
static void C_fcall f_23152(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23165)
static void C_ccall f_23165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23147)
static void C_ccall f_23147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23028)
static void C_fcall f_23028(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_23144)
static void C_ccall f_23144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23128)
static void C_ccall f_23128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23056)
static void C_ccall f_23056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23064)
static void C_fcall f_23064(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23074)
static void C_ccall f_23074(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23077)
static void C_ccall f_23077(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_23059)
static void C_ccall f_23059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22848)
static void C_ccall f_22848(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_22852)
static void C_ccall f_22852(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22857)
static void C_ccall f_22857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22860)
static void C_fcall f_22860(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20672)
static void C_ccall f_20672(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20685)
static void C_ccall f_20685(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20692)
static void C_fcall f_20692(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20699)
static void C_ccall f_20699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20678)
static void C_ccall f_20678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22864)
static void C_ccall f_22864(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22901)
static void C_ccall f_22901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22994)
static void C_fcall f_22994(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_23004)
static void C_fcall f_23004(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22907)
static void C_ccall f_22907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22964)
static void C_fcall f_22964(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_22974)
static void C_fcall f_22974(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22915)
static void C_ccall f_22915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22929)
static void C_ccall f_22929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22933)
static void C_ccall f_22933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22937)
static void C_ccall f_22937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22941)
static void C_ccall f_22941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22948)
static void C_ccall f_22948(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22925)
static void C_ccall f_22925(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22918)
static void C_ccall f_22918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22867)
static void C_ccall f_22867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21799)
static void C_ccall f_21799(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_21812)
static void C_ccall f_21812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21862)
static void C_ccall f_21862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21959)
static void C_ccall f_21959(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22027)
static void C_ccall f_22027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22284)
static void C_ccall f_22284(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22034)
static void C_fcall f_22034(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22272)
static void C_ccall f_22272(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22223)
static void C_ccall f_22223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22229)
static void C_ccall f_22229(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22253)
static void C_ccall f_22253(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22249)
static void C_ccall f_22249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22237)
static void C_ccall f_22237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22037)
static void C_fcall f_22037(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22199)
static void C_ccall f_22199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22203)
static void C_ccall f_22203(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22040)
static void C_fcall f_22040(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22176)
static void C_ccall f_22176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22180)
static void C_ccall f_22180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22043)
static void C_fcall f_22043(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22153)
static void C_ccall f_22153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22157)
static void C_ccall f_22157(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22046)
static void C_fcall f_22046(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22078)
static void C_ccall f_22078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22096)
static void C_ccall f_22096(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22114)
static void C_ccall f_22114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22132)
static void C_ccall f_22132(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_22049)
static void C_fcall f_22049(C_word t0,C_word t1) C_noret;
C_noret_decl(f_22053)
static void C_ccall f_22053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21963)
static void C_ccall f_21963(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21967)
static void C_ccall f_21967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21971)
static void C_ccall f_21971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21866)
static void C_ccall f_21866(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21870)
static void C_ccall f_21870(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21874)
static void C_ccall f_21874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21893)
static void C_ccall f_21893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21897)
static void C_ccall f_21897(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21877)
static void C_fcall f_21877(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21881)
static void C_ccall f_21881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21816)
static void C_ccall f_21816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21820)
static void C_ccall f_21820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21824)
static void C_ccall f_21824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21806)
static void C_fcall f_21806(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21621)
static void C_fcall f_21621(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21633)
static void C_fcall f_21633(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21652)
static void C_ccall f_21652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21670)
static void C_fcall f_21670(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21702)
static void C_ccall f_21702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21705)
static void C_fcall f_21705(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21698)
static void C_ccall f_21698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21684)
static void C_ccall f_21684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21655)
static void C_ccall f_21655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21600)
static void C_fcall f_21600(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21607)
static void C_ccall f_21607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21610)
static void C_ccall f_21610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21616)
static void C_ccall f_21616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21535)
static void C_fcall f_21535(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21544)
static void C_fcall f_21544(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21567)
static void C_ccall f_21567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21557)
static void C_fcall f_21557(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21491)
static void C_fcall f_21491(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_21479)
static void C_fcall f_21479(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21377)
static void C_fcall f_21377(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21329)
static void C_fcall f_21329(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20710)
static void C_fcall f_20710(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_20714)
static void C_ccall f_20714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20717)
static void C_ccall f_20717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21143)
static void C_ccall f_21143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21139)
static void C_ccall f_21139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21135)
static void C_ccall f_21135(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20720)
static void C_fcall f_20720(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20843)
static void C_ccall f_20843(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20076)
static void C_ccall f_20076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20849)
static void C_fcall f_20849(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20092)
static void C_ccall f_20092(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20937)
static void C_fcall f_20937(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21007)
static void C_ccall f_21007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20108)
static void C_ccall f_20108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21010)
static void C_fcall f_21010(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20140)
static void C_ccall f_20140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21088)
static void C_fcall f_21088(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21114)
static void C_ccall f_21114(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21108)
static void C_ccall f_21108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21097)
static void C_ccall f_21097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21039)
static void C_fcall f_21039(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21049)
static void C_ccall f_21049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21075)
static void C_ccall f_21075(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_21069)
static void C_ccall f_21069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21052)
static void C_ccall f_21052(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21062)
static void C_ccall f_21062(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21055)
static void C_fcall f_21055(C_word t0,C_word t1) C_noret;
C_noret_decl(f_21016)
static void C_ccall f_21016(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21025)
static void C_ccall f_21025(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_21019)
static void C_fcall f_21019(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20943)
static void C_ccall f_20943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20961)
static void C_fcall f_20961(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20994)
static void C_ccall f_20994(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20980)
static void C_ccall f_20980(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20988)
static void C_ccall f_20988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20971)
static void C_ccall f_20971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20946)
static void C_ccall f_20946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20858)
static void C_ccall f_20858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20880)
static void C_fcall f_20880(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20927)
static void C_ccall f_20927(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20913)
static void C_ccall f_20913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20921)
static void C_ccall f_20921(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20893)
static void C_ccall f_20893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20896)
static void C_fcall f_20896(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20861)
static void C_ccall f_20861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20878)
static void C_ccall f_20878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20864)
static void C_fcall f_20864(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20729)
static void C_ccall f_20729(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20735)
static void C_ccall f_20735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20793)
static void C_ccall f_20793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20796)
static void C_ccall f_20796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20817)
static void C_ccall f_20817(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20828)
static void C_ccall f_20828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20807)
static void C_ccall f_20807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20741)
static void C_ccall f_20741(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20751)
static void C_ccall f_20751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20787)
static void C_ccall f_20787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20757)
static void C_ccall f_20757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20772)
static void C_ccall f_20772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20776)
static void C_ccall f_20776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20780)
static void C_ccall f_20780(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20764)
static void C_ccall f_20764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20606)
static void C_fcall f_20606(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20608)
static void C_ccall f_20608(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_20656)
static void C_ccall f_20656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20612)
static void C_ccall f_20612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20615)
static void C_fcall f_20615(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20620)
static void C_fcall f_20620(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20641)
static void C_ccall f_20641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20598)
static void C_fcall f_20598(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20600)
static void C_ccall f_20600(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20390)
static void C_fcall f_20390(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20407)
static void C_ccall f_20407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20411)
static void C_ccall f_20411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20357)
static void C_fcall f_20357(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20364)
static void C_ccall f_20364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20308)
static void C_ccall f_20308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20315)
static void C_ccall f_20315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20373)
static void C_ccall f_20373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20596)
static void C_ccall f_20596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20573)
static void C_ccall f_20573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20589)
static void C_ccall f_20589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20435)
static void C_ccall f_20435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20438)
static void C_ccall f_20438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20462)
static void C_ccall f_20462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20519)
static void C_ccall f_20519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20525)
static void C_ccall f_20525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20534)
static void C_ccall f_20534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20543)
static void C_ccall f_20543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20552)
static void C_ccall f_20552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20561)
static void C_ccall f_20561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20513)
static void C_ccall f_20513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20468)
static void C_ccall f_20468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20474)
static void C_ccall f_20474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20480)
static void C_ccall f_20480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20486)
static void C_ccall f_20486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20492)
static void C_ccall f_20492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20498)
static void C_ccall f_20498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20339)
static void C_fcall f_20339(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20346)
static void C_ccall f_20346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20329)
static void C_fcall f_20329(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20317)
static void C_fcall f_20317(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20285)
static void C_fcall f_20285(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20292)
static void C_ccall f_20292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20299)
static void C_ccall f_20299(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20269)
static void C_fcall f_20269(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20276)
static void C_ccall f_20276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20283)
static void C_ccall f_20283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20257)
static void C_fcall f_20257(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20239)
static void C_fcall f_20239(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20221)
static void C_fcall f_20221(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20206)
static void C_fcall f_20206(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20200)
static void C_fcall f_20200(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_20188)
static void C_fcall f_20188(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20170)
static void C_fcall f_20170(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20149)
static void C_fcall f_20149(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20117)
static void C_fcall f_20117(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20124)
static void C_ccall f_20124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20059)
static void C_fcall f_20059(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20067)
static void C_ccall f_20067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20049)
static void C_fcall f_20049(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20057)
static void C_ccall f_20057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_20043)
static void C_fcall f_20043(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20031)
static void C_fcall f_20031(C_word t0,C_word t1) C_noret;
C_noret_decl(f_20028)
static void C_ccall f_20028(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_20007)
static void C_fcall f_20007(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19920)
static void C_fcall f_19920(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19899)
static void C_fcall f_19899(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_19889)
static void C_fcall f_19889(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19877)
static void C_fcall f_19877(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19848)
static void C_ccall f_19848(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19836)
static void C_fcall f_19836(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19818)
static void C_fcall f_19818(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19800)
static void C_fcall f_19800(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19779)
static void C_ccall f_19779(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18757)
static void C_ccall f_18757(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18757)
static void C_ccall f_18757r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_19756)
static void C_ccall f_19756(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19771)
static void C_ccall f_19771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19763)
static void C_ccall f_19763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19727)
static void C_ccall f_19727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19731)
static void C_ccall f_19731(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19692)
static void C_ccall f_19692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19696)
static void C_ccall f_19696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18767)
static void C_fcall f_18767(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19656)
static void C_ccall f_19656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19671)
static void C_ccall f_19671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19663)
static void C_ccall f_19663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19627)
static void C_ccall f_19627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19631)
static void C_ccall f_19631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19592)
static void C_ccall f_19592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19596)
static void C_ccall f_19596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18770)
static void C_fcall f_18770(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18773)
static void C_ccall f_18773(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18778)
static void C_ccall f_18778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19485)
static void C_fcall f_19485(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19508)
static void C_fcall f_19508(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_19561)
static void C_ccall f_19561(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19543)
static void C_fcall f_19543(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19536)
static void C_ccall f_19536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19518)
static void C_ccall f_19518(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19495)
static void C_ccall f_19495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18972)
static void C_ccall f_18972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19447)
static void C_fcall f_19447(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19469)
static void C_ccall f_19469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19453)
static void C_ccall f_19453(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19461)
static void C_ccall f_19461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19465)
static void C_ccall f_19465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19451)
static void C_ccall f_19451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19441)
static void C_ccall f_19441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18975)
static void C_fcall f_18975(C_word t0,C_word t1) C_noret;
C_noret_decl(f_19318)
static void C_fcall f_19318(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19342)
static void C_ccall f_19342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19404)
static void C_fcall f_19404(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19345)
static void C_ccall f_19345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19361)
static void C_fcall f_19361(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19386)
static void C_ccall f_19386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19352)
static void C_ccall f_19352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19329)
static void C_ccall f_19329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18978)
static void C_ccall f_18978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19304)
static void C_ccall f_19304(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18982)
static void C_ccall f_18982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19026)
static void C_ccall f_19026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19029)
static void C_ccall f_19029(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19285)
static void C_fcall f_19285(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19295)
static void C_ccall f_19295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19032)
static void C_ccall f_19032(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19223)
static void C_fcall f_19223(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19233)
static void C_ccall f_19233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19236)
static void C_ccall f_19236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19256)
static void C_ccall f_19256(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19258)
static void C_fcall f_19258(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19268)
static void C_ccall f_19268(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19242)
static void C_ccall f_19242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19245)
static void C_ccall f_19245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19035)
static void C_ccall f_19035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19043)
static void C_fcall f_19043(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19056)
static void C_ccall f_19056(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18930)
static void C_ccall f_18930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18939)
static void C_fcall f_18939(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18961)
static void C_ccall f_18961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18950)
static void C_ccall f_18950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19059)
static void C_ccall f_19059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19194)
static void C_ccall f_19194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19196)
static void C_fcall f_19196(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19206)
static void C_ccall f_19206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19065)
static void C_ccall f_19065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19167)
static void C_ccall f_19167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19169)
static void C_fcall f_19169(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19179)
static void C_ccall f_19179(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19068)
static void C_ccall f_19068(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19080)
static void C_fcall f_19080(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_19106)
static void C_ccall f_19106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19112)
static void C_ccall f_19112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19118)
static void C_ccall f_19118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19128)
static void C_ccall f_19128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19130)
static void C_fcall f_19130(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_19140)
static void C_ccall f_19140(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19121)
static void C_ccall f_19121(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19093)
static void C_ccall f_19093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19071)
static void C_ccall f_19071(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19038)
static void C_ccall f_19038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18985)
static void C_ccall f_18985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_19008)
static void C_ccall f_19008(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18997)
static void C_ccall f_18997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18862)
static void C_fcall f_18862(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_18910)
static void C_ccall f_18910(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18872)
static void C_ccall f_18872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18900)
static void C_ccall f_18900(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18875)
static void C_ccall f_18875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18780)
static void C_fcall f_18780(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18852)
static void C_ccall f_18852(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18784)
static void C_ccall f_18784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18802)
static void C_ccall f_18802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18834)
static void C_ccall f_18834(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18663)
static void C_ccall f_18663(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18667)
static void C_ccall f_18667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18696)
static void C_ccall f_18696(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18701)
static void C_fcall f_18701(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18726)
static void C_fcall f_18726(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18711)
static void C_ccall f_18711(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18145)
static void C_ccall f_18145(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18145)
static void C_ccall f_18145r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18416)
static void C_ccall f_18416(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18420)
static void C_ccall f_18420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18425)
static void C_ccall f_18425(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18425)
static void C_ccall f_18425r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_18631)
static void C_ccall f_18631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18646)
static void C_ccall f_18646(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18638)
static void C_ccall f_18638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18602)
static void C_ccall f_18602(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18606)
static void C_ccall f_18606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18567)
static void C_ccall f_18567(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18571)
static void C_ccall f_18571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18429)
static void C_fcall f_18429(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18531)
static void C_ccall f_18531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18546)
static void C_ccall f_18546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18538)
static void C_ccall f_18538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18502)
static void C_ccall f_18502(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18506)
static void C_ccall f_18506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18467)
static void C_ccall f_18467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18471)
static void C_ccall f_18471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18432)
static void C_fcall f_18432(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18435)
static void C_ccall f_18435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18438)
static void C_fcall f_18438(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18407)
static void C_ccall f_18407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18149)
static void C_ccall f_18149(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18376)
static void C_ccall f_18376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18391)
static void C_ccall f_18391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18383)
static void C_ccall f_18383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18347)
static void C_ccall f_18347(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18351)
static void C_ccall f_18351(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18312)
static void C_ccall f_18312(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18316)
static void C_ccall f_18316(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18152)
static void C_fcall f_18152(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18276)
static void C_ccall f_18276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18291)
static void C_ccall f_18291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18283)
static void C_ccall f_18283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18247)
static void C_ccall f_18247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18251)
static void C_ccall f_18251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18212)
static void C_ccall f_18212(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18216)
static void C_ccall f_18216(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18155)
static void C_fcall f_18155(C_word t0,C_word t1) C_noret;
C_noret_decl(f_18158)
static void C_ccall f_18158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18161)
static void C_ccall f_18161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18173)
static void C_ccall f_18173(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18191)
static void C_ccall f_18191(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18179)
static void C_ccall f_18179(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18167)
static void C_ccall f_18167(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18082)
static void C_fcall f_18082(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17742)
static void C_ccall f_17742(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17924)
static void C_ccall f_17924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17928)
static void C_ccall f_17928(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17930)
static void C_fcall f_17930(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17855)
static void C_fcall f_17855(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17865)
static void C_fcall f_17865(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17872)
static void C_fcall f_17872(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17940)
static void C_ccall f_17940(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17943)
static void C_ccall f_17943(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17947)
static void C_ccall f_17947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17967)
static void C_fcall f_17967(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17983)
static void C_ccall f_17983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17950)
static void C_ccall f_17950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17745)
static void C_fcall f_17745(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17757)
static void C_fcall f_17757(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17793)
static void C_ccall f_17793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17813)
static void C_ccall f_17813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17818)
static void C_fcall f_17818(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17255)
static void C_ccall f_17255(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_17255)
static void C_ccall f_17255r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_17182)
static void C_fcall f_17182(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_17027)
static void C_ccall f_17027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17033)
static void C_ccall f_17033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17118)
static void C_fcall f_17118(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17045)
static void C_ccall f_17045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17061)
static void C_ccall f_17061(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_17065)
static void C_fcall f_17065(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17068)
static void C_fcall f_17068(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17048)
static void C_ccall f_17048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17059)
static void C_ccall f_17059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17199)
static void C_ccall f_17199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17736)
static void C_ccall f_17736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17259)
static void C_ccall f_17259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17705)
static void C_ccall f_17705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17720)
static void C_ccall f_17720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17712)
static void C_ccall f_17712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17676)
static void C_ccall f_17676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17680)
static void C_ccall f_17680(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17641)
static void C_ccall f_17641(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17645)
static void C_ccall f_17645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17606)
static void C_ccall f_17606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17610)
static void C_ccall f_17610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17262)
static void C_fcall f_17262(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17570)
static void C_ccall f_17570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17585)
static void C_ccall f_17585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17577)
static void C_ccall f_17577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17541)
static void C_ccall f_17541(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17545)
static void C_ccall f_17545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17506)
static void C_ccall f_17506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17510)
static void C_ccall f_17510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17471)
static void C_ccall f_17471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17475)
static void C_ccall f_17475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17265)
static void C_fcall f_17265(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17435)
static void C_ccall f_17435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17450)
static void C_ccall f_17450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17442)
static void C_ccall f_17442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17406)
static void C_ccall f_17406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17410)
static void C_ccall f_17410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17371)
static void C_ccall f_17371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17375)
static void C_ccall f_17375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17336)
static void C_ccall f_17336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17340)
static void C_ccall f_17340(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17268)
static void C_fcall f_17268(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17271)
static void C_ccall f_17271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17274)
static void C_ccall f_17274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17307)
static void C_ccall f_17307(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17315)
static void C_ccall f_17315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17280)
static void C_ccall f_17280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17293)
static void C_ccall f_17293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17283)
static void C_fcall f_17283(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17286)
static void C_ccall f_17286(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16822)
static void C_ccall f_16822(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16826)
static void C_ccall f_16826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16829)
static void C_ccall f_16829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16832)
static void C_ccall f_16832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17001)
static void C_ccall f_17001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17014)
static void C_ccall f_17014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17018)
static void C_ccall f_17018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16838)
static void C_ccall f_16838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16994)
static void C_ccall f_16994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16975)
static void C_ccall f_16975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16982)
static void C_ccall f_16982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16986)
static void C_ccall f_16986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16844)
static void C_fcall f_16844(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16850)
static void C_ccall f_16850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16934)
static void C_ccall f_16934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16936)
static void C_fcall f_16936(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16958)
static void C_ccall f_16958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16965)
static void C_ccall f_16965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16969)
static void C_ccall f_16969(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16955)
static void C_fcall f_16955(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16951)
static void C_ccall f_16951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16892)
static void C_ccall f_16892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16909)
static void C_fcall f_16909(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16919)
static void C_ccall f_16919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16895)
static void C_ccall f_16895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16854)
static void C_fcall f_16854(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16862)
static void C_ccall f_16862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16864)
static void C_fcall f_16864(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16885)
static void C_ccall f_16885(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16710)
static void C_fcall f_16710(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16820)
static void C_ccall f_16820(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16779)
static void C_fcall f_16779(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16812)
static void C_ccall f_16812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16808)
static void C_ccall f_16808(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16793)
static void C_ccall f_16793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16717)
static void C_ccall f_16717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16725)
static void C_fcall f_16725(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16770)
static void C_ccall f_16770(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16758)
static void C_ccall f_16758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16742)
static void C_ccall f_16742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15943)
static void C_ccall f_15943(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15943)
static void C_ccall f_15943r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16260)
static void C_ccall f_16260(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16267)
static void C_fcall f_16267(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16672)
static void C_ccall f_16672(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16687)
static void C_ccall f_16687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16679)
static void C_ccall f_16679(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16643)
static void C_ccall f_16643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16647)
static void C_ccall f_16647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16608)
static void C_ccall f_16608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16612)
static void C_ccall f_16612(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16573)
static void C_ccall f_16573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16577)
static void C_ccall f_16577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16270)
static void C_fcall f_16270(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16537)
static void C_ccall f_16537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16552)
static void C_ccall f_16552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16544)
static void C_ccall f_16544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16508)
static void C_ccall f_16508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16512)
static void C_ccall f_16512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16473)
static void C_ccall f_16473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16477)
static void C_ccall f_16477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16438)
static void C_ccall f_16438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16442)
static void C_ccall f_16442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16273)
static void C_fcall f_16273(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16402)
static void C_ccall f_16402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16417)
static void C_ccall f_16417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16409)
static void C_ccall f_16409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16373)
static void C_ccall f_16373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16377)
static void C_ccall f_16377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16338)
static void C_ccall f_16338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16342)
static void C_ccall f_16342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16303)
static void C_ccall f_16303(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16307)
static void C_ccall f_16307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16276)
static void C_fcall f_16276(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16279)
static void C_ccall f_16279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15947)
static void C_ccall f_15947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15950)
static void C_ccall f_15950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16224)
static void C_ccall f_16224(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16228)
static void C_ccall f_16228(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16231)
static void C_ccall f_16231(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16234)
static void C_ccall f_16234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16237)
static void C_ccall f_16237(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16250)
static void C_ccall f_16250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16240)
static void C_fcall f_16240(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15956)
static void C_ccall f_15956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15963)
static void C_fcall f_15963(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16194)
static void C_ccall f_16194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16209)
static void C_ccall f_16209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16201)
static void C_ccall f_16201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16165)
static void C_ccall f_16165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16169)
static void C_ccall f_16169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16130)
static void C_ccall f_16130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16134)
static void C_ccall f_16134(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15966)
static void C_fcall f_15966(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16094)
static void C_ccall f_16094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16109)
static void C_ccall f_16109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16101)
static void C_ccall f_16101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16065)
static void C_ccall f_16065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16069)
static void C_ccall f_16069(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16030)
static void C_ccall f_16030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16034)
static void C_ccall f_16034(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15969)
static void C_fcall f_15969(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15972)
static void C_ccall f_15972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15987)
static void C_ccall f_15987(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16009)
static void C_ccall f_16009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15993)
static void C_ccall f_15993(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16001)
static void C_ccall f_16001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15975)
static void C_ccall f_15975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15978)
static void C_ccall f_15978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15860)
static void C_fcall f_15860(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15851)
static void C_fcall f_15851(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15842)
static void C_fcall f_15842(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15824)
static void C_fcall f_15824(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15806)
static void C_fcall f_15806(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15788)
static void C_fcall f_15788(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15779)
static void C_fcall f_15779(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15770)
static void C_fcall f_15770(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15548)
static void C_ccall f_15548(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15598)
static void C_ccall f_15598(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15743)
static void C_ccall f_15743(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15624)
static void C_ccall f_15624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15739)
static void C_ccall f_15739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15724)
static void C_ccall f_15724(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15705)
static void C_ccall f_15705(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15678)
static void C_ccall f_15678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15631)
static void C_ccall f_15631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15601)
static void C_fcall f_15601(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15551)
static void C_ccall f_15551(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_15557)
static void C_fcall f_15557(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15573)
static void C_ccall f_15573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15576)
static void C_ccall f_15576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15074)
static void C_ccall f_15074(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_15074)
static void C_ccall f_15074r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_15538)
static void C_ccall f_15538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15078)
static void C_fcall f_15078(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15510)
static void C_ccall f_15510(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15525)
static void C_ccall f_15525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15517)
static void C_ccall f_15517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15481)
static void C_ccall f_15481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15485)
static void C_ccall f_15485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15446)
static void C_ccall f_15446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15450)
static void C_ccall f_15450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15411)
static void C_ccall f_15411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15415)
static void C_ccall f_15415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15081)
static void C_fcall f_15081(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15375)
static void C_ccall f_15375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15390)
static void C_ccall f_15390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15382)
static void C_ccall f_15382(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15346)
static void C_ccall f_15346(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15350)
static void C_ccall f_15350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15311)
static void C_ccall f_15311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15315)
static void C_ccall f_15315(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15276)
static void C_ccall f_15276(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15280)
static void C_ccall f_15280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15084)
static void C_fcall f_15084(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15240)
static void C_ccall f_15240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15255)
static void C_ccall f_15255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15247)
static void C_ccall f_15247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15211)
static void C_ccall f_15211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15215)
static void C_ccall f_15215(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15176)
static void C_ccall f_15176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15180)
static void C_ccall f_15180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15141)
static void C_ccall f_15141(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15145)
static void C_ccall f_15145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15087)
static void C_fcall f_15087(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15090)
static void C_ccall f_15090(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15093)
static void C_ccall f_15093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15108)
static void C_ccall f_15108(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15120)
static void C_ccall f_15120(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15099)
static void C_ccall f_15099(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15102)
static void C_ccall f_15102(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14998)
static void C_ccall f_14998(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15002)
static void C_ccall f_15002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15021)
static void C_ccall f_15021(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15031)
static void C_ccall f_15031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15033)
static void C_fcall f_15033(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15050)
static void C_ccall f_15050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15053)
static void C_ccall f_15053(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15064)
static void C_ccall f_15064(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15005)
static void C_ccall f_15005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14735)
static void C_ccall f_14735(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14735)
static void C_ccall f_14735r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14988)
static void C_ccall f_14988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14739)
static void C_fcall f_14739(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14960)
static void C_ccall f_14960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14975)
static void C_ccall f_14975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14967)
static void C_ccall f_14967(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14931)
static void C_ccall f_14931(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14935)
static void C_ccall f_14935(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14896)
static void C_ccall f_14896(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14900)
static void C_ccall f_14900(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14742)
static void C_fcall f_14742(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14860)
static void C_ccall f_14860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14875)
static void C_ccall f_14875(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14867)
static void C_ccall f_14867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14831)
static void C_ccall f_14831(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14835)
static void C_ccall f_14835(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14796)
static void C_ccall f_14796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14800)
static void C_ccall f_14800(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14745)
static void C_fcall f_14745(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14748)
static void C_ccall f_14748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14751)
static void C_ccall f_14751(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14763)
static void C_ccall f_14763(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14775)
static void C_ccall f_14775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14757)
static void C_ccall f_14757(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14699)
static void C_ccall f_14699(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14703)
static void C_ccall f_14703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14725)
static void C_ccall f_14725(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14719)
static void C_ccall f_14719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14712)
static void C_ccall f_14712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14452)
static void C_ccall f_14452(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_14452)
static void C_ccall f_14452r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_14456)
static void C_fcall f_14456(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14669)
static void C_ccall f_14669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14684)
static void C_ccall f_14684(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14676)
static void C_ccall f_14676(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14640)
static void C_ccall f_14640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14644)
static void C_ccall f_14644(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14605)
static void C_ccall f_14605(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14609)
static void C_ccall f_14609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14459)
static void C_fcall f_14459(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14569)
static void C_ccall f_14569(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14584)
static void C_ccall f_14584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14576)
static void C_ccall f_14576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14540)
static void C_ccall f_14540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14544)
static void C_ccall f_14544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14505)
static void C_ccall f_14505(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14509)
static void C_ccall f_14509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14462)
static void C_fcall f_14462(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14465)
static void C_ccall f_14465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14468)
static void C_ccall f_14468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14476)
static void C_ccall f_14476(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14484)
static void C_ccall f_14484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14474)
static void C_ccall f_14474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14237)
static void C_ccall f_14237(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_14241)
static void C_ccall f_14241(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14450)
static void C_ccall f_14450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14403)
static void C_ccall f_14403(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14415)
static void C_fcall f_14415(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14271)
static void C_ccall f_14271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14274)
static void C_ccall f_14274(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14280)
static void C_ccall f_14280(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14283)
static void C_ccall f_14283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14371)
static void C_fcall f_14371(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14286)
static void C_fcall f_14286(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14365)
static void C_ccall f_14365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14292)
static void C_ccall f_14292(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14295)
static void C_ccall f_14295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14247)
static void C_ccall f_14247(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14250)
static void C_ccall f_14250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14257)
static void C_ccall f_14257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13767)
static void C_ccall f_13767(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13767)
static void C_ccall f_13767r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13771)
static void C_fcall f_13771(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14207)
static void C_ccall f_14207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14222)
static void C_ccall f_14222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14214)
static void C_ccall f_14214(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14178)
static void C_ccall f_14178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14182)
static void C_ccall f_14182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14143)
static void C_ccall f_14143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14147)
static void C_ccall f_14147(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14108)
static void C_ccall f_14108(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14112)
static void C_ccall f_14112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13774)
static void C_fcall f_13774(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14072)
static void C_ccall f_14072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14087)
static void C_ccall f_14087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14079)
static void C_ccall f_14079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14043)
static void C_ccall f_14043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14047)
static void C_ccall f_14047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14008)
static void C_ccall f_14008(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14012)
static void C_ccall f_14012(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13973)
static void C_ccall f_13973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13977)
static void C_ccall f_13977(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13777)
static void C_fcall f_13777(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13937)
static void C_ccall f_13937(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13952)
static void C_ccall f_13952(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13944)
static void C_ccall f_13944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13908)
static void C_ccall f_13908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13912)
static void C_ccall f_13912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13873)
static void C_ccall f_13873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13877)
static void C_ccall f_13877(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13838)
static void C_ccall f_13838(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13842)
static void C_ccall f_13842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13780)
static void C_fcall f_13780(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13783)
static void C_ccall f_13783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13786)
static void C_ccall f_13786(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13809)
static void C_ccall f_13809(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13817)
static void C_ccall f_13817(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13792)
static void C_ccall f_13792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13795)
static void C_ccall f_13795(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13687)
static void C_fcall f_13687(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13678)
static void C_fcall f_13678(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13606)
static void C_ccall f_13606(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13610)
static void C_ccall f_13610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13613)
static void C_fcall f_13613(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13351)
static void C_ccall f_13351(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_13351)
static void C_ccall f_13351r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_13355)
static void C_fcall f_13355(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13576)
static void C_ccall f_13576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13591)
static void C_ccall f_13591(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13583)
static void C_ccall f_13583(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13547)
static void C_ccall f_13547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13551)
static void C_ccall f_13551(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13512)
static void C_ccall f_13512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13516)
static void C_ccall f_13516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13358)
static void C_fcall f_13358(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13476)
static void C_ccall f_13476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13491)
static void C_ccall f_13491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13483)
static void C_ccall f_13483(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13447)
static void C_ccall f_13447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13451)
static void C_ccall f_13451(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13412)
static void C_ccall f_13412(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13416)
static void C_ccall f_13416(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13361)
static void C_fcall f_13361(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13364)
static void C_ccall f_13364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13367)
static void C_ccall f_13367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13379)
static void C_ccall f_13379(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13391)
static void C_ccall f_13391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13373)
static void C_ccall f_13373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13236)
static void C_fcall f_13236(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13349)
static void C_ccall f_13349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13246)
static void C_ccall f_13246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13334)
static void C_ccall f_13334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13345)
static void C_ccall f_13345(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13341)
static void C_ccall f_13341(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13249)
static void C_ccall f_13249(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13331)
static void C_ccall f_13331(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13257)
static void C_ccall f_13257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13321)
static void C_ccall f_13321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13266)
static void C_ccall f_13266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13285)
static void C_ccall f_13285(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13314)
static void C_ccall f_13314(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13295)
static void C_ccall f_13295(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13310)
static void C_ccall f_13310(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13298)
static void C_ccall f_13298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13269)
static void C_ccall f_13269(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13279)
static void C_ccall f_13279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13260)
static void C_fcall f_13260(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13263)
static void C_ccall f_13263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13190)
static void C_fcall f_13190(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13181)
static void C_fcall f_13181(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12880)
static void C_fcall f_12880(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12887)
static void C_ccall f_12887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13176)
static void C_ccall f_13176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12890)
static void C_ccall f_12890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13161)
static void C_ccall f_13161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13153)
static void C_ccall f_13153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13145)
static void C_ccall f_13145(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13148)
static void C_ccall f_13148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13116)
static void C_fcall f_13116(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13139)
static void C_ccall f_13139(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13122)
static void C_fcall f_13122(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13126)
static void C_ccall f_13126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12893)
static void C_ccall f_12893(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12899)
static void C_ccall f_12899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12991)
static void C_ccall f_12991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13103)
static void C_ccall f_13103(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13110)
static void C_ccall f_13110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13014)
static void C_fcall f_13014(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13016)
static void C_fcall f_13016(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13065)
static void C_fcall f_13065(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13100)
static void C_ccall f_13100(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13089)
static void C_ccall f_13089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13234)
static void C_ccall f_13234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13209)
static void C_ccall f_13209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13230)
static void C_ccall f_13230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13226)
static void C_ccall f_13226(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13218)
static void C_ccall f_13218(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13082)
static void C_ccall f_13082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13075)
static void C_ccall f_13075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13023)
static void C_ccall f_13023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13063)
static void C_ccall f_13063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13027)
static void C_ccall f_13027(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13059)
static void C_ccall f_13059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13046)
static void C_ccall f_13046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13054)
static void C_ccall f_13054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13050)
static void C_ccall f_13050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13030)
static void C_fcall f_13030(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13033)
static void C_ccall f_13033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13007)
static void C_ccall f_13007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12994)
static void C_ccall f_12994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13003)
static void C_ccall f_13003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12998)
static void C_ccall f_12998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12905)
static void C_ccall f_12905(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12985)
static void C_ccall f_12985(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12965)
static void C_ccall f_12965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12971)
static void C_ccall f_12971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12982)
static void C_ccall f_12982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12962)
static void C_ccall f_12962(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12950)
static void C_ccall f_12950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12953)
static void C_ccall f_12953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12908)
static void C_ccall f_12908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12944)
static void C_ccall f_12944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12939)
static void C_ccall f_12939(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12911)
static void C_ccall f_12911(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12924)
static void C_ccall f_12924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12914)
static void C_fcall f_12914(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12917)
static void C_ccall f_12917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12920)
static void C_ccall f_12920(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12757)
static void C_ccall f_12757(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12757)
static void C_ccall f_12757r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12816)
static void C_ccall f_12816(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12826)
static void C_ccall f_12826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12828)
static void C_fcall f_12828(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12857)
static void C_ccall f_12857(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12862)
static void C_ccall f_12862(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12847)
static void C_fcall f_12847(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12778)
static void C_fcall f_12778(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12810)
static void C_ccall f_12810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12738)
static void C_ccall f_12738(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12745)
static void C_ccall f_12745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12752)
static void C_ccall f_12752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12719)
static void C_ccall f_12719(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12726)
static void C_ccall f_12726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12733)
static void C_ccall f_12733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12539)
static void C_fcall f_12539(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9) C_noret;
C_noret_decl(f_12543)
static void C_ccall f_12543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12546)
static void C_ccall f_12546(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12549)
static void C_ccall f_12549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12552)
static void C_ccall f_12552(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12709)
static void C_ccall f_12709(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12716)
static void C_ccall f_12716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12555)
static void C_ccall f_12555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12558)
static void C_fcall f_12558(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12564)
static void C_ccall f_12564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12570)
static void C_ccall f_12570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12633)
static void C_ccall f_12633(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12647)
static void C_ccall f_12647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12573)
static void C_fcall f_12573(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12576)
static void C_ccall f_12576(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12582)
static void C_fcall f_12582(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12595)
static void C_ccall f_12595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12585)
static void C_ccall f_12585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12588)
static void C_ccall f_12588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12529)
static void C_fcall f_12529(C_word t0) C_noret;
C_noret_decl(f_12474)
static void C_fcall f_12474(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12465)
static void C_fcall f_12465(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12348)
static void C_fcall f_12348(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12339)
static void C_fcall f_12339(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12330)
static void C_ccall f_12330(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12321)
static void C_fcall f_12321(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12312)
static void C_fcall f_12312(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12294)
static void C_fcall f_12294(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12285)
static void C_fcall f_12285(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12276)
static void C_fcall f_12276(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12258)
static void C_fcall f_12258(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12249)
static void C_fcall f_12249(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12240)
static void C_fcall f_12240(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12225)
static void C_fcall f_12225(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12180)
static void C_fcall f_12180(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12162)
static void C_fcall f_12162(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12153)
static void C_fcall f_12153(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12126)
static void C_fcall f_12126(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12108)
static void C_fcall f_12108(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12090)
static void C_fcall f_12090(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12081)
static void C_fcall f_12081(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12069)
static void C_fcall f_12069(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_11756)
static void C_ccall f_11756(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12067)
static void C_ccall f_12067(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12002)
static void C_ccall f_12002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12004)
static void C_fcall f_12004(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7502)
static void C_ccall f_7502(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12019)
static void C_ccall f_12019(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12022)
static void C_fcall f_12022(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11769)
static void C_ccall f_11769(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11845)
static void C_fcall f_11845(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11998)
static void C_ccall f_11998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11982)
static void C_ccall f_11982(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11934)
static void C_fcall f_11934(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11948)
static void C_fcall f_11948(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11901)
static void C_ccall f_11901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11876)
static void C_fcall f_11876(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11772)
static void C_ccall f_11772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11780)
static void C_fcall f_11780(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11813)
static void C_ccall f_11813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11049)
static void C_ccall f_11049(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11049)
static void C_ccall f_11049r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11733)
static void C_ccall f_11733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11748)
static void C_ccall f_11748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11740)
static void C_ccall f_11740(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11704)
static void C_ccall f_11704(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11708)
static void C_ccall f_11708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11669)
static void C_ccall f_11669(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11673)
static void C_ccall f_11673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11634)
static void C_ccall f_11634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11638)
static void C_ccall f_11638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11599)
static void C_ccall f_11599(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11603)
static void C_ccall f_11603(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11053)
static void C_fcall f_11053(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11563)
static void C_ccall f_11563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11578)
static void C_ccall f_11578(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11570)
static void C_ccall f_11570(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11534)
static void C_ccall f_11534(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11538)
static void C_ccall f_11538(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11499)
static void C_ccall f_11499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11503)
static void C_ccall f_11503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11464)
static void C_ccall f_11464(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11468)
static void C_ccall f_11468(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11429)
static void C_ccall f_11429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11433)
static void C_ccall f_11433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11056)
static void C_fcall f_11056(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11393)
static void C_ccall f_11393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11408)
static void C_ccall f_11408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11400)
static void C_ccall f_11400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11364)
static void C_ccall f_11364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11368)
static void C_ccall f_11368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11329)
static void C_ccall f_11329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11333)
static void C_ccall f_11333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11294)
static void C_ccall f_11294(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11298)
static void C_ccall f_11298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11259)
static void C_ccall f_11259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11263)
static void C_ccall f_11263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11059)
static void C_fcall f_11059(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11223)
static void C_ccall f_11223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11238)
static void C_ccall f_11238(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11230)
static void C_ccall f_11230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11194)
static void C_ccall f_11194(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11198)
static void C_ccall f_11198(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11159)
static void C_ccall f_11159(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11163)
static void C_ccall f_11163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11124)
static void C_ccall f_11124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11128)
static void C_ccall f_11128(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11089)
static void C_ccall f_11089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11093)
static void C_ccall f_11093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11062)
static void C_fcall f_11062(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11065)
static void C_ccall f_11065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10815)
static void C_fcall f_10815(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10824)
static void C_ccall f_10824(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10828)
static void C_ccall f_10828(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11030)
static void C_ccall f_11030(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11015)
static void C_ccall f_11015(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10997)
static void C_ccall f_10997(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10982)
static void C_ccall f_10982(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10932)
static void C_ccall f_10932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10912)
static void C_ccall f_10912(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10929)
static void C_ccall f_10929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10916)
static void C_ccall f_10916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10922)
static void C_ccall f_10922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10897)
static void C_ccall f_10897(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10901)
static void C_ccall f_10901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10907)
static void C_ccall f_10907(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10883)
static void C_ccall f_10883(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10895)
static void C_ccall f_10895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10891)
static void C_ccall f_10891(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10873)
static void C_ccall f_10873(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10881)
static void C_ccall f_10881(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10863)
static void C_ccall f_10863(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10830)
static void C_ccall f_10830(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10786)
static void C_ccall f_10786(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10790)
static void C_ccall f_10790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10801)
static void C_ccall f_10801(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10799)
static void C_ccall f_10799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10755)
static void C_ccall f_10755(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10759)
static void C_ccall f_10759(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10770)
static void C_ccall f_10770(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10768)
static void C_ccall f_10768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10737)
static void C_ccall f_10737(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10745)
static void C_ccall f_10745(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10753)
static void C_ccall f_10753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10727)
static void C_ccall f_10727(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10735)
static void C_ccall f_10735(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10668)
static void C_ccall f_10668(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10675)
static void C_ccall f_10675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10678)
static void C_ccall f_10678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10681)
static void C_ccall f_10681(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10686)
static void C_fcall f_10686(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10638)
static void C_ccall f_10638(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_10638)
static void C_ccall f_10638r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_10642)
static void C_ccall f_10642(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10652)
static void C_ccall f_10652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10626)
static void C_ccall f_10626(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10608)
static void C_ccall f_10608(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10590)
static void C_ccall f_10590(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10572)
static void C_ccall f_10572(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10551)
static void C_fcall f_10551(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10243)
static void C_ccall f_10243(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10344)
static void C_ccall f_10344(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10393)
static void C_ccall f_10393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10389)
static void C_ccall f_10389(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10361)
static void C_ccall f_10361(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10296)
static void C_fcall f_10296(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10305)
static void C_fcall f_10305(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10289)
static void C_ccall f_10289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10108)
static void C_ccall f_10108(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10234)
static void C_ccall f_10234(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10230)
static void C_ccall f_10230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10208)
static void C_ccall f_10208(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10138)
static void C_fcall f_10138(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10154)
static void C_fcall f_10154(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10063)
static void C_ccall f_10063(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10106)
static void C_ccall f_10106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10095)
static void C_ccall f_10095(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9947)
static void C_ccall f_9947(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_10061)
static void C_ccall f_10061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9962)
static void C_fcall f_9962(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_9992)
static void C_fcall f_9992(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10011)
static void C_ccall f_10011(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9996)
static void C_ccall f_9996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9975)
static void C_fcall f_9975(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9825)
static void C_ccall f_9825(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9945)
static void C_ccall f_9945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9840)
static void C_fcall f_9840(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_9870)
static void C_fcall f_9870(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9889)
static void C_ccall f_9889(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9874)
static void C_ccall f_9874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9853)
static void C_fcall f_9853(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9728)
static void C_ccall f_9728(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9823)
static void C_ccall f_9823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9743)
static void C_fcall f_9743(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_9789)
static void C_ccall f_9789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9774)
static void C_ccall f_9774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9756)
static void C_fcall f_9756(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9675)
static void C_fcall f_9675(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9713)
static void C_ccall f_9713(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9720)
static void C_ccall f_9720(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9698)
static void C_ccall f_9698(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9673)
static void C_ccall f_9673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9645)
static void C_fcall f_9645(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9647)
static void C_ccall f_9647(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9625)
static void C_ccall f_9625(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9573)
static void C_fcall f_9573(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9610)
static void C_ccall f_9610(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9577)
static void C_ccall f_9577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9593)
static void C_ccall f_9593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9595)
static void C_ccall f_9595(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9359)
static void C_ccall f_9359(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_9359)
static void C_ccall f_9359r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_9372)
static void C_fcall f_9372(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9454)
static void C_fcall f_9454(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9457)
static void C_ccall f_9457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9465)
static void C_fcall f_9465(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9477)
static void C_fcall f_9477(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9498)
static void C_ccall f_9498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9506)
static void C_ccall f_9506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9393)
static void C_ccall f_9393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9398)
static void C_fcall f_9398(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9430)
static void C_ccall f_9430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9338)
static void C_ccall f_9338(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9338)
static void C_ccall f_9338r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9319)
static void C_ccall f_9319(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9319)
static void C_ccall f_9319r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9278)
static void C_ccall f_9278(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9278)
static void C_ccall f_9278r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9259)
static void C_ccall f_9259(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9259)
static void C_ccall f_9259r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9031)
static void C_ccall f_9031(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_9031)
static void C_ccall f_9031r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9236)
static void C_ccall f_9236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9251)
static void C_ccall f_9251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9243)
static void C_ccall f_9243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9207)
static void C_ccall f_9207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9211)
static void C_ccall f_9211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9172)
static void C_ccall f_9172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9176)
static void C_ccall f_9176(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9035)
static void C_fcall f_9035(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9136)
static void C_ccall f_9136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9151)
static void C_ccall f_9151(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9143)
static void C_ccall f_9143(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9107)
static void C_ccall f_9107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9111)
static void C_ccall f_9111(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9072)
static void C_ccall f_9072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9076)
static void C_ccall f_9076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9038)
static void C_fcall f_9038(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9041)
static void C_ccall f_9041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9044)
static void C_fcall f_9044(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8989)
static void C_ccall f_8989(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8989)
static void C_ccall f_8989r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_9018)
static void C_ccall f_9018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9003)
static void C_ccall f_9003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8934)
static void C_ccall f_8934(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8945)
static void C_ccall f_8945(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8947)
static void C_fcall f_8947(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8975)
static void C_ccall f_8975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8835)
static void C_ccall f_8835(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8835)
static void C_ccall f_8835r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8839)
static void C_fcall f_8839(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8842)
static void C_ccall f_8842(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8907)
static void C_ccall f_8907(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8844)
static void C_fcall f_8844(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8860)
static void C_ccall f_8860(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8607)
static void C_ccall f_8607(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8607)
static void C_ccall f_8607r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8812)
static void C_ccall f_8812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8827)
static void C_ccall f_8827(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8819)
static void C_ccall f_8819(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8783)
static void C_ccall f_8783(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8787)
static void C_ccall f_8787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8748)
static void C_ccall f_8748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8752)
static void C_ccall f_8752(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8611)
static void C_fcall f_8611(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8712)
static void C_ccall f_8712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8727)
static void C_ccall f_8727(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8719)
static void C_ccall f_8719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8683)
static void C_ccall f_8683(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8687)
static void C_ccall f_8687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8648)
static void C_ccall f_8648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8652)
static void C_ccall f_8652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8614)
static void C_fcall f_8614(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8617)
static void C_ccall f_8617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8627)
static void C_ccall f_8627(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8564)
static void C_ccall f_8564(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8564)
static void C_ccall f_8564r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8597)
static void C_ccall f_8597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8582)
static void C_ccall f_8582(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8543)
static void C_ccall f_8543(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8508)
static void C_ccall f_8508(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_8508)
static void C_ccall f_8508r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_8512)
static void C_fcall f_8512(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8400)
static void C_ccall f_8400(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_8400)
static void C_ccall f_8400r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_8487)
static void C_ccall f_8487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8407)
static void C_fcall f_8407(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8416)
static void C_fcall f_8416(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_8463)
static void C_ccall f_8463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8429)
static void C_fcall f_8429(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8455)
static void C_ccall f_8455(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8267)
static void C_ccall f_8267(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_8267)
static void C_ccall f_8267r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_8271)
static void C_fcall f_8271(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8274)
static void C_fcall f_8274(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8378)
static void C_ccall f_8378(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8276)
static void C_fcall f_8276(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8283)
static void C_ccall f_8283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8325)
static void C_ccall f_8325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8332)
static void C_ccall f_8332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8306)
static void C_ccall f_8306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8200)
static void C_ccall f_8200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...) C_noret;
C_noret_decl(f_8200)
static void C_ccall f_8200r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t6) C_noret;
C_noret_decl(f_8204)
static void C_fcall f_8204(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8250)
static void C_ccall f_8250(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8207)
static void C_fcall f_8207(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8243)
static void C_ccall f_8243(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8210)
static void C_fcall f_8210(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8223)
static void C_ccall f_8223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8154)
static void C_ccall f_8154(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_8154)
static void C_ccall f_8154r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8158)
static void C_ccall f_8158(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8068)
static void C_fcall f_8068(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8072)
static void C_ccall f_8072(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8075)
static void C_ccall f_8075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8084)
static void C_fcall f_8084(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8106)
static void C_ccall f_8106(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8053)
static void C_ccall f_8053(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8038)
static void C_ccall f_8038(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7802)
static void C_ccall f_7802(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7802)
static void C_ccall f_7802r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_8015)
static void C_ccall f_8015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8030)
static void C_ccall f_8030(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8022)
static void C_ccall f_8022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7986)
static void C_ccall f_7986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7990)
static void C_ccall f_7990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7951)
static void C_ccall f_7951(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7955)
static void C_ccall f_7955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7806)
static void C_fcall f_7806(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7915)
static void C_ccall f_7915(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7930)
static void C_ccall f_7930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7922)
static void C_ccall f_7922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7886)
static void C_ccall f_7886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7890)
static void C_ccall f_7890(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7851)
static void C_ccall f_7851(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7855)
static void C_ccall f_7855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7809)
static void C_fcall f_7809(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7812)
static void C_ccall f_7812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7823)
static void C_ccall f_7823(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7762)
static void C_ccall f_7762(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7766)
static void C_ccall f_7766(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7796)
static void C_ccall f_7796(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7777)
static void C_ccall f_7777(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7785)
static void C_ccall f_7785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7741)
static void C_ccall f_7741(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7753)
static void C_ccall f_7753(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7715)
static void C_ccall f_7715(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7715)
static void C_ccall f_7715r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7673)
static void C_ccall f_7673(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7673)
static void C_ccall f_7673r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7658)
static void C_ccall f_7658(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7547)
static void C_ccall f_7547(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_7547)
static void C_ccall f_7547r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_7622)
static void C_ccall f_7622(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7551)
static void C_fcall f_7551(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7591)
static void C_ccall f_7591(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7580)
static void C_ccall f_7580(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7565)
static void C_ccall f_7565(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7573)
static void C_ccall f_7573(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7513)
static void C_ccall f_7513(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_7513)
static void C_ccall f_7513r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_7525)
static void C_ccall f_7525(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7494)
static void C_ccall f_7494(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7491)
static void C_ccall f_7491(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7484)
static void C_fcall f_7484(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7481)
static void C_ccall f_7481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7474)
static void C_fcall f_7474(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7456)
static void C_fcall f_7456(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7445)
static void C_fcall f_7445(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7442)
static void C_ccall f_7442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7439)
static void C_ccall f_7439(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7436)
static void C_ccall f_7436(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7407)
static void C_fcall f_7407(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7400)
static void C_fcall f_7400(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7397)
static void C_ccall f_7397(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7376)
static void C_fcall f_7376(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7357)
static void C_ccall f_7357(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7338)
static void C_ccall f_7338(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7331)
static void C_ccall f_7331(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7324)
static void C_ccall f_7324(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7309)
static void C_fcall f_7309(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7298)
static void C_fcall f_7298(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7280)
static void C_ccall f_7280(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7253)
static void C_fcall f_7253(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7226)
static void C_fcall f_7226(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_7185)
static void C_fcall f_7185(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7191)
static void C_fcall f_7191(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7201)
static void C_fcall f_7201(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7099)
static void C_ccall f_7099(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_7099)
static void C_ccall f_7099r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_7000)
static void C_ccall f_7000(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_7000)
static void C_ccall f_7000r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_7004)
static void C_ccall f_7004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7029)
static void C_fcall f_7029(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7046)
static void C_ccall f_7046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7050)
static void C_ccall f_7050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7006)
static void C_fcall f_7006(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7023)
static void C_ccall f_7023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6939)
static void C_ccall f_6939(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6952)
static void C_fcall f_6952(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6929)
static void C_ccall f_6929(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6889)
static void C_ccall f_6889(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6889)
static void C_ccall f_6889r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6919)
static void C_ccall f_6919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6751)
static void C_ccall f_6751(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6785)
static void C_ccall f_6785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6728)
static void C_ccall f_6728(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6722)
static void C_ccall f_6722(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6707)
static void C_ccall f_6707(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6693)
static void C_ccall f_6693(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6683)
static void C_ccall f_6683(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6673)
static void C_ccall f_6673(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6663)
static void C_ccall f_6663(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6653)
static void C_ccall f_6653(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6624)
static void C_ccall f_6624(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_6624)
static void C_ccall f_6624r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_6633)
static void C_ccall f_6633(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6638)
static void C_ccall f_6638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6613)
static void C_ccall f_6613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6618)
static void C_ccall f_6618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6320)
static void C_ccall f_6320(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6330)
static void C_ccall f_6330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6581)
static void C_ccall f_6581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6333)
static void C_ccall f_6333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6336)
static void C_ccall f_6336(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6351)
static void C_fcall f_6351(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6361)
static void C_ccall f_6361(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6363)
static void C_fcall f_6363(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_6422)
static void C_ccall f_6422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6432)
static void C_ccall f_6432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6549)
static void C_ccall f_6549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6537)
static void C_ccall f_6537(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6535)
static void C_ccall f_6535(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6522)
static void C_ccall f_6522(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6476)
static void C_ccall f_6476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6503)
static void C_ccall f_6503(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6482)
static void C_ccall f_6482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6416)
static void C_fcall f_6416(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6375)
static void C_fcall f_6375(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6388)
static void C_fcall f_6388(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6598)
static void C_ccall f_6598(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6589)
static void C_ccall f_6589(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6597)
static void C_ccall f_6597(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6600)
static void C_ccall f_6600(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_6600)
static void C_ccall f_6600r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_6608)
static void C_ccall f_6608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6022)
static void C_ccall f_6022(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6275)
static void C_ccall f_6275(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6308)
static void C_ccall f_6308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6304)
static void C_ccall f_6304(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6293)
static void C_ccall f_6293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6289)
static void C_ccall f_6289(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6183)
static void C_ccall f_6183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6186)
static void C_ccall f_6186(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6189)
static void C_ccall f_6189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6269)
static void C_ccall f_6269(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6094)
static void C_ccall f_6094(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6035)
static void C_ccall f_6035(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6192)
static void C_ccall f_6192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6199)
static void C_ccall f_6199(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6259)
static void C_ccall f_6259(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6245)
static void C_ccall f_6245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6211)
static void C_ccall f_6211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6237)
static void C_ccall f_6237(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6172)
static void C_ccall f_6172(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6219)
static void C_ccall f_6219(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6215)
static void C_ccall f_6215(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_37576)
static void C_fcall trf_37576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37576(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37576(t0,t1,t2);}

C_noret_decl(trf_37636)
static void C_fcall trf_37636(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37636(void *dummy){
C_word t13=C_pick(0);
C_word t12=C_pick(1);
C_word t11=C_pick(2);
C_word t10=C_pick(3);
C_word t9=C_pick(4);
C_word t8=C_pick(5);
C_word t7=C_pick(6);
C_word t6=C_pick(7);
C_word t5=C_pick(8);
C_word t4=C_pick(9);
C_word t3=C_pick(10);
C_word t2=C_pick(11);
C_word t1=C_pick(12);
C_word t0=C_pick(13);
C_adjust_stack(-14);
f_37636(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}

C_noret_decl(trf_37656)
static void C_fcall trf_37656(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37656(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37656(t0,t1);}

C_noret_decl(trf_37659)
static void C_fcall trf_37659(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37659(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37659(t0,t1);}

C_noret_decl(trf_37520)
static void C_fcall trf_37520(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37520(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37520(t0,t1);}

C_noret_decl(trf_37442)
static void C_fcall trf_37442(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37442(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_37442(t0,t1,t2);}

C_noret_decl(trf_37254)
static void C_fcall trf_37254(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_37254(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_37254(t0,t1);}

C_noret_decl(trf_36136)
static void C_fcall trf_36136(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36136(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_36136(t0,t1);}

C_noret_decl(trf_36009)
static void C_fcall trf_36009(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_36009(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_36009(t0,t1,t2);}

C_noret_decl(trf_35693)
static void C_fcall trf_35693(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_35693(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_35693(t0,t1);}

C_noret_decl(trf_34788)
static void C_fcall trf_34788(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34788(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_34788(t0,t1,t2);}

C_noret_decl(trf_34823)
static void C_fcall trf_34823(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34823(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34823(t0,t1);}

C_noret_decl(trf_34847)
static void C_fcall trf_34847(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34847(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34847(t0,t1);}

C_noret_decl(trf_34826)
static void C_fcall trf_34826(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34826(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34826(t0,t1);}

C_noret_decl(trf_34629)
static void C_fcall trf_34629(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34629(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34629(t0,t1);}

C_noret_decl(trf_34447)
static void C_fcall trf_34447(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34447(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34447(t0,t1);}

C_noret_decl(trf_34454)
static void C_fcall trf_34454(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34454(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34454(t0,t1);}

C_noret_decl(trf_34435)
static void C_fcall trf_34435(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_34435(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_34435(t0,t1);}

C_noret_decl(trf_22347)
static void C_fcall trf_22347(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22347(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22347(t0,t1);}

C_noret_decl(trf_22354)
static void C_fcall trf_22354(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22354(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22354(t0,t1);}

C_noret_decl(trf_22652)
static void C_fcall trf_22652(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22652(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22652(t0,t1,t2);}

C_noret_decl(trf_22675)
static void C_fcall trf_22675(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22675(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22675(t0,t1,t2);}

C_noret_decl(trf_22692)
static void C_fcall trf_22692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22692(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22692(t0,t1);}

C_noret_decl(trf_22695)
static void C_fcall trf_22695(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22695(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22695(t0,t1);}

C_noret_decl(trf_22698)
static void C_fcall trf_22698(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22698(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22698(t0,t1);}

C_noret_decl(trf_22616)
static void C_fcall trf_22616(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22616(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22616(t0,t1,t2);}

C_noret_decl(trf_22560)
static void C_fcall trf_22560(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22560(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22560(t0,t1,t2);}

C_noret_decl(trf_22576)
static void C_fcall trf_22576(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22576(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22576(t0,t1);}

C_noret_decl(trf_22370)
static void C_fcall trf_22370(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22370(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22370(t0,t1);}

C_noret_decl(trf_22373)
static void C_fcall trf_22373(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22373(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22373(t0,t1);}

C_noret_decl(trf_33944)
static void C_fcall trf_33944(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33944(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33944(t0,t1);}

C_noret_decl(trf_33947)
static void C_fcall trf_33947(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33947(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33947(t0,t1);}

C_noret_decl(trf_33790)
static void C_fcall trf_33790(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33790(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33790(t0,t1);}

C_noret_decl(trf_33598)
static void C_fcall trf_33598(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33598(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33598(t0,t1);}

C_noret_decl(trf_33448)
static void C_fcall trf_33448(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33448(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33448(t0,t1);}

C_noret_decl(trf_33537)
static void C_fcall trf_33537(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33537(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33537(t0,t1);}

C_noret_decl(trf_33451)
static void C_fcall trf_33451(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33451(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33451(t0,t1);}

C_noret_decl(trf_33467)
static void C_fcall trf_33467(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33467(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_33467(t0,t1,t2,t3);}

C_noret_decl(trf_33489)
static void C_fcall trf_33489(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33489(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33489(t0,t1);}

C_noret_decl(trf_33384)
static void C_fcall trf_33384(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33384(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_33384(t0,t1,t2);}

C_noret_decl(trf_33331)
static void C_fcall trf_33331(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_33331(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_33331(t0,t1);}

C_noret_decl(trf_26767)
static void C_fcall trf_26767(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26767(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26767(t0,t1);}

C_noret_decl(trf_26629)
static void C_fcall trf_26629(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26629(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26629(t0,t1);}

C_noret_decl(trf_26843)
static void C_fcall trf_26843(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26843(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26843(t0,t1);}

C_noret_decl(trf_32935)
static void C_fcall trf_32935(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32935(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32935(t0,t1,t2);}

C_noret_decl(trf_32963)
static void C_fcall trf_32963(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32963(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32963(t0,t1);}

C_noret_decl(trf_32666)
static void C_fcall trf_32666(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32666(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32666(t0,t1);}

C_noret_decl(trf_32830)
static void C_fcall trf_32830(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32830(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32830(t0,t1);}

C_noret_decl(trf_32679)
static void C_fcall trf_32679(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32679(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32679(t0,t1);}

C_noret_decl(trf_32914)
static void C_fcall trf_32914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32914(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32914(t0,t1);}

C_noret_decl(trf_32604)
static void C_fcall trf_32604(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32604(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32604(t0,t1,t2);}

C_noret_decl(trf_32545)
static void C_fcall trf_32545(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32545(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32545(t0,t1);}

C_noret_decl(trf_32481)
static void C_fcall trf_32481(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32481(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32481(t0,t1,t2);}

C_noret_decl(trf_32401)
static void C_fcall trf_32401(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32401(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32401(t0,t1);}

C_noret_decl(trf_32327)
static void C_fcall trf_32327(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32327(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32327(t0,t1);}

C_noret_decl(trf_32322)
static void C_fcall trf_32322(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32322(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32322(t0,t1,t2);}

C_noret_decl(trf_32202)
static void C_fcall trf_32202(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32202(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_32202(t0,t1,t2,t3);}

C_noret_decl(trf_32273)
static void C_fcall trf_32273(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32273(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_32273(t0,t1,t2);}

C_noret_decl(trf_32232)
static void C_fcall trf_32232(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32232(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32232(t0,t1);}

C_noret_decl(trf_32204)
static void C_fcall trf_32204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32204(t0,t1);}

C_noret_decl(trf_32159)
static void C_fcall trf_32159(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32159(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32159(t0,t1);}

C_noret_decl(trf_32115)
static void C_fcall trf_32115(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32115(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_32115(t0,t1,t2,t3);}

C_noret_decl(trf_32106)
static void C_fcall trf_32106(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32106(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32106(t0,t1);}

C_noret_decl(trf_31936)
static void C_fcall trf_31936(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31936(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_31936(t0,t1,t2,t3,t4);}

C_noret_decl(trf_31965)
static void C_fcall trf_31965(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31965(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_31965(t0,t1,t2);}

C_noret_decl(trf_32002)
static void C_fcall trf_32002(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_32002(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_32002(t0,t1);}

C_noret_decl(trf_31832)
static void C_fcall trf_31832(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31832(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31832(t0,t1);}

C_noret_decl(trf_31812)
static void C_fcall trf_31812(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31812(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31812(t0,t1);}

C_noret_decl(trf_31775)
static void C_fcall trf_31775(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31775(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31775(t0,t1);}

C_noret_decl(trf_31755)
static void C_fcall trf_31755(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_31755(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_31755(t0,t1);}

C_noret_decl(trf_30590)
static void C_fcall trf_30590(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30590(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30590(t0,t1);}

C_noret_decl(trf_30593)
static void C_fcall trf_30593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30593(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30593(t0,t1);}

C_noret_decl(trf_30596)
static void C_fcall trf_30596(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30596(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30596(t0,t1);}

C_noret_decl(trf_30120)
static void C_fcall trf_30120(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30120(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30120(t0,t1);}

C_noret_decl(trf_30123)
static void C_fcall trf_30123(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30123(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30123(t0,t1);}

C_noret_decl(trf_30126)
static void C_fcall trf_30126(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_30126(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_30126(t0,t1);}

C_noret_decl(trf_29650)
static void C_fcall trf_29650(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29650(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29650(t0,t1);}

C_noret_decl(trf_29653)
static void C_fcall trf_29653(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29653(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29653(t0,t1);}

C_noret_decl(trf_29656)
static void C_fcall trf_29656(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_29656(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_29656(t0,t1);}

C_noret_decl(trf_28902)
static void C_fcall trf_28902(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28902(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28902(t0,t1);}

C_noret_decl(trf_28905)
static void C_fcall trf_28905(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28905(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28905(t0,t1);}

C_noret_decl(trf_28908)
static void C_fcall trf_28908(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28908(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28908(t0,t1);}

C_noret_decl(trf_28911)
static void C_fcall trf_28911(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28911(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28911(t0,t1);}

C_noret_decl(trf_28154)
static void C_fcall trf_28154(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28154(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28154(t0,t1);}

C_noret_decl(trf_28157)
static void C_fcall trf_28157(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28157(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28157(t0,t1);}

C_noret_decl(trf_28160)
static void C_fcall trf_28160(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28160(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28160(t0,t1);}

C_noret_decl(trf_28163)
static void C_fcall trf_28163(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_28163(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_28163(t0,t1);}

C_noret_decl(trf_27684)
static void C_fcall trf_27684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27684(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27684(t0,t1);}

C_noret_decl(trf_27687)
static void C_fcall trf_27687(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27687(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27687(t0,t1);}

C_noret_decl(trf_27690)
static void C_fcall trf_27690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_27690(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_27690(t0,t1);}

C_noret_decl(trf_26936)
static void C_fcall trf_26936(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26936(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26936(t0,t1);}

C_noret_decl(trf_26939)
static void C_fcall trf_26939(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26939(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26939(t0,t1);}

C_noret_decl(trf_26942)
static void C_fcall trf_26942(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26942(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26942(t0,t1);}

C_noret_decl(trf_26945)
static void C_fcall trf_26945(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26945(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26945(t0,t1);}

C_noret_decl(trf_26594)
static void C_fcall trf_26594(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26594(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26594(t0,t1,t2,t3);}

C_noret_decl(trf_26434)
static void C_fcall trf_26434(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26434(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26434(t0,t1);}

C_noret_decl(trf_26469)
static void C_fcall trf_26469(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26469(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_26469(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_26479)
static void C_fcall trf_26479(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26479(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26479(t0,t1);}

C_noret_decl(trf_26442)
static void C_fcall trf_26442(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26442(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_26442(t0,t1,t2);}

C_noret_decl(trf_26602)
static void C_fcall trf_26602(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26602(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26602(t0,t1);}

C_noret_decl(trf_26220)
static void C_fcall trf_26220(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26220(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26220(t0,t1);}

C_noret_decl(trf_26226)
static void C_fcall trf_26226(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26226(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26226(t0,t1);}

C_noret_decl(trf_26249)
static void C_fcall trf_26249(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26249(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26249(t0,t1);}

C_noret_decl(trf_26262)
static void C_fcall trf_26262(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26262(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26262(t0,t1);}

C_noret_decl(trf_26236)
static void C_fcall trf_26236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26236(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26236(t0,t1);}

C_noret_decl(trf_26049)
static void C_fcall trf_26049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26049(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_26049(t0,t1,t2,t3);}

C_noret_decl(trf_26058)
static void C_fcall trf_26058(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26058(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_26058(t0,t1,t2,t3,t4);}

C_noret_decl(trf_26012)
static void C_fcall trf_26012(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_26012(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_26012(t0,t1);}

C_noret_decl(trf_25875)
static void C_fcall trf_25875(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25875(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25875(t0,t1);}

C_noret_decl(trf_25805)
static void C_fcall trf_25805(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25805(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25805(t0,t1);}

C_noret_decl(trf_25166)
static void C_fcall trf_25166(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25166(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25166(t0,t1,t2);}

C_noret_decl(trf_25126)
static void C_fcall trf_25126(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25126(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_25126(t0,t1,t2);}

C_noret_decl(trf_25139)
static void C_fcall trf_25139(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25139(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25139(t0,t1);}

C_noret_decl(trf_25718)
static void C_fcall trf_25718(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25718(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25718(t0,t1);}

C_noret_decl(trf_25508)
static void C_fcall trf_25508(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25508(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25508(t0,t1);}

C_noret_decl(trf_25624)
static void C_fcall trf_25624(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25624(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25624(t0,t1);}

C_noret_decl(trf_25511)
static void C_fcall trf_25511(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25511(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25511(t0,t1);}

C_noret_decl(trf_25514)
static void C_fcall trf_25514(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25514(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25514(t0,t1);}

C_noret_decl(trf_25419)
static void C_fcall trf_25419(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25419(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25419(t0,t1);}

C_noret_decl(trf_25334)
static void C_fcall trf_25334(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25334(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25334(t0,t1);}

C_noret_decl(trf_25291)
static void C_fcall trf_25291(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25291(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25291(t0,t1);}

C_noret_decl(trf_25258)
static void C_fcall trf_25258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25258(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25258(t0,t1);}

C_noret_decl(trf_25253)
static void C_fcall trf_25253(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25253(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_25253(t0,t1);}

C_noret_decl(trf_25248)
static void C_fcall trf_25248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_25248(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_25248(t0,t1,t2,t3,t4);}

C_noret_decl(trf_24995)
static void C_fcall trf_24995(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24995(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24995(t0,t1);}

C_noret_decl(trf_24842)
static void C_fcall trf_24842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24842(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_24842(t0,t1,t2,t3);}

C_noret_decl(trf_24688)
static void C_fcall trf_24688(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24688(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24688(t0,t1,t2);}

C_noret_decl(trf_24530)
static void C_fcall trf_24530(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24530(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24530(t0,t1,t2);}

C_noret_decl(trf_24563)
static void C_fcall trf_24563(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24563(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24563(t0,t1);}

C_noret_decl(trf_24470)
static void C_fcall trf_24470(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24470(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24470(t0,t1);}

C_noret_decl(trf_24435)
static void C_fcall trf_24435(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24435(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24435(t0,t1);}

C_noret_decl(trf_24451)
static void C_fcall trf_24451(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24451(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24451(t0,t1);}

C_noret_decl(trf_24406)
static void C_fcall trf_24406(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24406(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24406(t0,t1);}

C_noret_decl(trf_24313)
static void C_fcall trf_24313(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24313(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24313(t0,t1);}

C_noret_decl(trf_24069)
static void C_fcall trf_24069(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24069(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_24069(t0,t1,t2);}

C_noret_decl(trf_23873)
static void C_fcall trf_23873(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23873(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23873(t0,t1);}

C_noret_decl(trf_24036)
static void C_fcall trf_24036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_24036(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_24036(t0,t1);}

C_noret_decl(trf_23876)
static void C_fcall trf_23876(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23876(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23876(t0,t1);}

C_noret_decl(trf_23879)
static void C_fcall trf_23879(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23879(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23879(t0,t1);}

C_noret_decl(trf_23882)
static void C_fcall trf_23882(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23882(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23882(t0,t1);}

C_noret_decl(trf_23924)
static void C_fcall trf_23924(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23924(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23924(t0,t1);}

C_noret_decl(trf_23889)
static void C_fcall trf_23889(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23889(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23889(t0,t1);}

C_noret_decl(trf_23618)
static void C_fcall trf_23618(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23618(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23618(t0,t1,t2,t3);}

C_noret_decl(trf_23626)
static void C_fcall trf_23626(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23626(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23626(t0,t1,t2,t3);}

C_noret_decl(trf_23755)
static void C_fcall trf_23755(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23755(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23755(t0,t1,t2);}

C_noret_decl(trf_23709)
static void C_fcall trf_23709(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23709(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23709(t0,t1,t2);}

C_noret_decl(trf_23612)
static void C_fcall trf_23612(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23612(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23612(t0,t1,t2);}

C_noret_decl(trf_23606)
static void C_fcall trf_23606(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23606(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23606(t0,t1);}

C_noret_decl(trf_23600)
static void C_fcall trf_23600(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23600(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23600(t0,t1,t2);}

C_noret_decl(trf_23529)
static void C_fcall trf_23529(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23529(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23529(t0,t1,t2);}

C_noret_decl(trf_23531)
static void C_fcall trf_23531(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23531(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23531(t0,t1,t2);}

C_noret_decl(trf_23537)
static void C_fcall trf_23537(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23537(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23537(t0,t1,t2);}

C_noret_decl(trf_23378)
static void C_fcall trf_23378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23378(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23378(t0,t1);}

C_noret_decl(trf_23393)
static void C_fcall trf_23393(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23393(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23393(t0,t1,t2);}

C_noret_decl(trf_23336)
static void C_fcall trf_23336(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23336(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23336(t0,t1,t2);}

C_noret_decl(trf_23276)
static void C_fcall trf_23276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23276(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23276(t0,t1,t2);}

C_noret_decl(trf_23152)
static void C_fcall trf_23152(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23152(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23152(t0,t1,t2);}

C_noret_decl(trf_23028)
static void C_fcall trf_23028(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23028(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_23028(t0,t1,t2,t3);}

C_noret_decl(trf_23064)
static void C_fcall trf_23064(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23064(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_23064(t0,t1,t2);}

C_noret_decl(trf_22860)
static void C_fcall trf_22860(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22860(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22860(t0,t1);}

C_noret_decl(trf_20692)
static void C_fcall trf_20692(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20692(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20692(t0,t1);}

C_noret_decl(trf_22994)
static void C_fcall trf_22994(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22994(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22994(t0,t1,t2);}

C_noret_decl(trf_23004)
static void C_fcall trf_23004(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_23004(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_23004(t0,t1);}

C_noret_decl(trf_22964)
static void C_fcall trf_22964(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22964(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_22964(t0,t1,t2);}

C_noret_decl(trf_22974)
static void C_fcall trf_22974(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22974(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22974(t0,t1);}

C_noret_decl(trf_22034)
static void C_fcall trf_22034(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22034(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22034(t0,t1);}

C_noret_decl(trf_22037)
static void C_fcall trf_22037(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22037(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22037(t0,t1);}

C_noret_decl(trf_22040)
static void C_fcall trf_22040(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22040(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22040(t0,t1);}

C_noret_decl(trf_22043)
static void C_fcall trf_22043(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22043(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22043(t0,t1);}

C_noret_decl(trf_22046)
static void C_fcall trf_22046(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22046(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22046(t0,t1);}

C_noret_decl(trf_22049)
static void C_fcall trf_22049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_22049(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_22049(t0,t1);}

C_noret_decl(trf_21877)
static void C_fcall trf_21877(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21877(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21877(t0,t1);}

C_noret_decl(trf_21806)
static void C_fcall trf_21806(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21806(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21806(t0,t1);}

C_noret_decl(trf_21621)
static void C_fcall trf_21621(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21621(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21621(t0,t1);}

C_noret_decl(trf_21633)
static void C_fcall trf_21633(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21633(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21633(t0,t1);}

C_noret_decl(trf_21670)
static void C_fcall trf_21670(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21670(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_21670(t0,t1,t2,t3,t4);}

C_noret_decl(trf_21705)
static void C_fcall trf_21705(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21705(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21705(t0,t1);}

C_noret_decl(trf_21600)
static void C_fcall trf_21600(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21600(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21600(t0,t1);}

C_noret_decl(trf_21535)
static void C_fcall trf_21535(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21535(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21535(t0,t1,t2);}

C_noret_decl(trf_21544)
static void C_fcall trf_21544(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21544(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21544(t0,t1,t2);}

C_noret_decl(trf_21557)
static void C_fcall trf_21557(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21557(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21557(t0,t1);}

C_noret_decl(trf_21491)
static void C_fcall trf_21491(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21491(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_21491(t0,t1,t2);}

C_noret_decl(trf_21479)
static void C_fcall trf_21479(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21479(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21479(t0,t1);}

C_noret_decl(trf_21377)
static void C_fcall trf_21377(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21377(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21377(t0,t1);}

C_noret_decl(trf_21329)
static void C_fcall trf_21329(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21329(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21329(t0,t1);}

C_noret_decl(trf_20710)
static void C_fcall trf_20710(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20710(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_20710(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_20720)
static void C_fcall trf_20720(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20720(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20720(t0,t1);}

C_noret_decl(trf_20849)
static void C_fcall trf_20849(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20849(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20849(t0,t1);}

C_noret_decl(trf_20937)
static void C_fcall trf_20937(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20937(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20937(t0,t1);}

C_noret_decl(trf_21010)
static void C_fcall trf_21010(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21010(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21010(t0,t1);}

C_noret_decl(trf_21088)
static void C_fcall trf_21088(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21088(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21088(t0,t1);}

C_noret_decl(trf_21039)
static void C_fcall trf_21039(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21039(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21039(t0,t1);}

C_noret_decl(trf_21055)
static void C_fcall trf_21055(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21055(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21055(t0,t1);}

C_noret_decl(trf_21019)
static void C_fcall trf_21019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_21019(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_21019(t0,t1);}

C_noret_decl(trf_20961)
static void C_fcall trf_20961(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20961(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20961(t0,t1,t2);}

C_noret_decl(trf_20880)
static void C_fcall trf_20880(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20880(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20880(t0,t1,t2);}

C_noret_decl(trf_20896)
static void C_fcall trf_20896(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20896(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20896(t0,t1);}

C_noret_decl(trf_20864)
static void C_fcall trf_20864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20864(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20864(t0,t1);}

C_noret_decl(trf_20606)
static void C_fcall trf_20606(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20606(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20606(t0,t1);}

C_noret_decl(trf_20615)
static void C_fcall trf_20615(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20615(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20615(t0,t1);}

C_noret_decl(trf_20620)
static void C_fcall trf_20620(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20620(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20620(t0,t1,t2);}

C_noret_decl(trf_20598)
static void C_fcall trf_20598(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20598(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20598(t0,t1);}

C_noret_decl(trf_20390)
static void C_fcall trf_20390(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20390(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20390(t0,t1,t2,t3);}

C_noret_decl(trf_20357)
static void C_fcall trf_20357(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20357(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20357(t0,t1,t2,t3);}

C_noret_decl(trf_20339)
static void C_fcall trf_20339(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20339(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20339(t0,t1,t2,t3);}

C_noret_decl(trf_20329)
static void C_fcall trf_20329(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20329(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20329(t0,t1,t2,t3);}

C_noret_decl(trf_20317)
static void C_fcall trf_20317(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20317(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20317(t0,t1,t2);}

C_noret_decl(trf_20285)
static void C_fcall trf_20285(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20285(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20285(t0,t1,t2);}

C_noret_decl(trf_20269)
static void C_fcall trf_20269(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20269(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20269(t0,t1);}

C_noret_decl(trf_20257)
static void C_fcall trf_20257(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20257(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20257(t0,t1);}

C_noret_decl(trf_20239)
static void C_fcall trf_20239(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20239(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20239(t0,t1);}

C_noret_decl(trf_20221)
static void C_fcall trf_20221(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20221(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20221(t0,t1);}

C_noret_decl(trf_20206)
static void C_fcall trf_20206(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20206(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20206(t0,t1);}

C_noret_decl(trf_20200)
static void C_fcall trf_20200(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20200(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_20200(t0,t1,t2,t3);}

C_noret_decl(trf_20188)
static void C_fcall trf_20188(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20188(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20188(t0,t1);}

C_noret_decl(trf_20170)
static void C_fcall trf_20170(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20170(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20170(t0,t1);}

C_noret_decl(trf_20149)
static void C_fcall trf_20149(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20149(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20149(t0,t1,t2);}

C_noret_decl(trf_20117)
static void C_fcall trf_20117(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20117(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20117(t0,t1);}

C_noret_decl(trf_20059)
static void C_fcall trf_20059(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20059(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20059(t0,t1,t2);}

C_noret_decl(trf_20049)
static void C_fcall trf_20049(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20049(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20049(t0,t1);}

C_noret_decl(trf_20043)
static void C_fcall trf_20043(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20043(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20043(t0,t1);}

C_noret_decl(trf_20031)
static void C_fcall trf_20031(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20031(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_20031(t0,t1);}

C_noret_decl(trf_20007)
static void C_fcall trf_20007(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_20007(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_20007(t0,t1,t2);}

C_noret_decl(trf_19920)
static void C_fcall trf_19920(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19920(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19920(t0,t1);}

C_noret_decl(trf_19899)
static void C_fcall trf_19899(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19899(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_19899(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_19889)
static void C_fcall trf_19889(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19889(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19889(t0,t1);}

C_noret_decl(trf_19877)
static void C_fcall trf_19877(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19877(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19877(t0,t1);}

C_noret_decl(trf_19836)
static void C_fcall trf_19836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19836(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19836(t0,t1);}

C_noret_decl(trf_19818)
static void C_fcall trf_19818(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19818(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19818(t0,t1);}

C_noret_decl(trf_19800)
static void C_fcall trf_19800(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19800(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19800(t0,t1);}

C_noret_decl(trf_18767)
static void C_fcall trf_18767(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18767(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18767(t0,t1);}

C_noret_decl(trf_18770)
static void C_fcall trf_18770(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18770(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18770(t0,t1);}

C_noret_decl(trf_19485)
static void C_fcall trf_19485(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19485(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19485(t0,t1,t2);}

C_noret_decl(trf_19508)
static void C_fcall trf_19508(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19508(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_19508(t0,t1,t2,t3,t4);}

C_noret_decl(trf_19543)
static void C_fcall trf_19543(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19543(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19543(t0,t1);}

C_noret_decl(trf_19447)
static void C_fcall trf_19447(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19447(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_19447(t0,t1);}

C_noret_decl(trf_18975)
static void C_fcall trf_18975(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18975(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18975(t0,t1);}

C_noret_decl(trf_19318)
static void C_fcall trf_19318(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19318(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19318(t0,t1,t2,t3);}

C_noret_decl(trf_19404)
static void C_fcall trf_19404(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19404(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19404(t0,t1,t2,t3);}

C_noret_decl(trf_19361)
static void C_fcall trf_19361(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19361(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19361(t0,t1,t2);}

C_noret_decl(trf_19285)
static void C_fcall trf_19285(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19285(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19285(t0,t1,t2);}

C_noret_decl(trf_19223)
static void C_fcall trf_19223(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19223(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19223(t0,t1,t2);}

C_noret_decl(trf_19258)
static void C_fcall trf_19258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19258(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19258(t0,t1,t2,t3);}

C_noret_decl(trf_19043)
static void C_fcall trf_19043(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19043(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19043(t0,t1,t2);}

C_noret_decl(trf_18939)
static void C_fcall trf_18939(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18939(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18939(t0,t1,t2);}

C_noret_decl(trf_19196)
static void C_fcall trf_19196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19196(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19196(t0,t1,t2,t3);}

C_noret_decl(trf_19169)
static void C_fcall trf_19169(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19169(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19169(t0,t1,t2,t3);}

C_noret_decl(trf_19080)
static void C_fcall trf_19080(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19080(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_19080(t0,t1,t2);}

C_noret_decl(trf_19130)
static void C_fcall trf_19130(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_19130(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_19130(t0,t1,t2,t3);}

C_noret_decl(trf_18862)
static void C_fcall trf_18862(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18862(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_18862(t0,t1,t2,t3,t4);}

C_noret_decl(trf_18780)
static void C_fcall trf_18780(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18780(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_18780(t0,t1,t2,t3);}

C_noret_decl(trf_18701)
static void C_fcall trf_18701(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18701(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_18701(t0,t1,t2);}

C_noret_decl(trf_18726)
static void C_fcall trf_18726(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18726(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18726(t0,t1);}

C_noret_decl(trf_18429)
static void C_fcall trf_18429(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18429(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18429(t0,t1);}

C_noret_decl(trf_18432)
static void C_fcall trf_18432(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18432(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18432(t0,t1);}

C_noret_decl(trf_18438)
static void C_fcall trf_18438(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18438(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18438(t0,t1);}

C_noret_decl(trf_18152)
static void C_fcall trf_18152(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18152(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18152(t0,t1);}

C_noret_decl(trf_18155)
static void C_fcall trf_18155(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18155(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18155(t0,t1);}

C_noret_decl(trf_18082)
static void C_fcall trf_18082(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18082(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18082(t0,t1);}

C_noret_decl(trf_17930)
static void C_fcall trf_17930(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17930(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17930(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17855)
static void C_fcall trf_17855(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17855(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17855(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17865)
static void C_fcall trf_17865(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17865(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17865(t0,t1);}

C_noret_decl(trf_17872)
static void C_fcall trf_17872(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17872(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17872(t0,t1);}

C_noret_decl(trf_17967)
static void C_fcall trf_17967(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17967(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17967(t0,t1,t2);}

C_noret_decl(trf_17745)
static void C_fcall trf_17745(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17745(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_17745(t0,t1,t2,t3);}

C_noret_decl(trf_17757)
static void C_fcall trf_17757(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17757(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_17757(t0,t1,t2,t3,t4);}

C_noret_decl(trf_17818)
static void C_fcall trf_17818(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17818(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17818(t0,t1,t2);}

C_noret_decl(trf_17182)
static void C_fcall trf_17182(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17182(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_17182(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_17118)
static void C_fcall trf_17118(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17118(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17118(t0,t1);}

C_noret_decl(trf_17065)
static void C_fcall trf_17065(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17065(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17065(t0,t1);}

C_noret_decl(trf_17068)
static void C_fcall trf_17068(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17068(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17068(t0,t1);}

C_noret_decl(trf_17262)
static void C_fcall trf_17262(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17262(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17262(t0,t1);}

C_noret_decl(trf_17265)
static void C_fcall trf_17265(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17265(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17265(t0,t1);}

C_noret_decl(trf_17268)
static void C_fcall trf_17268(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17268(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17268(t0,t1);}

C_noret_decl(trf_17283)
static void C_fcall trf_17283(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17283(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17283(t0,t1);}

C_noret_decl(trf_16844)
static void C_fcall trf_16844(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16844(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16844(t0,t1);}

C_noret_decl(trf_16936)
static void C_fcall trf_16936(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16936(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16936(t0,t1,t2);}

C_noret_decl(trf_16955)
static void C_fcall trf_16955(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16955(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16955(t0,t1);}

C_noret_decl(trf_16909)
static void C_fcall trf_16909(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16909(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16909(t0,t1,t2);}

C_noret_decl(trf_16854)
static void C_fcall trf_16854(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16854(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16854(t0,t1,t2);}

C_noret_decl(trf_16864)
static void C_fcall trf_16864(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16864(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_16864(t0,t1,t2,t3);}

C_noret_decl(trf_16710)
static void C_fcall trf_16710(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16710(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16710(t0,t1,t2);}

C_noret_decl(trf_16779)
static void C_fcall trf_16779(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16779(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16779(t0,t1,t2);}

C_noret_decl(trf_16725)
static void C_fcall trf_16725(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16725(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_16725(t0,t1,t2,t3,t4);}

C_noret_decl(trf_16267)
static void C_fcall trf_16267(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16267(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16267(t0,t1);}

C_noret_decl(trf_16270)
static void C_fcall trf_16270(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16270(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16270(t0,t1);}

C_noret_decl(trf_16273)
static void C_fcall trf_16273(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16273(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16273(t0,t1);}

C_noret_decl(trf_16276)
static void C_fcall trf_16276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16276(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16276(t0,t1);}

C_noret_decl(trf_16240)
static void C_fcall trf_16240(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16240(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16240(t0,t1);}

C_noret_decl(trf_15963)
static void C_fcall trf_15963(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15963(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15963(t0,t1);}

C_noret_decl(trf_15966)
static void C_fcall trf_15966(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15966(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15966(t0,t1);}

C_noret_decl(trf_15969)
static void C_fcall trf_15969(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15969(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15969(t0,t1);}

C_noret_decl(trf_15860)
static void C_fcall trf_15860(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15860(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15860(t0,t1);}

C_noret_decl(trf_15851)
static void C_fcall trf_15851(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15851(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15851(t0,t1,t2);}

C_noret_decl(trf_15842)
static void C_fcall trf_15842(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15842(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15842(t0,t1);}

C_noret_decl(trf_15824)
static void C_fcall trf_15824(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15824(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15824(t0,t1);}

C_noret_decl(trf_15806)
static void C_fcall trf_15806(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15806(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15806(t0,t1);}

C_noret_decl(trf_15788)
static void C_fcall trf_15788(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15788(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15788(t0,t1);}

C_noret_decl(trf_15779)
static void C_fcall trf_15779(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15779(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15779(t0,t1,t2);}

C_noret_decl(trf_15770)
static void C_fcall trf_15770(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15770(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15770(t0,t1);}

C_noret_decl(trf_15601)
static void C_fcall trf_15601(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15601(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15601(t0,t1);}

C_noret_decl(trf_15557)
static void C_fcall trf_15557(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15557(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15557(t0,t1,t2);}

C_noret_decl(trf_15078)
static void C_fcall trf_15078(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15078(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15078(t0,t1);}

C_noret_decl(trf_15081)
static void C_fcall trf_15081(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15081(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15081(t0,t1);}

C_noret_decl(trf_15084)
static void C_fcall trf_15084(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15084(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15084(t0,t1);}

C_noret_decl(trf_15087)
static void C_fcall trf_15087(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15087(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15087(t0,t1);}

C_noret_decl(trf_15033)
static void C_fcall trf_15033(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15033(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_15033(t0,t1,t2,t3,t4);}

C_noret_decl(trf_14739)
static void C_fcall trf_14739(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14739(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14739(t0,t1);}

C_noret_decl(trf_14742)
static void C_fcall trf_14742(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14742(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14742(t0,t1);}

C_noret_decl(trf_14745)
static void C_fcall trf_14745(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14745(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14745(t0,t1);}

C_noret_decl(trf_14456)
static void C_fcall trf_14456(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14456(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14456(t0,t1);}

C_noret_decl(trf_14459)
static void C_fcall trf_14459(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14459(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14459(t0,t1);}

C_noret_decl(trf_14462)
static void C_fcall trf_14462(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14462(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14462(t0,t1);}

C_noret_decl(trf_14415)
static void C_fcall trf_14415(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14415(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14415(t0,t1);}

C_noret_decl(trf_14371)
static void C_fcall trf_14371(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14371(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14371(t0,t1);}

C_noret_decl(trf_14286)
static void C_fcall trf_14286(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14286(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14286(t0,t1);}

C_noret_decl(trf_13771)
static void C_fcall trf_13771(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13771(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13771(t0,t1);}

C_noret_decl(trf_13774)
static void C_fcall trf_13774(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13774(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13774(t0,t1);}

C_noret_decl(trf_13777)
static void C_fcall trf_13777(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13777(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13777(t0,t1);}

C_noret_decl(trf_13780)
static void C_fcall trf_13780(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13780(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13780(t0,t1);}

C_noret_decl(trf_13687)
static void C_fcall trf_13687(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13687(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13687(t0,t1,t2);}

C_noret_decl(trf_13678)
static void C_fcall trf_13678(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13678(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13678(t0,t1);}

C_noret_decl(trf_13613)
static void C_fcall trf_13613(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13613(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13613(t0,t1);}

C_noret_decl(trf_13355)
static void C_fcall trf_13355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13355(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13355(t0,t1);}

C_noret_decl(trf_13358)
static void C_fcall trf_13358(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13358(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13358(t0,t1);}

C_noret_decl(trf_13361)
static void C_fcall trf_13361(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13361(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13361(t0,t1);}

C_noret_decl(trf_13236)
static void C_fcall trf_13236(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13236(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13236(t0,t1);}

C_noret_decl(trf_13260)
static void C_fcall trf_13260(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13260(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13260(t0,t1);}

C_noret_decl(trf_13190)
static void C_fcall trf_13190(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13190(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13190(t0,t1,t2);}

C_noret_decl(trf_13181)
static void C_fcall trf_13181(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13181(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13181(t0,t1);}

C_noret_decl(trf_12880)
static void C_fcall trf_12880(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12880(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12880(t0,t1);}

C_noret_decl(trf_13116)
static void C_fcall trf_13116(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13116(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13116(t0,t1);}

C_noret_decl(trf_13122)
static void C_fcall trf_13122(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13122(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13122(t0,t1);}

C_noret_decl(trf_13014)
static void C_fcall trf_13014(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13014(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13014(t0,t1);}

C_noret_decl(trf_13016)
static void C_fcall trf_13016(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13016(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_13016(t0,t1,t2,t3);}

C_noret_decl(trf_13065)
static void C_fcall trf_13065(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13065(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13065(t0,t1);}

C_noret_decl(trf_13030)
static void C_fcall trf_13030(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13030(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13030(t0,t1);}

C_noret_decl(trf_12914)
static void C_fcall trf_12914(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12914(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12914(t0,t1);}

C_noret_decl(trf_12828)
static void C_fcall trf_12828(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12828(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_12828(t0,t1,t2,t3,t4);}

C_noret_decl(trf_12847)
static void C_fcall trf_12847(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12847(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12847(t0,t1);}

C_noret_decl(trf_12778)
static void C_fcall trf_12778(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12778(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12778(t0,t1,t2,t3);}

C_noret_decl(trf_12539)
static void C_fcall trf_12539(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12539(void *dummy){
C_word t9=C_pick(0);
C_word t8=C_pick(1);
C_word t7=C_pick(2);
C_word t6=C_pick(3);
C_word t5=C_pick(4);
C_word t4=C_pick(5);
C_word t3=C_pick(6);
C_word t2=C_pick(7);
C_word t1=C_pick(8);
C_word t0=C_pick(9);
C_adjust_stack(-10);
f_12539(t0,t1,t2,t3,t4,t5,t6,t7,t8,t9);}

C_noret_decl(trf_12558)
static void C_fcall trf_12558(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12558(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12558(t0,t1);}

C_noret_decl(trf_12573)
static void C_fcall trf_12573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12573(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12573(t0,t1);}

C_noret_decl(trf_12582)
static void C_fcall trf_12582(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12582(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12582(t0,t1);}

C_noret_decl(trf_12529)
static void C_fcall trf_12529(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12529(void *dummy){
C_word t0=C_pick(0);
C_adjust_stack(-1);
f_12529(t0);}

C_noret_decl(trf_12474)
static void C_fcall trf_12474(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12474(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12474(t0,t1);}

C_noret_decl(trf_12465)
static void C_fcall trf_12465(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12465(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12465(t0,t1,t2);}

C_noret_decl(trf_12348)
static void C_fcall trf_12348(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12348(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12348(t0,t1);}

C_noret_decl(trf_12339)
static void C_fcall trf_12339(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12339(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12339(t0,t1,t2);}

C_noret_decl(trf_12321)
static void C_fcall trf_12321(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12321(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12321(t0,t1,t2);}

C_noret_decl(trf_12312)
static void C_fcall trf_12312(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12312(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12312(t0,t1);}

C_noret_decl(trf_12294)
static void C_fcall trf_12294(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12294(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12294(t0,t1);}

C_noret_decl(trf_12285)
static void C_fcall trf_12285(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12285(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12285(t0,t1,t2);}

C_noret_decl(trf_12276)
static void C_fcall trf_12276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12276(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12276(t0,t1);}

C_noret_decl(trf_12258)
static void C_fcall trf_12258(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12258(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12258(t0,t1);}

C_noret_decl(trf_12249)
static void C_fcall trf_12249(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12249(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12249(t0,t1,t2);}

C_noret_decl(trf_12240)
static void C_fcall trf_12240(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12240(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12240(t0,t1);}

C_noret_decl(trf_12225)
static void C_fcall trf_12225(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12225(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12225(t0,t1);}

C_noret_decl(trf_12180)
static void C_fcall trf_12180(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12180(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12180(t0,t1);}

C_noret_decl(trf_12162)
static void C_fcall trf_12162(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12162(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12162(t0,t1);}

C_noret_decl(trf_12153)
static void C_fcall trf_12153(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12153(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12153(t0,t1,t2);}

C_noret_decl(trf_12126)
static void C_fcall trf_12126(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12126(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12126(t0,t1);}

C_noret_decl(trf_12108)
static void C_fcall trf_12108(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12108(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12108(t0,t1);}

C_noret_decl(trf_12090)
static void C_fcall trf_12090(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12090(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12090(t0,t1);}

C_noret_decl(trf_12081)
static void C_fcall trf_12081(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12081(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12081(t0,t1,t2);}

C_noret_decl(trf_12069)
static void C_fcall trf_12069(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12069(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_12069(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_12004)
static void C_fcall trf_12004(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12004(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12004(t0,t1,t2,t3);}

C_noret_decl(trf_12022)
static void C_fcall trf_12022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12022(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12022(t0,t1);}

C_noret_decl(trf_11845)
static void C_fcall trf_11845(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11845(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_11845(t0,t1,t2,t3);}

C_noret_decl(trf_11934)
static void C_fcall trf_11934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11934(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11934(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11948)
static void C_fcall trf_11948(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11948(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11948(t0,t1);}

C_noret_decl(trf_11876)
static void C_fcall trf_11876(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11876(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11876(t0,t1);}

C_noret_decl(trf_11780)
static void C_fcall trf_11780(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11780(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_11780(t0,t1,t2,t3,t4);}

C_noret_decl(trf_11053)
static void C_fcall trf_11053(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11053(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11053(t0,t1);}

C_noret_decl(trf_11056)
static void C_fcall trf_11056(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11056(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11056(t0,t1);}

C_noret_decl(trf_11059)
static void C_fcall trf_11059(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11059(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11059(t0,t1);}

C_noret_decl(trf_11062)
static void C_fcall trf_11062(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11062(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11062(t0,t1);}

C_noret_decl(trf_10815)
static void C_fcall trf_10815(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10815(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10815(t0,t1);}

C_noret_decl(trf_10686)
static void C_fcall trf_10686(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10686(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10686(t0,t1,t2);}

C_noret_decl(trf_10551)
static void C_fcall trf_10551(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10551(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_10551(t0,t1,t2,t3,t4);}

C_noret_decl(trf_10296)
static void C_fcall trf_10296(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10296(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_10296(t0,t1,t2);}

C_noret_decl(trf_10305)
static void C_fcall trf_10305(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10305(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10305(t0,t1,t2,t3);}

C_noret_decl(trf_10138)
static void C_fcall trf_10138(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10138(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10138(t0,t1);}

C_noret_decl(trf_10154)
static void C_fcall trf_10154(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10154(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10154(t0,t1,t2,t3);}

C_noret_decl(trf_9962)
static void C_fcall trf_9962(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9962(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_9962(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_9992)
static void C_fcall trf_9992(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9992(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9992(t0,t1);}

C_noret_decl(trf_9975)
static void C_fcall trf_9975(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9975(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9975(t0,t1);}

C_noret_decl(trf_9840)
static void C_fcall trf_9840(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9840(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_9840(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_9870)
static void C_fcall trf_9870(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9870(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9870(t0,t1);}

C_noret_decl(trf_9853)
static void C_fcall trf_9853(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9853(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9853(t0,t1);}

C_noret_decl(trf_9743)
static void C_fcall trf_9743(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9743(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_9743(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_9756)
static void C_fcall trf_9756(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9756(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9756(t0,t1);}

C_noret_decl(trf_9675)
static void C_fcall trf_9675(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9675(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9675(t0,t1,t2,t3);}

C_noret_decl(trf_9645)
static void C_fcall trf_9645(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9645(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9645(t0,t1);}

C_noret_decl(trf_9573)
static void C_fcall trf_9573(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9573(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9573(t0,t1,t2,t3);}

C_noret_decl(trf_9372)
static void C_fcall trf_9372(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9372(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9372(t0,t1);}

C_noret_decl(trf_9454)
static void C_fcall trf_9454(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9454(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9454(t0,t1);}

C_noret_decl(trf_9465)
static void C_fcall trf_9465(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9465(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9465(t0,t1,t2,t3);}

C_noret_decl(trf_9477)
static void C_fcall trf_9477(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9477(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9477(t0,t1,t2);}

C_noret_decl(trf_9398)
static void C_fcall trf_9398(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9398(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9398(t0,t1,t2);}

C_noret_decl(trf_9035)
static void C_fcall trf_9035(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9035(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9035(t0,t1);}

C_noret_decl(trf_9038)
static void C_fcall trf_9038(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9038(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9038(t0,t1);}

C_noret_decl(trf_9044)
static void C_fcall trf_9044(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9044(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9044(t0,t1);}

C_noret_decl(trf_8947)
static void C_fcall trf_8947(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8947(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8947(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8839)
static void C_fcall trf_8839(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8839(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8839(t0,t1);}

C_noret_decl(trf_8844)
static void C_fcall trf_8844(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8844(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8844(t0,t1,t2,t3);}

C_noret_decl(trf_8611)
static void C_fcall trf_8611(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8611(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8611(t0,t1);}

C_noret_decl(trf_8614)
static void C_fcall trf_8614(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8614(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8614(t0,t1);}

C_noret_decl(trf_8512)
static void C_fcall trf_8512(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8512(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8512(t0,t1);}

C_noret_decl(trf_8407)
static void C_fcall trf_8407(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8407(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8407(t0,t1);}

C_noret_decl(trf_8416)
static void C_fcall trf_8416(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8416(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_8416(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_8429)
static void C_fcall trf_8429(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8429(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8429(t0,t1);}

C_noret_decl(trf_8271)
static void C_fcall trf_8271(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8271(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8271(t0,t1);}

C_noret_decl(trf_8274)
static void C_fcall trf_8274(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8274(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8274(t0,t1);}

C_noret_decl(trf_8276)
static void C_fcall trf_8276(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8276(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_8276(t0,t1,t2,t3,t4);}

C_noret_decl(trf_8204)
static void C_fcall trf_8204(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8204(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8204(t0,t1);}

C_noret_decl(trf_8207)
static void C_fcall trf_8207(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8207(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8207(t0,t1);}

C_noret_decl(trf_8210)
static void C_fcall trf_8210(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8210(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8210(t0,t1);}

C_noret_decl(trf_8068)
static void C_fcall trf_8068(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8068(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8068(t0,t1,t2,t3);}

C_noret_decl(trf_8084)
static void C_fcall trf_8084(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8084(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8084(t0,t1,t2);}

C_noret_decl(trf_7806)
static void C_fcall trf_7806(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7806(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7806(t0,t1);}

C_noret_decl(trf_7809)
static void C_fcall trf_7809(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7809(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7809(t0,t1);}

C_noret_decl(trf_7551)
static void C_fcall trf_7551(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7551(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7551(t0,t1);}

C_noret_decl(trf_7484)
static void C_fcall trf_7484(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7484(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7484(t0,t1);}

C_noret_decl(trf_7474)
static void C_fcall trf_7474(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7474(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7474(t0,t1);}

C_noret_decl(trf_7456)
static void C_fcall trf_7456(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7456(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7456(t0,t1);}

C_noret_decl(trf_7445)
static void C_fcall trf_7445(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7445(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7445(t0,t1,t2);}

C_noret_decl(trf_7407)
static void C_fcall trf_7407(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7407(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7407(t0,t1);}

C_noret_decl(trf_7400)
static void C_fcall trf_7400(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7400(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7400(t0,t1);}

C_noret_decl(trf_7376)
static void C_fcall trf_7376(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7376(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7376(t0,t1);}

C_noret_decl(trf_7309)
static void C_fcall trf_7309(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7309(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7309(t0,t1,t2,t3);}

C_noret_decl(trf_7298)
static void C_fcall trf_7298(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7298(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7298(t0,t1,t2);}

C_noret_decl(trf_7253)
static void C_fcall trf_7253(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7253(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7253(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7226)
static void C_fcall trf_7226(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7226(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_7226(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_7185)
static void C_fcall trf_7185(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7185(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7185(t0,t1,t2);}

C_noret_decl(trf_7191)
static void C_fcall trf_7191(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7191(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7191(t0,t1,t2);}

C_noret_decl(trf_7201)
static void C_fcall trf_7201(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7201(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7201(t0,t1);}

C_noret_decl(trf_7029)
static void C_fcall trf_7029(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7029(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7029(t0,t1,t2,t3);}

C_noret_decl(trf_7006)
static void C_fcall trf_7006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7006(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_7006(t0,t1,t2,t3);}

C_noret_decl(trf_6952)
static void C_fcall trf_6952(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6952(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_6952(t0,t1,t2,t3,t4);}

C_noret_decl(trf_6351)
static void C_fcall trf_6351(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6351(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6351(t0,t1);}

C_noret_decl(trf_6363)
static void C_fcall trf_6363(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6363(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_6363(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_6416)
static void C_fcall trf_6416(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6416(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6416(t0,t1);}

C_noret_decl(trf_6375)
static void C_fcall trf_6375(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6375(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6375(t0,t1,t2);}

C_noret_decl(trf_6388)
static void C_fcall trf_6388(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6388(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6388(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr7r)
static void C_fcall tr7r(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7r(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n*3);
t7=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr5r)
static void C_fcall tr5r(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5r(C_proc5 k){
int n;
C_word *a,t5;
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
n=C_rest_count(0);
a=C_alloc(n*3);
t5=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(5365)){
C_save(t1);
C_rereclaim2(5365*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,912);
lf[0]=C_h_intern(&lf[0],14,"expand-optkeys");
lf[1]=C_h_intern(&lf[1],3,"let");
lf[2]=C_h_intern(&lf[2],4,"let*");
lf[3]=C_h_intern(&lf[3],5,"null\077");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_decode_literal(C_heaptop,"\376B\000\000\022Too many arguments");
lf[6]=C_h_intern(&lf[6],6,"unless");
lf[7]=C_h_intern(&lf[7],10,"\003sysappend");
lf[8]=C_h_intern(&lf[8],3,"car");
lf[9]=C_h_intern(&lf[9],4,"case");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000\031Positional after keywords");
lf[11]=C_h_intern(&lf[11],4,"when");
lf[12]=C_h_intern(&lf[12],4,"set!");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000\017Unknown keyword");
lf[15]=C_h_intern(&lf[15],3,"cdr");
lf[16]=C_h_intern(&lf[16],4,"else");
lf[17]=C_h_intern(&lf[17],7,"\003sysmap");
lf[18]=C_h_intern(&lf[18],6,"append");
lf[19]=C_decode_literal(C_heaptop,"\376B\000\000\021Redundant keyword");
lf[20]=C_h_intern(&lf[20],2,"if");
lf[21]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing keyword value in");
lf[22]=C_h_intern(&lf[22],4,"cadr");
lf[23]=C_h_intern(&lf[23],4,"cddr");
lf[24]=C_h_intern(&lf[24],15,"string->keyword");
lf[25]=C_h_intern(&lf[25],14,"symbol->string");
lf[26]=C_h_intern(&lf[26],6,"gensym");
lf[27]=C_decode_literal(C_heaptop,"\376B\000\000\004keyp");
lf[28]=C_decode_literal(C_heaptop,"\376B\000\000\004args");
lf[29]=C_h_intern(&lf[29],10,"*messages*");
lf[30]=C_h_intern(&lf[30],11,"expand-send");
lf[31]=C_h_intern(&lf[31],7,"sprintf");
lf[32]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[33]=C_h_intern(&lf[33],15,"keyword->string");
lf[34]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[35]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[36]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[38]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[39]=C_h_intern(&lf[39],5,"&rest");
lf[40]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[41]=C_h_intern(&lf[41],14,"hash-table-ref");
lf[42]=C_h_intern(&lf[42],3,"cwd");
lf[43]=C_h_intern(&lf[43],17,"\003syspeek-c-string");
lf[44]=C_h_intern(&lf[44],5,"chdir");
lf[45]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[46]=C_h_intern(&lf[46],17,"\003sysmake-c-string");
lf[47]=C_h_intern(&lf[47],5,"fifth");
lf[48]=C_h_intern(&lf[48],5,"sixth");
lf[49]=C_h_intern(&lf[49],7,"seventh");
lf[50]=C_h_intern(&lf[50],6,"eighth");
lf[51]=C_h_intern(&lf[51],5,"ninth");
lf[52]=C_h_intern(&lf[52],5,"tenth");
lf[53]=C_h_intern(&lf[53],3,"nth");
lf[54]=C_h_intern(&lf[54],8,"list-ref");
lf[55]=C_h_intern(&lf[55],4,"rest");
lf[56]=C_h_intern(&lf[56],4,"last");
lf[57]=C_h_intern(&lf[57],7,"butlast");
lf[58]=C_h_intern(&lf[58],5,"list*");
lf[59]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[60]=C_h_intern(&lf[60],9,"list-set!");
lf[61]=C_h_intern(&lf[61],8,"reverse!");
lf[62]=C_h_intern(&lf[62],9,"make-list");
lf[63]=C_decode_literal(C_heaptop,"\376B\000\000\034Negative length to make-list");
lf[89]=C_h_intern(&lf[89],7,"rescale");
lf[90]=C_h_intern(&lf[90],8,"discrete");
lf[91]=C_h_intern(&lf[91],4,"not\077");
lf[92]=C_h_intern(&lf[92],3,"int");
lf[93]=C_h_intern(&lf[93],4,"plus");
lf[94]=C_h_intern(&lf[94],1,"+");
lf[95]=C_h_intern(&lf[95],5,"minus");
lf[96]=C_h_intern(&lf[96],1,"-");
lf[97]=C_h_intern(&lf[97],5,"times");
lf[98]=C_h_intern(&lf[98],1,"*");
lf[99]=C_h_intern(&lf[99],6,"divide");
lf[100]=C_h_intern(&lf[100],1,"/");
lf[101]=C_h_intern(&lf[101],8,"quantize");
lf[102]=C_h_intern(&lf[102],8,"decimals");
lf[103]=C_h_intern(&lf[103],5,"round");
lf[104]=C_h_intern(&lf[104],1,"v");
lf[105]=C_h_intern(&lf[105],4,"expt");
lf[106]=C_decode_literal(C_heaptop,"\376U10.0\000");
lf[107]=C_h_intern(&lf[107],15,"rhythm->seconds");
lf[108]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[109]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[110]=C_h_intern(&lf[110],6,"\000tempo");
lf[111]=C_h_intern(&lf[111],5,"\000beat");
lf[112]=C_h_intern(&lf[112],12,"cents->ratio");
lf[113]=C_h_intern(&lf[113],12,"ratio->cents");
lf[115]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[116]=C_h_intern(&lf[116],3,"err");
lf[117]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[118]=C_decode_literal(C_heaptop,"\376B\000\000\032not an x y coordinate list");
lf[119]=C_h_intern(&lf[119],6,"interp");
lf[120]=C_decode_literal(C_heaptop,"\376B\000\000\027missing x y coordinates");
lf[121]=C_h_intern(&lf[121],8,"tendency");
lf[122]=C_h_intern(&lf[122],3,"ran");
lf[123]=C_h_intern(&lf[123],3,"fit");
lf[124]=C_h_intern(&lf[124],9,"remainder");
lf[125]=C_decode_literal(C_heaptop,"\376B\000\000\021mode not 1 2 or 3");
lf[126]=C_h_intern(&lf[126],5,"scale");
lf[127]=C_h_intern(&lf[127],6,"modulo");
lf[128]=C_decode_literal(C_heaptop,"\376B\000\000\023limit same as start");
lf[129]=C_h_intern(&lf[129],8,"ran-set!");
lf[130]=C_h_intern(&lf[130],7,"between");
lf[131]=C_h_intern(&lf[131],4,"pick");
lf[132]=C_h_intern(&lf[132],4,"odds");
lf[133]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[134]=C_h_intern(&lf[134],5,"\000true");
lf[135]=C_h_intern(&lf[135],6,"\000false");
lf[136]=C_h_intern(&lf[136],4,"vary");
lf[137]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[138]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[139]=C_h_intern(&lf[139],8,"shuffle!");
lf[140]=C_h_intern(&lf[140],7,"shuffle");
lf[141]=C_h_intern(&lf[141],6,"ranlow");
lf[142]=C_h_intern(&lf[142],7,"ranhigh");
lf[143]=C_h_intern(&lf[143],9,"ranmiddle");
lf[144]=C_h_intern(&lf[144],7,"ranbeta");
lf[145]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[146]=C_h_intern(&lf[146],2,"\000a");
lf[147]=C_h_intern(&lf[147],2,"\000b");
lf[148]=C_h_intern(&lf[148],6,"ranexp");
lf[149]=C_h_intern(&lf[149],8,"rangauss");
lf[150]=C_h_intern(&lf[150],9,"rancauchy");
lf[151]=C_h_intern(&lf[151],10,"ranpoisson");
lf[152]=C_h_intern(&lf[152],3,"arg");
lf[153]=C_h_intern(&lf[153],8,"rangamma");
lf[154]=C_h_intern(&lf[154],8,"ranbrown");
lf[155]=C_h_intern(&lf[155],7,"ranpink");
lf[156]=C_h_intern(&lf[156],4,"segs");
lf[157]=C_decode_literal(C_heaptop,"\376B\000\000\014Illegal base");
lf[158]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[161]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[162]=C_h_intern(&lf[162],13,"string-append");
lf[163]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[165]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[166]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[167]=C_decode_literal(C_heaptop,"\376U0.333333333333333\000");
lf[168]=C_decode_literal(C_heaptop,"\376U0.666666666666667\000");
lf[169]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[170]=C_h_intern(&lf[170],5,"floor");
lf[171]=C_decode_literal(C_heaptop,"\376B\000\000\021Not a note or key");
lf[172]=C_h_intern(&lf[172],4,"note");
lf[173]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[174]=C_h_intern(&lf[174],3,"key");
lf[175]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[176]=C_h_intern(&lf[176],2,"hz");
lf[177]=C_decode_literal(C_heaptop,"\376B\000\000\0014");
lf[178]=C_h_intern(&lf[178],2,"pc");
lf[179]=C_h_intern(&lf[179],6,"invert");
lf[180]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[181]=C_decode_literal(C_heaptop,"\376B\000\000\020No inversion for");
lf[182]=C_h_intern(&lf[182],9,"transpose");
lf[183]=C_decode_literal(C_heaptop,"\376B\000\000\022No transposion for");
lf[184]=C_h_intern(&lf[184],10,"retrograde");
lf[185]=C_h_intern(&lf[185],7,"reverse");
lf[187]=C_h_intern(&lf[187],8,"spektrum");
lf[192]=C_h_intern(&lf[192],13,"make-spectrum");
lf[193]=C_h_intern(&lf[193],12,"list->vector");
lf[194]=C_h_intern(&lf[194],13,"spectrum-size");
lf[195]=C_h_intern(&lf[195],14,"spectrum-freqs");
lf[196]=C_h_intern(&lf[196],13,"spectrum-amps");
lf[197]=C_h_intern(&lf[197],13,"spectrum-time");
lf[198]=C_h_intern(&lf[198],14,"spectrum-pairs");
lf[199]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[200]=C_h_intern(&lf[200],16,"spectrum-minfreq");
lf[201]=C_h_intern(&lf[201],16,"spectrum-maxfreq");
lf[202]=C_h_intern(&lf[202],15,"spectrum-minamp");
lf[203]=C_h_intern(&lf[203],12,"\003sysfor-each");
lf[204]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[205]=C_h_intern(&lf[205],15,"spectrum-maxamp");
lf[206]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[207]=C_h_intern(&lf[207],13,"spectrum-keys");
lf[208]=C_h_intern(&lf[208],8,"for-each");
lf[209]=C_h_intern(&lf[209],6,"\000order");
lf[210]=C_h_intern(&lf[210],7,"\000thresh");
lf[211]=C_h_intern(&lf[211],6,"\000quant");
lf[212]=C_h_intern(&lf[212],7,"\000unique");
lf[213]=C_h_intern(&lf[213],11,"fm-spectrum");
lf[214]=C_h_intern(&lf[214],8,"set-car!");
lf[215]=C_h_intern(&lf[215],4,"caar");
lf[216]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[218]=C_h_intern(&lf[218],6,"period");
lf[220]=C_h_intern(&lf[220],14,"\003sysblock-set!");
lf[228]=C_h_intern(&lf[228],7,"pattern");
lf[243]=C_h_intern(&lf[243],4,"\000nad");
lf[244]=C_h_intern(&lf[244],8,"\000periods");
lf[245]=C_h_intern(&lf[245],12,"\000depth-first");
lf[247]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[248]=C_decode_literal(C_heaptop,"\376U4294967287.0\000");
lf[249]=C_h_intern(&lf[249],14,"\000breadth-first");
lf[250]=C_decode_literal(C_heaptop,"\376B\000\000\026Illegal for traversing");
lf[251]=C_h_intern(&lf[251],7,"\000values");
lf[252]=C_decode_literal(C_heaptop,"\376B\000\000\024Illegal for counting");
lf[254]=C_h_intern(&lf[254],4,"eop\077");
lf[255]=C_h_intern(&lf[255],4,"\000eop");
lf[256]=C_h_intern(&lf[256],4,"eod\077");
lf[257]=C_h_intern(&lf[257],4,"\000eod");
lf[258]=C_h_intern(&lf[258],4,"next");
lf[262]=C_h_intern(&lf[262],5,"force");
lf[263]=C_h_intern(&lf[263],8,"promise\077");
lf[264]=C_h_intern(&lf[264],3,"max");
lf[265]=C_h_intern(&lf[265],10,"make-cycle");
lf[267]=C_h_intern(&lf[267],4,"\000for");
lf[268]=C_h_intern(&lf[268],7,"\000repeat");
lf[270]=C_h_intern(&lf[270],5,"palin");
lf[272]=C_h_intern(&lf[272],15,"make-palindrome");
lf[274]=C_h_intern(&lf[274],6,"\000elide");
lf[275]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\000\376\003\000\000\002\376\377\006\001\376\377\016");
lf[276]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\377\006\001\376\003\000\000\002\376\377\006\000\376\377\016");
lf[277]=C_h_intern(&lf[277],9,"make-line");
lf[279]=C_h_intern(&lf[279],9,"make-heap");
lf[281]=C_h_intern(&lf[281],13,"make-rotation");
lf[283]=C_h_intern(&lf[283],7,"\000rotate");
lf[285]=C_h_intern(&lf[285],11,"random-item");
lf[293]=C_h_intern(&lf[293],14,"make-weighting");
lf[296]=C_h_intern(&lf[296],7,"\000weight");
lf[297]=C_h_intern(&lf[297],4,"\000min");
lf[298]=C_h_intern(&lf[298],4,"\000max");
lf[299]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[300]=C_h_intern(&lf[300],11,"make-markov");
lf[302]=C_h_intern(&lf[302],5,"\000past");
lf[303]=C_h_intern(&lf[303],2,"->");
lf[304]=C_decode_literal(C_heaptop,"\376B\000\000.Left hand sides have different number of items");
lf[305]=C_h_intern(&lf[305],3,"\000->");
lf[306]=C_decode_literal(C_heaptop,"\376B\000\000\042Transition missing right hand side");
lf[307]=C_decode_literal(C_heaptop,"\376B\000\000\030Transition is not a list");
lf[308]=C_decode_literal(C_heaptop,"\376B\000\000 Not a list of Markov transitions");
lf[309]=C_decode_literal(C_heaptop,"\376B\000\000\032No transition matches past");
lf[311]=C_h_intern(&lf[311],10,"graph-node");
lf[312]=C_h_intern(&lf[312],10,"make-graph");
lf[314]=C_h_intern(&lf[314],3,"\000to");
lf[315]=C_h_intern(&lf[315],3,"\000id");
lf[316]=C_decode_literal(C_heaptop,"\376B\000\000\025Graph node not a list");
lf[317]=C_decode_literal(C_heaptop,"\376B\000\000\016Not graph data");
lf[318]=C_decode_literal(C_heaptop,"\376B\000\000\024No graph node for id");
lf[319]=C_h_intern(&lf[319],14,"markov-analyze");
lf[320]=C_h_intern(&lf[320],9,"last-pair");
lf[321]=C_h_intern(&lf[321],6,"format");
lf[322]=C_decode_literal(C_heaptop,"\376B\000\000\002~s");
lf[323]=C_h_intern(&lf[323],4,"find");
lf[324]=C_h_intern(&lf[324],10,"list-index");
lf[325]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002->\376\377\016");
lf[326]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[327]=C_h_intern(&lf[327],7,"newline");
lf[328]=C_h_intern(&lf[328],7,"display");
lf[329]=C_h_intern(&lf[329],19,"\003syswrite-char/port");
lf[330]=C_h_intern(&lf[330],19,"\003sysstandard-output");
lf[331]=C_h_intern(&lf[331],3,"min");
lf[332]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[333]=C_decode_literal(C_heaptop,"\376B\000\000\003 ~a");
lf[334]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[335]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[336]=C_h_intern(&lf[336],11,"make-string");
lf[337]=C_h_intern(&lf[337],4,"sort");
lf[338]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[339]=C_h_intern(&lf[339],1,"<");
lf[340]=C_h_intern(&lf[340],11,"string-ci<\077");
lf[341]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[342]=C_decode_literal(C_heaptop,"\376B\000\000\002~a");
lf[343]=C_decode_literal(C_heaptop,"\376B\000\000\020Not a legal mode");
lf[344]=C_h_intern(&lf[344],5,"\000mode");
lf[346]=C_h_intern(&lf[346],5,"token");
lf[351]=C_h_intern(&lf[351],1,"t");
lf[356]=C_h_intern(&lf[356],4,"rule");
lf[359]=C_h_intern(&lf[359],22,"hash-table-ref/default");
lf[366]=C_h_intern(&lf[366],11,"parse-error");
lf[370]=C_h_intern(&lf[370],10,"parse-unit");
lf[382]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[384]=C_h_intern(&lf[384],14,"string->symbol");
lf[385]=C_h_intern(&lf[385],5,"equal");
lf[386]=C_h_intern(&lf[386],3,"and");
lf[387]=C_h_intern(&lf[387],2,"or");
lf[388]=C_h_intern(&lf[388],3,"not");
lf[389]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[390]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[393]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[399]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[400]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[401]=C_h_intern(&lf[401],1,"@");
lf[402]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[403]=C_h_intern(&lf[403],6,"printf");
lf[404]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[409]=C_h_intern(&lf[409],2,">=");
lf[410]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[411]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[412]=C_h_intern(&lf[412],5,"begin");
lf[413]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[414]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[415]=C_h_intern(&lf[415],1,">");
lf[416]=C_h_intern(&lf[416],2,"<=");
lf[417]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[418]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[419]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[423]=C_h_intern(&lf[423],17,"*sal-trace-input*");
lf[424]=C_h_intern(&lf[424],3,"sal");
lf[425]=C_h_intern(&lf[425],11,"print-error");
lf[426]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[427]=C_h_intern(&lf[427],9,"substring");
lf[428]=C_h_intern(&lf[428],2,"pp");
lf[429]=C_h_intern(&lf[429],4,"eval");
lf[430]=C_h_intern(&lf[430],7,"\000syntax");
lf[431]=C_h_intern(&lf[431],7,"\000scheme");
lf[432]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[433]=C_h_intern(&lf[433],7,"call/cc");
lf[434]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[435]=C_h_intern(&lf[435],9,"sal:print");
lf[436]=C_h_intern(&lf[436],13,"print-message");
lf[437]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[438]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[439]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[440]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[441]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[442]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[443]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[444]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[445]=C_h_intern(&lf[445],9,"sal:chdir");
lf[446]=C_h_intern(&lf[446],8,"sal:load");
lf[447]=C_h_intern(&lf[447],13,"load-sal-file");
lf[448]=C_h_intern(&lf[448],4,"load");
lf[449]=C_h_intern(&lf[449],15,"\003syssubstring=\077");
lf[450]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[451]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[452]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[453]=C_h_intern(&lf[453],12,"file-exists\077");
lf[454]=C_h_intern(&lf[454],8,"sal:open");
lf[455]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[456]=C_h_intern(&lf[456],10,"sal:output");
lf[457]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[469]=C_h_intern(&lf[469],8,"operator");
lf[470]=C_h_intern(&lf[470],8,"bindings");
lf[471]=C_h_intern(&lf[471],10,"collectors");
lf[472]=C_h_intern(&lf[472],9,"initially");
lf[473]=C_h_intern(&lf[473],9,"end-tests");
lf[474]=C_h_intern(&lf[474],7,"looping");
lf[475]=C_h_intern(&lf[475],8,"stepping");
lf[476]=C_h_intern(&lf[476],7,"finally");
lf[477]=C_h_intern(&lf[477],9,"returning");
lf[483]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[484]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[485]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[486]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[487]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[488]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[489]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[491]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[492]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[493]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[494]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[496]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[497]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[499]=C_h_intern(&lf[499],3,"for");
lf[500]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[501]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[502]=C_h_intern(&lf[502],8,"downfrom");
lf[503]=C_h_intern(&lf[503],5,"above");
lf[504]=C_h_intern(&lf[504],5,"below");
lf[505]=C_h_intern(&lf[505],6,"downto");
lf[506]=C_h_intern(&lf[506],4,"from");
lf[507]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[508]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[509]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[510]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[511]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[512]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[513]=C_h_intern(&lf[513],2,"to");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[515]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[516]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[517]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[518]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[519]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[520]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[521]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[522]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[523]=C_h_intern(&lf[523],2,"by");
lf[524]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[525]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[526]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[527]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[529]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[530]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[532]=C_h_intern(&lf[532],6,"across");
lf[533]=C_h_intern(&lf[533],13,"vector-length");
lf[534]=C_h_intern(&lf[534],10,"vector-ref");
lf[535]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[536]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[537]=C_h_intern(&lf[537],4,"over");
lf[538]=C_h_intern(&lf[538],2,"in");
lf[539]=C_h_intern(&lf[539],5,"quote");
lf[540]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[541]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[542]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[543]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[544]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[545]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[546]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[547]=C_h_intern(&lf[547],2,"on");
lf[548]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[549]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[551]=C_h_intern(&lf[551],1,"=");
lf[552]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[553]=C_h_intern(&lf[553],4,"then");
lf[554]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[556]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[557]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[559]=C_h_intern(&lf[559],4,"with");
lf[560]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[561]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[562]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[563]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[564]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[565]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[566]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[567]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[569]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[570]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[571]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[573]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[574]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[576]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[577]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[579]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[580]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[582]=C_h_intern(&lf[582],3,"sum");
lf[583]=C_h_intern(&lf[583],5,"count");
lf[584]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[585]=C_h_intern(&lf[585],8,"minimize");
lf[586]=C_h_intern(&lf[586],8,"maximize");
lf[587]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[588]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[589]=C_h_intern(&lf[589],4,"list");
lf[590]=C_h_intern(&lf[590],8,"set-cdr!");
lf[591]=C_h_intern(&lf[591],7,"collect");
lf[592]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[593]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[594]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[595]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[596]=C_h_intern(&lf[596],5,"nconc");
lf[597]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[598]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[599]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[600]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[601]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[602]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[603]=C_h_intern(&lf[603],4,"into");
lf[604]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[605]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[606]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[607]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[608]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[610]=C_h_intern(&lf[610],6,"return");
lf[612]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[613]=C_h_intern(&lf[613],5,"until");
lf[614]=C_h_intern(&lf[614],5,"while");
lf[615]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[616]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[618]=C_h_intern(&lf[618],7,"thereis");
lf[619]=C_h_intern(&lf[619],6,"always");
lf[620]=C_h_intern(&lf[620],5,"never");
lf[621]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[622]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[624]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[625]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[627]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[628]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[629]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[630]=C_h_intern(&lf[630],4,"task");
lf[631]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[633]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[634]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[635]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[636]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[637]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[639]=C_h_intern(&lf[639],2,"do");
lf[640]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[641]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[642]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[643]=C_h_intern(&lf[643],4,"iter");
lf[644]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[645]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[646]=C_h_intern(&lf[646],6,"repeat");
lf[647]=C_h_intern(&lf[647],2,"as");
lf[649]=C_h_intern(&lf[649],10,"mm:make-on");
lf[650]=C_h_intern(&lf[650],5,"\000time");
lf[651]=C_h_intern(&lf[651],4,"\000key");
lf[652]=C_h_intern(&lf[652],4,"\000vel");
lf[653]=C_h_intern(&lf[653],5,"\000chan");
lf[654]=C_h_intern(&lf[654],6,"mm:on\077");
lf[655]=C_h_intern(&lf[655],11,"mm:make-off");
lf[656]=C_h_intern(&lf[656],7,"mm:off\077");
lf[657]=C_h_intern(&lf[657],13,"mm:make-touch");
lf[658]=C_h_intern(&lf[658],4,"\000val");
lf[659]=C_h_intern(&lf[659],9,"mm:touch\077");
lf[660]=C_h_intern(&lf[660],12,"mm:make-ctrl");
lf[661]=C_h_intern(&lf[661],4,"\000num");
lf[662]=C_h_intern(&lf[662],8,"mm:ctrl\077");
lf[663]=C_h_intern(&lf[663],12,"mm:make-prog");
lf[664]=C_h_intern(&lf[664],8,"mm:prog\077");
lf[665]=C_h_intern(&lf[665],13,"mm:make-press");
lf[666]=C_h_intern(&lf[666],9,"mm:press\077");
lf[667]=C_h_intern(&lf[667],12,"mm:make-bend");
lf[668]=C_h_intern(&lf[668],7,"mm:free");
lf[669]=C_h_intern(&lf[669],7,"mm:copy");
lf[670]=C_h_intern(&lf[670],7,"mm:time");
lf[671]=C_h_intern(&lf[671],12,"mm:time-set!");
lf[672]=C_h_intern(&lf[672],7,"mm:chan");
lf[673]=C_h_intern(&lf[673],12,"mm:chan-set!");
lf[674]=C_h_intern(&lf[674],6,"mm:key");
lf[675]=C_h_intern(&lf[675],11,"mm:key-set!");
lf[676]=C_h_intern(&lf[676],6,"mm:vel");
lf[677]=C_h_intern(&lf[677],11,"mm:vel-set!");
lf[678]=C_h_intern(&lf[678],6,"mm:val");
lf[679]=C_h_intern(&lf[679],8,"mm:type\077");
lf[680]=C_h_intern(&lf[680],11,"mm:val-set!");
lf[681]=C_h_intern(&lf[681],1,"k");
lf[682]=C_h_intern(&lf[682],6,"mm:num");
lf[683]=C_h_intern(&lf[683],11,"mm:num-set!");
lf[684]=C_h_intern(&lf[684],7,"mp:note");
lf[685]=C_h_intern(&lf[685],7,"mp:midi");
lf[686]=C_h_intern(&lf[686],6,"mp:off");
lf[687]=C_h_intern(&lf[687],5,"mp:on");
lf[688]=C_h_intern(&lf[688],8,"mp:touch");
lf[689]=C_h_intern(&lf[689],7,"mp:ctrl");
lf[690]=C_h_intern(&lf[690],7,"mp:prog");
lf[691]=C_h_intern(&lf[691],8,"mp:press");
lf[692]=C_h_intern(&lf[692],7,"mp:bend");
lf[693]=C_h_intern(&lf[693],5,"mp:mm");
lf[694]=C_h_intern(&lf[694],9,"mp:inhook");
lf[695]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[696]=C_h_intern(&lf[696],27,"condition-property-accessor");
lf[697]=C_h_intern(&lf[697],3,"exn");
lf[698]=C_h_intern(&lf[698],7,"message");
lf[699]=C_h_intern(&lf[699],22,"with-exception-handler");
lf[700]=C_h_intern(&lf[700],30,"call-with-current-continuation");
lf[701]=C_h_intern(&lf[701],4,"cs:i");
lf[702]=C_h_intern(&lf[702],4,"cs:f");
lf[703]=C_h_intern(&lf[703],8,"cs:clear");
lf[704]=C_h_intern(&lf[704],7,"cm-logo");
lf[705]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[706]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[707]=C_decode_literal(C_heaptop,"\376B\000\000\015Common Music ");
lf[708]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[709]=C_decode_literal(C_heaptop,"\376B\000\000\001.");
lf[710]=C_decode_literal(C_heaptop,"\376B\000\000\000");
lf[711]=C_decode_literal(C_heaptop,"\376B\000\000\002~%");
lf[712]=C_h_intern(&lf[712],25,"current-time-milliseconds");
lf[713]=C_h_intern(&lf[713],20,"current-time-seconds");
lf[715]=C_h_intern(&lf[715],6,"\003sysgc");
lf[718]=C_h_intern(&lf[718],6,"sprout");
lf[719]=C_h_intern(&lf[719],9,"\003syserror");
lf[720]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[721]=C_h_intern(&lf[721],3,"now");
lf[722]=C_h_intern(&lf[722],11,"time-format");
lf[723]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[724]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[725]=C_h_intern(&lf[725],1,"m");
lf[726]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[727]=C_h_intern(&lf[727],1,"s");
lf[728]=C_h_intern(&lf[728],5,"pause");
lf[729]=C_h_intern(&lf[729],7,"paused\077");
lf[730]=C_h_intern(&lf[730],4,"cont");
lf[731]=C_h_intern(&lf[731],4,"stop");
lf[732]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[733]=C_h_intern(&lf[733],4,"hush");
lf[735]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\014%%stopproc%%\376\003\000\000\002\376\377\001\377\377\377\377\376\377\016");
lf[737]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[738]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[741]=C_h_intern(&lf[741],14,"return-to-host");
lf[742]=C_h_intern(&lf[742],6,"define");
lf[743]=C_decode_literal(C_heaptop,"\376B\000\000\027Illegal process formals");
lf[744]=C_h_intern(&lf[744],18,"\003sysregister-macro");
lf[745]=C_h_intern(&lf[745],14,"define-process");
lf[746]=C_h_intern(&lf[746],6,"lambda");
lf[747]=C_h_intern(&lf[747],7,"elapsed");
lf[748]=C_h_intern(&lf[748],1,"x");
lf[749]=C_h_intern(&lf[749],4,"wait");
lf[750]=C_h_intern(&lf[750],18,"current-error-port");
lf[751]=C_h_intern(&lf[751],19,"print-error-message");
lf[752]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[753]=C_decode_literal(C_heaptop,"\376B\000\000*Warning: possible non-terminating process.");
lf[754]=C_decode_literal(C_heaptop,"\376B\000\000\003err");
lf[755]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[756]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[757]=C_h_intern(&lf[757],3,"run");
lf[758]=C_h_intern(&lf[758],20,"\003sysregister-macro-2");
lf[759]=C_h_intern(&lf[759],15,"hash-table-set!");
lf[760]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[761]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[762]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[763]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[764]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[765]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[766]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[767]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[768]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[769]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[770]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[771]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[772]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[773]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[774]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[775]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[776]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[777]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[778]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[779]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[780]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[781]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[782]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[783]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[784]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[785]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[786]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[787]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[788]=C_h_intern(&lf[788],5,":loop");
lf[789]=C_h_intern(&lf[789],7,"tagbody");
lf[790]=C_h_intern(&lf[790],5,"block");
lf[791]=C_h_intern(&lf[791],3,"nil");
lf[792]=C_h_intern(&lf[792],2,"go");
lf[793]=C_h_intern(&lf[793],8,"function");
lf[794]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[795]=C_h_intern(&lf[795],3,"pop");
lf[796]=C_h_intern(&lf[796],4,"cons");
lf[797]=C_h_intern(&lf[797],4,"push");
lf[798]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[799]=C_h_intern(&lf[799],4,"loop");
lf[800]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[801]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[802]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[803]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[804]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[805]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[806]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[807]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[808]=C_h_intern(&lf[808],7,"\000return");
lf[809]=C_h_intern(&lf[809],9,"\000function");
lf[810]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[811]=C_h_intern(&lf[811],8,"\000process");
lf[812]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[813]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[814]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[815]=C_decode_literal(C_heaptop,"\376B\000\000\017>>> Error (run)");
lf[816]=C_h_intern(&lf[816],4,"cond");
lf[817]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[818]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[819]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[820]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[821]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[822]=C_h_intern(&lf[822],5,"\000loop");
lf[823]=C_h_intern(&lf[823],4,"\000run");
lf[824]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[825]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[826]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[827]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[828]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[829]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[830]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[831]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[832]=C_h_intern(&lf[832],9,"list-tail");
lf[833]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[834]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[835]=C_h_intern(&lf[835],9,"\000bindings");
lf[836]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[837]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[838]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[839]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[840]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[841]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[842]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[843]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[844]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[845]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[846]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[847]=C_h_intern(&lf[847],10,"sal:system");
lf[848]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[849]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[850]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[851]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[852]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[853]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[854]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[855]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[856]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[857]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[858]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[859]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[860]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[861]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[862]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[863]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[864]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[865]=C_h_intern(&lf[865],7,"unquote");
lf[866]=C_h_intern(&lf[866],16,"unquote-splicing");
lf[867]=C_h_intern(&lf[867],5,"\000list");
lf[868]=C_h_intern(&lf[868],8,"\000unquote");
lf[869]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[870]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[871]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[872]=C_h_intern(&lf[872],10,"quasiquote");
lf[873]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[874]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[875]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[876]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[877]=C_h_intern(&lf[877],7,"fprintf");
lf[878]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[879]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[880]=C_h_intern(&lf[880],27,"\003sysregister-record-printer");
lf[881]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[882]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[883]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[884]=C_h_intern(&lf[884],6,"ruleid");
lf[885]=C_h_intern(&lf[885],9,"make-rule");
lf[886]=C_h_intern(&lf[886],7,"*rules*");
lf[887]=C_h_intern(&lf[887],7,"defrule");
lf[888]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[889]=C_h_intern(&lf[889],15,"make-hash-table");
lf[890]=C_h_intern(&lf[890],3,"eq\077");
lf[891]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[892]=C_decode_literal(C_heaptop,"\376B\000\000\016#<spectrum ~S>");
lf[893]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[894]=C_decode_literal(C_heaptop,"\376U0.0\000");
lf[895]=C_decode_literal(C_heaptop,"\376B\000\000\001r");
lf[896]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\003\000\000\002\376B\000\000\001c\376\003\000\000\002\376B\000\000\002bs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002df\376\003\000\000\002\376B\000\000\002cs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001d\376"
"\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002ef\376\003\000\000\002\376B\000\000\002ds\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001e\376\003\000\000\002\376B\000\000\002ff\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001"
"f\376\003\000\000\002\376B\000\000\002es\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002fs\376\003\000\000\002\376B\000\000\002gf\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001g\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000"
"\000\002af\376\003\000\000\002\376B\000\000\002gs\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\001a\376\377\016\376\003\000\000\002\376\003\000\000\002\376B\000\000\002bf\376\003\000\000\002\376B\000\000\002as\376\377\016\376\003\000\000\002\376\003\000\000\002"
"\376B\000\000\001b\376\003\000\000\002\376B\000\000\002cf\376\377\016\376\377\016");
lf[897]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[898]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[899]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376B\000\000\00200\376\003\000\000\002\376B\000\000\0010\376\003\000\000\002\376B\000\000\0011\376\003\000\000\002\376B\000\000\0012\376\003\000\000\002\376B\000\000\0013\376\003\000\000\002\376B\000\000\0014\376\003\000\000\002\376B\000\000\0015\376\003"
"\000\000\002\376B\000\000\0016\376\003\000\000\002\376B\000\000\0017\376\003\000\000\002\376B\000\000\0018\376\003\000\000\002\376B\000\000\0019\376\377\016");
lf[900]=C_decode_literal(C_heaptop,"\376B\000\000\001>");
lf[901]=C_decode_literal(C_heaptop,"\376B\000\000\001<");
lf[902]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[903]=C_decode_literal(C_heaptop,"\376B\000\000\002cf");
lf[904]=C_decode_literal(C_heaptop,"\376B\000\000\002bs");
lf[905]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[906]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[907]=C_h_intern(&lf[907],6,"equal\077");
lf[908]=C_h_intern(&lf[908],4,"send");
lf[909]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[910]=C_h_intern(&lf[910],19,"define-send-message");
lf[911]=C_h_intern(&lf[911],12,"with-optkeys");
C_register_lf2(lf,912,create_ptable());
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6011,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6009 */
static void C_ccall f_6011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6011,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6014,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6012 in k6009 */
static void C_ccall f_6014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6014,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6017,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6015 in k6012 in k6009 */
static void C_ccall f_6017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6017,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6020,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6020,2,t0,t1);}
t2=C_mutate((C_word*)lf[0]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6022,a[2]=((C_word)li4),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6311,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37850,a[2]=((C_word)li612),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 248  ##sys#register-macro");
t5=C_retrieve(lf[744]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[911],t4);}

/* a37849 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37850(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_37850r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_37850r(t0,t1,t2,t3);}}

static void C_ccall f_37850r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 249  expand-optkeys");
t6=*((C_word*)lf[0]+1);
((C_proc5)C_retrieve_proc(t6))(5,t6,t1,t4,t5,t3);}

/* k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6311,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6315,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 255  make-hash-table");
t3=C_retrieve(lf[889]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[907]+1));}

/* k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6315,2,t0,t1);}
t2=C_mutate((C_word*)lf[29]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6318,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37798,a[2]=((C_word)li611),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 257  ##sys#register-macro");
t5=C_retrieve(lf[744]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[910],t4);}

/* a37797 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37798(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37798,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37802,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_37802(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37835,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  string->symbol");
t10=*((C_word*)lf[384]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37845,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 266  symbol->string");
t9=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 268  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[909]);}}}}

/* k37843 in a37797 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37802(2,t3,t2);}

/* k37833 in a37797 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_37802(2,t3,t2);}

/* k37800 in a37797 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37802,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[539],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[759],lf[29],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6318(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6318,2,t0,t1);}
t2=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6320,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6611,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37792,a[2]=((C_word)li610),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 353  ##sys#register-macro");
t5=C_retrieve(lf[744]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[908],t4);}

/* a37791 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37792(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_37792r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_37792r(t0,t1,t2,t3);}}

static void C_ccall f_37792r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 354  expand-send");
t4=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word t81;
C_word ab[207],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6611,2,t0,t1);}
t2=C_mutate((C_word*)lf[42]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6613,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[44]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6624,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[47]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6653,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[48]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6663,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[49]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6673,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[50]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6683,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[51]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6693,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[52]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6707,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[53]+1,*((C_word*)lf[54]+1));
t11=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6722,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6728,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6751,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6889,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[60]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6929,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[61]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6939,a[2]=((C_word)li29),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[62]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7000,a[2]=((C_word)li32),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[64],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7099,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[65],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7185,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[66],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7226,a[2]=((C_word)li36),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[67],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7253,a[2]=((C_word)li37),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[68],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7280,a[2]=((C_word)li38),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[69],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7298,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[70],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7309,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[71],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7324,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[72],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7331,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[73],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7338,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[74],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7357,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[75],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7376,a[2]=((C_word)li45),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[76],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7397,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[77],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7400,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[78],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7407,a[2]=((C_word)li48),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[79],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7436,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[80],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7439,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[81],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7442,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[82],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7445,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[83],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7456,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate(&lf[84],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7474,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate(&lf[85],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7481,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate(&lf[86],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7484,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[87],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7491,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[88],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7494,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[89]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7513,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[90]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7547,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[92]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7658,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[93]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7673,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[95]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7715,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[97]+1,*((C_word*)lf[98]+1));
t49=C_mutate((C_word*)lf[99]+1,*((C_word*)lf[100]+1));
t50=C_mutate((C_word*)lf[101]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7741,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[102]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7762,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[107]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7802,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[112]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8038,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[113]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8053,a[2]=((C_word)li74),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate(&lf[114],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8068,a[2]=((C_word)li76),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[119]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8154,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[121]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8200,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate((C_word*)lf[123]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8267,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate((C_word*)lf[126]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8400,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate((C_word*)lf[129]+1,C_retrieve2(lf[76],"tb:ran-set!"));
t61=C_mutate((C_word*)lf[122]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8508,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate((C_word*)lf[130]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8543,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate((C_word*)lf[131]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8564,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate((C_word*)lf[132]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8607,a[2]=((C_word)li87),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[136]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8835,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate((C_word*)lf[139]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8934,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate((C_word*)lf[140]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8989,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[141]+1,C_retrieve2(lf[79],"tb:ranlow"));
t69=C_mutate((C_word*)lf[142]+1,C_retrieve2(lf[80],"tb:ranhigh"));
t70=C_mutate((C_word*)lf[143]+1,C_retrieve2(lf[81],"tb:ranmiddle"));
t71=C_mutate((C_word*)lf[144]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9031,a[2]=((C_word)li94),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate((C_word*)lf[148]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9259,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate((C_word*)lf[149]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9278,a[2]=((C_word)li96),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate((C_word*)lf[150]+1,C_retrieve2(lf[85],"tb:rancauchy"));
t75=C_mutate((C_word*)lf[151]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9319,a[2]=((C_word)li97),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate((C_word*)lf[153]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9338,a[2]=((C_word)li98),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate((C_word*)lf[154]+1,C_retrieve2(lf[88],"tb:ranbrown"));
t78=C_mutate((C_word*)lf[155]+1,C_retrieve2(lf[87],"tb:ranpink"));
t79=C_mutate((C_word*)lf[156]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9359,a[2]=((C_word)li102),tmp=(C_word)a,a+=3,tmp));
t80=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9568,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  make-hash-table");
t81=C_retrieve(lf[889]);
((C_proc3)C_retrieve_proc(t81))(3,t81,t80,*((C_word*)lf[907]+1));}

/* k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9568(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9568,2,t0,t1);}
t2=C_mutate(&lf[159],t1);
t3=C_SCHEME_END_OF_LIST;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9571,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37576,a[2]=t7,a[3]=t4,a[4]=((C_word)li609),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_37576(t9,t5,C_fix(0));}

/* do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_37576(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37576,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(128)))){
t3=(C_word)C_a_i_list(&a,5,lf[893],C_fix(-1),lf[894],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37589,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t5=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_retrieve2(lf[159],"*notes*"),lf[895],t3);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37790,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  modulo");
t4=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(12));}}

/* k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37790,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[896],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37599,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37610,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  modulo");
t6=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t0)[4],C_fix(12));}

/* k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37610,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],lf[897]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],lf[898]);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37622,a[2]=t3,a[3]=t2,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 375  tb:keynum->hertz");
f_7376(t4,((C_word*)t0)[4]);}

/* k37620 in k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37622,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_37626,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],lf[906]);
C_trace("ChickenBridge.scm: 375  tb:keynum->hertz");
f_7376(t2,t3);}

/* k37624 in k37620 in k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37630,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],lf[905]);
C_trace("ChickenBridge.scm: 375  tb:keynum->hertz");
f_7376(t2,t3);}

/* k37628 in k37624 in k37620 in k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_37774,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_a_i_divide(&a,2,((C_word*)t0)[7],C_fix(12));
C_trace("ChickenBridge.scm: 375  floor");
t4=*((C_word*)lf[170]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k37772 in k37628 in k37624 in k37620 in k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37774,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37636,a[2]=((C_word*)t0)[10],a[3]=t4,a[4]=((C_word)li608),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_37636(t6,((C_word*)t0)[9],((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do680 in k37772 in k37628 in k37624 in k37620 in k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_37636(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10,C_word t11,C_word t12,C_word t13){
C_word tmp;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[40],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37636,NULL,14,t0,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11,t12,t13);}
t14=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t18=t1;
((C_proc2)(void*)(*((C_word*)t18+1)))(2,t18,C_SCHEME_FALSE);}
else{
t18=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_37646,a[2]=t17,a[3]=t16,a[4]=t15,a[5]=t14,a[6]=t9,a[7]=t8,a[8]=t7,a[9]=t6,a[10]=t5,a[11]=t4,a[12]=t3,a[13]=t1,a[14]=((C_word*)t0)[3],a[15]=t2,tmp=(C_word)a,a+=16,tmp);
t19=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_37656,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t8,a[5]=t6,a[6]=t9,a[7]=t5,a[8]=t17,a[9]=t4,a[10]=t7,a[11]=t3,a[12]=t16,a[13]=t15,a[14]=t14,a[15]=t18,tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(0)))){
t20=(C_word)C_i_car(t2);
t21=t19;
f_37656(t21,(C_word)C_i_string_equal_p(t20,lf[904]));}
else{
t20=t19;
f_37656(t20,C_SCHEME_FALSE);}}}

/* k37654 in do680 in k37772 in k37628 in k37624 in k37620 in k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_37656(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37656,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[15];
f_37646(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_37659,a[2]=((C_word*)t0)[15],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],tmp=(C_word)a,a+=16,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t3,lf[902]))){
t4=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[14])+1,t4);
t6=t2;
f_37659(t6,t5);}
else{
t4=(C_word)C_i_car(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_string_equal_p(t4,lf[903]))){
t5=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[14])[1],C_fix(1));
t6=C_mutate(((C_word *)((C_word*)t0)[14])+1,t5);
t7=t2;
f_37659(t7,t6);}
else{
t5=t2;
f_37659(t5,C_SCHEME_UNDEFINED);}}}}

/* k37657 in k37654 in do680 in k37772 in k37628 in k37624 in k37620 in k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_37659(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37659,NULL,2,t0,t1);}
t2=(C_word)C_i_list_ref(lf[899],((C_word*)((C_word*)t0)[15])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[14])+1,t2);
t4=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_37667,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[14],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],tmp=(C_word)a,a+=15,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  string-append");
t6=*((C_word*)lf[162]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[14])[1]);}

/* k37665 in k37657 in k37654 in do680 in k37772 in k37628 in k37624 in k37620 in k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37667,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[14])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[14])[1],((C_word*)t0)[13],((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)((C_word*)t0)[10])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_37674,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t6=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[159],"*notes*"),((C_word*)((C_word*)t0)[14])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k37672 in k37665 in k37657 in k37654 in do680 in k37772 in k37628 in k37624 in k37620 in k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37674,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37677,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t4=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[159],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[8])[1]);}
else{
t4=t2;
f_37677(2,t4,C_SCHEME_UNDEFINED);}}

/* k37675 in k37672 in k37665 in k37657 in k37654 in do680 in k37772 in k37628 in k37624 in k37620 in k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37677,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_37681,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  string-append");
t4=*((C_word*)lf[162]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[901],((C_word*)((C_word*)t0)[8])[1]);}

/* k37679 in k37675 in k37672 in k37665 in k37657 in k37654 in do680 in k37772 in k37628 in k37624 in k37620 in k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37681,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10],((C_word*)t0)[9],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_37688,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t6=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[159],"*notes*"),((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k37686 in k37679 in k37675 in k37672 in k37665 in k37657 in k37654 in do680 in k37772 in k37628 in k37624 in k37620 in k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37688(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37688,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37691,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t4=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve2(lf[159],"*notes*"),((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=t2;
f_37691(2,t4,C_SCHEME_UNDEFINED);}}

/* k37689 in k37686 in k37679 in k37675 in k37672 in k37665 in k37657 in k37654 in do680 in k37772 in k37628 in k37624 in k37620 in k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_37695,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 375  string-append");
t4=*((C_word*)lf[162]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,t3,lf[900],((C_word*)((C_word*)t0)[6])[1]);}

/* k37693 in k37689 in k37686 in k37679 in k37675 in k37672 in k37665 in k37657 in k37654 in do680 in k37772 in k37628 in k37624 in k37620 in k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37695,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8],((C_word*)t0)[7],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37702,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t6=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve2(lf[159],"*notes*"),((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[5])[1]);}

/* k37700 in k37693 in k37689 in k37686 in k37679 in k37675 in k37672 in k37665 in k37657 in k37654 in do680 in k37772 in k37628 in k37624 in k37620 in k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_eqp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t3=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],C_retrieve2(lf[159],"*notes*"),((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=((C_word*)t0)[4];
f_37646(2,t3,C_SCHEME_UNDEFINED);}}

/* k37644 in do680 in k37772 in k37628 in k37624 in k37620 in k37608 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[15]);
t3=((C_word*)((C_word*)t0)[14])[1];
f_37636(t3,((C_word*)t0)[13],t2,((C_word*)t0)[12],((C_word*)t0)[11],((C_word*)t0)[10],((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k37597 in k37788 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37599,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_37576(t3,((C_word*)t0)[2],t2);}

/* k37587 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37592,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-set!");
t3=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve2(lf[159],"*notes*"),C_fix(-1),((C_word*)t0)[2]);}

/* k37590 in k37587 in do674 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}

/* k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9571,2,t0,t1);}
t2=C_mutate(&lf[160],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9573,a[2]=((C_word)li105),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[164],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9675,a[2]=((C_word)li108),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[172]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9728,a[2]=((C_word)li110),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[174]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9825,a[2]=((C_word)li112),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[176]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9947,a[2]=((C_word)li114),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[178]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10063,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[179]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10108,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[182]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10243,a[2]=((C_word)li123),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[184]+1,*((C_word*)lf[185]+1));
t11=C_mutate(&lf[186],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10551,a[2]=((C_word)li124),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[188],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10572,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[189],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10590,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[190],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10608,a[2]=((C_word)li127),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[191],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10626,a[2]=((C_word)li128),tmp=(C_word)a,a+=3,tmp));
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10636,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37566,a[2]=((C_word)li607),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  ##sys#register-record-printer");
t18=C_retrieve(lf[880]);
((C_proc4)C_retrieve_proc(t18))(4,t18,t16,lf[187],t17);}

/* a37565 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37566(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37566,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37574,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spektrum-freqs");
t5=C_retrieve2(lf[190],"spektrum-freqs");
f_10608(3,t5,t4,t2);}

/* k37572 in a37565 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  fprintf");
t2=C_retrieve(lf[877]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[892],t1);}

/* k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word t74;
C_word t75;
C_word t76;
C_word t77;
C_word t78;
C_word t79;
C_word t80;
C_word ab[222],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10636,2,t0,t1);}
t2=C_mutate((C_word*)lf[192]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10638,a[2]=((C_word)li129),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[194]+1,C_retrieve2(lf[189],"spektrum-size"));
t4=C_mutate((C_word*)lf[195]+1,C_retrieve2(lf[190],"spektrum-freqs"));
t5=C_mutate((C_word*)lf[196]+1,C_retrieve2(lf[191],"spektrum-amps"));
t6=C_mutate((C_word*)lf[197]+1,C_retrieve2(lf[188],"spektrum-time"));
t7=C_mutate((C_word*)lf[198]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10668,a[2]=((C_word)li131),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[200]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10727,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[201]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10737,a[2]=((C_word)li133),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[202]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10755,a[2]=((C_word)li135),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[205]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10786,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[207]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11049,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[213]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11756,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[217],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12069,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[219],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12081,a[2]=((C_word)li156),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[221],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12090,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[222],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12108,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[223],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12126,a[2]=((C_word)li159),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[224],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12153,a[2]=((C_word)li160),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[225],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12162,a[2]=((C_word)li161),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[226],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12180,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[227],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12225,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[229],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12240,a[2]=((C_word)li164),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[230],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12249,a[2]=((C_word)li165),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[231],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12258,a[2]=((C_word)li166),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[232],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12276,a[2]=((C_word)li167),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[233],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12285,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[234],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12294,a[2]=((C_word)li169),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[235],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12312,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[236],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12321,a[2]=((C_word)li171),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[237],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12330,a[2]=((C_word)li172),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[238],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12339,a[2]=((C_word)li173),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[239],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12348,a[2]=((C_word)li174),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[240],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12465,a[2]=((C_word)li175),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate(&lf[241],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12474,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate(&lf[242],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12529,a[2]=((C_word)li177),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate(&lf[246],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12539,a[2]=((C_word)li179),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[254]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12719,a[2]=((C_word)li180),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[256]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12738,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[258]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12757,a[2]=((C_word)li184),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate(&lf[259],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12880,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate(&lf[260],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13181,a[2]=((C_word)li188),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate(&lf[253],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13190,a[2]=((C_word)li189),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate(&lf[261],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13236,a[2]=((C_word)li191),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[265]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13351,a[2]=((C_word)li193),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate(&lf[266],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13606,a[2]=((C_word)li194),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate(&lf[269],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13678,a[2]=((C_word)li195),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate(&lf[271],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13687,a[2]=((C_word)li196),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[272]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13767,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate(&lf[273],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14237,a[2]=((C_word)li199),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[277]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14452,a[2]=((C_word)li201),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate(&lf[278],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14699,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[279]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14735,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate(&lf[280],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14998,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[281]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15074,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate(&lf[282],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15548,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate(&lf[284],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15770,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[286],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15779,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[287],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15788,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[288],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15806,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[289],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15824,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp));
t62=C_mutate(&lf[290],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15842,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t63=C_mutate(&lf[291],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15851,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp));
t64=C_mutate(&lf[292],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15860,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t65=C_mutate((C_word*)lf[293]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15943,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp));
t66=C_mutate(&lf[294],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16710,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t67=C_mutate(&lf[295],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16822,a[2]=((C_word)li232),tmp=(C_word)a,a+=3,tmp));
t68=C_mutate((C_word*)lf[300]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17255,a[2]=((C_word)li237),tmp=(C_word)a,a+=3,tmp));
t69=C_mutate(&lf[301],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17742,a[2]=((C_word)li244),tmp=(C_word)a,a+=3,tmp));
t70=C_mutate(&lf[310],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18082,a[2]=((C_word)li245),tmp=(C_word)a,a+=3,tmp));
t71=C_mutate((C_word*)lf[312]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18145,a[2]=((C_word)li250),tmp=(C_word)a,a+=3,tmp));
t72=C_mutate(&lf[313],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18663,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp));
t73=C_mutate((C_word*)lf[319]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18757,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp));
t74=C_mutate(&lf[345],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19779,a[2]=((C_word)li276),tmp=(C_word)a,a+=3,tmp));
t75=C_mutate(&lf[347],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19800,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp));
t76=C_mutate(&lf[348],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19818,a[2]=((C_word)li278),tmp=(C_word)a,a+=3,tmp));
t77=C_mutate(&lf[349],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19836,a[2]=((C_word)li279),tmp=(C_word)a,a+=3,tmp));
t78=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19846,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t79=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37552,a[2]=((C_word)li606),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-record-printer");
t80=C_retrieve(lf[880]);
((C_proc4)C_retrieve_proc(t80))(4,t80,t78,lf[346],t79);}

/* a37551 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37552(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37552,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37560,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-type");
f_19800(t4,t2);}

/* k37558 in a37551 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37560,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37564,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-string");
f_19818(t2,((C_word*)t0)[2]);}

/* k37562 in k37558 in a37551 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[877]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[891],((C_word*)t0)[2],t1);}

/* k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19846,2,t0,t1);}
t2=C_mutate(&lf[350],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19848,a[2]=((C_word)li280),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[352],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19877,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[353],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19889,a[2]=((C_word)li282),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19897,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-hash-table");
t6=C_retrieve(lf[889]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[890]+1));}

/* k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19897,2,t0,t1);}
t2=C_mutate(&lf[354],t1);
t3=C_mutate(&lf[355],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19899,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[357],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19920,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20002,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37542,a[2]=((C_word)li605),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-record-printer");
t7=C_retrieve(lf[880]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[356],t6);}

/* a37541 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37542(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37542,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37550,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  rule-name");
f_19920(t4,t2);}

/* k37548 in a37541 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[877]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[888],t1);}

/* k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20002,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20005,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37439,a[2]=((C_word)li604),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-macro");
t4=C_retrieve(lf[744]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[887],t3);}

/* a37438 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37439(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_37439r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_37439r(t0,t1,t2,t3,t4);}}

static void C_ccall f_37439r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37442,a[2]=t6,a[3]=((C_word)li603),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[884],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37502,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k37500 in a37438 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37502,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37506,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_37442(t3,t2,((C_word*)t0)[2]);}

/* k37504 in k37500 in a37438 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37506,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_37520,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_37520(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_37520(t7,(C_word)C_i_nullp(t6));}}

/* k37518 in k37504 in k37500 in a37438 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_37520(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37520,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[885],((C_word*)t0)[6],lf[884],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[759],lf[886],lf[884],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[1],((C_word*)t0)[2],t4));}

/* ppat in a37438 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_37442(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_37442,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[882]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37462,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[883]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[539],t2):t2));}}}

/* k37460 in ppat in a37438 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37462,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37466,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_37442(t4,t2,t3);}

/* k37464 in k37460 in ppat in a37438 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37466,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[796],((C_word*)t0)[2],t1));}

/* k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20005,2,t0,t1);}
t2=C_mutate(&lf[358],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20007,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[237],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20028,a[2]=((C_word)li286),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[360],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20031,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[361],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20043,a[2]=((C_word)li288),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[362],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20049,a[2]=((C_word)li289),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[363],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20059,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[364],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20117,a[2]=((C_word)li291),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[365],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20149,a[2]=((C_word)li292),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[367],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20170,a[2]=((C_word)li293),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[368],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20188,a[2]=((C_word)li294),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20198,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37425,a[2]=((C_word)li602),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-record-printer");
t14=C_retrieve(lf[880]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[366],t13);}

/* a37424 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37425(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37425,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37433,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-error-string");
f_20170(t4,t2);}

/* k37431 in a37424 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37433,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37437,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-error-position");
f_20188(t2,((C_word*)t0)[2]);}

/* k37435 in k37431 in a37424 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[877]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[881],((C_word*)t0)[2],t1);}

/* k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20198,2,t0,t1);}
t2=C_mutate(&lf[369],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20200,a[2]=((C_word)li295),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[371],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20206,a[2]=((C_word)li296),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[372],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20221,a[2]=((C_word)li297),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[373],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20239,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[374],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20257,a[2]=((C_word)li299),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20267,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37399,a[2]=((C_word)li601),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  ##sys#register-record-printer");
t9=C_retrieve(lf[880]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[370],t8);}

/* a37398 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37399(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37399,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37403,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_20221(t4,t2);}

/* k37401 in a37398 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37403,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37409,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalRuleType?");
f_21479(t2,t1);}

/* k37407 in k37401 in a37398 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37409,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37416,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37420,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  get-rule");
f_20007(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[877]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[879],((C_word*)t0)[2]);}}

/* k37418 in k37407 in k37401 in a37398 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  rule-name");
f_19920(((C_word*)t0)[2],t1);}

/* k37414 in k37407 in k37401 in a37398 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  fprintf");
t2=C_retrieve(lf[877]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[878],t1);}

/* k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20267,2,t0,t1);}
t2=C_mutate(&lf[375],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20269,a[2]=((C_word)li300),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[377],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20285,a[2]=((C_word)li301),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[379],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20317,a[2]=((C_word)li302),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[380],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20329,a[2]=((C_word)li303),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[381],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20339,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[383],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20357,a[2]=((C_word)li305),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[392],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20390,a[2]=((C_word)li306),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[395],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20598,a[2]=((C_word)li308),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[396],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20606,a[2]=((C_word)li311),tmp=(C_word)a,a+=3,tmp));
t11=lf[397]=C_SCHEME_FALSE;;
t12=C_mutate(&lf[398],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20710,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[376],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21329,a[2]=((C_word)li326),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[391],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21377,a[2]=((C_word)li327),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[394],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21479,a[2]=((C_word)li328),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[378],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21491,a[2]=((C_word)li329),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21512,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37377,a[2]=t17,tmp=(C_word)a,a+=3,tmp);
t19=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3328),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(2816),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[387],t21);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t18,lf[876],C_fix(25856),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k37375 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(25856),t1);}

/* k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21515,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37357,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[875],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k37355 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(26112),t1);}

/* k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21515,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21518,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37317,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[387],t10);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[874],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k37315 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(26368),t1);}

/* k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21518,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21521,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37207,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[98],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[386],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37213,a[2]=((C_word)li599),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37223,a[2]=((C_word)li600),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[873],C_fix(26624),t9,t10,t11);}

/* a37222 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37223(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37223,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37227,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_20317(t5,lf[867],t3);}

/* k37225 in a37222 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37227(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37227,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37230,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t2,((C_word*)t0)[2]);}

/* k37228 in k37225 in a37222 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37230,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 378  emit");
f_20357(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[589]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37248,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_20329(t3,lf[867],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k37246 in k37228 in k37225 in a37222 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37248,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37251,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k37249 in k37246 in k37228 in k37225 in a37222 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37251,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37254,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37282,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_20317(t5,lf[867],((C_word*)t0)[2]);}

/* k37280 in k37249 in k37246 in k37228 in k37225 in a37222 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37282,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[868]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[872],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37254(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[539],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_37254(t5,t4);}}

/* k37252 in k37249 in k37246 in k37228 in k37225 in a37222 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_37254(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_37254,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37260,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_20317(t2,lf[835],((C_word*)t0)[2]);}

/* k37258 in k37252 in k37249 in k37246 in k37228 in k37225 in a37222 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37260,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[589]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a37212 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37213(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37213,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k37205 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(26624),t1);}

/* k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21524,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37107,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[386],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37115,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_20598(t10,C_fix(27648));}

/* k37113 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37115,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37117,a[2]=((C_word)li598),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(((C_word*)t0)[3],lf[871],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a37116 in k37113 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37117(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37117,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37121,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t5,t2);}

/* k37119 in a37116 in k37113 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37121,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_37124,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t2,t3,C_fix(5376));}

/* k37122 in k37119 in a37116 in k37113 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37124,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37127,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_20317(t2,lf[867],((C_word*)t0)[4]);}

/* k37125 in k37122 in k37119 in a37116 in k37113 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37127(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37127,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_37130,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_37130(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37159,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[869]:lf[870]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_37167,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_20257(t5,t6);}}

/* k37165 in k37125 in k37122 in k37119 in a37116 in k37113 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_20149(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k37157 in k37125 in k37122 in k37119 in a37116 in k37113 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k37128 in k37125 in k37122 in k37119 in a37116 in k37113 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37130,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37133,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k37131 in k37128 in k37125 in k37122 in k37119 in a37116 in k37113 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37133,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37136,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  set-emit-info!");
f_20339(t2,lf[867],lf[868],((C_word*)t0)[2]);}

/* k37134 in k37131 in k37128 in k37125 in k37122 in k37119 in a37116 in k37113 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37136,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[865],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[866],((C_word*)t0)[2])));}

/* k37105 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(27648),t1);}

/* k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21524,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21527,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37079,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[387],t7);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[864],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k37077 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(26880),t1);}

/* k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21527,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21530,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37019,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[386],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37025,a[2]=((C_word)li596),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37043,a[2]=((C_word)li597),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[863],C_fix(27136),t8,t9,t10);}

/* a37042 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37043(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_37043,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_37051,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_37055,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t6,t2);}

/* k37053 in a37042 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20357(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k37049 in a37042 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_37051,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[54],t1));}

/* a37024 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37025(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_37025,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k37017 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_37019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(27136),t1);}

/* k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21530,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21533,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36896,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[401],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[386],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36902,a[2]=((C_word)li594),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36933,a[2]=((C_word)li595),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[862],C_fix(27392),t14,t15,t16);}

/* a36932 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36933(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36933,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36937,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t5,t2);}

/* k36935 in a36932 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36937,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36940,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36938 in k36935 in a36932 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36940,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36943,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36941 in k36938 in k36935 in a36932 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36943,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36956,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k36954 in k36941 in k36938 in k36935 in a36932 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36956,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[20],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a36901 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36902(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36902,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36906,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  sixth");
t5=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k36904 in a36901 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36906(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36906,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36921,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k36919 in k36904 in a36901 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36921,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k36894 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(27392),t1);}

/* k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21533(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21533,2,t0,t1);}
t2=C_mutate(&lf[405],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21535,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21589,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36776,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[94],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[386],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[387],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36782,a[2]=((C_word)li593),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t4,lf[861],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a36781 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36782(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36782,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36798,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t4,t8,C_fix(256));}
else{
t7=t4;
f_36798(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_36798(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k36796 in a36781 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36798(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36798,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36809,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21535(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k36807 in k36796 in a36781 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36809,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k36774 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(28416),t1);}

/* k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21589,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21592,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36637,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[94],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[386],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[386],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[387],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36643,a[2]=((C_word)li592),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[860],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a36642 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36643(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36643,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36663,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36666,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t7,t11,C_fix(256));}
else{
t10=t7;
f_36666(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_36666(2,t9,C_SCHEME_FALSE);}}

/* k36664 in a36642 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21535(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_36663(2,t2,C_SCHEME_END_OF_LIST);}}

/* k36661 in a36642 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36663,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k36635 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(28672),t1);}

/* k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21592,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21595,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36485,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[386],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[386],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[386],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[387],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36491,a[2]=((C_word)li591),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[859],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a36490 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36491(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36491,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36509,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t10,t7,C_fix(768));}

/* k36507 in a36490 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36509,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36518,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t2,t3,C_fix(256));}}

/* k36516 in k36507 in a36490 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k36483 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(28160),t1);}

/* k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21595,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21598,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36414,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36420,a[2]=((C_word)li589),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36438,a[2]=((C_word)li590),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[858],C_fix(27904),t6,t7,t8);}

/* a36437 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36438(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36438,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36442,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t5,t2);}

/* k36440 in a36437 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36442,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36445,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36443 in k36440 in a36437 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36445,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36461,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k36459 in k36443 in k36440 in a36437 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36461,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a36419 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36420(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36420,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k36412 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(27904),t1);}

/* k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21598,2,t0,t1);}
t2=C_mutate(&lf[406],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21600,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[407],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21621,a[2]=((C_word)li335),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21737,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36338,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[387],t21);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t5,lf[857],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k36336 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(28928),t1);}

/* k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21737,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21740,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36258,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[98],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[386],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36264,a[2]=((C_word)li588),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[856],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a36263 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36264(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36264,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36271,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 378  is-op?");
f_21600(t4,t7);}
else{
t6=t4;
f_36271(2,t6,C_SCHEME_FALSE);}}

/* k36269 in a36263 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36271,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 378  inf->pre");
f_21621(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k36256 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(29184),t1);}

/* k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21740,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21743,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36122,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[386],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[386],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[387],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36128,a[2]=((C_word)li586),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36154,a[2]=((C_word)li587),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[855],C_fix(29440),t23,t24,t25);}

/* a36153 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36154(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_36154,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_36162,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t5,t2);}

/* k36160 in a36153 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20357(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a36127 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36128(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_36128,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36136,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_36145,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t5,t6,C_fix(512));}
else{
t5=t4;
f_36136(t5,t2);}}

/* k36143 in a36127 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_36136(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k36134 in a36127 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_36136(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k36120 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(29440),t1);}

/* k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21743,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21746,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_36078,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[387],t11);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[854],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k36076 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(29696),t1);}

/* k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21746,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21749,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35968,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[98],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[386],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35974,a[2]=((C_word)li583),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35996,a[2]=((C_word)li585),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[853],C_fix(33536),t10,t11,t12);}

/* a35995 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35996(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35996,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[435]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_36007,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t8,t2);}

/* k36005 in a35995 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36007,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_36009,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li584),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_36009(t5,((C_word*)t0)[2],t1);}

/* do3331 in k36005 in a35995 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_36009(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_36009,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_36038,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k36036 in do3331 in k36005 in a35995 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_36038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_36038,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_36009(t7,((C_word*)t0)[2],t6);}

/* a35973 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35974(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35974,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35990,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21535(t5,t6,C_fix(256));}

/* k35988 in a35973 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35990,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k35966 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35968(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(33536),t1);}

/* k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21749,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21752,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35893,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[98],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[386],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35899,a[2]=((C_word)li581),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35921,a[2]=((C_word)li582),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[852],C_fix(34560),t10,t11,t12);}

/* a35920 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35921(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35921,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35925,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t5,t2);}

/* k35923 in a35920 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35925,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35932,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k35930 in k35923 in a35920 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35932,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[718],t1));}

/* a35898 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35899(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35899,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35915,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21535(t5,t6,C_fix(256));}

/* k35913 in a35898 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35915,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k35891 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(34560),t1);}

/* k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21752,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21755,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35680,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[386],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[387],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[401],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[386],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35686,a[2]=((C_word)li578),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35761,a[2]=((C_word)li580),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[851],C_fix(34304),t21,t22,t23);}

/* a35760 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35761(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35761,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35765,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35801,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t6,t2);}

/* k35799 in a35760 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20357(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k35763 in a35760 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35765,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35781,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li579),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  expand-send");
t6=C_retrieve(lf[30]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a35780 in k35763 in a35760 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35781(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_35781r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_35781r(t0,t1,t2,t3);}}

static void C_ccall f_35781r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35789,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35793,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[31]),t2,t3);}

/* k35791 in a35780 in k35763 in a35760 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35793,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35797,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_20257(t2,((C_word*)t0)[2]);}

/* k35795 in k35791 in a35780 in k35763 in a35760 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_20149(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35787 in a35780 in k35763 in a35760 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a35685 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35686(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35686,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35693,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35729,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t12=(C_word)C_i_cdr(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=t11;
f_35729(2,t13,C_SCHEME_FALSE);}
else{
t13=(C_word)C_i_cadr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t11,t13,C_fix(256));}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_35693(t10,t9);}}

/* k35727 in a35685 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35729,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35733,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,t3,t4);}
else{
t2=((C_word*)t0)[2];
f_35693(t2,C_SCHEME_UNDEFINED);}}

/* k35731 in k35727 in a35685 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_35693(t3,t2);}

/* k35691 in a35685 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_35693(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_35693,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35704,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_20257(t4,t5);}

/* k35702 in k35691 in a35685 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k35678 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(34304),t1);}

/* k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21755(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21755,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21758,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35654,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35660,a[2]=((C_word)li577),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[850],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a35659 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35660(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35660,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k35652 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(33792),t1);}

/* k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21758,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21761,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35626,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35634,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_20598(t7,C_fix(35072));}

/* k35632 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35638,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-emitter");
f_20606(t2,lf[446]);}

/* k35636 in k35632 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(((C_word*)t0)[4],lf[849],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35624 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(35072),t1);}

/* k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21761,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21764,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35598,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35606,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_20598(t7,C_fix(35584));}

/* k35604 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35606,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35610,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-emitter");
f_20606(t2,lf[445]);}

/* k35608 in k35604 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(((C_word*)t0)[4],lf[848],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35596 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(35584),t1);}

/* k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21764,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21767,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35570,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35578,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_20598(t7,C_fix(35328));}

/* k35576 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35578,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35582,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-emitter");
f_20606(t2,lf[847]);}

/* k35580 in k35576 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(((C_word*)t0)[4],lf[846],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35568 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(35328),t1);}

/* k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21767,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21770,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35542,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35550,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_20598(t7,C_fix(34816));}

/* k35548 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35550(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35550,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35554,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-emitter");
f_20606(t2,lf[456]);}

/* k35552 in k35548 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(((C_word*)t0)[4],lf[845],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k35540 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(34816),t1);}

/* k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21770,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21773,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35405,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[387],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[386],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[387],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[98],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[386],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35411,a[2]=((C_word)li575),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35441,a[2]=((C_word)li576),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[844],C_fix(36096),t22,t23,t24);}

/* a35440 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35441(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35441,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[843]);}

/* a35410 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35411(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35411,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35435,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21535(t6,t7,C_fix(256));}

/* k35433 in a35410 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35435,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k35403 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(36096),t1);}

/* k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21773,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21776,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35347,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35355,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_20598(t7,C_fix(31744));}

/* k35353 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35355,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35357,a[2]=((C_word)li574),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(((C_word*)t0)[3],lf[842],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a35356 in k35353 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35357(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35357,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35361,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t5,t2);}

/* k35359 in a35356 in k35353 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35361,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35364,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35389,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_20317(t3,lf[823],((C_word*)t0)[3]);}

/* k35387 in k35359 in a35356 in k35353 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35389,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_35364(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35377,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35381,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_20257(t3,t4);}}

/* k35379 in k35387 in k35359 in a35356 in k35353 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35381(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_20149(((C_word*)t0)[2],lf[841],t1);}

/* k35375 in k35387 in k35359 in a35356 in k35353 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k35362 in k35359 in a35356 in k35353 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20357(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k35345 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(31744),t1);}

/* k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21776,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21779,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35286,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35294,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_20598(t7,C_fix(31488));}

/* k35292 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35296,a[2]=((C_word)li573),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(((C_word*)t0)[3],lf[840],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a35295 in k35292 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35296(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35296,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35300,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t5,t2);}

/* k35298 in a35295 in k35292 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35300,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35303,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35331,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_20317(t3,lf[809],((C_word*)t0)[3]);}

/* k35329 in k35298 in a35295 in k35292 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35331,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_35303(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35319,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35323,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_20257(t3,t4);}}

/* k35321 in k35329 in k35298 in a35295 in k35292 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_20149(((C_word*)t0)[2],lf[839],t1);}

/* k35317 in k35329 in k35298 in a35295 in k35292 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35319(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k35301 in k35298 in a35295 in k35292 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_35306,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  set-emit-info!");
f_20339(t2,lf[809],lf[808],((C_word*)t0)[3]);}

/* k35304 in k35301 in k35298 in a35295 in k35292 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20357(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k35284 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(31488),t1);}

/* k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21779,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21782,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35195,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[386],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[387],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35201,a[2]=((C_word)li570),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35236,a[2]=((C_word)li572),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[838],C_fix(30208),t10,t11,t12);}

/* a35235 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35236(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35236,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35242,a[2]=t4,a[3]=t3,a[4]=((C_word)li571),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35250,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t6,t2);}

/* k35248 in a35235 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a35241 in a35235 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35242(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35242,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a35200 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35201(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35201,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35234,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(t4,C_fix(4608),lf[837],C_SCHEME_FALSE);}}

/* k35232 in a35200 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35234,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k35193 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35195(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(30208),t1);}

/* k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21782,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21785,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35093,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[98],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[386],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35099,a[2]=((C_word)li567),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35142,a[2]=((C_word)li569),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[836],C_fix(29952),t10,t11,t12);}

/* a35141 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35142(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_35142,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35146,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_20329(t5,lf[835],C_SCHEME_TRUE,t3);}

/* k35144 in a35141 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35146,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_35151,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li568),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35159,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t3,((C_word*)t0)[2]);}

/* k35157 in k35144 in a35141 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a35150 in k35144 in a35141 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35151(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_35151,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a35098 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35099(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35099,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_35132,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21535(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k35130 in a35098 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_35132,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k35091 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(29952),t1);}

/* k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21785,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21788,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35007,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[387],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[386],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_35013,a[2]=((C_word)li566),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[834],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a35012 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35013(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_35013,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k35005 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_35007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(30720),t1);}

/* k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21788,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21791,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34727,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[98],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[386],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34733,a[2]=((C_word)li563),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34776,a[2]=((C_word)li565),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[833],C_fix(30464),t10,t11,t12);}

/* a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34776(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34776,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34780,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t5,t2);}

/* k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34780,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[412]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34788,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li564),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_34788(t8,((C_word*)t0)[2],t1);}

/* do3410 in k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_34788(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34788,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34811,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t3,t4);}}

/* k34809 in do3410 in k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34811,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_34814,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34812 in k34809 in do3410 in k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34814,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_34817,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_20221(t2,t3);}

/* k34815 in k34812 in k34809 in do3410 in k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34817,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34820,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34818 in k34815 in k34812 in k34809 in do3410 in k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34820,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34823,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34880,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t5,((C_word*)t0)[2],C_fix(10756));}

/* k34878 in k34818 in k34815 in k34812 in k34809 in do3410 in k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34880(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34880,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_34823(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34887,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k34885 in k34878 in k34818 in k34815 in k34812 in k34809 in do3410 in k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34887,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_34823(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34897,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k34895 in k34885 in k34878 in k34818 in k34815 in k34812 in k34809 in do3410 in k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34897,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[98],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_34823(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34907,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k34905 in k34895 in k34885 in k34878 in k34818 in k34815 in k34812 in k34809 in do3410 in k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34907,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[589],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_34823(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34921,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k34919 in k34905 in k34895 in k34885 in k34878 in k34818 in k34815 in k34812 in k34809 in do3410 in k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34921,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[796],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_34823(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34931,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k34929 in k34919 in k34905 in k34895 in k34885 in k34878 in k34818 in k34815 in k34812 in k34809 in do3410 in k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34931,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_34823(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34941,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k34939 in k34929 in k34919 in k34905 in k34895 in k34885 in k34878 in k34818 in k34815 in k34812 in k34809 in do3410 in k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34941,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[331],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_34823(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34951,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k34949 in k34939 in k34929 in k34919 in k34905 in k34895 in k34885 in k34878 in k34818 in k34815 in k34812 in k34809 in do3410 in k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34951,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[264],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34823(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_34823(t2,C_SCHEME_UNDEFINED);}}

/* k34821 in k34818 in k34815 in k34812 in k34809 in do3410 in k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_34823(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34823,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34826,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34847,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_34847(t5,(C_word)C_eqp(t4,lf[54]));}
else{
t4=t3;
f_34847(t4,C_SCHEME_FALSE);}}

/* k34845 in k34821 in k34818 in k34815 in k34812 in k34809 in do3410 in k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_34847(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34847,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[832],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[214],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_34826(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34826(t4,t3);}}

/* k34824 in k34821 in k34818 in k34815 in k34812 in k34809 in do3410 in k34778 in a34775 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_34826(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34826,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_34788(t7,((C_word*)t0)[2],t6);}

/* a34732 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34733(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34733,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34766,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21535(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k34764 in a34732 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34766,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k34725 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(30464),t1);}

/* k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21791,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21794,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34613,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[401],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[98],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[386],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34619,a[2]=((C_word)li561),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34645,a[2]=((C_word)li562),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[831],C_fix(32000),t12,t13,t14);}

/* a34644 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34645(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34645,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34649,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t5,t2);}

/* k34647 in a34644 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34649,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_34655,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k34653 in k34647 in a34644 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34655,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34675,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[412],t1));}}

/* k34673 in k34653 in k34647 in a34644 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34675,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* a34618 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34619(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34619,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34629,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_34629(t12,t11);}
else{
t10=t8;
f_34629(t10,C_SCHEME_FALSE);}}

/* k34627 in a34618 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_34629(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34629,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k34611 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(32000),t1);}

/* k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21797,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34416,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[401],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[401],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[386],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[386],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[386],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[387],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34422,a[2]=((C_word)li559),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34490,a[2]=((C_word)li560),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[830],C_fix(32256),t26,t27,t28);}

/* a34489 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34490(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_34490,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_34494,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t5,t2);}

/* k34492 in a34489 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20357(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a34421 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34422(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_34422,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34435,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_34441,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t9,t4,C_fix(14336));}

/* k34439 in a34421 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34441,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_34447,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_34447(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34476,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(t11,C_fix(4608),lf[829],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_34435(t5,t4);}}

/* k34474 in k34439 in a34421 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_34447(t3,t2);}

/* k34445 in k34439 in a34421 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_34447(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34447,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_34451,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k34449 in k34445 in k34439 in a34421 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_34451,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_34454,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_34454(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34465,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(t5,C_fix(4608),lf[828],C_SCHEME_FALSE);}}

/* k34463 in k34449 in k34445 in k34439 in a34421 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_34454(t3,t2);}

/* k34452 in k34449 in k34445 in k34439 in a34421 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_34454(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_34454,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_34435(t4,t3);}

/* k34433 in a34421 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_34435(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k34414 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(32256),t1);}

/* k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21797,2,t0,t1);}
t2=C_mutate(&lf[408],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21799,a[2]=((C_word)li336),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22320,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34144,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[386],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[401],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[386],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[386],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[387],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[401],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[401],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[386],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[387],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[401],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[386],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[387],t58);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t4,lf[827],C_fix(33024),t59,C_retrieve2(lf[408],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k34142 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(33024),t1);}

/* k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22320,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22323,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_34088,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[386],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[387],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_34096,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  simple-unit-parser");
f_20598(t13,C_fix(33280));}

/* k34094 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(((C_word*)t0)[3],lf[826],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k34086 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_34088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(33280),t1);}

/* k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22323(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22323,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22829,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33916,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[387],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[401],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[98],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[98],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[94],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[401],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[386],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33922,a[2]=((C_word)li553),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33968,a[2]=((C_word)li558),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[825],C_fix(32512),t25,t26,t27);}

/* a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33968(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33968,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22329,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t7,t2);}

/* k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22329,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22347,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22788,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t17,t18,C_fix(14864));}

/* k22786 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22788,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22792,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_20329(t2,lf[822],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22795,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22822,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_20317(t3,lf[811],((C_word*)((C_word*)t0)[6])[1]);}}

/* k22820 in k22786 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22822(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22822,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_22795(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22810,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22814,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_20257(t3,t4);}}

/* k22812 in k22820 in k22786 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22814(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_20149(((C_word*)t0)[2],lf[824],t1);}

/* k22808 in k22820 in k22786 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k22793 in k22786 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22795,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22799,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_20329(t2,lf[823],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k22797 in k22793 in k22786 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_22347(t4,t3);}

/* k22790 in k22786 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22347(t3,t2);}

/* k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22347(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22347,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22354,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22777,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22781,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_22354(t5,C_SCHEME_UNDEFINED);}}

/* k22779 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k22775 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22354(t3,t2);}

/* k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22354(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22354,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22357,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22652,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li557),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_22652(t7,t2,t3);}

/* do3520 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22652(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22652,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22662,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22673,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t4,t5);}}

/* k22671 in do3520 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22673,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22675,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li556),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_22675(t5,((C_word*)t0)[2],t1);}

/* do3523 in k22671 in do3520 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22675(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22675,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22689,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 378  append");
t9=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k22687 in do3523 in k22671 in do3520 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22689,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22692,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22742,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 378  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_22692(t4,C_SCHEME_UNDEFINED);}}

/* k22740 in k22687 in do3523 in k22671 in do3520 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22692(t3,t2);}

/* k22690 in k22687 in do3523 in k22671 in do3520 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22692(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22692,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22695,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22727,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 378  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_22695(t3,C_SCHEME_UNDEFINED);}}

/* k22725 in k22690 in k22687 in do3523 in k22671 in do3520 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22695(t3,t2);}

/* k22693 in k22690 in k22687 in do3523 in k22671 in do3520 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22695(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22695,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22698,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22708,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k22706 in k22693 in k22690 in k22687 in do3523 in k22671 in do3520 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22708,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22712,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22720,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_22698(t2,C_SCHEME_UNDEFINED);}}

/* k22718 in k22706 in k22693 in k22690 in k22687 in do3523 in k22671 in do3520 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22720,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k22710 in k22706 in k22693 in k22690 in k22687 in do3523 in k22671 in do3520 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22698(t3,t2);}

/* k22696 in k22693 in k22690 in k22687 in do3523 in k22671 in do3520 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22698(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_22675(t3,((C_word*)t0)[2],t2);}

/* k22660 in do3520 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_22652(t3,((C_word*)t0)[2],t2);}

/* k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22357(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22357,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_22360,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22616,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t5,a[5]=((C_word*)t0)[11],a[6]=((C_word)li555),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_22616(t7,t2,t3);}

/* do3534 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22616(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22616,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22627,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22642,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k22640 in do3534 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22642,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k22625 in do3534 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_22616(t4,((C_word*)t0)[2],t3);}

/* k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22360(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22360,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22364,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22364,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22367,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22560,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word)li554),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_22560(t8,t3,t4);}

/* do3539 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22560(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22560,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22570,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t3,t4);}}

/* k22568 in do3539 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22573,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k22571 in k22568 in do3539 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22573,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22576,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22594,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t5,t6,C_fix(20224));}

/* k22592 in k22571 in k22568 in do3539 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22594,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[388],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_22576(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_22576(t2,C_SCHEME_UNDEFINED);}}

/* k22574 in k22571 in k22568 in do3539 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22576(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22576,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22580,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 378  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k22578 in k22574 in k22571 in k22568 in do3539 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_22560(t4,((C_word*)t0)[2],t3);}

/* k22365 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22367,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22370,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[9])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_22370(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[387],((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_22370(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_SCHEME_FALSE);
t4=t2;
f_22370(t4,t3);}}

/* k22368 in k22365 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22370(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22370,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22373,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22523,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k22521 in k22368 in k22365 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22523,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22527,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22531,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_22373(t3,t2);}}

/* k22529 in k22521 in k22368 in k22365 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20357(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k22525 in k22521 in k22368 in k22365 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22527(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22373(t3,t2);}

/* k22371 in k22368 in k22365 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22373(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22373,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22401,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[821]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[639],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k22399 in k22371 in k22368 in k22365 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22404,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[820]);}

/* k22402 in k22399 in k22371 in k22368 in k22365 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22407,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[819]);}

/* k22405 in k22402 in k22399 in k22371 in k22368 in k22365 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22407,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22410,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[818]);}

/* k22408 in k22405 in k22402 in k22399 in k22371 in k22368 in k22365 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22410,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_22413,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[817]);}

/* k22411 in k22408 in k22405 in k22402 in k22399 in k22371 in k22368 in k22365 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22413,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[746],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[747],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[746],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[749],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,1,lf[750]);
t14=(C_word)C_a_i_list(&a,4,lf[751],((C_word*)t0)[7],t13,lf[815]);
t15=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[746],t12,t14,t15);
t17=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t18=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22472,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t16,a[8]=t17,tmp=(C_word)a,a+=9,tmp);
t19=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t20=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t20+1)))(4,t20,t18,((C_word*)((C_word*)t0)[2])[1],t19);}

/* k22470 in k22411 in k22408 in k22405 in k22402 in k22399 in k22371 in k22368 in k22365 in k22362 in k22358 in k22355 in k22352 in k22345 in k22327 in a33967 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22472,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[16],t1);
t3=(C_word)C_a_i_list(&a,3,lf[816],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[746],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[699],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[746],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[700],t6);
t8=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[746],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a33921 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33922(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33922,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33938,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t11=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k33936 in a33921 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33938(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33938,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33941,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  sixth");
t3=C_retrieve(lf[48]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k33939 in k33936 in a33921 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33941,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33944,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_33944(t7,t6);}
else{
t5=t4;
f_33944(t5,C_SCHEME_UNDEFINED);}}

/* k33942 in k33939 in k33936 in a33921 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_33944(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33944,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33947,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_33947(t5,t4);}
else{
t3=t2;
f_33947(t3,C_SCHEME_UNDEFINED);}}

/* k33945 in k33942 in k33939 in k33936 in a33921 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_33947(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33947,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33958,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_20257(t3,((C_word*)t0)[8]);}

/* k33956 in k33945 in k33942 in k33939 in k33936 in a33921 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k33914 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(32512),t1);}

/* k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22829,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22832,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33771,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[386],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[98],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[386],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[387],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[386],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33777,a[2]=((C_word)li552),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[814],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a33776 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33777(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33777,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33790,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_33790(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33816,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21535(t12,t13,C_fix(256));}}

/* k33814 in a33776 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33816,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_33790(t4,t3);}

/* k33788 in a33776 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_33790(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33790,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k33769 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(37632),t1);}

/* k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22832,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22835,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33314,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[98],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[386],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[386],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[386],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[387],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[386],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33320,a[2]=((C_word)li548),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33359,a[2]=((C_word)li551),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[813],C_fix(36352),t23,t24,t25);}

/* a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33359(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33359,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33363,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t6,t2);}

/* k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33363(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33363,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[412]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33372,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33375,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t7,t2,C_fix(24576));}

/* k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33375,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33384,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li549),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_33384(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33433,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t2,t3);}}

/* k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33433,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33436,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33436,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33439,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33651,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33651,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_33448,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_33448(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33589,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 378  symbol->string");
t15=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k33587 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33589,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33598,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33623,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 378  substring");
t6=*((C_word*)lf[427]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_33598(t4,C_SCHEME_FALSE);}}

/* k33621 in k33587 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33623(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_33598(t2,(C_word)C_i_string_equal_p(t1,lf[812]));}

/* k33596 in k33587 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_33598(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33598,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33605,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33609,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 378  substring");
t5=*((C_word*)lf[427]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_33448(t2,C_SCHEME_UNDEFINED);}}

/* k33607 in k33596 in k33587 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string->symbol");
t2=*((C_word*)lf[384]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k33603 in k33596 in k33587 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_33448(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_33448(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33448,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33451,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_33526,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t3,((C_word*)t0)[2],C_fix(24064));}

/* k33524 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33526,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33530,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_20329(t2,lf[809],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33567,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k33565 in k33524 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33567,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_33571,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_20329(t2,lf[811],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_33451(t2,C_SCHEME_UNDEFINED);}}

/* k33569 in k33565 in k33524 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33571,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33575,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k33573 in k33569 in k33565 in k33524 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33575,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[742],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[810]);
t6=((C_word*)t0)[2];
f_33451(t6,t5);}

/* k33528 in k33524 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33530(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33530,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_33534,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k33532 in k33528 in k33524 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33534,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33537,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33561,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  get-emit-info");
f_20317(t4,lf[809],((C_word*)((C_word*)t0)[2])[1]);}

/* k33559 in k33532 in k33528 in k33524 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33561,2,t0,t1);}
t2=(C_word)C_eqp(lf[808],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[610]);
t4=(C_word)C_a_i_list(&a,3,lf[746],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[700],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_33537(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_33537(t3,C_SCHEME_UNDEFINED);}}

/* k33535 in k33532 in k33528 in k33524 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_33537(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33537,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[742],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[807]);
t5=((C_word*)t0)[2];
f_33451(t5,t4);}

/* k33449 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_33451(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33451,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33454,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33465,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33523,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k33521 in k33449 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string-append");
t2=*((C_word*)lf[162]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[806]);}

/* k33463 in k33449 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33465,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33467,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li550),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_33467(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do3621 in k33463 in k33449 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_33467(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33467,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33482,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  string-append");
t6=*((C_word*)lf[162]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[804]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33486,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33515,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 378  symbol->string");
t8=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k33513 in do3621 in k33463 in k33449 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  string-append");
t2=*((C_word*)lf[162]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k33484 in do3621 in k33463 in k33449 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33486,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33489,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_33489(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33503,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  string-append");
t6=*((C_word*)lf[162]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[805]);}}

/* k33501 in k33484 in do3621 in k33463 in k33449 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_33489(t3,t2);}

/* k33487 in k33484 in do3621 in k33463 in k33449 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_33489(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_33467(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k33480 in do3621 in k33463 in k33449 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33482,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[436],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k33452 in k33449 in k33446 in k33649 in k33437 in k33434 in k33431 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33454,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_33372(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do3595 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_33384(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_33384,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33394,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k33392 in do3595 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33394,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_33400,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  sprintf");
t4=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[803],t2);}

/* k33398 in k33392 in do3595 in k33373 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33400,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[742],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[435],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_33384(t9,((C_word*)t0)[2],t8);}

/* k33370 in k33361 in a33358 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a33319 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33320(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33320,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33331,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33337,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t9,t7,C_fix(24576));}

/* k33335 in a33319 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33337(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33337,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_33353,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 378  remove-token-type");
f_21535(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_33331(t2,C_SCHEME_UNDEFINED);}}

/* k33351 in k33335 in a33319 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33353,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_33331(t5,t4);}

/* k33329 in a33319 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_33331(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k33312 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(36352),t1);}

/* k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22835,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22838,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33238,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[387],t19);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[802],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k33236 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(36608),t1);}

/* k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22838,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22841,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33194,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[94],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33200,a[2]=((C_word)li546),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33214,a[2]=((C_word)li547),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  make-rule");
f_19899(t3,lf[801],C_fix(36864),t5,t6,t7);}

/* a33213 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33214(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_33214,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33222,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_33226,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t6,t2);}

/* k33224 in a33213 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20357(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k33220 in a33213 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33222,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[412],t1));}

/* a33199 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33200,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33208,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  parse-unit-position");
f_20257(t4,t5);}

/* k33206 in a33199 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k33192 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  hash-table-set!");
t2=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[354],"*rules*"),C_fix(36864),t1);}

/* k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22841,2,t0,t1);}
t2=lf[420]=C_SCHEME_FALSE;;
t3=lf[421]=C_SCHEME_FALSE;;
t4=lf[422]=C_SCHEME_FALSE;;
t5=C_set_block_item(lf[423],0,C_SCHEME_FALSE);
t6=C_mutate((C_word*)lf[424]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22848,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[435]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23025,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[445]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23178,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[446]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23187,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[454]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23234,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[456]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23240,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp));
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23259,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33186,a[2]=((C_word)li545),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro-2");
t14=C_retrieve(lf[758]);
((C_proc4)C_retrieve_proc(t14))(4,t14,t12,lf[799],t13);}

/* a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33186(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33186,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26612,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[800]);}

/* k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26612,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26615,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  parse-iteration");
f_26594(t2,lf[799],((C_word*)t0)[2],C_retrieve2(lf[648],"*loop-operators*"));}

/* k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26615(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26615,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[610],C_retrieve2(lf[648],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26622,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26767,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26781,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  loop-returning");
t11=C_retrieve2(lf[467],"loop-returning");
f_23366(3,t11,t10,t1);}

/* k26779 in k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26781,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_26767(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26777,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  loop-returning");
t3=C_retrieve2(lf[467],"loop-returning");
f_23366(3,t3,t2,((C_word*)t0)[2]);}}

/* k26775 in k26779 in k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_26767(t2,(C_word)C_i_car(t1));}

/* k26765 in k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26767(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k26620 in k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26622,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26626,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  loop-end-tests");
t4=C_retrieve2(lf[462],"loop-end-tests");
f_23318(3,t4,t3,((C_word*)t0)[2]);}

/* k26624 in k26620 in k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26626,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26629,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_26629(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[387],t1));
t6=(C_word)C_a_i_list(&a,4,lf[20],t5,lf[798],C_SCHEME_FALSE);
t7=t2;
f_26629(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k26627 in k26624 in k26620 in k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26629(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26629,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26640,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  loop-bindings");
t4=C_retrieve2(lf[459],"loop-bindings");
f_23282(3,t4,t3,((C_word*)t0)[2]);}

/* k26638 in k26627 in k26624 in k26620 in k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26640,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26644,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26648,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  loop-initially");
t4=C_retrieve2(lf[461],"loop-initially");
f_23306(3,t4,t3,((C_word*)t0)[3]);}

/* k26646 in k26638 in k26627 in k26624 in k26620 in k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26648,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[610]);
t3=(C_word)C_a_i_list(&a,1,lf[792]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26712,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26716,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26720,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping");
t7=C_retrieve2(lf[463],"loop-looping");
f_23330(3,t7,t6,((C_word*)t0)[3]);}

/* k26718 in k26646 in k26638 in k26627 in k26624 in k26620 in k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26720,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26724,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26728,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  loop-stepping");
t4=C_retrieve2(lf[465],"loop-stepping");
f_23342(3,t4,t3,((C_word*)t0)[2]);}

/* k26726 in k26718 in k26646 in k26638 in k26627 in k26624 in k26620 in k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26728,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 379  ##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k26722 in k26718 in k26646 in k26638 in k26627 in k26624 in k26620 in k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k26714 in k26646 in k26638 in k26627 in k26624 in k26620 in k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k26710 in k26646 in k26638 in k26627 in k26624 in k26620 in k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26712,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[746],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[700],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26680,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26684,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  loop-finally");
t9=C_retrieve2(lf[466],"loop-finally");
f_23354(3,t9,t8,((C_word*)t0)[2]);}

/* k26682 in k26710 in k26646 in k26638 in k26627 in k26624 in k26620 in k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26684,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k26678 in k26710 in k26646 in k26638 in k26627 in k26624 in k26620 in k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26680,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[746],t3);
t5=(C_word)C_a_i_list(&a,2,lf[700],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 379  ##sys#append");
t7=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k26642 in k26638 in k26627 in k26624 in k26620 in k26613 in k26610 in a33185 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26644,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23259,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23262,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33172,a[2]=((C_word)li544),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro");
t4=C_retrieve(lf[744]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[797],t3);}

/* a33171 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33172(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_33172,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[796],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[412],t5,t3));}

/* k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23262,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23265,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33143,a[2]=((C_word)li543),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro");
t4=C_retrieve(lf[744]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[795],t3);}

/* a33142 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33143(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33143,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_33147,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[794]);}

/* k33145 in a33142 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_33147,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[1],t4,t6,t1));}

/* k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23265(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23265,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23268,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_33140,a[2]=((C_word)li542),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro");
t4=C_retrieve(lf[744]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[793],t3);}

/* a33139 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_33140(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_33140,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23268,2,t0,t1);}
t2=C_mutate(&lf[458],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23276,a[2]=((C_word)li351),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[459],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23282,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[460],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23294,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[461],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23306,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[462],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23318,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[463],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23330,a[2]=((C_word)li356),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[464],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23336,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[465],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23342,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[466],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23354,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[467],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23366,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[468],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23378,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[478],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23529,a[2]=((C_word)li365),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[479],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23600,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[480],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23606,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[481],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23612,a[2]=((C_word)li368),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[482],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23618,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[490],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23778,a[2]=((C_word)li373),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[498],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23860,a[2]=((C_word)li375),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[528],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24242,a[2]=((C_word)li378),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[531],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24289,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[550],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24640,a[2]=((C_word)li382),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[558],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24782,a[2]=((C_word)li384),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[572],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_24975,a[2]=((C_word)li386),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[575],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25042,a[2]=((C_word)li387),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[578],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25080,a[2]=((C_word)li388),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[581],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25239,a[2]=((C_word)li394),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[609],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25785,a[2]=((C_word)li395),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[611],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25791,a[2]=((C_word)li396),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[617],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25857,a[2]=((C_word)li397),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[623],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25948,a[2]=((C_word)li398),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[626],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26049,a[2]=((C_word)li402),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[632],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26180,a[2]=((C_word)li407),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[638],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26594,a[2]=((C_word)li412),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[559],C_retrieve2(lf[558],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[472],C_retrieve2(lf[578],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[646],C_retrieve2(lf[528],"parse-repeat"),lf[643]);
t38=(C_word)C_a_i_list(&a,2,lf[506],C_retrieve2(lf[498],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[502],C_retrieve2(lf[498],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[504],C_retrieve2(lf[498],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[513],C_retrieve2(lf[498],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[503],C_retrieve2(lf[498],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[505],C_retrieve2(lf[498],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[538],C_retrieve2(lf[531],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[547],C_retrieve2(lf[531],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[532],C_retrieve2(lf[531],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[551],C_retrieve2(lf[550],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[537],C_retrieve2(lf[531],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[499],C_retrieve2(lf[490],"parse-for"),lf[643],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[647],C_retrieve2(lf[490],"parse-for"),lf[643]);
t51=(C_word)C_a_i_list(&a,3,lf[639],C_retrieve2(lf[572],"parse-do"),lf[630]);
t52=(C_word)C_a_i_list(&a,3,lf[591],C_retrieve2(lf[581],"parse-accumulation"),lf[630]);
t53=(C_word)C_a_i_list(&a,3,lf[18],C_retrieve2(lf[581],"parse-accumulation"),lf[630]);
t54=(C_word)C_a_i_list(&a,3,lf[596],C_retrieve2(lf[581],"parse-accumulation"),lf[630]);
t55=(C_word)C_a_i_list(&a,3,lf[582],C_retrieve2(lf[581],"parse-accumulation"),lf[630]);
t56=(C_word)C_a_i_list(&a,3,lf[583],C_retrieve2(lf[581],"parse-accumulation"),lf[630]);
t57=(C_word)C_a_i_list(&a,3,lf[585],C_retrieve2(lf[581],"parse-accumulation"),lf[630]);
t58=(C_word)C_a_i_list(&a,3,lf[586],C_retrieve2(lf[581],"parse-accumulation"),lf[630]);
t59=(C_word)C_a_i_list(&a,4,lf[618],C_retrieve2(lf[617],"parse-thereis"),lf[630],C_retrieve2(lf[609],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[619],C_retrieve2(lf[617],"parse-thereis"),lf[630],C_retrieve2(lf[609],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[620],C_retrieve2(lf[617],"parse-thereis"),lf[630],C_retrieve2(lf[609],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[610],C_retrieve2(lf[623],"parse-return"),lf[630],C_retrieve2(lf[609],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[614],C_retrieve2(lf[611],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[613],C_retrieve2(lf[611],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[11],C_retrieve2(lf[632],"parse-conditional"),lf[630]);
t66=(C_word)C_a_i_list(&a,3,lf[6],C_retrieve2(lf[632],"parse-conditional"),lf[630]);
t67=(C_word)C_a_i_list(&a,3,lf[20],C_retrieve2(lf[632],"parse-conditional"),lf[630]);
t68=(C_word)C_a_i_list(&a,3,lf[476],C_retrieve2(lf[575],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[648],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26788,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32998,a[2]=((C_word)li541),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  ##sys#register-macro-2");
t73=C_retrieve(lf[758]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[643],t72);}

/* a32997 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32998(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32998,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26794,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  parse-iteration");
f_26594(t3,lf[643],t2,C_retrieve2(lf[648],"*loop-operators*"));}

/* k26792 in a32997 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26794,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26797,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[610],C_retrieve2(lf[648],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26926,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  loop-returning");
t6=C_retrieve2(lf[467],"loop-returning");
f_23366(3,t6,t5,t1);}

/* k26924 in k26792 in a32997 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26926,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k26795 in k26792 in a32997 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26797(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26797,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26808,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-bindings");
t3=C_retrieve2(lf[459],"loop-bindings");
f_23282(3,t3,t2,((C_word*)t0)[2]);}

/* k26806 in k26795 in k26792 in a32997 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26808,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26812,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26816,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-initially");
t4=C_retrieve2(lf[461],"loop-initially");
f_23306(3,t4,t3,((C_word*)t0)[2]);}

/* k26814 in k26806 in k26795 in k26792 in a32997 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26816,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26836,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26840,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-end-tests");
t4=C_retrieve2(lf[462],"loop-end-tests");
f_23318(3,t4,t3,((C_word*)t0)[2]);}

/* k26838 in k26814 in k26806 in k26795 in k26792 in a32997 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26840,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26843,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[387],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[792],lf[351]);
t6=(C_word)C_a_i_list(&a,3,lf[20],t4,t5);
t7=t2;
f_26843(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_26843(t3,C_SCHEME_END_OF_LIST);}}

/* k26841 in k26838 in k26814 in k26806 in k26795 in k26792 in a32997 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26843(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26843,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26847,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26851,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping");
t4=C_retrieve2(lf[463],"loop-looping");
f_23330(3,t4,t3,((C_word*)t0)[2]);}

/* k26849 in k26841 in k26838 in k26814 in k26806 in k26795 in k26792 in a32997 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26851,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26855,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26859,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-stepping");
t4=C_retrieve2(lf[465],"loop-stepping");
f_23342(3,t4,t3,((C_word*)t0)[2]);}

/* k26857 in k26849 in k26841 in k26838 in k26814 in k26806 in k26795 in k26792 in a32997 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26859,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[792],lf[788]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26875,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26879,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  loop-finally");
t5=C_retrieve2(lf[466],"loop-finally");
f_23354(3,t5,t4,((C_word*)t0)[2]);}

/* k26877 in k26857 in k26849 in k26841 in k26838 in k26814 in k26806 in k26795 in k26792 in a32997 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26879,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k26873 in k26857 in k26849 in k26841 in k26838 in k26814 in k26806 in k26795 in k26792 in a32997 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26875,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[351],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k26853 in k26849 in k26841 in k26838 in k26814 in k26806 in k26795 in k26792 in a32997 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k26845 in k26841 in k26838 in k26814 in k26806 in k26795 in k26792 in a32997 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26847(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k26834 in k26814 in k26806 in k26795 in k26792 in a32997 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26836(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26836,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[788],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[789],t2);
t4=(C_word)C_a_i_list(&a,3,lf[790],lf[791],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k26810 in k26806 in k26795 in k26792 in a32997 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26812,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[1],t2));}

/* k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26788(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26788,2,t0,t1);}
t2=C_mutate((C_word*)lf[649]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26932,a[2]=((C_word)li414),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[654]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27661,a[2]=((C_word)li416),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[655]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27680,a[2]=((C_word)li418),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[656]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28131,a[2]=((C_word)li420),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[657]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28150,a[2]=((C_word)li422),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[659]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28879,a[2]=((C_word)li424),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[660]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28898,a[2]=((C_word)li426),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[662]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29627,a[2]=((C_word)li428),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[663]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29646,a[2]=((C_word)li430),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[664]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30097,a[2]=((C_word)li432),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[665]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30116,a[2]=((C_word)li434),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[666]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30567,a[2]=((C_word)li436),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[667]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30586,a[2]=((C_word)li438),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[668]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31056,a[2]=((C_word)li440),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[669]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31074,a[2]=((C_word)li442),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[670]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31089,a[2]=((C_word)li444),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[671]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31104,a[2]=((C_word)li446),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[672]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31123,a[2]=((C_word)li448),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[673]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31138,a[2]=((C_word)li450),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[674]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31157,a[2]=((C_word)li452),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[675]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31176,a[2]=((C_word)li454),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[676]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31199,a[2]=((C_word)li456),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[677]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31218,a[2]=((C_word)li458),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[678]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31241,a[2]=((C_word)li461),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[680]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31288,a[2]=((C_word)li464),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[682]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31343,a[2]=((C_word)li466),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[683]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31362,a[2]=((C_word)li468),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[684]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31385,a[2]=((C_word)li470),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[685]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31413,a[2]=((C_word)li472),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[686]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31441,a[2]=((C_word)li474),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[687]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31469,a[2]=((C_word)li476),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[688]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31497,a[2]=((C_word)li478),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[689]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31525,a[2]=((C_word)li480),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[690]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31553,a[2]=((C_word)li482),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[691]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31581,a[2]=((C_word)li484),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[692]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31609,a[2]=((C_word)li486),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[693]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31637,a[2]=((C_word)li488),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[694]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31652,a[2]=((C_word)li495),tmp=(C_word)a,a+=3,tmp));
t40=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31710,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t41=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t41))(5,t41,t40,C_retrieve(lf[29]),lf[786],lf[787]);}

/* k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31710(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31710,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31713,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[784],lf[785]);}

/* k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31713,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31716,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[782],lf[783]);}

/* k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31716,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31719,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[780],lf[781]);}

/* k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31719,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31722,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[778],lf[779]);}

/* k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31722,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31725,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[776],lf[777]);}

/* k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31725,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31728,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[774],lf[775]);}

/* k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31728,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31731,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[772],lf[773]);}

/* k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31731,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31734,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[770],lf[771]);}

/* k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31734,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31737,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[768],lf[769]);}

/* k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31737(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31737,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31740,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  hash-table-set!");
t3=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[766],lf[767]);}

/* k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31740,2,t0,t1);}
t2=C_mutate((C_word*)lf[701]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31742,a[2]=((C_word)li497),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[702]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31799,a[2]=((C_word)li499),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[703]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31856,a[2]=((C_word)li501),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31865,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t6=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,C_retrieve(lf[29]),lf[764],lf[765]);}

/* k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31865,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31868,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[762],lf[763]);}

/* k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31868,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31871,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 381  hash-table-set!");
t3=C_retrieve(lf[759]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_retrieve(lf[29]),lf[760],lf[761]);}

/* k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[67],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31871,2,t0,t1);}
t2=C_mutate((C_word*)lf[704]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31873,a[2]=((C_word)li504),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[436]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32063,a[2]=((C_word)li505),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[425]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32077,a[2]=((C_word)li506),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[712]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32091,a[2]=((C_word)li507),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[713]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32094,a[2]=((C_word)li508),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[714],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32106,a[2]=((C_word)li510),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[716],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32115,a[2]=((C_word)li512),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[717],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32159,a[2]=((C_word)li514),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[447]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32181,a[2]=((C_word)li516),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[718]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32200,a[2]=((C_word)li523),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[721]+1,C_retrieve(lf[713]));
t13=C_mutate((C_word*)lf[722]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32376,a[2]=((C_word)li525),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[728]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32439,a[2]=((C_word)li527),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[729]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32448,a[2]=((C_word)li529),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[730]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32454,a[2]=((C_word)li531),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[731]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32463,a[2]=((C_word)li533),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[733]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32521,a[2]=((C_word)li535),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[734],lf[735]);
t20=C_mutate(&lf[736],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32531,a[2]=((C_word)li536),tmp=(C_word)a,a+=3,tmp));
t21=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t22=t21;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32602,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t25=C_SCHEME_UNDEFINED;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_set_block_item(t26,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32935,a[2]=t26,a[3]=t21,a[4]=t23,a[5]=((C_word)li540),tmp=(C_word)a,a+=6,tmp));
t28=((C_word*)t26)[1];
f_32935(t28,t24,C_retrieve2(lf[648],"*loop-operators*"));}

/* do5923 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32935(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32935,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_a_i_list(&a,3,lf[614],C_retrieve2(lf[736],"run-while-until"),C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[613],C_retrieve2(lf[736],"run-while-until"),C_SCHEME_FALSE);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32963,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t4);
if(C_truep((C_truep((C_word)C_i_equalp(t5,lf[591]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[18]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[596]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[582]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[583]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[585]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[586]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[618]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[619]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[620]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[610]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[614]))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,lf[613]))?C_SCHEME_TRUE:C_SCHEME_FALSE))))))))))))))){
t6=t3;
f_32963(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t3;
f_32963(t11,t10);}}}

/* k32961 in do5923 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32963(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_32935(t3,((C_word*)t0)[2],t2);}

/* k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32602,2,t0,t1);}
t2=C_mutate(&lf[739],t1);
t3=C_mutate(&lf[740],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32604,a[2]=((C_word)li537),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32892,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32929,a[2]=((C_word)li539),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 659  ##sys#register-macro-2");
t6=C_retrieve(lf[758]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[757],t5);}

/* a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32929(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32929,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32647,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 604  parse-iteration");
f_26594(t3,lf[757],t2,C_retrieve2(lf[739],"*run-operators*"));}

/* k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32647,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_retrieve2(lf[734],"*process-stop*");
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_car(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_32653,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 612  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[756]);}

/* k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32653,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_32656,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 613  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[755]);}

/* k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32656,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32659,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 614  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[754]);}

/* k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32659,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_32663,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 616  loop-end-tests");
t3=C_retrieve2(lf[462],"loop-end-tests");
f_23318(3,t3,t2,((C_word*)t0)[3]);}

/* k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32663,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_32666,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32873,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 617  loop-finally");
t5=C_retrieve2(lf[466],"loop-finally");
f_23354(3,t5,t4,((C_word*)t0)[3]);}

/* k32871 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32873,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32881,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32885,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 618  loop-finally");
t4=C_retrieve2(lf[466],"loop-finally");
f_23354(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_32666(t2,C_SCHEME_UNDEFINED);}}

/* k32883 in k32871 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32885,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 603  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k32879 in k32871 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32881,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[412],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_32666(t4,t3);}

/* k32664 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32666(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32666,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_32669,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32859,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32866,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 626  loop-looping");
t5=C_retrieve2(lf[463],"loop-looping");
f_23330(3,t5,t4,((C_word*)t0)[4]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32830,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_32830(t7,t6);}
else{
t5=(C_word)C_a_i_cons(&a,2,lf[387],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t3;
f_32830(t7,t6);}}}

/* k32828 in k32664 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32830(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32830,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_32669(2,t5,t4);}

/* k32864 in k32664 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 625  process-code-terminates?");
f_32604(((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k32857 in k32664 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32859(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[2];
f_32669(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 627  printf");
t2=C_retrieve(lf[403]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[753]);}}

/* k32667 in k32664 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[117],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32669,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[8],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[746],C_SCHEME_END_OF_LIST,((C_word*)t0)[9]);
t5=(C_word)C_a_i_list(&a,2,lf[747],t4);
t6=(C_word)C_a_i_list(&a,1,lf[748]);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[8],lf[748]);
t8=(C_word)C_a_i_list(&a,3,lf[746],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[749],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[6]);
t13=(C_word)C_a_i_list(&a,1,lf[750]);
t14=(C_word)C_a_i_list(&a,4,lf[751],((C_word*)t0)[6],t13,lf[752]);
t15=(C_word)C_a_i_list(&a,2,((C_word*)t0)[7],C_fix(-2));
t16=(C_word)C_a_i_list(&a,4,lf[746],t12,t14,t15);
t17=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_32760,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=t10,a[7]=t11,a[8]=t16,tmp=(C_word)a,a+=9,tmp);
t18=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32764,a[2]=((C_word*)t0)[2],a[3]=t17,tmp=(C_word)a,a+=4,tmp);
t19=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32768,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=t18,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 646  loop-looping");
t20=C_retrieve2(lf[463],"loop-looping");
f_23330(3,t20,t19,((C_word*)t0)[3]);}

/* k32766 in k32667 in k32664 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32768,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32772,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32776,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 647  loop-stepping");
t4=C_retrieve2(lf[465],"loop-stepping");
f_23342(3,t4,t3,((C_word*)t0)[2]);}

/* k32774 in k32766 in k32667 in k32664 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32776,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 603  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k32770 in k32766 in k32667 in k32664 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 603  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k32762 in k32667 in k32664 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 603  ##sys#append");
t2=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k32758 in k32667 in k32664 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32760,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,lf[746],t2);
t4=(C_word)C_a_i_list(&a,3,lf[699],((C_word*)t0)[8],t3);
t5=(C_word)C_a_i_list(&a,3,lf[746],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[700],t5);
t7=(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[6],t6);
t8=(C_word)C_a_i_list(&a,3,lf[746],((C_word*)t0)[5],t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32679,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32716,a[2]=((C_word*)t0)[2],a[3]=t10,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 651  loop-bindings");
t12=C_retrieve2(lf[459],"loop-bindings");
f_23282(3,t12,t11,((C_word*)t0)[2]);}

/* k32714 in k32758 in k32667 in k32664 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32716,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32712,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 652  loop-initially");
t3=C_retrieve2(lf[461],"loop-initially");
f_23306(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_32679(t2,C_SCHEME_FALSE);}}

/* k32710 in k32714 in k32758 in k32667 in k32664 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_32679(t2,(C_word)C_i_nullp(t1));}

/* k32677 in k32758 in k32667 in k32664 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32679(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32679,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32690,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 655  loop-bindings");
t3=C_retrieve2(lf[459],"loop-bindings");
f_23282(3,t3,t2,((C_word*)t0)[2]);}}

/* k32688 in k32677 in k32758 in k32667 in k32664 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32690,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32694,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32698,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 656  loop-initially");
t4=C_retrieve2(lf[461],"loop-initially");
f_23306(3,t4,t3,((C_word*)t0)[2]);}

/* k32696 in k32688 in k32677 in k32758 in k32667 in k32664 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32698,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 603  ##sys#append");
t3=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k32692 in k32688 in k32677 in k32758 in k32667 in k32664 in k32661 in k32657 in k32654 in k32651 in k32645 in a32928 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32694,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[2],t2));}

/* k32890 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32892,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32895,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32900,a[2]=((C_word)li538),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 662  ##sys#register-macro");
t4=C_retrieve(lf[744]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[745],t3);}

/* a32899 in k32890 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32900(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr3r,(void*)f_32900r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_32900r(t0,t1,t2,t3);}}

static void C_ccall f_32900r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32904,a[2]=t1,a[3]=t3,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32914,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t6=(C_word)C_i_car(t2);
t7=t5;
f_32914(t7,(C_word)C_i_symbolp(t6));}
else{
t6=t5;
f_32914(t6,C_SCHEME_FALSE);}}

/* k32912 in a32899 in k32890 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32914(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
f_32904(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 664  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[743],((C_word*)t0)[2]);}}

/* k32902 in a32899 in k32890 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32904,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[742],t2));}

/* k32893 in k32890 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32895,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32898,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 771  return-to-host");
t3=C_retrieve(lf[741]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k32896 in k32893 in k32890 in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* process-code-terminates? in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32604(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
loop:
a=C_alloc(5);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_32604,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32620,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 599  process-code-terminates?");
t8=t4;
t9=t5;
t10=t3;
t1=t8;
t2=t9;
t3=t10;
goto loop;}
else{
t4=(C_word)C_i_car(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_eqp(t2,t4));}}}

/* k32618 in process-code-terminates? in k32600 in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 600  process-code-terminates?");
f_32604(((C_word*)t0)[4],t2,((C_word*)t0)[2]);}}

/* run-while-until in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32531(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_32531,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32542,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 567  loop-error");
f_23618(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[737],t7,lf[738]));}
else{
t13=t12;
f_32542(2,t13,C_SCHEME_UNDEFINED);}}

/* k32540 in run-while-until in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32542(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32542,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32545,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[613]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_32545(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[614]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[388],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_32545(t10,t9);}
else{
t5=t2;
f_32545(t5,C_SCHEME_UNDEFINED);}}}

/* k32543 in k32540 in run-while-until in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32545(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32545,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32552,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],C_retrieve2(lf[734],"*process-stop*"));
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 571  make-loop-clause");
f_23378(t2,(C_word)C_a_i_list(&a,4,lf[469],((C_word*)t0)[2],lf[474],t4));}

/* k32550 in k32543 in k32540 in run-while-until in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 571  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* hush in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32521,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32525,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32176,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[715]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k32174 in hush in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32176,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5835,a[2]=((C_word)li534),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k32523 in hush in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 552  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32463(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_32463r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_32463r(t0,t1,t2);}}

static void C_ccall f_32463r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32467,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 542  scheduler-stop");
f_32159(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32481,a[2]=t5,a[3]=((C_word)li532),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_32481(t7,t3,t2);}}

/* do5893 in stop in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32481(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32481,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32491,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 546  scheduler-stop");
f_32159(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 547  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[732],t5);}}}

/* k32489 in do5893 in stop in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_32481(t3,((C_word*)t0)[2],t2);}

/* k32465 in stop in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 548  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32454,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32458,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32154,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[715]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k32152 in cont in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32154(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32154,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5825,a[2]=((C_word)li530),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k32456 in cont in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 538  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32448(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32448,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32136,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[715]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k32134 in paused? in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32136,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5817,a[2]=((C_word)li528),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32443,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32145,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[715]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k32143 in pause in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32145,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5821,a[2]=((C_word)li526),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k32441 in pause in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 531  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32376(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_32376r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_32376r(t0,t1,t2);}}

static void C_ccall f_32376r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32389,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32101,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[715]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[724]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32401,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_32401(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_32401(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[727])));}}}

/* k32399 in time-format in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32401(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[721]+1,C_retrieve(lf[713]));
C_trace("ChickenBridge.scm: 520  scheduler-set-time-milliseconds");
f_32106(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[725]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[721]+1,C_retrieve(lf[712]));
C_trace("ChickenBridge.scm: 524  scheduler-set-time-milliseconds");
f_32106(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 527  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[726],t4);}}}

/* k32099 in time-format in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32101,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5797,a[2]=((C_word)li524),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k32387 in time-format in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[723]));}

/* sprout in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32200(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_32200r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_32200r(t0,t1,t2,t3);}}

static void C_ccall f_32200r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32202,a[2]=t2,a[3]=((C_word)li520),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32322,a[2]=t4,a[3]=((C_word)li521),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32327,a[2]=t5,a[3]=((C_word)li522),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start58525873");
t7=t6;
f_32327(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id58535871");
t9=t5;
f_32322(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body58505855");
t11=t4;
f_32202(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[719]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[720],t10);}}}}

/* def-start5852 in sprout in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32327(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32327,NULL,2,t0,t1);}
C_trace("def-id58535871");
t2=((C_word*)t0)[2];
f_32322(t2,t1,C_fix(0));}

/* def-id5853 in sprout in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32322(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32322,NULL,3,t0,t1,t2);}
C_trace("body58505855");
t3=((C_word*)t0)[2];
f_32202(t3,t1,t2,C_fix(-1));}

/* body5850 in sprout in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32202(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32202,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32204,a[2]=t4,a[3]=((C_word)li517),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32232,a[2]=t5,a[3]=((C_word)li518),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32262,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_32273,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li519),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_32273(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32309,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32321,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 504  nextstart");
t11=t6;
f_32204(t11,t10);}}

/* k32319 in body5850 in sprout in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32321,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,t1,C_fix(1000));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32317,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 504  nextid");
t4=((C_word*)t0)[2];
f_32232(t4,t3);}

/* k32315 in k32319 in body5850 in sprout in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 504  scheduler-sprout");
f_32115(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k32307 in body5850 in sprout in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32309(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_32262(2,t2,((C_word*)t0)[2]);}

/* do5864 in body5850 in sprout in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32273(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32273,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32283,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32306,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 501  nextstart");
t6=((C_word*)t0)[2];
f_32204(t6,t5);}}

/* k32304 in do5864 in body5850 in sprout in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32306,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,t1,C_fix(1000));
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32302,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 502  nextid");
t4=((C_word*)t0)[2];
f_32232(t4,t3);}

/* k32300 in k32304 in do5864 in body5850 in sprout in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 501  scheduler-sprout");
f_32115(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k32281 in do5864 in body5850 in sprout in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_32273(t3,((C_word*)t0)[2],t2);}

/* k32260 in body5850 in sprout in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 508  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body5850 in sprout in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32232(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32232,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body5850 in sprout in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32204(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32204,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32181(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32181,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32186,a[2]=((C_word)li515),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_32186 in load-sal-file in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32186(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32186,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32191,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_32191(2,t4,C_SCHEME_FALSE);}}

/* k32189 */
static void C_ccall f_32191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5841(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32159(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32159,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32163,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[715]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k32161 in scheduler-stop in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32163,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5830,a[2]=((C_word)li513),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32115(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32115,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32119,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[715]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k32117 in scheduler-sprout in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32119,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5810,a[2]=((C_word)li511),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32106(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32106,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_32110,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[715]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k32108 in scheduler-set-time-milliseconds in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32110,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub5802,a[2]=((C_word)li509),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32094,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5794(t2));}

/* current-time-milliseconds in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32091,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5791(t2));}

/* print-error in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32077(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32077,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32082,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_32082(2,t4,C_SCHEME_FALSE);}}

/* k32080 in print-error in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5786(C_SCHEME_UNDEFINED,t1));}

/* print-message in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32063(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_32063,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_32068,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_32068(2,t4,C_SCHEME_FALSE);}}

/* k32066 in print-message in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5780(C_SCHEME_UNDEFINED,t1));}

/* cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31873(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31873,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31927,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31934,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 397  make-string");
t5=*((C_word*)lf[336]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_fix(15));}

/* k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31934,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31936,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li503),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_31936(t5,((C_word*)t0)[2],lf[711],t1,C_fix(0));}

/* do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_31936(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31936,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nequalp(t4,C_fix(7)))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_31946,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t1,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nequalp(t4,C_fix(0)))){
C_trace("ChickenBridge.scm: 400  printf");
t6=C_retrieve(lf[403]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
t6=t5;
f_31946(2,t6,C_SCHEME_UNDEFINED);}}}

/* k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31946,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31949,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31963,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31965,a[2]=t5,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[7],a[6]=((C_word)li502),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_31965(t7,t3,C_fix(0));}

/* do5768 in k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_31965(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31965,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(15)))){
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[5],C_fix(3)))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31985,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=((C_word*)t0)[3];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_fix(0);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31920,a[2]=t3,a[3]=t11,a[4]=t9,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
t13=(C_word)C_a_i_divide(&a,2,((C_word*)t5)[1],C_fix(10000));
C_trace("ChickenBridge.scm: 389  floor");
t14=*((C_word*)lf[170]+1);
((C_proc3)C_retrieve_proc(t14))(3,t14,t12,t13);}
else{
C_trace("ChickenBridge.scm: 405  string-append");
t3=*((C_word*)lf[162]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,((C_word*)t0)[4],lf[710]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_32002,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32005,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 407  <=");
C_less_or_equal_p(5,0,t4,C_fix(2),t5,C_fix(4));}}

/* k32003 in do5768 in k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32005,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_32002(t2,C_make_character(92));}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32047,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_plus(&a,2,C_fix(13),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 408  modulo");
t4=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(15));}}

/* k32045 in k32003 in do5768 in k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32047,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,C_fix(4),t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
if(C_truep((C_word)C_i_nequalp(t3,C_fix(1)))){
t4=((C_word*)t0)[3];
f_32002(t4,C_make_character(47));}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_32017,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 410  <=");
C_less_or_equal_p(5,0,t4,C_fix(1),((C_word*)t0)[2],C_fix(5));}}

/* k32015 in k32045 in k32003 in do5768 in k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_32017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_32017,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_32002(t2,C_make_character(45));}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(6));
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[2],C_fix(3));
t4=(C_word)C_a_i_times(&a,2,t2,t3);
t5=(C_word)C_i_nequalp(t4,C_fix(15));
t6=((C_word*)t0)[4];
f_32002(t6,(C_truep(t5)?C_make_character(47):C_make_character(32)));}}

/* k32000 in do5768 in k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_32002(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_32002,NULL,2,t0,t1);}
t2=(C_word)C_i_string_set(((C_word*)t0)[5],((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t4=((C_word*)((C_word*)t0)[3])[1];
f_31965(t4,((C_word*)t0)[2],t3);}

/* k31918 in do5768 in k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31920,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31885,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 390  modulo");
t5=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[5])[1],C_fix(10000));}

/* k31883 in k31918 in do5768 in k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31885,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31912,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_divide(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(100));
C_trace("ChickenBridge.scm: 391  floor");
t5=*((C_word*)lf[170]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k31910 in k31883 in k31918 in do5768 in k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31912,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31893,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 392  modulo");
t5=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[2])[1],C_fix(100));}

/* k31891 in k31910 in k31883 in k31918 in do5768 in k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31893,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31900,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 393  number->string");
C_number_to_string(3,0,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k31898 in k31891 in k31910 in k31883 in k31918 in do5768 in k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31900,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31904,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 394  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k31902 in k31898 in k31891 in k31910 in k31883 in k31918 in do5768 in k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31904,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31908,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 395  number->string");
C_number_to_string(3,0,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k31906 in k31902 in k31898 in k31891 in k31910 in k31883 in k31918 in do5768 in k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 393  string-append");
t2=*((C_word*)lf[162]+1);
((C_proc8)C_retrieve_proc(t2))(8,t2,((C_word*)t0)[4],lf[707],((C_word*)t0)[3],lf[708],((C_word*)t0)[2],lf[709],t1);}

/* k31983 in do5768 in k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 404  string-append");
t2=*((C_word*)lf[162]+1);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[705],t1,lf[706]);}

/* k31961 in k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 401  printf");
t2=C_retrieve(lf[403]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31947 in k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31949,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_31952,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 413  printf");
t3=C_retrieve(lf[403]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[3]);}

/* k31950 in k31947 in k31944 in do5754 in k31932 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31952,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_31936(t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k31925 in cm-logo in k31869 in k31866 in k31863 in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 414  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:clear in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31856,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31861,a[2]=((C_word)li500),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_31861 in cs:clear in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31861,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub5746(C_SCHEME_UNDEFINED));}

/* cs:f in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31799(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_31799r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31799r(t0,t1,t2);}}

static void C_ccall f_31799r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31803,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_31803(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31812,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31832,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_31832(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_31832(t8,C_SCHEME_FALSE);}}}

/* k31830 in cs:f in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_31832(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_31812(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_31812(t2,C_SCHEME_UNDEFINED);}}

/* k31810 in cs:f in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_31812(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31812,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31820,a[2]=((C_word)li498),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_31820 in k31810 in cs:f in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31820(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31820,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5739(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k31801 in cs:f in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31742(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_31742r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_31742r(t0,t1,t2);}}

static void C_ccall f_31742r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31746,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_31746(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31755,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31775,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_31775(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_31775(t8,C_SCHEME_FALSE);}}}

/* k31773 in cs:i in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_31775(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_31755(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_31755(t2,C_SCHEME_UNDEFINED);}}

/* k31753 in cs:i in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_31755(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_31755,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31763,a[2]=((C_word)li496),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_31763 in k31753 in cs:i in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31763(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31763,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub5728(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k31744 in cs:i in k31738 in k31735 in k31732 in k31729 in k31726 in k31723 in k31720 in k31717 in k31714 in k31711 in k31708 in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 381  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31652(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31652,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31664,a[2]=t2,a[3]=((C_word)li492),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31701,a[2]=((C_word)li493),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31706,a[2]=((C_word)li494),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_31706 in mp:inhook in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31706(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31706,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5672(C_SCHEME_UNDEFINED,t2));}

/* f_31701 in mp:inhook in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31701(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31701,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub5663(C_SCHEME_UNDEFINED,t2));}

/* a31663 in mp:inhook in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31664(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31664,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31670,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li491),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  call-with-current-continuation");
t4=*((C_word*)lf[700]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a31669 in a31663 in mp:inhook in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31670(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31670,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31676,a[2]=t2,a[3]=((C_word)li489),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31696,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li490),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  with-exception-handler");
t5=C_retrieve(lf[699]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a31695 in a31669 in a31663 in mp:inhook in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31696,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31700,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 380  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k31698 in a31695 in a31669 in a31663 in mp:inhook in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a31675 in a31669 in a31663 in mp:inhook in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31676(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31676,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31680,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31687,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31691,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31694,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  condition-property-accessor");
t7=C_retrieve(lf[696]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[697],lf[698]);}

/* k31692 in a31675 in a31669 in a31663 in mp:inhook in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31694(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k31689 in a31675 in a31669 in a31663 in mp:inhook in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[695],t1);}

/* k31685 in a31675 in a31669 in a31663 in mp:inhook in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  print-error");
t2=C_retrieve(lf[425]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k31678 in a31675 in a31669 in a31663 in mp:inhook in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31637(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31637,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31642,a[2]=((C_word)li487),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_31642 in mp:mm in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31642(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31642,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5656(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31609(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31609,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31614,a[2]=((C_word)li485),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(14),t2,t4,t3,C_fix(0));}

/* f_31614 in mp:bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31614(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31614,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5647(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31581(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31581,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31586,a[2]=((C_word)li483),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(13),t2,t4,t3,C_fix(0));}

/* f_31586 in mp:press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31586(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31586,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5632(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31553(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31553,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31558,a[2]=((C_word)li481),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(12),t2,t4,t3,C_fix(0));}

/* f_31558 in mp:prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31558(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31558,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5617(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31525(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_31525,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31530,a[2]=((C_word)li479),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(11),t2,t5,t3,t4);}

/* f_31530 in mp:ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31530(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31530,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5602(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31497(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_31497,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31502,a[2]=((C_word)li477),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(10),t2,t5,t3,t4);}

/* f_31502 in mp:touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31502(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31502,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5586(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31469(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_31469,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31474,a[2]=((C_word)li475),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_fix(9),t2,t5,t3,t4);}

/* f_31474 in mp:on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31474(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31474,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5570(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31441(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31441,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31446,a[2]=((C_word)li473),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_fix(8),t2,t4,t3,C_fix(0));}

/* f_31446 in mp:off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31446(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31446,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5554(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31413(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31413,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31418,a[2]=((C_word)li471),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_31418 in mp:midi in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31418(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31418,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5539(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31385(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31385,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31390,a[2]=((C_word)li469),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_31390 in mp:note in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31390(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_31390,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub5522(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31362(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31362,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31366,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31367,a[2]=((C_word)li467),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_31367 in mm:num-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31367(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31367,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5504(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k31364 in mm:num-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31343(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31343,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31348,a[2]=((C_word)li465),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_31348 in mm:num in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31348(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31348,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5493(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31288(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31288,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31292,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31295,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 380  mm:type?");
t6=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t2,C_fix(11));}

/* k31293 in mm:val-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31295,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31298,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_31298(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 380  mm:type?");
t3=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],C_fix(10));}}

/* k31296 in k31293 in mm:val-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31298,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31302,a[2]=((C_word)li462),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31322,a[2]=((C_word)li463),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[681]));}}

/* f_31322 in k31296 in k31293 in mm:val-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31322(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31322,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5482(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_31302 in k31296 in k31293 in mm:val-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31302(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31302,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5472(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k31290 in mm:val-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31241(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31241,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31248,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 380  mm:type?");
t4=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_fix(11));}

/* k31246 in mm:val in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31248,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31251,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_31251(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 380  mm:type?");
t3=C_retrieve(lf[679]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_fix(10));}}

/* k31249 in k31246 in mm:val in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31251,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31255,a[2]=((C_word)li459),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31271,a[2]=((C_word)li460),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_31271 in k31249 in k31246 in mm:val in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31271(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31271,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5459(C_SCHEME_UNDEFINED,t4,t5));}

/* f_31255 in k31249 in k31246 in mm:val in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31255(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31255,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5451(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31218(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31218,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31222,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31223,a[2]=((C_word)li457),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_31223 in mm:vel-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31223(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31223,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5438(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k31220 in mm:vel-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31199(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31199,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31204,a[2]=((C_word)li455),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_31204 in mm:vel in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31204(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31204,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5427(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31176(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31176,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31180,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31181,a[2]=((C_word)li453),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_31181 in mm:key-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31181(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_31181,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub5416(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k31178 in mm:key-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31157(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31157,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31162,a[2]=((C_word)li451),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_31162 in mm:key in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31162(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31162,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5405(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31138(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31138,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31142,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31143,a[2]=((C_word)li449),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_31143 in mm:chan-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31143(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31143,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5395(C_SCHEME_UNDEFINED,t4,t5));}

/* k31140 in mm:chan-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31123(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31123,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31128,a[2]=((C_word)li447),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_31128 in mm:chan in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31128(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31128,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5386(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31104(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31104,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31108,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31109,a[2]=((C_word)li445),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_31109 in mm:time-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31109(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_31109,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5377(C_SCHEME_UNDEFINED,t4,t5));}

/* k31106 in mm:time-set! in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31089(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31089,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31094,a[2]=((C_word)li443),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_31094 in mm:time in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31094(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31094,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5367(t3,t4));}

/* mm:copy in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31074(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31074,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31079,a[2]=((C_word)li441),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_31079 in mm:copy in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31079(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31079,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub5359(t3,t4));}

/* mm:free in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31056(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31056,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31060,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_31064,a[2]=((C_word)li439),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_31064 in mm:free in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31064(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_31064,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub5351(C_SCHEME_UNDEFINED,t3));}

/* k31058 in mm:free in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30586(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_30586r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30586r(t0,t1,t2);}}

static void C_ccall f_30586r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(8192);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30590,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_30590(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[650]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30915,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[650]);}
else{
t23=t22;
f_30915(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[658]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30950,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[658]);}
else{
t24=t23;
f_30950(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[653]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30985,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[653]);}
else{
t25=t24;
f_30985(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_31014,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_31014(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k31012 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_31014,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_31021,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_31029,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k31027 in k31012 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_31021(2,t2,C_SCHEME_UNDEFINED);}}

/* k31019 in k31012 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_31021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30590(t5,t4);}

/* k30983 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30985,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30989,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30989(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30987 in k30983 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30590(t7,t6);}

/* k30948 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30950,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30954,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30954(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30952 in k30948 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30590(t7,t6);}

/* k30913 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30915,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30919,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30919(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30917 in k30913 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30590(t7,t6);}

/* k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_30590(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30590,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30593,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30593(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30780,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_30780(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30815,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[658]);}
else{
t7=t6;
f_30815(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30850,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[653]);}
else{
t8=t7;
f_30850(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30879,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30879(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30877 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30879,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30886,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30894,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30892 in k30877 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30886(2,t2,C_SCHEME_UNDEFINED);}}

/* k30884 in k30877 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30593(t5,t4);}

/* k30848 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30850,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30854,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30854(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30852 in k30848 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30854(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30593(t7,t6);}

/* k30813 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30815(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30815,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30819,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30819(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30817 in k30813 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30593(t7,t6);}

/* k30778 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30780,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30784,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30784(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30782 in k30778 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30593(t7,t6);}

/* k30591 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_30593(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30593,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30596,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30596(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30645,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_30645(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30680,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[658]);}
else{
t7=t6;
f_30680(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30715,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[653]);}
else{
t8=t7;
f_30715(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30744,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30744(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30742 in k30591 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30744,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30751,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30759,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30757 in k30742 in k30591 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30751(2,t2,C_SCHEME_UNDEFINED);}}

/* k30749 in k30742 in k30591 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30596(t5,t4);}

/* k30713 in k30591 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30715,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30719,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30719(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30717 in k30713 in k30591 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30596(t7,t6);}

/* k30678 in k30591 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30680,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30684,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30684(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30682 in k30678 in k30591 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30596(t7,t6);}

/* k30643 in k30591 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30645,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30649,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30649(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30647 in k30643 in k30591 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30596(t7,t6);}

/* k30594 in k30591 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_30596(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30596,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30599,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30599(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30597 in k30594 in k30591 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30599,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30603,a[2]=((C_word)li437),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(14),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_30603 in k30597 in k30594 in k30591 in k30588 in mm:make-bend in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30603(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30603,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5328(t7,t8,t9,t10,t11,t12));}

/* mm:press? in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30567(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30567,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30572,a[2]=((C_word)li435),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(13));}

/* f_30572 in mm:press? in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30572(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30572,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5249(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30116(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_30116r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_30116r(t0,t1,t2);}}

static void C_ccall f_30116r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30120,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_30120(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[650]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30445,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[650]);}
else{
t23=t22;
f_30445(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[658]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30480,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[658]);}
else{
t24=t23;
f_30480(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[653]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30515,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[653]);}
else{
t25=t24;
f_30515(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30544,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_30544(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k30542 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30544,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30551,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30559,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30557 in k30542 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30551(2,t2,C_SCHEME_UNDEFINED);}}

/* k30549 in k30542 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30120(t5,t4);}

/* k30513 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30515,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30519,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30519(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30517 in k30513 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30120(t7,t6);}

/* k30478 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30480,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30484,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30484(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30482 in k30478 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30120(t7,t6);}

/* k30443 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30445(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30445,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30449,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30449(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30447 in k30443 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30120(t7,t6);}

/* k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_30120(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30120,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_30123,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30123(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30310,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_30310(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30345,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[658]);}
else{
t7=t6;
f_30345(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30380,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[653]);}
else{
t8=t7;
f_30380(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30409,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30409(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30407 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30409,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30416,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30424,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30422 in k30407 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30424(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30416(2,t2,C_SCHEME_UNDEFINED);}}

/* k30414 in k30407 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30123(t5,t4);}

/* k30378 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30380,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30384,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30384(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30382 in k30378 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30384(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30123(t7,t6);}

/* k30343 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30345,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30349,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30349(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30347 in k30343 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30123(t7,t6);}

/* k30308 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30310,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30314,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30314(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30312 in k30308 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30123(t7,t6);}

/* k30121 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_30123(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30123,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30126,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_30126(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30175,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_30175(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30210,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[658]);}
else{
t7=t6;
f_30210(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30245,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[653]);}
else{
t8=t7;
f_30245(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30274,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_30274(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k30272 in k30121 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30274,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30281,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30289,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30287 in k30272 in k30121 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30281(2,t2,C_SCHEME_UNDEFINED);}}

/* k30279 in k30272 in k30121 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_30126(t5,t4);}

/* k30243 in k30121 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30245,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30249,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30249(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30247 in k30243 in k30121 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30126(t7,t6);}

/* k30208 in k30121 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30210,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30214,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30214(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30212 in k30208 in k30121 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30126(t7,t6);}

/* k30173 in k30121 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30175,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30179,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30179(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30177 in k30173 in k30121 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_30126(t7,t6);}

/* k30124 in k30121 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_30126(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_30126,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30129,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_30129(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k30127 in k30124 in k30121 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30129(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30129,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30133,a[2]=((C_word)li433),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(13),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_30133 in k30127 in k30124 in k30121 in k30118 in mm:make-press in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30133(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_30133,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5234(t7,t8,t9,t10,t11,t12));}

/* mm:prog? in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30097(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_30097,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_30102,a[2]=((C_word)li431),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(12));}

/* f_30102 in mm:prog? in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30102(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_30102,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5155(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29646(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_29646r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_29646r(t0,t1,t2);}}

static void C_ccall f_29646r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29650,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_29650(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[650]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29975,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[650]);}
else{
t23=t22;
f_29975(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[658]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30010,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[658]);}
else{
t24=t23;
f_30010(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[653]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_30045,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[653]);}
else{
t25=t24;
f_30045(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_30074,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_30074(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k30072 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30074,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_30081,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_30089,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k30087 in k30072 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_30081(2,t2,C_SCHEME_UNDEFINED);}}

/* k30079 in k30072 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29650(t5,t4);}

/* k30043 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30045,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30049,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30049(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30047 in k30043 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29650(t7,t6);}

/* k30008 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_30010,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_30014,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_30014(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k30012 in k30008 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_30014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29650(t7,t6);}

/* k29973 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29979,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29979(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29977 in k29973 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29650(t7,t6);}

/* k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_29650(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29650,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_29653,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_29653(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29840,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_29840(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29875,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[658]);}
else{
t7=t6;
f_29875(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29910,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[653]);}
else{
t8=t7;
f_29910(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29939,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_29939(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k29937 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29939,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29946,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29954,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29952 in k29937 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29946(2,t2,C_SCHEME_UNDEFINED);}}

/* k29944 in k29937 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29653(t5,t4);}

/* k29908 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29914,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29914(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29912 in k29908 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29653(t7,t6);}

/* k29873 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29875,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29879,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29879(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29877 in k29873 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29653(t7,t6);}

/* k29838 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29840,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29844,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29844(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29842 in k29838 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29844(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29653(t7,t6);}

/* k29651 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_29653(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29653,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29656,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_29656(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29705,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_29705(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29740,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[658]);}
else{
t7=t6;
f_29740(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29775,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[653]);}
else{
t8=t7;
f_29775(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29804,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_29804(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k29802 in k29651 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29804(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29804,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29811,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29819,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29817 in k29802 in k29651 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29811(2,t2,C_SCHEME_UNDEFINED);}}

/* k29809 in k29802 in k29651 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_29656(t5,t4);}

/* k29773 in k29651 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29775,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29779,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29779(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29777 in k29773 in k29651 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29779(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29656(t7,t6);}

/* k29738 in k29651 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29740,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29744,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29744(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29742 in k29738 in k29651 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29744(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29656(t7,t6);}

/* k29703 in k29651 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29705,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29709,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29709(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29707 in k29703 in k29651 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_29656(t7,t6);}

/* k29654 in k29651 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_29656(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_29656,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29659,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_29659(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k29657 in k29654 in k29651 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29659,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29663,a[2]=((C_word)li429),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(12),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_29663 in k29657 in k29654 in k29651 in k29648 in mm:make-prog in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29663(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_29663,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5140(t7,t8,t9,t10,t11,t12));}

/* mm:ctrl? in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29627(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_29627,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_29632,a[2]=((C_word)li427),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(11));}

/* f_29632 in mm:ctrl? in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29632(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_29632,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub5061(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28898(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_28898r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_28898r(t0,t1,t2);}}

static void C_ccall f_28898r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28902,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_28902(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[650]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29470,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[650]);}
else{
t27=t26;
f_29470(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[661]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29505,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[661]);}
else{
t28=t27;
f_29505(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[658]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29540,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[658]);}
else{
t29=t28;
f_29540(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[653]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29575,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[653]);}
else{
t30=t29;
f_29575(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29604,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_29604(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k29602 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29604(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29604,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29611,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29619,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29617 in k29602 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29611(2,t2,C_SCHEME_UNDEFINED);}}

/* k29609 in k29602 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28902(t5,t4);}

/* k29573 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29575(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29575,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29579,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29579(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29577 in k29573 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28902(t7,t6);}

/* k29538 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29544,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29544(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29542 in k29538 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28902(t7,t6);}

/* k29503 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29505,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29509,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29509(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29507 in k29503 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28902(t7,t6);}

/* k29468 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29470,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29474,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29474(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29472 in k29468 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28902(t7,t6);}

/* k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_28902(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28902,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28905,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28905(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29300,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_29300(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29335,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[661]);}
else{
t7=t6;
f_29335(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29370,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[658]);}
else{
t8=t7;
f_29370(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29405,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[653]);}
else{
t9=t8;
f_29405(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29434,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29434(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29432 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29434,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29441,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29449,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29447 in k29432 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29441(2,t2,C_SCHEME_UNDEFINED);}}

/* k29439 in k29432 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28905(t5,t4);}

/* k29403 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29405,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29409,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29409(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29407 in k29403 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28905(t7,t6);}

/* k29368 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29370(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29370,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29374,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29374(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29372 in k29368 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28905(t7,t6);}

/* k29333 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29339,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29339(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29337 in k29333 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28905(t7,t6);}

/* k29298 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29300,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29304,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29304(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29302 in k29298 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28905(t7,t6);}

/* k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_28905(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28905,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28908,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28908(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29130,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_29130(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29165,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[661]);}
else{
t7=t6;
f_29165(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29200,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[658]);}
else{
t8=t7;
f_29200(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29235,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[653]);}
else{
t9=t8;
f_29235(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29264,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29264(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29262 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29264,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29271,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29279,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29277 in k29262 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29271(2,t2,C_SCHEME_UNDEFINED);}}

/* k29269 in k29262 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28908(t5,t4);}

/* k29233 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29235,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29239,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29239(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29237 in k29233 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28908(t7,t6);}

/* k29198 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29200,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29204,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29204(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29202 in k29198 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28908(t7,t6);}

/* k29163 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29165,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29169,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29169(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29167 in k29163 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28908(t7,t6);}

/* k29128 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29130,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29134,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29134(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29132 in k29128 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28908(t7,t6);}

/* k28906 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_28908(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28908,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28911,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28911(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28960,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_28960(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[661]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28995,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[661]);}
else{
t7=t6;
f_28995(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29030,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[658]);}
else{
t8=t7;
f_29030(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_29065,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[653]);}
else{
t9=t8;
f_29065(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_29094,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_29094(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k29092 in k28906 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29094,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_29101,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_29109,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k29107 in k29092 in k28906 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_29101(2,t2,C_SCHEME_UNDEFINED);}}

/* k29099 in k29092 in k28906 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28911(t5,t4);}

/* k29063 in k28906 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29065,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29069,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29069(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29067 in k29063 in k28906 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28911(t7,t6);}

/* k29028 in k28906 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_29030,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_29034,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_29034(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k29032 in k29028 in k28906 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_29034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28911(t7,t6);}

/* k28993 in k28906 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28995,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28999,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28999(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28997 in k28993 in k28906 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28911(t7,t6);}

/* k28958 in k28906 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28960,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28964,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28964(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28962 in k28958 in k28906 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28964(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28911(t7,t6);}

/* k28909 in k28906 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_28911(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28911,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28914,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_28914(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k28912 in k28909 in k28906 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28914,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28918,a[2]=((C_word)li425),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(11),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_28918 in k28912 in k28909 in k28906 in k28903 in k28900 in mm:make-ctrl in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28918(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_28918,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub5045(t7,t8,t9,t10,t11,t12));}

/* mm:touch? in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28879(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28879,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28884,a[2]=((C_word)li423),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(10));}

/* f_28884 in mm:touch? in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28884(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28884,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4929(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28150(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_28150r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_28150r(t0,t1,t2);}}

static void C_ccall f_28150r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28154,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_28154(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[650]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28722,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[650]);}
else{
t27=t26;
f_28722(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[651]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28757,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[651]);}
else{
t28=t27;
f_28757(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[658]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28792,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[658]);}
else{
t29=t28;
f_28792(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[653]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28827,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[653]);}
else{
t30=t29;
f_28827(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28856,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_28856(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k28854 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28856(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28856,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28863,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28871,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28869 in k28854 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28871(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28863(2,t2,C_SCHEME_UNDEFINED);}}

/* k28861 in k28854 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28154(t5,t4);}

/* k28825 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28827,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28831,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28831(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28829 in k28825 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28154(t7,t6);}

/* k28790 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28792,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28796,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28796(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28794 in k28790 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28154(t7,t6);}

/* k28755 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28757,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28761,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28761(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28759 in k28755 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28761(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28154(t7,t6);}

/* k28720 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28722,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28726,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28726(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28724 in k28720 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28154(t7,t6);}

/* k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_28154(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28154,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28157,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28157(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28552,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_28552(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[651]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28587,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[651]);}
else{
t7=t6;
f_28587(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28622,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[658]);}
else{
t8=t7;
f_28622(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28657,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[653]);}
else{
t9=t8;
f_28657(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28686,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_28686(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k28684 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28686,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28693,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28701,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28699 in k28684 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28693(2,t2,C_SCHEME_UNDEFINED);}}

/* k28691 in k28684 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28157(t5,t4);}

/* k28655 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28657,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28661,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28661(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28659 in k28655 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28661(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28157(t7,t6);}

/* k28620 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28622,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28626,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28626(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28624 in k28620 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28626(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28157(t7,t6);}

/* k28585 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28587,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28591,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28591(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28589 in k28585 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28157(t7,t6);}

/* k28550 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28552,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28556,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28556(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28554 in k28550 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28157(t7,t6);}

/* k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_28157(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28157,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_28160,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28160(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28382,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_28382(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[651]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28417,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[651]);}
else{
t7=t6;
f_28417(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28452,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[658]);}
else{
t8=t7;
f_28452(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28487,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[653]);}
else{
t9=t8;
f_28487(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28516,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_28516(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k28514 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28516,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28523,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28531,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28529 in k28514 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28523(2,t2,C_SCHEME_UNDEFINED);}}

/* k28521 in k28514 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28523(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28160(t5,t4);}

/* k28485 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28487,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28491,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28491(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28489 in k28485 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28160(t7,t6);}

/* k28450 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28452,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28456,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28456(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28454 in k28450 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28160(t7,t6);}

/* k28415 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28417,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28421,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28421(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28419 in k28415 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28421(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28160(t7,t6);}

/* k28380 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28382,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28386,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28386(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28384 in k28380 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28160(t7,t6);}

/* k28158 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_28160(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28160,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_28163,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_28163(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28212,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_28212(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[651]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28247,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[651]);}
else{
t7=t6;
f_28247(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[658]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28282,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[658]);}
else{
t8=t7;
f_28282(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28317,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[653]);}
else{
t9=t8;
f_28317(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28346,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_28346(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k28344 in k28158 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28346,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28353,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28361,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28359 in k28344 in k28158 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28353(2,t2,C_SCHEME_UNDEFINED);}}

/* k28351 in k28344 in k28158 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_28163(t5,t4);}

/* k28315 in k28158 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28317,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28321,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28321(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28319 in k28315 in k28158 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28163(t7,t6);}

/* k28280 in k28158 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28282,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28286,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28286(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28284 in k28280 in k28158 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28163(t7,t6);}

/* k28245 in k28158 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28247,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28251,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28251(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28249 in k28245 in k28158 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28163(t7,t6);}

/* k28210 in k28158 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28212,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28216,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28216(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28214 in k28210 in k28158 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_28163(t7,t6);}

/* k28161 in k28158 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_28163(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_28163,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28166,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_28166(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k28164 in k28161 in k28158 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28166(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28166,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28170,a[2]=((C_word)li421),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(10),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_28170 in k28164 in k28161 in k28158 in k28155 in k28152 in mm:make-touch in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28170(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_28170,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4913(t7,t8,t9,t10,t11,t12));}

/* mm:off? in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28131(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_28131,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_28136,a[2]=((C_word)li419),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(8));}

/* f_28136 in mm:off? in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28136(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_28136,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4797(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27680(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+58)){
C_save_and_reclaim((void*)tr2r,(void*)f_27680r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_27680r(t0,t1,t2);}}

static void C_ccall f_27680r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word *a=C_alloc(58);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=t2;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27684,a[2]=t14,a[3]=t12,a[4]=t18,a[5]=t10,a[6]=t2,a[7]=t16,a[8]=t6,a[9]=t8,a[10]=t4,a[11]=t1,tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t16)[1]))){
t20=t19;
f_27684(t20,C_SCHEME_UNDEFINED);}
else{
t20=(C_word)C_i_car(((C_word*)t16)[1]);
t21=(C_word)C_eqp(t20,lf[650]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28009,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t10,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[650]);}
else{
t23=t22;
f_28009(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t20,lf[651]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28044,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t12,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[651]);}
else{
t24=t23;
f_28044(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(C_word)C_eqp(t20,lf[653]);
if(C_truep(t23)){
t24=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_28079,a[2]=t2,a[3]=t19,a[4]=t16,a[5]=t18,a[6]=t14,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[19],lf[653]);}
else{
t25=t24;
f_28079(2,t25,C_SCHEME_UNDEFINED);}}
else{
t24=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_28108,a[2]=t19,a[3]=t10,a[4]=t4,a[5]=t16,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t25=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t25))(4,t25,t24,lf[10],t2);}
else{
t25=t24;
f_28108(2,t25,C_SCHEME_UNDEFINED);}}}}}}

/* k28106 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28108,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_28115,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_28123,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k28121 in k28106 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28123(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_28115(2,t2,C_SCHEME_UNDEFINED);}}

/* k28113 in k28106 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28115(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27684(t5,t4);}

/* k28077 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28079,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28083,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28083(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28081 in k28077 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28083(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27684(t7,t6);}

/* k28042 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28044(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28044,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28048,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28048(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28046 in k28042 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27684(t7,t6);}

/* k28007 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_28009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_28013,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_28013(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k28011 in k28007 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_28013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27684(t7,t6);}

/* k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_27684(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27684,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_27687,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_27687(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27874,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_27874(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[651]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27909,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[651]);}
else{
t7=t6;
f_27909(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27944,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[653]);}
else{
t8=t7;
f_27944(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27973,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_27973(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k27971 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27973,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27980,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27988,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27986 in k27971 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27980(2,t2,C_SCHEME_UNDEFINED);}}

/* k27978 in k27971 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27687(t5,t4);}

/* k27942 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27948,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27948(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27946 in k27942 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27687(t7,t6);}

/* k27907 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27909,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27913,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27913(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27911 in k27907 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27687(t7,t6);}

/* k27872 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27874,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27878,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27878(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27876 in k27872 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27687(t7,t6);}

/* k27685 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_27687(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27687,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27690,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_27690(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27739,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_27739(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[651]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27774,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[651]);}
else{
t7=t6;
f_27774(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27809,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[653]);}
else{
t8=t7;
f_27809(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27838,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_27838(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k27836 in k27685 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27838,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27845,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27853,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27851 in k27836 in k27685 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27845(2,t2,C_SCHEME_UNDEFINED);}}

/* k27843 in k27836 in k27685 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27845(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_27690(t5,t4);}

/* k27807 in k27685 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27809(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27809,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27813,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27813(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27811 in k27807 in k27685 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27690(t7,t6);}

/* k27772 in k27685 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27774,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27778,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27778(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27776 in k27772 in k27685 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27690(t7,t6);}

/* k27737 in k27685 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27739,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27743,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27743(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27741 in k27737 in k27685 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_27690(t7,t6);}

/* k27688 in k27685 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_27690(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_27690,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27693,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_27693(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k27691 in k27688 in k27685 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27693(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27693,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27697,a[2]=((C_word)li417),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[5],C_fix(8),((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0));}

/* f_27697 in k27691 in k27688 in k27685 in k27682 in mm:make-off in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27697(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_27697,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4782(t7,t8,t9,t10,t11,t12));}

/* mm:on? in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27661(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_27661,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_27666,a[2]=((C_word)li415),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(9));}

/* f_27666 in mm:on? in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27666(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_27666,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub4703(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26932(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+72)){
C_save_and_reclaim((void*)tr2r,(void*)f_26932r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_26932r(t0,t1,t2);}}

static void C_ccall f_26932r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(72);
t3=C_fix(0);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(60);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(64);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=t2;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26936,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t22,a[6]=t12,a[7]=t2,a[8]=t20,a[9]=t8,a[10]=t6,a[11]=t10,a[12]=t4,a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t20)[1]))){
t24=t23;
f_26936(t24,C_SCHEME_UNDEFINED);}
else{
t24=(C_word)C_i_car(((C_word*)t20)[1]);
t25=(C_word)C_eqp(t24,lf[650]);
if(C_truep(t25)){
t26=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27504,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t12,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t12)[1])){
C_trace("error");
t27=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t27))(4,t27,t26,lf[19],lf[650]);}
else{
t27=t26;
f_27504(2,t27,C_SCHEME_UNDEFINED);}}
else{
t26=(C_word)C_eqp(t24,lf[651]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27539,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t14,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[651]);}
else{
t28=t27;
f_27539(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t24,lf[652]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27574,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t16,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t16)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[652]);}
else{
t29=t28;
f_27574(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t24,lf[653]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27609,a[2]=t2,a[3]=t23,a[4]=t20,a[5]=t22,a[6]=t18,a[7]=t10,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t18)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[653]);}
else{
t30=t29;
f_27609(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27638,a[2]=t23,a[3]=t12,a[4]=t4,a[5]=t20,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[10],t2);}
else{
t30=t29;
f_27638(2,t30,C_SCHEME_UNDEFINED);}}}}}}}

/* k27636 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27638,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27645,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27653,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27651 in k27636 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27653(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27645(2,t2,C_SCHEME_UNDEFINED);}}

/* k27643 in k27636 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26936(t5,t4);}

/* k27607 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27609,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27613,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27613(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27611 in k27607 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26936(t7,t6);}

/* k27572 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27574,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27578,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27578(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27576 in k27572 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26936(t7,t6);}

/* k27537 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27539(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27539,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27543,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27543(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27541 in k27537 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26936(t7,t6);}

/* k27502 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27504,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27508,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27508(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27506 in k27502 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26936(t7,t6);}

/* k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26936(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26936,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26939,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_26939(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27334,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_27334(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[651]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27369,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[651]);}
else{
t7=t6;
f_27369(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27404,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[652]);}
else{
t8=t7;
f_27404(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27439,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[653]);}
else{
t9=t8;
f_27439(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27468,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_27468(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k27466 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27468,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27475,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27483,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27481 in k27466 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27475(2,t2,C_SCHEME_UNDEFINED);}}

/* k27473 in k27466 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26939(t5,t4);}

/* k27437 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27439,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27443,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27443(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27441 in k27437 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26939(t7,t6);}

/* k27402 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27408,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27408(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27406 in k27402 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26939(t7,t6);}

/* k27367 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27369,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27373,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27373(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27371 in k27367 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26939(t7,t6);}

/* k27332 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27334,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27338,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27338(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27336 in k27332 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26939(t7,t6);}

/* k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26939(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[52],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26939,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26942,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_26942(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27164,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_27164(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[651]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27199,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[651]);}
else{
t7=t6;
f_27199(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27234,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[652]);}
else{
t8=t7;
f_27234(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27269,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[653]);}
else{
t9=t8;
f_27269(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27298,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_27298(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k27296 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27298,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27305,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27313,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27311 in k27296 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27305(2,t2,C_SCHEME_UNDEFINED);}}

/* k27303 in k27296 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26942(t5,t4);}

/* k27267 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27269,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27273,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27273(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27271 in k27267 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27273(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26942(t7,t6);}

/* k27232 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27238,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27238(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27236 in k27232 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26942(t7,t6);}

/* k27197 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27203,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27203(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27201 in k27197 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26942(t7,t6);}

/* k27162 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27164,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27168,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27168(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27166 in k27162 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26942(t7,t6);}

/* k26940 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26942(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[47],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26942,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26945,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_26945(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[650]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26994,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[650]);}
else{
t6=t5;
f_26994(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[651]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27029,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[651]);}
else{
t7=t6;
f_27029(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[652]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27064,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[652]);}
else{
t8=t7;
f_27064(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[653]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_27099,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[653]);}
else{
t9=t8;
f_27099(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_27128,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_27128(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k27126 in k26940 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27128,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_27135,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_27143,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k27141 in k27126 in k26940 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_27135(2,t2,C_SCHEME_UNDEFINED);}}

/* k27133 in k27126 in k26940 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_26945(t5,t4);}

/* k27097 in k26940 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27099,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27103,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27103(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27101 in k27097 in k26940 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26945(t7,t6);}

/* k27062 in k26940 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27064,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27068,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27068(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27066 in k27062 in k26940 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26945(t7,t6);}

/* k27027 in k26940 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_27029,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_27033,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_27033(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k27031 in k27027 in k26940 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_27033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26945(t7,t6);}

/* k26992 in k26940 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26998,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_26998(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k26996 in k26992 in k26940 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_26945(t7,t6);}

/* k26943 in k26940 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26945(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26945,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26948,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_26948(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k26946 in k26943 in k26940 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26948,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26952,a[2]=((C_word)li413),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],C_fix(9),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* f_26952 in k26946 in k26943 in k26940 in k26937 in k26934 in mm:make-on in k26786 in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26952(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_26952,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub4687(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26594(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26594,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26602,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26434,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_26434(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_26434(t12,(C_word)C_i_not(t11));}}

/* k26432 in parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26434(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26434,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26441,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23378(t2,(C_word)C_a_i_list(&a,4,lf[469],lf[639],lf[474],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26442,a[2]=((C_word)li408),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26467,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26469,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li411),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_26469(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do4485 in k26432 in parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26469(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26469,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26479,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[386]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_26479(t16,t13);}
else{
t13=t10;
f_26479(t13,C_SCHEME_UNDEFINED);}}}

/* k26477 in do4485 in k26432 in parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26479(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26479,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26483,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23600(t2,t3,((C_word*)t0)[3]);}

/* k26481 in k26477 in do4485 in k26432 in parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26483,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26486,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_26486(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[644],t5,lf[645]));}}

/* k26484 in k26481 in k26477 in do4485 in k26432 in parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26486,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26489,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26538,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li409),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26547,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li410),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a26546 in k26484 in k26481 in k26477 in do4485 in k26432 in parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26547(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26547,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a26537 in k26484 in k26481 in k26477 in do4485 in k26432 in parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26538,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k26487 in k26484 in k26481 in k26477 in do4485 in k26432 in parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26489,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26492,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26508,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  op-type?");
f_26442(t3,((C_word*)((C_word*)t0)[6])[1],lf[630]);}

/* k26506 in k26487 in k26484 in k26481 in k26477 in do4485 in k26432 in parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26508,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_26492(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26515,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  op-type?");
f_26442(t2,((C_word*)((C_word*)t0)[6])[1],lf[643]);}}

/* k26513 in k26506 in k26487 in k26484 in k26481 in k26477 in do4485 in k26432 in parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26515(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26515,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_26492(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[640],t2,lf[641],t3,lf[642]));}}
else{
t2=((C_word*)t0)[5];
f_26492(2,t2,C_SCHEME_UNDEFINED);}}

/* k26490 in k26487 in k26484 in k26481 in k26477 in do4485 in k26432 in parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26492,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26498,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k26496 in k26490 in k26487 in k26484 in k26481 in k26477 in do4485 in k26432 in parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_26469(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k26465 in k26432 in parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_26602(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k26432 in parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26442(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26442,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k26439 in k26432 in parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26441,2,t0,t1);}
t2=((C_word*)t0)[2];
f_26602(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k26600 in parse-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26602(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  gather-clauses");
f_23529(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26180(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_26180,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[633],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26202,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[636],t8,lf[637]));}
else{
t19=t17;
f_26202(2,t19,C_SCHEME_UNDEFINED);}}

/* k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26202,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26217,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[635]));}
else{
t9=t8;
f_26217(2,t9,C_SCHEME_UNDEFINED);}}

/* k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26217,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26220,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[6]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[388],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_26220(t6,t5);}
else{
t4=t2;
f_26220(t4,C_SCHEME_UNDEFINED);}}

/* k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26220(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26220,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26223,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26390,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li405),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26396,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li406),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a26395 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26396(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26396,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a26389 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26390,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  parse-then-else-dependents");
f_26049(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26223,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26226,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_26226(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26372,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  gather-clauses");
f_23529(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k26370 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_26226(t3,t2);}

/* k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26226(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26226,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26229,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  loop-operator-set!");
f_23276(t2,((C_word*)((C_word*)t0)[7])[1],lf[20]);}

/* k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26229,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_26353,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_26365,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping");
t4=C_retrieve2(lf[463],"loop-looping");
f_23330(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k26363 in k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26365,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[412],t1);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k26351 in k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26353(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26353,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26236,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26249,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_26249(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_26249(t7,(C_word)C_eqp(t6,lf[16]));}}

/* k26247 in k26351 in k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26249(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26249,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_26256,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[634]));}
else{
t5=t4;
f_26256(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_26236(t2,C_SCHEME_UNDEFINED);}}

/* k26254 in k26247 in k26351 in k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26256,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26259,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26312,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li403),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26326,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li404),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a26325 in k26254 in k26247 in k26351 in k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26326(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26326,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a26311 in k26254 in k26247 in k26351 in k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26320,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k26318 in a26311 in k26254 in k26247 in k26351 in k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  parse-then-else-dependents");
f_26049(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k26257 in k26254 in k26247 in k26351 in k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26259,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26262,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_26262(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26298,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  gather-clauses");
f_23529(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k26296 in k26257 in k26254 in k26247 in k26351 in k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_26262(t3,t2);}

/* k26260 in k26257 in k26254 in k26247 in k26351 in k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26262(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26262,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26291,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping");
t4=C_retrieve2(lf[463],"loop-looping");
f_23330(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k26289 in k26260 in k26257 in k26254 in k26247 in k26351 in k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26291,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[412],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26268,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping-set!");
f_23336(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k26266 in k26289 in k26260 in k26257 in k26254 in k26247 in k26351 in k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26268,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26271,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  loop-looping-set!");
f_23336(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k26269 in k26266 in k26289 in k26260 in k26257 in k26254 in k26247 in k26351 in k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26275,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 379  gather-clauses");
f_23529(t2,lf[20],t3);}

/* k26273 in k26269 in k26266 in k26289 in k26260 in k26257 in k26254 in k26247 in k26351 in k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_26236(t3,t2);}

/* k26234 in k26351 in k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26236(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26236,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26239,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 379  loop-looping-set!");
f_23336(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k26237 in k26234 in k26351 in k26227 in k26224 in k26221 in k26218 in k26215 in k26200 in parse-conditional in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26049(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26049,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26053,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_26058,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li401),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_26058(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do4418 in parse-then-else-dependents in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26058(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26058,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26006,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23600(t12,t10,t11);}}

/* k26004 in do4418 in parse-then-else-dependents in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26006,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_26012,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_26012(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[630]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[631]);
t8=t2;
f_26012(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_26012(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_26012(t3,C_SCHEME_FALSE);}}

/* k26010 in k26004 in do4418 in parse-then-else-dependents in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_26012(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_26012,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_26075,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_26075(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[628],t6,lf[629]));}}

/* k26073 in k26010 in k26004 in do4418 in parse-then-else-dependents in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26075,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26078,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_26148,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li399),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_26161,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li400),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a26160 in k26073 in k26010 in k26004 in do4418 in parse-then-else-dependents in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26161(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_26161,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a26147 in k26073 in k26010 in k26004 in do4418 in parse-then-else-dependents in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26148,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_26156,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k26154 in a26147 in k26073 in k26010 in k26004 in do4418 in parse-then-else-dependents in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k26076 in k26073 in k26010 in k26004 in do4418 in parse-then-else-dependents in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26078,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_26082,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k26080 in k26076 in k26073 in k26010 in k26004 in do4418 in parse-then-else-dependents in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_26082,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_26087,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_26087(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[386]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[627]));}
else{
t10=t5;
f_26087(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[16]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_26087(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_26125,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23600(t10,t11,((C_word*)t0)[3]);}}}}

/* k26123 in k26080 in k26076 in k26073 in k26010 in k26004 in do4418 in parse-then-else-dependents in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_26087(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_26087(2,t2,C_SCHEME_UNDEFINED);}}

/* k26085 in k26080 in k26076 in k26073 in k26010 in k26004 in do4418 in parse-then-else-dependents in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_26058(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k26051 in parse-then-else-dependents in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_26053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25948(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25948,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25955,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[624],t13,lf[625]));}
else{
t13=t11;
f_25955(2,t13,C_SCHEME_UNDEFINED);}}

/* k25953 in parse-return in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25955,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25986,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23600(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k25984 in k25953 in parse-return in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25986,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25974,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25982,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k25980 in k25984 in k25953 in parse-return in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25982,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23378(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[469],lf[610],lf[474],t2));}

/* k25972 in k25984 in k25953 in parse-return in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25857(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25857,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25864,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[621],t15,lf[622]));}
else{
t15=t13;
f_25864(2,t15,C_SCHEME_UNDEFINED);}}

/* k25862 in parse-thereis in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25864,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25932,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23600(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k25930 in k25862 in parse-thereis in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25932,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25875,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[618]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_25875(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[619]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[388],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_25875(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[620]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_25875(t9,t8);}
else{
t8=t4;
f_25875(t8,C_SCHEME_UNDEFINED);}}}}

/* k25873 in k25930 in k25862 in parse-thereis in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_25875(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25875,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25886,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_25902,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k25900 in k25873 in k25930 in k25862 in parse-thereis in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25902,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23378(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[469],lf[618],lf[474],t3,lf[477],t4));}

/* k25884 in k25873 in k25930 in k25862 in parse-thereis in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25791(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25791,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25802,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[615],t7,lf[616]));}
else{
t13=t12;
f_25802(2,t13,C_SCHEME_UNDEFINED);}}

/* k25800 in parse-while-until in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25802,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25805,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[613]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_25805(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[614]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[388],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_25805(t10,t9);}
else{
t5=t2;
f_25805(t5,C_SCHEME_UNDEFINED);}}}

/* k25803 in k25800 in parse-while-until in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_25805(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25805,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25812,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[3])[1],lf[612]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23378(t2,(C_word)C_a_i_list(&a,4,lf[469],((C_word*)t0)[2],lf[474],t4));}

/* k25810 in k25803 in k25800 in parse-while-until in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25785(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_25785,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[610],t2));}

/* parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25239(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25239,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25248,a[2]=((C_word)li389),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25253,a[2]=((C_word)li390),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_25258,a[2]=((C_word)li391),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25270,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[607],t7,lf[608]));}
else{
t30=t29;
f_25270(2,t30,C_SCHEME_UNDEFINED);}}

/* k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25270(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25270,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_25281,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_25281(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[603]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25734,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[606]));}
else{
t11=t9;
f_25734(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_25281(2,t9,C_SCHEME_UNDEFINED);}}}

/* k25732 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25734(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25734,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25740,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 379  loop-variable?");
f_23606(t2,t3);}

/* k25738 in k25732 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25740,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_25281(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[604],t2,lf[605]));}}

/* k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25281(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25281,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_25285,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25166,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li393),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_25166(t9,t2,C_SCHEME_FALSE);}

/* do4240 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_25166(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25166,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25180,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25191,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  loop-collectors");
t9=C_retrieve2(lf[460],"loop-collectors");
f_23294(3,t9,t7,t8);}}

/* k25189 in do4240 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25191,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25126,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li392),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_25126(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do4232 in k25189 in do4240 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_25126(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25126,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25139,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_25139(t12,t11);}
else{
t10=t6;
f_25139(t10,C_SCHEME_UNDEFINED);}}}

/* k25137 in do4232 in k25189 in do4240 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_25139(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_25126(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k25178 in do4240 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_25166(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25285(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25285,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_25288,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_25718,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25722,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  collector-type");
f_25253(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_25288(2,t6,t5);}}

/* k25720 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[600];
t3=lf[601];
t4=lf[602];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_25718(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_25718(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_25718(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_25718(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k25716 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_25718(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25718,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_25288(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25714,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  collector-type");
f_25253(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k25712 in k25716 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25714,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[597],t1,lf[598],((C_word*)t0)[2],lf[599]));}

/* k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25288,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_25291,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[582]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[583]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25334,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25372,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_25372(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 379  gensym");
t10=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[584]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25401,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  collector-acc");
f_25258(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[585]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[586]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_25413,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[588]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[18]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_25508,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_25508(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[591]);
t10=t8;
f_25508(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[596])));}}}}

/* k25506 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_25508(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25508,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25511,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25624,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25682,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t9,((C_word*)((C_word*)t0)[13])[1],lf[595]);}
else{
t9=t8;
f_25624(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25617,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  collector-acc");
f_25258(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_25291(t2,C_SCHEME_UNDEFINED);}}

/* k25615 in k25506 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_25511(t6,t5);}

/* k25680 in k25506 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25682,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_25624(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k25622 in k25506 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_25624(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25624,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25628,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[594]);}

/* k25626 in k25622 in k25506 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25628,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25632,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[593]);}

/* k25630 in k25626 in k25622 in k25506 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25632(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25632,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25674,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t3,((C_word*)((C_word*)t0)[11])[1],lf[592]);}

/* k25672 in k25630 in k25626 in k25622 in k25506 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25674,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_25670,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k25668 in k25672 in k25630 in k25626 in k25622 in k25506 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25670(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25670,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25648,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-collector");
f_25248(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k25646 in k25668 in k25672 in k25630 in k25626 in k25622 in k25506 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25648,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_25511(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_25511(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k25509 in k25506 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_25511(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25511,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25514,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[18]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[589]);
t5=(C_word)C_a_i_list(&a,3,lf[18],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[590],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[320],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_25514(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[591]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[589],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[590],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_25514(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[590],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[320],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_25514(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k25512 in k25509 in k25506 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_25514(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25514,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_25291(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_25291(t2,C_SCHEME_UNDEFINED);}}

/* k25411 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25413,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[585]);
t3=(C_truep(t2)?lf[339]:lf[415]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25419,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25463,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_25463(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 379  gensym");
t9=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[587]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25496,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  collector-acc");
f_25258(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k25494 in k25411 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25419(t3,t2);}

/* k25461 in k25411 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25463,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25489,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k25487 in k25461 in k25411 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25489(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25489,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25471,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-collector");
f_25248(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k25469 in k25487 in k25461 in k25411 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25471,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_25419(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[387],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_25419(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k25417 in k25411 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_25419(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25419,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25459,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k25457 in k25417 in k25411 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25459(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25459,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[388],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[387],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[20],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[412],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_25291(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k25399 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_25334(t3,t2);}

/* k25370 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25372,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_25394,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k25392 in k25370 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25394,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_25380,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-collector");
f_25248(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k25378 in k25392 in k25370 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25380,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_25334(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_25334(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k25332 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_25334(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25334,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[582]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_25291(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_25291(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k25289 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_25291(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25291,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25298,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25302,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t4=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k25300 in k25289 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25302,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25306,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k25304 in k25300 in k25289 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25306,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25310,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k25308 in k25304 in k25300 in k25289 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25310,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25314,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k25312 in k25308 in k25304 in k25300 in k25289 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25314,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23378(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[469],((C_word*)t0)[5],lf[470],((C_word*)t0)[4],lf[472],((C_word*)t0)[3],lf[474],((C_word*)t0)[2],lf[477],t1,lf[471],t2,lf[473],C_SCHEME_END_OF_LIST));}

/* k25296 in k25289 in k25286 in k25283 in k25279 in k25268 in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_25258(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25258,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_25253(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25253,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_25248(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_25248,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25080(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25080,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25091,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[579],t6,lf[580]));}
else{
t12=t11;
f_25091(2,t12,C_SCHEME_UNDEFINED);}}

/* k25089 in parse-initially in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25091,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25106,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23378(t6,(C_word)C_a_i_list(&a,4,lf[469],((C_word*)t0)[2],lf[472],t7));}

/* k25104 in k25089 in parse-initially in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25042(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_25042,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_25053,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[576],t6,lf[577]));}
else{
t12=t11;
f_25053(2,t12,C_SCHEME_UNDEFINED);}}

/* k25051 in parse-finally in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25053,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25068,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23378(t6,(C_word)C_a_i_list(&a,4,lf[469],((C_word*)t0)[2],lf[476],t7));}

/* k25066 in k25051 in parse-finally in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24975(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24975,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24986,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24995,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li385),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_24995(t16,t12);}

/* do4189 in parse-do in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_24995(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24995,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_25005,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_25005(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23600(t3,t4,((C_word*)t0)[5]);}}

/* k25003 in do4189 in parse-do in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_25005,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[573],((C_word*)t0)[4],lf[574]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_25018,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_24995(t7,((C_word*)t0)[7]);}}

/* k25016 in k25003 in do4189 in parse-do in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_25018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k24984 in parse-do in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24986,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24993,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23378(t2,(C_word)C_a_i_list(&a,4,lf[469],((C_word*)t0)[3],lf[474],((C_word*)((C_word*)t0)[2])[1]));}

/* k24991 in k24984 in parse-do in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24993(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24782(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24782,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24789,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24842,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li383),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_24842(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do4145 in parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_24842(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24842,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24852,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_24852(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23600(t7,t8,((C_word*)t0)[5]);}}

/* k24850 in do4145 in parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24852,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24863,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24966,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 379  loop-variable?");
f_23606(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k24964 in k24850 in do4145 in parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24966,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24872,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[563],((C_word*)((C_word*)t0)[10])[1],lf[564]));}
else{
t4=t3;
f_24872(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[386]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24894,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[565]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24923,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24931,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[566]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[551]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[567]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_24863(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[568],((C_word*)((C_word*)t0)[10])[1],lf[569]));}
else{
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[570],((C_word*)((C_word*)t0)[10])[1],lf[571]));}}}}}

/* k24929 in k24964 in k24850 in do4145 in parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24931,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_24894(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k24921 in k24964 in k24850 in do4145 in parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24923(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24923,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24894(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k24892 in k24964 in k24850 in do4145 in parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24894(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_24863(2,t6,t5);}

/* k24870 in k24964 in k24850 in do4145 in parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24875,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[561],((C_word*)((C_word*)t0)[8])[1],lf[562]));}
else{
t3=t2;
f_24875(2,t3,C_SCHEME_UNDEFINED);}}

/* k24873 in k24870 in k24964 in k24850 in do4145 in parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_24863(2,t6,t5);}

/* k24861 in k24850 in do4145 in parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24863(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_24842(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k24787 in parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24792,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[560]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24832,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24840,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_24792(2,t3,C_SCHEME_UNDEFINED);}}}

/* k24838 in k24787 in parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24840(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24840,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_24792(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k24830 in k24787 in parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24832,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24792(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k24790 in k24787 in parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24792,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24799,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24803,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t4=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k24801 in k24790 in k24787 in parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24803,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24807,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k24805 in k24801 in k24790 in k24787 in parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24807,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23378(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[469],lf[559],lf[470],((C_word*)t0)[2],lf[472],t1));}

/* k24797 in k24790 in k24787 in parse-with in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24640(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24640,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24650,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24688,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li381),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_24688(t22,t18,C_SCHEME_FALSE);}

/* do4107 in parse-general-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_24688(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24688,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24698,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_24698(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23600(t5,t6,((C_word*)t0)[5]);}}

/* k24696 in do4107 in parse-general-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24698,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24709,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[557]));}
else{
t7=t6;
f_24709(2,t7,C_SCHEME_UNDEFINED);}}}

/* k24707 in k24696 in do4107 in parse-general-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24709(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24709,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24712,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[551]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24721,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[552]));}
else{
t6=t5;
f_24721(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[553]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24746,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[554]));}
else{
t7=t6;
f_24746(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[555],((C_word*)((C_word*)t0)[12])[1],lf[556]));}}}

/* k24744 in k24707 in k24696 in do4107 in parse-general-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24746,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_24712(2,t10,t9);}

/* k24719 in k24707 in k24696 in do4107 in parse-general-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24721(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24721,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_24712(2,t8,t7);}

/* k24710 in k24707 in k24696 in do4107 in parse-general-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_24688(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k24648 in parse-general-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24650(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24650,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24657,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24686,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k24684 in k24648 in parse-general-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24686,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23378(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[469],lf[499],lf[470],t2,lf[472],t3,lf[474],t4,lf[475],t5));}

/* k24655 in k24648 in parse-general-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24289(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24289,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24296,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t8=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[549]);}

/* k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24296(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24296,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24302,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24530,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li379),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_24530(t25,t21,C_SCHEME_FALSE);}

/* do4040 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_24530(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24530,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24540,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_24540(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23600(t5,t6,((C_word*)t0)[4]);}}

/* k24538 in do4040 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24540,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24551,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[548]));}
else{
t7=t6;
f_24551(2,t7,C_SCHEME_UNDEFINED);}}}

/* k24549 in k24538 in do4040 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24551,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24554,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[538]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24563,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_24563(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[547]);
if(C_truep(t6)){
t7=t5;
f_24563(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[532]);
t8=t5;
f_24563(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[537])));}}}

/* k24561 in k24549 in k24538 in do4040 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_24563(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24563,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24566,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[540],((C_word*)((C_word*)t0)[9])[1],lf[541],((C_word*)((C_word*)t0)[10])[1],lf[542]));}
else{
t3=t2;
f_24566(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[523]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[543]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[532]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[544]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_24554(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[545],((C_word*)((C_word*)t0)[9])[1],lf[546]));}}}

/* k24564 in k24561 in k24549 in k24538 in do4040 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_24554(2,t7,t6);}

/* k24552 in k24549 in k24538 in do4040 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24554(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_24530(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k24300 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24302,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_24528,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k24526 in k24300 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24528,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24524,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k24522 in k24526 in k24300 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24524,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_24313,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[532]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_24330,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[536]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[537]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24406,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[258],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_24406(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[258],((C_word*)t0)[4]);
t9=t7;
f_24406(t9,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_24435,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24470,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_24470(t10,(C_word)C_eqp(t9,lf[539]));}
else{
t9=t8;
f_24470(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_24435(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k24468 in k24522 in k24526 in k24300 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_24470(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24470,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24435(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_24435(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k24433 in k24522 in k24526 in k24300 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_24435(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24435,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24451,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[538]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)t0)[6]);
t5=t2;
f_24451(t5,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_24451(t4,(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k24449 in k24433 in k24522 in k24526 in k24300 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_24451(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24451,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_24313(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k24404 in k24522 in k24526 in k24300 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_24406(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24406,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[256],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[412],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_24313(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k24328 in k24522 in k24526 in k24300 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_24333,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[535]);}

/* k24331 in k24328 in k24522 in k24526 in k24300 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24333,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24397,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t2,((C_word*)t0)[7],C_fix(0));}

/* k24395 in k24331 in k24328 in k24522 in k24526 in k24300 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24397,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24393,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k24391 in k24395 in k24331 in k24328 in k24522 in k24526 in k24300 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24393,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[533],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[94],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[534],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[339],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[388],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_24313(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k24311 in k24522 in k24526 in k24300 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_24313(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24313,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24320,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24324,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t4=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k24322 in k24311 in k24522 in k24526 in k24300 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24324(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24324,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23378(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[469],lf[499],lf[470],t1,lf[473],((C_word*)((C_word*)t0)[5])[1],lf[472],((C_word*)((C_word*)t0)[4])[1],lf[474],((C_word*)((C_word*)t0)[3])[1],lf[475],((C_word*)((C_word*)t0)[2])[1]));}

/* k24318 in k24311 in k24522 in k24526 in k24300 in k24294 in parse-sequence-iteration in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24320(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24242(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_24242,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[529]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24257,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li376),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24275,a[2]=t2,a[3]=((C_word)li377),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a24274 in parse-repeat in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24275(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_24275,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,t1,t2,t4);}

/* a24256 in parse-repeat in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24257,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24269,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[530]);}

/* k24267 in a24256 in parse-repeat in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24269,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[499],t1,lf[504],t2);
C_trace("ChickenBridge.scm: 379  parse-numerical-for");
t4=C_retrieve2(lf[498],"parse-numerical-for");
f_23860(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23860(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23860,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23870,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_24069,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li374),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_24069(t31,t27,C_SCHEME_FALSE);}

/* do3941 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_24069(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_24069,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24079,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_24079(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23600(t5,t6,((C_word*)t0)[6]);}}

/* k24077 in do3941 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24079,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_24090,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[527]));}
else{
t7=t6;
f_24090(2,t7,C_SCHEME_UNDEFINED);}}}

/* k24088 in k24077 in do3941 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24090,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24093,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[506]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[502]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24105,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[507],((C_word*)((C_word*)t0)[12])[1],lf[508],((C_word*)((C_word*)t0)[9])[1],lf[509]));}
else{
t7=t6;
f_24105(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[504]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24126,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[510],((C_word*)((C_word*)t0)[12])[1],lf[511],((C_word*)((C_word*)t0)[3])[1],lf[512]));}
else{
t8=t7;
f_24126(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[513]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24147,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[514],((C_word*)((C_word*)t0)[12])[1],lf[515],((C_word*)((C_word*)t0)[3])[1],lf[516]));}
else{
t9=t8;
f_24147(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[503]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24168,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[517],((C_word*)((C_word*)t0)[12])[1],lf[518],((C_word*)((C_word*)t0)[3])[1],lf[519]));}
else{
t10=t9;
f_24168(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[505]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24189,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[520],((C_word*)((C_word*)t0)[12])[1],lf[521],((C_word*)((C_word*)t0)[3])[1],lf[522]));}
else{
t11=t10;
f_24189(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[523]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_24210,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[524]));}
else{
t12=t11;
f_24210(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[525],((C_word*)((C_word*)t0)[12])[1],lf[526]));}}}}}}}

/* k24208 in k24088 in k24077 in do3941 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_24093(2,t6,t5);}

/* k24187 in k24088 in k24077 in do3941 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_24093(2,t7,t6);}

/* k24166 in k24088 in k24077 in do3941 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_24093(2,t7,t6);}

/* k24145 in k24088 in k24077 in do3941 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_24093(2,t7,t6);}

/* k24124 in k24088 in k24077 in do3941 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_24093(2,t7,t6);}

/* k24103 in k24088 in k24077 in do3941 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_24093(2,t7,t6);}

/* k24091 in k24088 in k24077 in do3941 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_24069(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23870,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_23873,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_23873(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[506]);
t5=t2;
f_23873(t5,t4);}}

/* k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23873(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23873,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23876,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[502]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_24036,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_24036(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[505]);
t6=t4;
f_24036(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[503])));}}

/* k24034 in k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_24036(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[96]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[503]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[416]);
t5=((C_word*)t0)[2];
f_23876(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[339]);
t5=((C_word*)t0)[2];
f_23876(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[94]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[504]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[409]);
t5=((C_word*)t0)[2];
f_23876(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[415]);
t5=((C_word*)t0)[2];
f_23876(t5,t4);}}}

/* k23874 in k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23876(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23876,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23879,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_24007,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_24027,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k24025 in k23874 in k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24027,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23879(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k24005 in k23874 in k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_24007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_24007,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_23879(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k23877 in k23874 in k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23879(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23879,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23882,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_23882(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23972,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t5=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[501]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_23882(t5,t4);}}

/* k23970 in k23877 in k23874 in k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23989,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t2,t1,C_SCHEME_FALSE);}

/* k23987 in k23970 in k23877 in k23874 in k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23989(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23989,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_23882(t8,t7);}

/* k23880 in k23877 in k23874 in k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23882(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23882,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23889,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23921,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  gensym");
t7=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[500]);}
else{
t6=t5;
f_23889(t6,C_SCHEME_UNDEFINED);}}

/* k23919 in k23880 in k23877 in k23874 in k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23921,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23924,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23939,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23955,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  make-binding");
f_23612(t3,t1,C_SCHEME_FALSE);}}

/* k23953 in k23919 in k23880 in k23877 in k23874 in k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23955,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_23924(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k23937 in k23919 in k23880 in k23877 in k23874 in k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23939,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_23924(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k23922 in k23919 in k23880 in k23877 in k23874 in k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23924(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23924,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_23889(t4,t3);}

/* k23887 in k23880 in k23877 in k23874 in k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23889(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23889,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23896,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23900,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t4=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k23898 in k23887 in k23880 in k23877 in k23874 in k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23900,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23904,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  reverse");
t3=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k23902 in k23898 in k23887 in k23880 in k23877 in k23874 in k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23904(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23904,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23378(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[469],lf[499],lf[470],((C_word*)t0)[2],lf[472],t1,lf[475],t2,lf[473],t4));}

/* k23894 in k23887 in k23880 in k23877 in k23874 in k23871 in k23868 in parse-numerical-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23778(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_23778,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23782,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23600(t5,t6,t4);}

/* k23780 in parse-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23782,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[491]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23800,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  loop-variable?");
f_23606(t4,t3);}}

/* k23798 in k23780 in parse-for in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23800,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[492]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[493],t6,lf[494],lf[495]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 379  loop-error");
f_23618(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[496],t2,lf[497]));}}

/* loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23618(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23618,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23674,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23626,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li371),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_23626(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do3892 in loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23626(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23626,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23636,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_23636(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_23636(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  loop-op?");
f_23600(t6,t8,((C_word*)t0)[2]);}}}

/* k23634 in do3892 in loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23636(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23636,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 379  reverse");
t2=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_23626(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k23672 in loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23674,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23677,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  newline");
t3=*((C_word*)lf[327]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k23675 in k23672 in loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23677,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23680,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 379  display");
t3=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[489]);}

/* k23678 in k23675 in k23672 in loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23680,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23683,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23755,a[2]=t4,a[3]=((C_word)li370),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_23755(t6,t2,((C_word*)t0)[2]);}

/* do3902 in k23678 in k23675 in k23672 in loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23755(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23755,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23765,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 379  display");
t5=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k23763 in do3902 in k23678 in k23675 in k23672 in loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23765(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23755(t3,((C_word*)t0)[2],t2);}

/* k23681 in k23678 in k23675 in k23672 in loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23683,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23686,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  newline");
t3=*((C_word*)lf[327]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k23684 in k23681 in k23678 in k23675 in k23672 in loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23686,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23689,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 379  display");
t3=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[488]);}

/* k23687 in k23684 in k23681 in k23678 in k23675 in k23672 in loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23689(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23689,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23692,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 379  display");
t3=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[484]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23709,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li369),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_23709(t6,t2,((C_word*)t0)[2]);}}

/* do3907 in k23687 in k23684 in k23681 in k23678 in k23675 in k23672 in loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23709(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23709,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23719,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 379  display");
t5=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[487]);}
else{
t5=t3;
f_23719(2,t5,C_SCHEME_UNDEFINED);}}}

/* k23717 in do3907 in k23687 in k23684 in k23681 in k23678 in k23675 in k23672 in loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23719,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23722,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 379  display");
t4=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k23720 in k23717 in do3907 in k23687 in k23684 in k23681 in k23678 in k23675 in k23672 in loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23722(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23722,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23725,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[485]:lf[486]);
C_trace("ChickenBridge.scm: 379  display");
t6=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k23723 in k23720 in k23717 in do3907 in k23687 in k23684 in k23681 in k23678 in k23675 in k23672 in loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23709(t3,((C_word*)t0)[2],t2);}

/* k23690 in k23687 in k23684 in k23681 in k23678 in k23675 in k23672 in loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23692,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23695,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 379  newline");
t3=*((C_word*)lf[327]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k23693 in k23690 in k23687 in k23684 in k23681 in k23678 in k23675 in k23672 in loop-error in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23695(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[483]);}

/* make-binding in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23612(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23612,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23606(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23606,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23600(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23600,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23529(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23529,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23531,a[2]=((C_word)li364),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23570,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_23531(t5,t3,C_retrieve2(lf[459],"loop-bindings"));}

/* k23568 in gather-clauses in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_23574,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_23531(t2,((C_word*)t0)[2],C_retrieve2(lf[460],"loop-collectors"));}

/* k23572 in k23568 in gather-clauses in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23574,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_23578,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_23531(t2,((C_word*)t0)[2],C_retrieve2(lf[461],"loop-initially"));}

/* k23576 in k23572 in k23568 in gather-clauses in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23578,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_23582,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_23531(t2,((C_word*)t0)[2],C_retrieve2(lf[462],"loop-end-tests"));}

/* k23580 in k23576 in k23572 in k23568 in gather-clauses in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23582,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_23586,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_23531(t2,((C_word*)t0)[2],C_retrieve2(lf[463],"loop-looping"));}

/* k23584 in k23580 in k23576 in k23572 in k23568 in gather-clauses in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23586(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23586,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23590,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_23531(t2,((C_word*)t0)[2],C_retrieve2(lf[465],"loop-stepping"));}

/* k23588 in k23584 in k23580 in k23576 in k23572 in k23568 in gather-clauses in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23590(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23590,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_23594,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_23531(t2,((C_word*)t0)[2],C_retrieve2(lf[466],"loop-finally"));}

/* k23592 in k23588 in k23584 in k23580 in k23576 in k23572 in k23568 in gather-clauses in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23594(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23594,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_23598,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 379  gather-clause");
f_23531(t2,((C_word*)t0)[2],C_retrieve2(lf[467],"loop-returning"));}

/* k23596 in k23592 in k23588 in k23584 in k23580 in k23576 in k23572 in k23568 in gather-clauses in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23598,2,t0,t1);}
C_trace("ChickenBridge.scm: 379  make-loop-clause");
f_23378(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[469],((C_word*)t0)[9],lf[470],((C_word*)t0)[8],lf[471],((C_word*)t0)[7],lf[472],((C_word*)t0)[6],lf[473],((C_word*)t0)[5],lf[474],((C_word*)t0)[4],lf[475],((C_word*)t0)[3],lf[476],((C_word*)t0)[2],lf[477],t1));}

/* gather-clause in gather-clauses in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23531(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23531,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23537,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li363),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_23537(t8,t1,C_SCHEME_END_OF_LIST);}

/* do3875 in gather-clause in gather-clauses in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23537(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23537,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23548,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23559,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 379  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k23557 in do3875 in gather-clause in gather-clauses in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23559(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 379  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k23546 in do3875 in gather-clause in gather-clauses in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_23537(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23378(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23378,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23393,a[2]=t5,a[3]=t3,a[4]=((C_word)li361),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_23393(t7,t1,t2);}}

/* do3863 in make-loop-clause in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23393(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23393,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23406,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[469]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 379  loop-operator-set!");
f_23276(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[470]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_23406(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[471]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_23406(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[472]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_23406(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[473]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_23406(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[474]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 379  loop-looping-set!");
f_23336(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[475]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_23406(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[476]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_23406(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[477]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_23406(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_23406(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k23404 in do3863 in make-loop-clause in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23393(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23366(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23366,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23354(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23354,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23342(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23342,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23336(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23336,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23330(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23330,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23318(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23318,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23306(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23306,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23294(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23294,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23282(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23282,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k23266 in k23263 in k23260 in k23257 in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23276(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23276,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23240(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23240,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  print-error");
t2=C_retrieve(lf[425]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[457]);}

/* sal:open in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23234(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23234,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  print-error");
t2=C_retrieve(lf[425]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[455]);}

/* sal:load in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23187(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23187,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23191,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  file-exists?");
t4=C_retrieve(lf[453]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k23189 in sal:load in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23191,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23194,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23216,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[449]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[450],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_23216(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23207,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  string-append");
t4=*((C_word*)lf[162]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[451],((C_word*)t0)[2],lf[452]);}}

/* k23205 in k23189 in sal:load in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  print-error");
t2=C_retrieve(lf[425]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k23214 in k23189 in sal:load in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  load-sal-file");
t2=C_retrieve(lf[447]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 378  load");
t2=C_retrieve(lf[448]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k23192 in k23189 in sal:load in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23178(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_23178,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23182,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  chdir");
t4=C_retrieve(lf[44]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k23180 in sal:chdir in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23025(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_23025r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_23025r(t0,t1,t2);}}

static void C_ccall f_23025r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_23028,a[2]=t4,a[3]=((C_word)li344),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23147,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23152,a[2]=t4,a[3]=t8,a[4]=((C_word)li345),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_23152(t10,t6,t2);}

/* do3690 in sal:print in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23152(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23152,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 378  print-message");
t3=C_retrieve(lf[436]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[444]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23165,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_23028(t5,t3,t4,C_fix(0));}}

/* k23163 in do3690 in sal:print in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23152(t3,((C_word*)t0)[2],t2);}

/* k23145 in sal:print in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23028(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23028,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 378  print-message");
t5=C_retrieve(lf[436]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[437]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23056,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  print-message");
t6=C_retrieve(lf[436]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,lf[440]);}
else{
t5=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 378  print-message");
t6=C_retrieve(lf[436]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,lf[441]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23128,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  number->string");
C_number_to_string(3,0,t6,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 378  print-message");
t6=C_retrieve(lf[436]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}
else{
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23144,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  sprintf");
t7=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[442],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 378  print-message");
t5=C_retrieve(lf[436]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[443]);}}

/* k23142 in printer in sal:print in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  print-message");
t2=C_retrieve(lf[436]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k23126 in printer in sal:print in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  print-message");
t2=C_retrieve(lf[436]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k23054 in printer in sal:print in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23056,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_23059,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_23064,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word)li343),tmp=(C_word)a,a+=6,tmp));
t6=((C_word*)t4)[1];
f_23064(t6,t2,((C_word*)t0)[2]);}

/* do3682 in k23054 in printer in sal:print in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23064(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_23064,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23074,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],C_fix(1));
C_trace("ChickenBridge.scm: 378  printer");
t6=((C_word*)((C_word*)t0)[2])[1];
f_23028(t6,t3,t4,t5);}}

/* k23072 in do3682 in k23054 in printer in sal:print in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23074(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_23074,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23077,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_23077(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  print-message");
t4=C_retrieve(lf[436]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[439]);}}

/* k23075 in k23072 in do3682 in k23054 in printer in sal:print in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23077(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_23064(t3,((C_word*)t0)[2],t2);}

/* k23057 in k23054 in printer in sal:print in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_23059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  print-message");
t2=C_retrieve(lf[436]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[438]);}

/* sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22848(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_22848,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22852,a[2]=t4,a[3]=t6,a[4]=t5,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep(C_retrieve(lf[423]))){
C_trace("ChickenBridge.scm: 378  printf");
t8=C_retrieve(lf[403]);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[434],t4);}
else{
t8=t7;
f_22852(2,t8,C_SCHEME_UNDEFINED);}}

/* k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22852(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22852,2,t0,t1);}
t2=C_mutate(&lf[420],((C_word*)t0)[6]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22857,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=((C_word*)t0)[2];
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,C_retrieve2(lf[350],"list->token"),t4);}

/* k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22857,2,t0,t1);}
t2=C_mutate(&lf[421],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22860,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_22860(t5,t4);}
else{
t4=t3;
f_22860(t4,C_SCHEME_FALSE);}}

/* k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22860(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22860,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22864,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[421],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20672,a[2]=t4,a[3]=t3,a[4]=((C_word)li341),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  call/cc");
t7=*((C_word*)lf[433]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a20671 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20672(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20672,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20678,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li339),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20685,a[2]=t2,a[3]=((C_word)li340),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a20684 in a20671 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20685(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20685,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20692,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_20692(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_20692(t6,C_SCHEME_FALSE);}}

/* k20690 in a20684 in a20671 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20692(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20692,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  add-emit-info");
f_20329(t2,lf[430],lf[431],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 378  make-parse-error");
f_20149(((C_word*)t0)[4],lf[432],C_retrieve2(lf[397],"*maxtokpos*"));}}

/* k20697 in k20690 in a20684 in a20671 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20357(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a20677 in a20671 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20678,2,t0,t1);}
t2=lf[397]=C_fix(0);;
C_trace("ChickenBridge.scm: 378  parser");
f_20710(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k22862 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22864(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22864,2,t0,t1);}
t2=C_mutate(&lf[422],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22867,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[422],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[366]))){
t5=C_retrieve2(lf[420],"*sal-string*");
t6=C_retrieve2(lf[422],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22901,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  parse-error-position");
f_20188(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 378  pp");
t5=C_retrieve(lf[428]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[422],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 378  eval");
t5=C_retrieve(lf[429]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[422],"*sal-output*"));}}}

/* k22899 in k22862 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22901,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_22907,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22994,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li338),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_22994(t11,t7,C_SCHEME_FALSE);}

/* do3655 in k22899 in k22862 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22994(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22994,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_23004,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_23004(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_23004(t11,t10);}}}

/* k23002 in do3655 in k22899 in k22862 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_23004(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_22994(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k22905 in k22899 in k22862 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22907,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22915,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22964,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li337),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_22964(t9,t5,C_SCHEME_FALSE);}

/* do3662 in k22905 in k22899 in k22862 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22964(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22964,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22974,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_22974(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_22974(t11,t10);}}}

/* k22972 in do3662 in k22905 in k22899 in k22862 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22974(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_22964(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k22913 in k22905 in k22899 in k22862 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22915,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22918,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_22925,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22929,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  parse-error-string");
f_20170(t4,((C_word*)t0)[2]);}

/* k22927 in k22913 in k22905 in k22899 in k22862 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22929,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22933,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  make-string");
t3=*((C_word*)lf[336]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k22931 in k22927 in k22913 in k22905 in k22899 in k22862 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22933,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22937,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  substring");
t3=*((C_word*)lf[427]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k22935 in k22931 in k22927 in k22913 in k22905 in k22899 in k22862 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22937,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22941,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  make-string");
t3=*((C_word*)lf[336]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k22939 in k22935 in k22931 in k22927 in k22913 in k22905 in k22899 in k22862 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22941,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22948,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 378  make-string");
t5=*((C_word*)lf[336]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k22946 in k22939 in k22935 in k22931 in k22927 in k22913 in k22905 in k22899 in k22862 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22948(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22948,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 378  string-append");
t5=*((C_word*)lf[162]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[426],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k22923 in k22913 in k22905 in k22899 in k22862 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22925(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  print-error");
t2=C_retrieve(lf[425]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k22916 in k22913 in k22905 in k22899 in k22862 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k22865 in k22862 in k22858 in k22855 in k22850 in sal in k22839 in k22836 in k22833 in k22830 in k22827 in k22321 in k22318 in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21799(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_21799,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21806,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_21812,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t33,t34,C_fix(23296));}

/* k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21812,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21816,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_21862,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t2,t3,C_fix(10756));}}

/* k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21862,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21866,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_21959,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t2,t3,C_fix(22784));}}

/* k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21959(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21959,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21963,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22027,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22027,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_22034,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22284,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_22034(t8,t7);}}

/* k22282 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22284(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22034(t3,t2);}

/* k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22034(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22034,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22037,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22223,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22272,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k22270 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22272(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22037(t3,t2);}

/* k22221 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22223,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22229,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k22227 in k22221 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22229(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22229,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22253,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t3=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_22037(t4,t3);}}

/* k22251 in k22227 in k22221 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22253(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22253,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22237,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22249,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t6=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k22247 in k22251 in k22227 in k22221 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k22235 in k22251 in k22227 in k22221 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_22037(t3,t2);}

/* k22035 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22037(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22037,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22040,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_22040(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22199,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[419]);}}

/* k22197 in k22035 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22203,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k22201 in k22197 in k22035 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22203(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_22040(t4,t3);}

/* k22038 in k22035 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22040(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22040,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22043,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_22043(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22176,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[418]);}}

/* k22174 in k22038 in k22035 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22176,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22180,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k22178 in k22174 in k22038 in k22035 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_22043(t4,t3);}

/* k22041 in k22038 in k22035 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22043(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22043,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_22046,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_22046(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_22153,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[417]);}}
else{
t3=t2;
f_22046(t3,C_SCHEME_UNDEFINED);}}

/* k22151 in k22041 in k22038 in k22035 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22153,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_22157,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k22155 in k22151 in k22041 in k22038 in k22035 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22157(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_22046(t4,t3);}

/* k22044 in k22041 in k22038 in k22035 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22046(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22046,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22049,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22078,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_22049(t7,t6);}}

/* k22076 in k22044 in k22041 in k22038 in k22035 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22078,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[409],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_22049(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22096,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k22094 in k22076 in k22044 in k22041 in k22038 in k22035 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22096(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22096,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[415],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_22049(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_22114,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k22112 in k22094 in k22076 in k22044 in k22041 in k22038 in k22035 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22114,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[416],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[96],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_22049(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_22132,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k22130 in k22112 in k22094 in k22076 in k22044 in k22041 in k22038 in k22035 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22132(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_22132,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[339],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[96],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_22049(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_22049(t2,C_SCHEME_UNDEFINED);}}

/* k22047 in k22044 in k22041 in k22038 in k22035 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_22049(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_22049,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_22053,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k22051 in k22047 in k22044 in k22041 in k22038 in k22035 in k22032 in k22025 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_22053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21806(t3,t2);}

/* k21961 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21963(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21963,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21967,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k21965 in k21961 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21967,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21971,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[414]);}

/* k21969 in k21965 in k21961 in k21957 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21971,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[8],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_21806(t12,t11);}

/* k21864 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21866(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21866,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_21870,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k21868 in k21864 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21870(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21870,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21874,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 378  fifth");
t4=C_retrieve(lf[47]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k21872 in k21868 in k21864 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21874,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21877,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21893,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_21877(t6,t5);}}

/* k21891 in k21872 in k21868 in k21864 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21893,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21897,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[413]);}

/* k21895 in k21891 in k21872 in k21868 in k21864 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21897(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21897,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[412],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[20],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_21877(t12,t11);}

/* k21875 in k21872 in k21868 in k21864 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21877(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21877,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21881,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 378  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k21879 in k21875 in k21872 in k21868 in k21864 in k21860 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_21806(t3,t2);}

/* k21814 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21816,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21820,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[411]);}

/* k21818 in k21814 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21820,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21824,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  gensym");
t4=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[410]);}

/* k21822 in k21818 in k21814 in k21810 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21824,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[94],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[409],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_21806(t10,t9);}

/* k21804 in sal-parse-stepping in k21795 in k21792 in k21789 in k21786 in k21783 in k21780 in k21777 in k21774 in k21771 in k21768 in k21765 in k21762 in k21759 in k21756 in k21753 in k21750 in k21747 in k21744 in k21741 in k21738 in k21735 in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21806(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21621(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21621,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21633,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li334),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_21633(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do3291 in inf->pre in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21633(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21633,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21652,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  is-op?");
f_21600(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k21650 in do3291 in inf->pre in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21652,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21655,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21670,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li333),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_21670(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_21655(2,t5,t4);}}

/* do3293 in k21650 in do3291 in inf->pre in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21670(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21670,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21684,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21698,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t12=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_21702,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 378  is-op?");
f_21600(t10,t11);}}

/* k21700 in do3293 in k21650 in do3291 in inf->pre in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21702,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21705,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_21705(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_21705(t10,t9);}}

/* k21703 in k21700 in do3293 in k21650 in do3291 in inf->pre in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21705(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_21670(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k21696 in do3293 in k21650 in do3291 in inf->pre in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  inf->pre");
f_21621(((C_word*)t0)[2],t1);}

/* k21682 in do3293 in k21650 in do3291 in inf->pre in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21684,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k21653 in k21650 in do3291 in inf->pre in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_21633(t2,((C_word*)t0)[2]);}

/* is-op? in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21600(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21600,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21607,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  token-unit?");
f_20269(t3,t2);}

/* k21605 in is-op? in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21607,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21610,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_20221(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k21608 in k21605 in is-op? in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21610,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21616,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  SalOpType?");
f_21377(t2,t1);}

/* k21614 in k21608 in k21605 in is-op? in k21596 in k21593 in k21590 in k21587 in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21616,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21535(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21535,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21544,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li330),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_21544(t10,t1,t2);}

/* do3257 in remove-token-type in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21544(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21544,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21557,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_21567,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  token-unit-type=?");
f_20285(t4,t5,((C_word*)t0)[2]);}}

/* k21565 in do3257 in remove-token-type in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21567,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_21557(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_21557(t7,t6);}}

/* k21555 in do3257 in remove-token-type in k21531 in k21528 in k21525 in k21522 in k21519 in k21516 in k21513 in k21510 in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21557(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_21544(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21491(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21491,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21479(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21479,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21377(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21377,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21329(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21329,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20710(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20710,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20714,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 378  printf");
t10=C_retrieve(lf[403]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[404],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_20714(2,t10,C_SCHEME_UNDEFINED);}}

/* k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20714,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20717,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  null-tokens?");
f_19889(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20717,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20720,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_20720(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21135,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21139,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_21143,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  first-token");
f_19877(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k21141 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  token-position");
f_19836(((C_word*)t0)[2],t1);}

/* k21137 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  max");
t2=*((C_word*)lf[264]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[397],"*maxtokpos*"),t1);}

/* k21133 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21135(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[397],t1);
t3=((C_word*)t0)[2];
f_20720(t3,t2);}

/* k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20720(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20720,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20729,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pattern-value");
t4=C_retrieve2(lf[237],"pattern-value");
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[8]);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20843,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_20031(t3,((C_word*)t0)[8]);}}

/* k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20843(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20843,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20849,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20076,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_20031(t4,t3);}
else{
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[402],((C_word*)t0)[2]);}}

/* k20074 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_20849(t3,(C_word)C_eqp(t2,lf[386]));}
else{
t2=((C_word*)t0)[2];
f_20849(t2,C_SCHEME_FALSE);}}

/* k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20849(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20849,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_20858,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 378  pattern-nsubs");
f_20049(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20937,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20092,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_20031(t5,t4);}}

/* k20090 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20092(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_20937(t3,(C_word)C_eqp(t2,lf[387]));}
else{
t2=((C_word*)t0)[2];
f_20937(t2,C_SCHEME_FALSE);}}

/* k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20937(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20937,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_20943,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 378  pattern-nsubs");
f_20049(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21007,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  pattern-zero-or-more?");
f_20117(t2,((C_word*)t0)[2]);}}

/* k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21007,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21010,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_21010(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20108,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_20031(t4,t3);}}

/* k20106 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_21010(t3,(C_word)C_eqp(t2,lf[94]));}
else{
t2=((C_word*)t0)[2];
f_21010(t2,C_SCHEME_FALSE);}}

/* k21008 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21010(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21010,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21016,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21039,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li322),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_21039(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21088,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20140,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_20031(t4,t3);}}

/* k20138 in k21008 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_21088(t3,(C_word)C_eqp(t2,lf[401]));}
else{
t2=((C_word*)t0)[2];
f_21088(t2,C_SCHEME_FALSE);}}

/* k21086 in k21008 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21088(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21088,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21097,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21108,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li323),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21114,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li324),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[400],t3);}}

/* a21113 in k21086 in k21008 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21114(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21114,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a21107 in k21086 in k21008 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21108,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  parser");
f_20710(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21095 in k21086 in k21008 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do2994 in k21008 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21039(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_21039,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_21049,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_21049(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 378  null-tokens?");
f_19889(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k21047 in do2994 in k21008 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21049,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_21052,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_21069,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li320),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21075,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li321),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a21074 in k21047 in do2994 in k21008 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21075(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_21075,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a21068 in k21047 in do2994 in k21008 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21069,2,t0,t1);}
C_trace("ChickenBridge.scm: 378  parser");
f_20710(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k21050 in k21047 in do2994 in k21008 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21052(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21052,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_21055,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_21062,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  append");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_21055(t3,C_SCHEME_UNDEFINED);}}

/* k21060 in k21050 in k21047 in do2994 in k21008 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21062(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21062,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_21055(t6,t5);}

/* k21053 in k21050 in k21047 in do2994 in k21008 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21055(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_21039(t2,((C_word*)t0)[2]);}

/* k21014 in k21008 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21016(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_21016,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21019,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_21025,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  pattern-zero-or-more?");
f_20117(t3,((C_word*)t0)[2]);}

/* k21023 in k21014 in k21008 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_21025(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_21019(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_21019(t5,t4);}}

/* k21017 in k21014 in k21008 in k21005 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_21019(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20941 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20946,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_20961,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li319),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_20961(t6,t2,C_fix(0));}

/* do2974 in k20941 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20961(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20961,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20971,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20980,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li317),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20994,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li318),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a20993 in do2974 in k20941 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20994(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20994,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a20979 in do2974 in k20941 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20980(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20980,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20988,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pattern-sub");
f_20059(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20986 in a20979 in do2974 in k20941 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20988,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 378  parser");
f_20710(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20969 in do2974 in k20941 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20971,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_20961(t3,((C_word*)t0)[2],t2);}

/* k20944 in k20941 in k20935 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k20856 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20858,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20861,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_20880,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li316),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_20880(t8,t4,C_fix(0));}

/* do2952 in k20856 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20880(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20880,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20893,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_20913,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li314),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20927,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li315),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a20926 in do2952 in k20856 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20927(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20927,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a20912 in do2952 in k20856 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20913,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20921,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  pattern-sub");
f_20059(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20919 in a20912 in do2952 in k20856 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20921(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20921,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 378  parser");
f_20710(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20891 in do2952 in k20856 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20893,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20896,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_20896(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_20896(t5,t4);}}

/* k20894 in k20891 in do2952 in k20856 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20896(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20896,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_20880(t3,((C_word*)t0)[2],t2);}

/* k20859 in k20856 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20861,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20864,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_20864(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20878,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  reverse");
t5=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k20876 in k20859 in k20856 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_20864(t3,t2);}

/* k20862 in k20859 in k20856 in k20847 in k20841 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20864(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k20727 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20729(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20729,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20735,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  SalTokenType?");
f_21329(t2,t1);}

/* k20733 in k20727 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20735,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20741,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  null-tokens?");
f_19889(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20793,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 378  SalRuleType?");
f_21479(t2,((C_word*)t0)[5]);}}

/* k20791 in k20733 in k20727 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20793,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20796,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 378  get-rule");
f_20007(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[399],((C_word*)t0)[2]);}}

/* k20794 in k20791 in k20733 in k20727 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20796,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[356]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[356]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_20807,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li312),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20817,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li313),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a20816 in k20794 in k20791 in k20733 in k20727 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20817(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20817,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20828,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 378  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_20828(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k20826 in a20816 in k20794 in k20791 in k20733 in k20727 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a20806 in k20794 in k20791 in k20733 in k20727 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20807,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 378  parser");
f_20710(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20739 in k20733 in k20727 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20741(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20741,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20751,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  first-token");
f_19877(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k20749 in k20739 in k20733 in k20727 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20751,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20757,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20787,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  token-type");
f_19800(t3,t1);}

/* k20785 in k20749 in k20739 in k20733 in k20727 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k20755 in k20749 in k20739 in k20733 in k20727 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20757,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20764,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20772,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  token-type");
f_19800(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k20770 in k20755 in k20749 in k20739 in k20733 in k20727 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20772,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20776,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-string");
f_19818(t2,((C_word*)t0)[2]);}

/* k20774 in k20770 in k20755 in k20749 in k20739 in k20733 in k20727 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20776,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20780,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-position");
f_19836(t2,((C_word*)t0)[2]);}

/* k20778 in k20774 in k20770 in k20755 in k20749 in k20739 in k20733 in k20727 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20780(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k20762 in k20755 in k20749 in k20739 in k20733 in k20727 in k20718 in k20715 in k20712 in parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 378  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20606(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20606,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20608,a[2]=t2,a[3]=((C_word)li310),tmp=(C_word)a,a+=4,tmp));}

/* f_20608 in simple-unit-emitter in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20608(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_20608,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20612,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20656,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t6,t2);}

/* k20654 */
static void C_ccall f_20656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  append");
t2=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k20610 */
static void C_ccall f_20612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20612,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20615,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_20615(t9,t8);}
else{
t6=t5;
f_20615(t6,C_SCHEME_UNDEFINED);}}

/* k20613 in k20610 */
static void C_fcall f_20615(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20615,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_20620,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li309),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_20620(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do2909 in k20613 in k20610 */
static void C_fcall f_20620(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20620,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20641,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k20639 in do2909 in k20613 in k20610 */
static void C_ccall f_20641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_20620(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20598(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20598,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20600,a[2]=t2,a[3]=((C_word)li307),tmp=(C_word)a,a+=4,tmp));}

/* f_20600 in simple-unit-parser in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20600(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_20600,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 378  make-parse-unit");
f_20200(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* emit-list in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20390(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20390,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20407,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 378  emit");
f_20357(t5,t6,t3,t4);}}

/* k20405 in emit-list in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20407,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20411,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 378  emit-list");
f_20390(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20409 in k20405 in emit-list in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20411,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20357(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20357,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20364,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  token-unit?");
f_20269(t5,t2);}

/* k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20364,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20435,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_20221(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20373,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20308,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit?");
f_20206(t4,t3);}}

/* k20306 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20308,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20315,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_20221(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_20373(2,t2,C_SCHEME_FALSE);}}

/* k20313 in k20306 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  SalRuleType?");
f_21479(((C_word*)t0)[2],t1);}

/* k20371 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20373,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20573,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20596,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_20221(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 378  emit-list");
f_20390(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[393],((C_word*)t0)[4]);}}}

/* k20594 in k20371 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  get-rule");
f_20007(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k20571 in k20371 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20573,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[356]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 378  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20589,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t4,((C_word*)t0)[4]);}}

/* k20587 in k20571 in k20371 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  emit");
f_20357(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k20433 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20438,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-parsed");
f_20239(t2,((C_word*)t0)[2]);}

/* k20436 in k20433 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20438,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 378  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 378  string->symbol");
t8=*((C_word*)lf[384]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20462,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalOpType?");
f_21377(t8,((C_word*)t0)[4]);}}}

/* k20460 in k20436 in k20433 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20462,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20468,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20513,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20519,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k20517 in k20460 in k20436 in k20433 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20519,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20525,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k20523 in k20517 in k20460 in k20436 in k20433 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20525,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20534,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k20532 in k20523 in k20517 in k20460 in k20436 in k20433 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20534,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20543,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k20541 in k20532 in k20523 in k20517 in k20460 in k20436 in k20433 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20543,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  string->symbol");
t2=*((C_word*)lf[384]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_20552,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k20550 in k20541 in k20532 in k20523 in k20517 in k20460 in k20436 in k20433 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20552,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[389],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20561,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k20559 in k20550 in k20541 in k20532 in k20523 in k20517 in k20460 in k20436 in k20433 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 378  string->symbol");
t2=*((C_word*)lf[384]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 378  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[390],((C_word*)t0)[2]);}}

/* k20511 in k20460 in k20436 in k20433 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k20466 in k20460 in k20436 in k20433 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20468,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[127]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20474,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k20472 in k20466 in k20460 in k20436 in k20433 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20474,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[105]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20480,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k20478 in k20472 in k20466 in k20460 in k20436 in k20433 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20480,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[385]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20486,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k20484 in k20478 in k20472 in k20466 in k20460 in k20436 in k20433 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20486,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[386]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20492,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k20490 in k20484 in k20478 in k20472 in k20466 in k20460 in k20436 in k20433 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20492,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[387]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20498,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k20496 in k20490 in k20484 in k20478 in k20472 in k20466 in k20460 in k20436 in k20433 in k20362 in emit in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[388]);}
else{
C_trace("ChickenBridge.scm: 378  string->symbol");
t2=*((C_word*)lf[384]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20339(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20339,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20346,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_20346(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 378  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[382],t2);}}

/* k20344 in set-emit-info! in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20329(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20329,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20317(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20317,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20285(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20285,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_20292,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 378  token-unit?");
f_20269(t4,t2);}

/* k20290 in token-unit-type=? in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20292,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20299,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_20221(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k20297 in k20290 in token-unit-type=? in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20299(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  SalType=?");
f_21491(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20269(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20269,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20276,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit?");
f_20206(t3,t2);}

/* k20274 in token-unit? in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_20276,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20283,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  parse-unit-type");
f_20221(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k20281 in k20274 in token-unit? in k20265 in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 378  SalTokenType?");
f_21329(((C_word*)t0)[2],t1);}

/* parse-unit-position in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20257(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20257,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[370]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20239(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20239,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[370]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20221(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20221,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[370]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20206(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20206,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[370]));}

/* make-parse-unit in k20196 in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20200(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20200,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[370],t2,t3,t4));}

/* parse-error-position in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20188(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20188,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[366]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20170(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20170,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[366]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20149(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20149,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[366],t2,t3));}

/* pattern-zero-or-more? in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20117(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20117,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20124,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-clause?");
f_20031(t3,t2);}

/* k20122 in pattern-zero-or-more? in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[98]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20059(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20059,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_20067,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 378  pattern-subs");
f_20043(t4,t2);}

/* k20065 in pattern-sub in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20049(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20049,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_20057,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 378  pattern-subs");
f_20043(t3,t2);}

/* k20055 in pattern-nsubs in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20043(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20043,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20031(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20031,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* pattern-value in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_20028(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_20028,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* get-rule in k20003 in k20000 in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_20007(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_20007,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 378  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[354],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 378  hash-table-ref/default");
t4=C_retrieve(lf[359]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[354],"*rules*"),t3);}}

/* rule-name in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19920(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19920,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[356]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k19895 in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19899(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19899,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[356],t2,t3,t4,t5,t6));}

/* null-tokens? in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19889(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19889,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19877(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19877,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k19844 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19848(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19848,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[351]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[345],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[345],"make-token"),t2);}}

/* token-position in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19836(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19836,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[346]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19818(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19818,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[346]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19800(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19800,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[346]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19779(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_19779,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[346],t2,t3,t4));}

/* markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18757(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+61)){
C_save_and_reclaim((void*)tr3r,(void*)f_18757r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18757r(t0,t1,t2,t3);}}

static void C_ccall f_18757r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word *a=C_alloc(61);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_length(t2);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_fix(8);
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_fix(1);
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_fix(1);
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=t3;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_18767,a[2]=t22,a[3]=t26,a[4]=t20,a[5]=t3,a[6]=t24,a[7]=t2,a[8]=t8,a[9]=t14,a[10]=t10,a[11]=t1,a[12]=t12,a[13]=t18,a[14]=t7,a[15]=t16,a[16]=t5,tmp=(C_word)a,a+=17,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t24)[1]))){
t28=t27;
f_18767(t28,C_SCHEME_UNDEFINED);}
else{
t28=(C_word)C_i_car(((C_word*)t24)[1]);
t29=(C_word)C_eqp(t28,lf[209]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19692,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t20,a[7]=t16,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t20)[1])){
C_trace("error");
t31=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[19],lf[209]);}
else{
t31=t30;
f_19692(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(C_word)C_eqp(t28,lf[344]);
if(C_truep(t30)){
t31=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19727,a[2]=t3,a[3]=t27,a[4]=t24,a[5]=t26,a[6]=t22,a[7]=t18,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t22)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[19],lf[344]);}
else{
t32=t31;
f_19727(2,t32,C_SCHEME_UNDEFINED);}}
else{
t31=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19756,a[2]=t27,a[3]=t20,a[4]=t16,a[5]=t24,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t26)[1])){
C_trace("error");
t32=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t32))(4,t32,t31,lf[10],t3);}
else{
t32=t31;
f_19756(2,t32,C_SCHEME_UNDEFINED);}}}}}

/* k19754 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19756(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19756,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19763,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19771,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19769 in k19754 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19763(2,t2,C_SCHEME_UNDEFINED);}}

/* k19761 in k19754 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18767(t5,t4);}

/* k19725 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19727,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19731,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19731(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19729 in k19725 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19731(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18767(t7,t6);}

/* k19690 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19692,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19696,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19696(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19694 in k19690 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18767(t7,t6);}

/* k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_18767(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18767,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_18770,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],a[13]=((C_word*)t0)[16],tmp=(C_word)a,a+=14,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18770(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[209]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19592,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[15],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[209]);}
else{
t6=t5;
f_19592(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[344]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19627,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[13],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[344]);}
else{
t7=t6;
f_19627(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19656,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_19656(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k19654 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19656,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19663,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19671,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k19669 in k19654 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_19663(2,t2,C_SCHEME_UNDEFINED);}}

/* k19661 in k19654 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18770(t5,t4);}

/* k19625 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19627,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19631,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19631(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19629 in k19625 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18770(t7,t6);}

/* k19590 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19592,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19596,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_19596(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k19594 in k19590 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18770(t7,t6);}

/* k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_18770(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18770,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18773,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18773(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18773(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18773,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,((C_word*)((C_word*)t0)[10])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_18778,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
t5=((C_word*)((C_word*)t0)[9])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t5,C_fix(1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(2)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t5,C_fix(3)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t6=t4;
f_18778(2,t6,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[343],((C_word*)((C_word*)t0)[9])[1]);}}

/* k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18778,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18780,a[2]=((C_word*)t0)[9],a[3]=((C_word)li254),tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18862,a[2]=t4,a[3]=((C_word)li257),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18972,a[2]=t4,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19485,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=t8,a[7]=((C_word*)t0)[4],a[8]=((C_word)li274),tmp=(C_word)a,a+=9,tmp));
t10=((C_word*)t8)[1];
f_19485(t10,t6,C_fix(0));}

/* do2558 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19485(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19485,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19495,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19508,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=t5,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=((C_word)li273),tmp=(C_word)a,a+=10,tmp));
t7=((C_word*)t5)[1];
f_19508(t7,t3,C_SCHEME_END_OF_LIST,C_fix(0),C_SCHEME_FALSE);}}

/* do2561 in do2558 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19508(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19508,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)((C_word*)t0)[8])[1]))){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19518,a[2]=t1,a[3]=((C_word*)t0)[7],a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19536,a[2]=t6,a[3]=t7,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  reverse");
t9=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t5)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19561,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t6,a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t8=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 377  modulo");
t9=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,((C_word*)t0)[2]);}}

/* k19559 in do2561 in do2558 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19561(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19561,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)t0)[8],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19543,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[6],((C_word*)((C_word*)t0)[2])[1]))){
t5=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=t4;
f_19543(t7,t6);}
else{
t5=t4;
f_19543(t5,C_SCHEME_UNDEFINED);}}

/* k19541 in k19559 in do2561 in do2558 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19543(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19543,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_19508(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19534 in do2561 in do2558 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  add-outcome");
t2=((C_word*)t0)[4];
f_18780(t2,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k19516 in do2561 in do2558 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19518(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19518,2,t0,t1);}
if(C_truep((C_word)C_i_member(((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]))){
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}}

/* k19493 in do2558 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19495,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_19485(t3,((C_word*)t0)[2],t2);}

/* k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18975,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_numberp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19441,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  sort");
t5=C_retrieve(lf[337]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,((C_word*)((C_word*)t0)[4])[1],*((C_word*)lf[339]+1));}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19447,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]))){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=t4;
f_19447(t6,(C_word)C_i_symbolp(t5));}
else{
t5=t4;
f_19447(t5,C_SCHEME_FALSE);}}}

/* k19445 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19447(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19447,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19451,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19453,a[2]=((C_word)li272),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  sort");
t4=C_retrieve(lf[337]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[3])[1],t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19469,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  reverse");
t3=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k19467 in k19445 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18975(t3,t2);}

/* a19452 in k19445 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19453(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19453,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19461,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  format");
t5=C_retrieve(lf[321]);
((C_proc5)C_retrieve_proc(t5))(5,t5,t4,C_SCHEME_FALSE,lf[342],t2);}

/* k19459 in a19452 in k19445 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19461,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19465,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  format");
t3=C_retrieve(lf[321]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,C_SCHEME_FALSE,lf[341],((C_word*)t0)[2]);}

/* k19463 in k19459 in a19452 in k19445 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  string-ci<?");
t2=*((C_word*)lf[340]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k19449 in k19445 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18975(t3,t2);}

/* k19439 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18975(t3,t2);}

/* k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_18975(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18975,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18978,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19318,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li271),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19318(t6,t2,((C_word*)((C_word*)t0)[7])[1],C_fix(0));}

/* do2574 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19318(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19318,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19329,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  max");
t6=*((C_word*)lf[264]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=(C_word)C_i_cddr(t5);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19342,a[2]=t7,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
t9=(C_word)C_i_string_length(t6);
C_trace("ChickenBridge.scm: 377  max");
t10=*((C_word*)lf[264]+1);
((C_proc4)C_retrieve_proc(t10))(4,t10,t8,((C_word*)t4)[1],t9);}}

/* k19340 in do2574 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19342,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19345,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19404,a[2]=t5,a[3]=((C_word)li270),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_19404(t7,t3,((C_word*)t0)[2],C_fix(0));}

/* do2582 in k19340 in do2574 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19404(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_19404,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t4);
t6=(C_word)C_a_i_plus(&a,2,t3,t5);
t7=t3=t6;
t8=(C_word)C_i_cdr(t2);
t10=t1;
t11=t8;
t12=t3;
t1=t10;
t2=t11;
t3=t12;
goto loop;}}

/* k19343 in k19340 in do2574 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19345,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_times(&a,2,((C_word*)t3)[1],lf[338]);
t5=C_set_block_item(t3,0,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19352,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19361,a[2]=t3,a[3]=t8,a[4]=((C_word)li269),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_19361(t10,t6,((C_word*)t0)[2]);}

/* do2588 in k19343 in k19340 in do2574 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19361(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19361,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cdr(t3);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19386,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t6);
t8=(C_word)C_a_i_divide(&a,2,t7,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 377  decimals");
t9=C_retrieve(lf[102]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,t8,C_fix(3));}}

/* k19384 in do2588 in k19343 in k19340 in do2574 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[5],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_19361(t4,((C_word*)t0)[2],t3);}

/* k19350 in k19343 in k19340 in do2574 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_19318(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k19327 in do2574 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18978,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18982,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19304,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word)li268),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  sort");
t4=C_retrieve(lf[337]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* a19303 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19304(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_19304,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 377  before?");
t6=((C_word*)((C_word*)t0)[3])[1];
f_18862(t6,t1,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18982,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18985,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],C_fix(1));
if(C_truep(t4)){
t5=lf[326];
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19026,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  make-string");
t7=*((C_word*)lf[336]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,C_fix(5),C_make_character(45));}
else{
t5=t3;
f_18985(2,t5,C_SCHEME_UNDEFINED);}}

/* k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19026,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19029,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  newline");
t3=*((C_word*)lf[327]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19029(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19029,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19032,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19285,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li267),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19285(t6,t2,C_fix(0));}

/* do2601 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19285(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19285,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)((C_word*)t0)[3])[1]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19295,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("write-char/port");
t4=C_retrieve(lf[329]);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t3,C_make_character(42),*((C_word*)lf[330]+1));}}

/* k19293 in do2601 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19295,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_19285(t3,((C_word*)t0)[2],t2);}

/* k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19032(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19032,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19035,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19223,a[2]=((C_word*)t0)[6],a[3]=t4,a[4]=((C_word)li266),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_19223(t6,t2,((C_word*)((C_word*)t0)[4])[1]);}

/* do2606 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19223(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19223,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19233,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  display");
t4=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}}

/* k19231 in do2606 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19233,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19236,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  format");
t4=C_retrieve(lf[321]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_SCHEME_FALSE,lf[335],t3);}

/* k19234 in k19231 in do2606 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19236,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19242,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19256,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,C_fix(5),t2);
C_trace("ChickenBridge.scm: 377  max");
t6=*((C_word*)lf[264]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k19254 in k19234 in k19231 in do2606 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19256(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19256,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19258,a[2]=t3,a[3]=((C_word)li265),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19258(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2611 in k19254 in k19234 in k19231 in do2606 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19258(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19258,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19268,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[329]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[330]+1));}}

/* k19266 in do2611 in k19254 in k19234 in k19231 in do2606 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19268(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19268,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19258(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19240 in k19234 in k19231 in do2606 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19242,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19245,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  display");
t3=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k19243 in k19240 in k19234 in k19231 in do2606 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19223(t3,((C_word*)t0)[2],t2);}

/* k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19035,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19038,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_19043,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t4,a[7]=((C_word)li264),tmp=(C_word)a,a+=8,tmp));
t6=((C_word*)t4)[1];
f_19043(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19043(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19043,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19056,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,a[7]=t1,a[8]=((C_word*)t0)[6],a[9]=t2,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 377  newline");
t5=*((C_word*)lf[327]+1);
((C_proc2)C_retrieve_proc(t5))(2,t5,t4);}}

/* k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19056(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19056,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_19059,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_19059(2,t4,lf[332]);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18930,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 377  format");
t6=C_retrieve(lf[321]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[334],t5);}}

/* k18928 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18930,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18939,a[2]=t6,a[3]=t3,a[4]=((C_word)li263),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_18939(t8,((C_word*)t0)[2],t4);}

/* do2553 in k18928 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_18939(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18939,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18950,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18961,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  format");
t6=C_retrieve(lf[321]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,C_SCHEME_FALSE,lf[333],t5);}}

/* k18959 in do2553 in k18928 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  string-append");
t2=*((C_word*)lf[162]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k18948 in do2553 in k18928 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_18939(t4,((C_word*)t0)[2],t3);}

/* k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19059,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_19065,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19194,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[2])[1],t2);
C_trace("ChickenBridge.scm: 377  max");
t6=*((C_word*)lf[264]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_fix(0));}

/* k19192 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19194,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19196,a[2]=t3,a[3]=((C_word)li262),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19196(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2627 in k19192 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19196(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19196,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19206,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[329]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[330]+1));}}

/* k19204 in do2627 in k19192 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19206,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19196(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19063 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19065,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_19068,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19167,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  min");
t4=*((C_word*)lf[331]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k19165 in k19063 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19167,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19169,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word)li261),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_19169(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2633 in k19165 in k19063 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19169(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19169,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19179,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_string_ref(((C_word*)t0)[2],t2);
C_trace("write-char/port");
t6=C_retrieve(lf[329]);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,*((C_word*)lf[330]+1));}}

/* k19177 in do2633 in k19165 in k19063 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19179(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19179,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19169(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19066 in k19063 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19068(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19068,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19071,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_19080,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t4,a[5]=((C_word*)t0)[5],a[6]=((C_word)li260),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_19080(t6,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do2640 in k19066 in k19063 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19080(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19080,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[5]);
t5=(C_word)C_i_assoc(t3,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19093,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19112,a[2]=((C_word*)t0)[3],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(t5);
C_trace("ChickenBridge.scm: 377  number->string");
C_number_to_string(3,0,t7,t8);}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19106,a[2]=((C_word*)t0)[2],a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  display");
t8=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,((C_word*)t0)[3]);}}}

/* k19104 in do2640 in k19066 in k19063 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  display");
t2=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k19110 in do2640 in k19066 in k19063 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19112,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_19118,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  display");
t4=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k19116 in k19110 in do2640 in k19066 in k19063 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19118,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19121,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19128,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,C_fix(5),((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 377  max");
t5=*((C_word*)lf[264]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_fix(0));}

/* k19126 in k19116 in k19110 in do2640 in k19066 in k19063 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19128,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_19130,a[2]=t3,a[3]=((C_word)li259),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_19130(t5,((C_word*)t0)[2],C_fix(0),t1);}

/* do2647 in k19126 in k19116 in k19110 in do2640 in k19066 in k19063 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_19130(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_19130,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_19140,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("write-char/port");
t5=C_retrieve(lf[329]);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,C_make_character(32),*((C_word*)lf[330]+1));}}

/* k19138 in do2647 in k19126 in k19116 in k19110 in do2640 in k19066 in k19063 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19140(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_19140,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_19130(t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* k19119 in k19116 in k19110 in do2640 in k19066 in k19063 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19121(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  display");
t2=*((C_word*)lf[328]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k19091 in do2640 in k19066 in k19063 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19080(t3,((C_word*)t0)[2],t2);}

/* k19069 in k19066 in k19063 in k19057 in k19054 in do2621 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19071(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_19043(t3,((C_word*)t0)[2],t2);}

/* k19036 in k19033 in k19030 in k19027 in k19024 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  newline");
t2=*((C_word*)lf[327]+1);
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[2]);}

/* k18983 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18985,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(1)))){
C_trace("ChickenBridge.scm: 377  values");
C_values(2,0,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18997,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_19008,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a19007 in k18983 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_19008(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_19008,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(t2);
C_trace("ChickenBridge.scm: 377  append");
t5=*((C_word*)lf[18]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t1,t3,lf[325],t4);}

/* k18995 in k18983 in k18980 in k18976 in k18973 in k18970 in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],C_fix(2)))){
C_trace("ChickenBridge.scm: 377  make-markov");
t2=C_retrieve(lf[300]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}}

/* before? in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_18862(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18862,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_TRUE);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18872,a[2]=t4,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18910,a[2]=t2,a[3]=((C_word)li256),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  list-index");
t7=C_retrieve(lf[324]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,t6,t4);}}

/* a18909 in before? in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18910(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18910,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k18870 in before? in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18875,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18900,a[2]=((C_word*)t0)[4],a[3]=((C_word)li255),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  list-index");
t4=C_retrieve(lf[324]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a18899 in k18870 in before? in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18900(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18900,3,t0,t1,t2);}
t3=(C_word)C_i_car(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(t3,t2));}

/* k18873 in k18870 in before? in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[7],t1))){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_TRUE);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[7],t1))){
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  before?");
t4=((C_word*)((C_word*)t0)[3])[1];
f_18862(t4,((C_word*)t0)[6],t2,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* add-outcome in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_18780(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18780,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18784,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18852,a[2]=t2,a[3]=((C_word)li253),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  find");
t6=C_retrieve(lf[323]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* a18851 in add-outcome in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18852(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18852,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_equalp(((C_word*)t0)[2],t3));}

/* k18782 in add-outcome in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18784,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_cddr(t1);
t4=(C_word)C_i_assoc(((C_word*)t0)[5],t3);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t4);
t6=(C_word)C_i_cadr(t4);
t7=(C_word)C_a_i_plus(&a,2,C_fix(1),t6);
t8=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_set_car(t5,t7));}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18834,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 377  last-pair");
t7=C_retrieve(lf[320]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18802,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  format");
t4=C_retrieve(lf[321]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,C_SCHEME_FALSE,lf[322],((C_word*)t0)[3]);}}

/* k18800 in k18782 in add-outcome in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18802,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],C_fix(1));
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* k18832 in k18782 in add-outcome in k18776 in k18771 in k18768 in k18765 in markov-analyze in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18834(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18834,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(1));
t3=(C_word)C_a_i_list(&a,1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_set_cdr(t1,t3));}

/* next-in-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18663(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18663,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18667,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t3,t2);}

/* k18665 in next-in-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18667,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
t3=(C_word)C_i_car(t1);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18696,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_check_structure(t3,lf[311]);
t6=(C_word)C_i_block_ref(t3,C_fix(2));
C_trace("ChickenBridge.scm: 377  next-1");
f_12880(t4,t6);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_set_car(t1,t4);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  graph-node-datum");
f_18082(((C_word*)t0)[2],t6);}}

/* k18694 in k18665 in next-in-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18696(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18696,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18701,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=t3,a[6]=((C_word)li251),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_18701(t7,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2476 in k18694 in k18665 in next-in-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_18701(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18701,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[5])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nullp(t2));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18711,a[2]=((C_word*)t0)[5],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t6)){
t7=t5;
f_18711(2,t7,(C_word)C_i_set_car(((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]));}
else{
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[318],((C_word*)t0)[3]);}}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18726,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_check_structure(t6,lf[311]);
t8=(C_word)C_i_block_ref(t6,C_fix(3));
t9=(C_word)C_eqp(((C_word*)t0)[3],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(t2);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t5;
f_18726(t12,t11);}
else{
t10=t5;
f_18726(t10,C_SCHEME_UNDEFINED);}}}

/* k18724 in do2476 in k18694 in k18665 in next-in-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_18726(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_18701(t3,((C_word*)t0)[2],t2);}

/* k18709 in do2476 in k18694 in k18665 in next-in-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18711(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  graph-node-datum");
f_18082(((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18145(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr3r,(void*)f_18145r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18145r(t0,t1,t2,t3);}}

static void C_ccall f_18145r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(17);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18149,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18407,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=C_fix(1);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18416,a[2]=t9,a[3]=((C_word)li249),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t11=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t6,t10,t7);}
else{
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[317],((C_word*)t4)[1]);}}

/* parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18416(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18416,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18420,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t4=t3;
f_18420(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[316],t2);}}

/* k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18420,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18425,a[2]=((C_word*)t0)[4],a[3]=((C_word)li248),tmp=(C_word)a,a+=4,tmp);
C_apply(4,0,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18425(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+46)){
C_save_and_reclaim((void*)tr3r,(void*)f_18425r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18425r(t0,t1,t2,t3);}}

static void C_ccall f_18425r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(46);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_18429,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t2,a[10]=t1,a[11]=((C_word*)t0)[2],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_18429(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[314]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18567,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[314]);}
else{
t20=t19;
f_18567(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[315]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18602,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[315]);}
else{
t21=t20;
f_18602(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18631,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_18631(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k18629 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18631,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18638,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18646,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18644 in k18629 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18646(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18638(2,t2,C_SCHEME_UNDEFINED);}}

/* k18636 in k18629 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18429(t5,t4);}

/* k18600 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18602(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18602,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18606,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18606(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18604 in k18600 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18429(t7,t6);}

/* k18565 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18567(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18567,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18571,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18571(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18569 in k18565 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18429(t7,t6);}

/* k18427 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_18429(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18429,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_18432,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18432(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[314]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18467,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[314]);}
else{
t6=t5;
f_18467(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[315]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18502,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[315]);}
else{
t7=t6;
f_18502(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18531,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_18531(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k18529 in k18427 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18531,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18538,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18546,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18544 in k18529 in k18427 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18538(2,t2,C_SCHEME_UNDEFINED);}}

/* k18536 in k18529 in k18427 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18432(t5,t4);}

/* k18500 in k18427 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18502(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18502,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18506,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18506(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18504 in k18500 in k18427 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18432(t7,t6);}

/* k18465 in k18427 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18467,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18471,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18471(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18469 in k18465 in k18427 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18432(t7,t6);}

/* k18430 in k18427 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_18432(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18432,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18435,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18435(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k18433 in k18430 in k18427 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18438,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=t2;
f_18438(t3,C_SCHEME_UNDEFINED);}
else{
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[6])[1]);
t4=t2;
f_18438(t4,t3);}}

/* k18436 in k18433 in k18430 in k18427 in a18424 in k18418 in parse-graph-item in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_18438(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18438,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=((C_word*)t0)[5];
t5=((C_word*)t0)[4];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,4,lf[311],t5,t6,t7));}

/* k18405 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18149(2,t3,t2);}

/* k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18149(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18149,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_18152,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_18152(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[267]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18312,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 377  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[267]);}
else{
t18=t17;
f_18312(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[268]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18347,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[268]);}
else{
t19=t18;
f_18347(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18376,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_18376(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k18374 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18376,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18383,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18391,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18389 in k18374 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18383(2,t2,C_SCHEME_UNDEFINED);}}

/* k18381 in k18374 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18152(t5,t4);}

/* k18345 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18347(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18347,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18351,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18351(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18349 in k18345 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18351(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18152(t7,t6);}

/* k18310 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18312(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18312,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18316,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18316(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18314 in k18310 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18316(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18152(t7,t6);}

/* k18150 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_18152(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18152,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18155,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_18155(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18212,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_18212(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18247,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_18247(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18276,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_18276(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k18274 in k18150 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18276,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18283,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18291,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k18289 in k18274 in k18150 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_18283(2,t2,C_SCHEME_UNDEFINED);}}

/* k18281 in k18274 in k18150 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_18155(t5,t4);}

/* k18245 in k18150 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18247,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18251,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18251(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18249 in k18245 in k18150 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18155(t7,t6);}

/* k18210 in k18150 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18212(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18212,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18216,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_18216(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k18214 in k18210 in k18150 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18216(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_18155(t7,t6);}

/* k18153 in k18150 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_18155(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18155,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18158,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_18158(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k18156 in k18153 in k18150 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18158,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18161,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_12529(t2);}

/* k18159 in k18156 in k18153 in k18150 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18161,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18167,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18173,a[2]=((C_word)li247),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_12539(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[313],"next-in-graph"),t5);}

/* a18172 in k18159 in k18156 in k18153 in k18150 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18173(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18173,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18179,a[2]=((C_word)li246),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18191,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t5,t3);}

/* k18189 in a18172 in k18159 in k18156 in k18153 in k18150 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18191(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(t1);
C_trace("for-each");
t3=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a18178 in a18172 in k18159 in k18156 in k18153 in k18150 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18179(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_18179,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 377  graph-node-datum");
f_18082(t1,t2);}

/* k18165 in k18159 in k18156 in k18153 in k18150 in k18147 in make-graph in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_18167(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* graph-node-datum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_18082(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18082,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[311]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17742(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17742,3,t0,t1,t2);}
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17745,a[2]=t4,a[3]=((C_word)li240),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17924,a[2]=t1,a[3]=t4,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t6,t2);}

/* k17922 in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17924,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17928,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache");
f_12474(t2,((C_word*)t0)[4]);}

/* k17926 in k17922 in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17928(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17928,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17930,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word)li243),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_17930(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do2317 in k17926 in k17922 in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_17930(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17930,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17940,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=t1,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
t8=t7;
f_17940(2,t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
if(C_truep(t8)){
t9=t7;
f_17940(2,t9,t8);}
else{
t9=(C_word)C_i_car(t2);
t10=(C_word)C_i_car(t9);
t11=t3;
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17855,a[2]=t13,a[3]=((C_word)li242),tmp=(C_word)a,a+=4,tmp));
t15=((C_word*)t13)[1];
f_17855(t15,t7,t10,t11,C_SCHEME_TRUE);}}}

/* do2302 in do2317 in k17926 in k17922 in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_17855(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17855,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17865,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t6)){
t8=t7;
f_17865(t8,t6);}
else{
t8=(C_word)C_i_nullp(t3);
t9=t7;
f_17865(t9,(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t5)[1])));}}

/* k17863 in do2302 in do2317 in k17926 in k17922 in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_17865(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17865,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(C_word)C_eqp(t2,lf[98]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17872,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t3)){
t5=t4;
f_17872(t5,t3);}
else{
t5=(C_word)C_i_car(((C_word*)t0)[4]);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
t7=(C_word)C_i_equalp(t5,t6);
if(C_truep(t7)){
t8=t4;
f_17872(t8,t7);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[3]);
t9=t4;
f_17872(t9,(C_word)C_eqp(t8,lf[98]));}}}}

/* k17870 in k17863 in do2302 in do2317 in k17926 in k17922 in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_17872(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=((C_word*)((C_word*)t0)[3])[1];
f_17855(t5,((C_word*)t0)[2],t3,t4,((C_word*)((C_word*)t0)[6])[1]);}

/* k17938 in do2317 in k17926 in k17922 in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17940(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17940,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17943,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[309],((C_word*)t0)[6]);}
else{
t3=t2;
f_17943(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_17930(t3,((C_word*)t0)[7],t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[8])[1]);}}

/* k17941 in k17938 in do2317 in k17926 in k17922 in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17943(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17943,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17947,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
t4=(C_word)C_i_cadr(t3);
t5=(C_word)C_i_car(((C_word*)t0)[3]);
t6=(C_word)C_i_cddr(t5);
C_trace("ChickenBridge.scm: 377  select-output");
t7=((C_word*)((C_word*)t0)[2])[1];
f_17745(t7,t2,t4,t6);}

/* k17945 in k17941 in k17938 in do2317 in k17926 in k17922 in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17947,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17950,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[3]))){
t4=t3;
f_17950(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_i_cdr(((C_word*)t0)[3]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_17950(2,t5,(C_word)C_i_set_car(((C_word*)t0)[3],((C_word*)((C_word*)t0)[5])[1]));}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17967,a[2]=t6,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word)li241),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_17967(t8,t3,((C_word*)t0)[3]);}}}

/* do2326 in k17945 in k17941 in k17938 in do2317 in k17926 in k17922 in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_17967(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
loop:
a=C_alloc(4);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_17967,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_set_car(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_set_cdr(t2,((C_word*)t0)[5]);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17983,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_12465(t6,((C_word*)t0)[3],t7);}
else{
t4=(C_word)C_i_cdr(t2);
t10=t1;
t11=t4;
t1=t10;
t2=t11;
goto loop;}}

/* k17981 in do2326 in k17945 in k17941 in k17938 in do2317 in k17926 in k17922 in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_set_cdr(t2,C_SCHEME_END_OF_LIST));}

/* k17948 in k17945 in k17941 in k17938 in do2317 in k17926 in k17922 in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* select-output in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_17745(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17745,NULL,4,t0,t1,t2,t3);}
t4=t2;
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17813,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  tb:ranf");
f_7407(t5,t2);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17757,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word)li239),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_17757(t8,t1,t3,C_SCHEME_FALSE,C_fix(0));}}

/* do2286 in select-output in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_17757(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17757,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 377  select-output");
t7=((C_word*)((C_word*)t0)[4])[1];
f_17745(t7,t1,((C_word*)t6)[1],((C_word*)t0)[3]);}
else{
t7=(C_word)C_i_car(t2);
t8=C_set_block_item(t5,0,t7);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17793,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t5,a[6]=t6,tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_caddr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_numberp(t10))){
t11=t9;
f_17793(2,t11,(C_word)C_i_caddr(((C_word*)t5)[1]));}
else{
t11=(C_word)C_i_caddr(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 377  next-1");
f_12880(t9,t11);}}}

/* k17791 in do2286 in select-output in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17793,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_i_set_car(t4,((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_17757(t7,((C_word*)t0)[2],t6,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* k17811 in select-output in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17813,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17818,a[2]=t3,a[3]=t1,a[4]=((C_word)li238),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_17818(t5,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* do2296 in k17811 in select-output in next-in-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_17818(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17818,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cadr(t3);
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[3],t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_car(t5));}
else{
t5=(C_word)C_i_cdr(t2);
t8=t1;
t9=t5;
t1=t8;
t2=t9;
goto loop;}}

/* make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17255(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr3r,(void*)f_17255r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_17255r(t0,t1,t2,t3);}}

static void C_ccall f_17255r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a=C_alloc(22);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17259,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17736,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t7=((C_word*)t4)[1];
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17182,a[2]=t7,a[3]=t10,a[4]=t8,a[5]=((C_word)li236),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_17182(t12,t6,t7,C_SCHEME_FALSE,t8,C_SCHEME_FALSE);}
else{
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[308],((C_word*)t4)[1]);}}

/* do2187 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_17182(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17182,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_i_car(t2);
t10=t9;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17027,a[2]=((C_word*)t0)[2],a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t7,a[8]=t8,a[9]=t11,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t11)[1]))){
t13=t12;
f_17027(2,t13,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t13=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,lf[307],((C_word*)t11)[1]);}}}

/* k17025 in do2187 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17027,2,t0,t1);}
t2=(C_word)C_i_member(lf[303],((C_word*)((C_word*)t0)[9])[1]);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_17033,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
if(C_truep(t2)){
t4=t3;
f_17033(2,t4,t2);}
else{
t4=(C_word)C_i_member(lf[305],((C_word*)((C_word*)t0)[9])[1]);
if(C_truep(t4)){
t5=t3;
f_17033(2,t5,t4);}
else{
C_trace("ChickenBridge.scm: 377  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[306],((C_word*)((C_word*)t0)[9])[1]);}}}

/* k17031 in k17025 in do2187 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17033,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t11=t10;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17045,a[2]=t3,a[3]=t9,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=t7,tmp=(C_word)a,a+=13,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_set_block_item(t15,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17118,a[2]=t15,a[3]=t12,a[4]=t5,a[5]=t10,a[6]=t3,a[7]=((C_word*)t0)[2],a[8]=((C_word)li235),tmp=(C_word)a,a+=9,tmp));
t17=((C_word*)t15)[1];
f_17118(t17,t13);}

/* do2165 in k17031 in k17025 in do2187 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_17118(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(3);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_17118,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
if(C_truep(t2)){
t3=(C_word)C_i_cdr(((C_word*)t0)[5]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[7])+1,t8);
t15=t1;
t1=t15;
goto loop;}}

/* k17043 in k17031 in k17025 in do2187 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17045,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_17048,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17061,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[12],a[4]=((C_word)li234),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t4=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* a17060 in k17043 in k17031 in k17025 in do2187 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17061(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_17061,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17065,a[2]=t8,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t6,a[6]=((C_word*)t0)[3],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t10=(C_word)C_i_car(t2);
t11=C_set_block_item(t4,0,t10);
t12=(C_word)C_i_cdr(t2);
t13=(C_word)C_i_nullp(t12);
t14=(C_truep(t13)?C_fix(1):(C_word)C_i_cadr(t2));
t15=C_set_block_item(t8,0,t14);
t16=C_set_block_item(t6,0,((C_word*)t8)[1]);
if(C_truep((C_word)C_i_numberp(((C_word*)t8)[1]))){
t17=t9;
f_17065(t17,C_SCHEME_UNDEFINED);}
else{
t17=C_set_block_item(t8,0,C_SCHEME_FALSE);
t18=t9;
f_17065(t18,t17);}}
else{
t10=C_set_block_item(t4,0,t2);
t11=C_set_block_item(t8,0,C_fix(1));
t12=C_set_block_item(t6,0,C_fix(1));
t13=t9;
f_17065(t13,t12);}}

/* k17063 in a17060 in k17043 in k17031 in k17025 in do2187 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_17065(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17065,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17068,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_truep(((C_word*)((C_word*)t0)[2])[1])?((C_word*)((C_word*)t0)[6])[1]:C_SCHEME_FALSE);
if(C_truep(t3)){
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=t2;
f_17068(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t5=t2;
f_17068(t5,t4);}}

/* k17066 in k17063 in a17060 in k17043 in k17031 in k17025 in do2187 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_17068(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17068,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k17046 in k17043 in k17031 in k17025 in do2187 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17048,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_17059,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 377  reverse");
t3=*((C_word*)lf[185]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k17057 in k17046 in k17043 in k17031 in k17025 in do2187 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17059,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[10])[1],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[9])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17199,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t6=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t6)){
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[3])[1],t8))){
t9=t5;
f_17199(2,t9,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t5,lf[304],((C_word*)t0)[2]);}}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t8=(C_word)C_i_length(t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_17199(2,t10,t9);}}

/* k17197 in k17057 in k17046 in k17043 in k17031 in k17025 in do2187 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17199,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=((C_word*)((C_word*)t0)[4])[1];
f_17182(t7,((C_word*)t0)[3],t6,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* k17734 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17259(2,t3,t2);}

/* k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17259,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17262,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_17262(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[267]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17606,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[267]);}
else{
t22=t21;
f_17606(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[268]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17641,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 377  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[268]);}
else{
t23=t22;
f_17641(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[302]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17676,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[302]);}
else{
t24=t23;
f_17676(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17705,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_17705(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k17703 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17705,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17712,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17720,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17718 in k17703 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17712(2,t2,C_SCHEME_UNDEFINED);}}

/* k17710 in k17703 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17262(t5,t4);}

/* k17674 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17676,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17680,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17680(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17678 in k17674 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17680(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17262(t7,t6);}

/* k17639 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17641(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17641,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17645,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17645(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17643 in k17639 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17262(t7,t6);}

/* k17604 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17606,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17610,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17610(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17608 in k17604 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17262(t7,t6);}

/* k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_17262(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17262,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_17265,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17265(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17471,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_17471(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17506,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_17506(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[302]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17541,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[302]);}
else{
t8=t7;
f_17541(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17570,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17570(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17568 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17570,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17577,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17585,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17583 in k17568 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17577(2,t2,C_SCHEME_UNDEFINED);}}

/* k17575 in k17568 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17265(t5,t4);}

/* k17539 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17541(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17541,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17545,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17545(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17543 in k17539 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17265(t7,t6);}

/* k17504 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17506,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17510,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17510(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17508 in k17504 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17265(t7,t6);}

/* k17469 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17471,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17475,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17475(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17473 in k17469 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17265(t7,t6);}

/* k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_17265(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17265,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_17268,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_17268(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17336,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_17336(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17371,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_17371(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[302]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_17406,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[302]);}
else{
t8=t7;
f_17406(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17435,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_17435(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k17433 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17435,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17442,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17450,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k17448 in k17433 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_17442(2,t2,C_SCHEME_UNDEFINED);}}

/* k17440 in k17433 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17268(t5,t4);}

/* k17404 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17406,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17410,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17410(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17408 in k17404 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17268(t7,t6);}

/* k17369 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17371,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17375,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17375(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17373 in k17369 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17268(t7,t6);}

/* k17334 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17336,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17340,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_17340(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k17338 in k17334 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17340(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_17268(t7,t6);}

/* k17266 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_17268(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17268,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17271,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17271(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k17269 in k17266 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17274,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_12529(t2);}

/* k17272 in k17269 in k17266 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17274,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17280,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17307,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_12539(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[301],"next-in-markov"),t4);}

/* a17306 in k17272 in k17269 in k17266 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17307(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17307,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17315,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t4,t3);}

/* k17313 in a17306 in k17272 in k17269 in k17266 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k17278 in k17272 in k17269 in k17266 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17280,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17283,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_17283(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17293,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_i_car(t4);
t6=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 377  make-list");
t7=C_retrieve(lf[62]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t3,t6,lf[98]);}}

/* k17291 in k17278 in k17272 in k17269 in k17266 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_17283(t3,t2);}

/* k17281 in k17278 in k17272 in k17269 in k17266 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_17283(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17283,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17286,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_12465(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k17284 in k17281 in k17278 in k17272 in k17269 in k17266 in k17263 in k17260 in k17257 in make-markov in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17286(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16822(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16822,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16826,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t3,t2);}

/* k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16826,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16829,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_12312(t2,((C_word*)t0)[2]);}

/* k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16829,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16832,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-flags");
f_12240(t2,((C_word*)t0)[2]);}

/* k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16832,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16838,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17001,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7185(t4,t1,C_fix(4));}

/* k16999 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17001,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_16838(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17014,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  period-count");
f_12090(t2,((C_word*)t0)[2]);}}

/* k17012 in k16999 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17014,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17018,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  period-length");
f_12108(t2,((C_word*)t0)[2]);}

/* k17016 in k17012 in k16999 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_17018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[4],t1))){
C_trace("ChickenBridge.scm: 377  recalc-weightings");
f_16710(((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t2=((C_word*)t0)[3];
f_16838(2,t2,C_SCHEME_UNDEFINED);}}

/* k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16838,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16844,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
t3=t2;
f_16844(t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16975,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16994,a[2]=((C_word*)t0)[4],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-count");
f_15860(t4,((C_word*)t0)[4]);}}

/* k16992 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16994,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
C_trace("ChickenBridge.scm: 377  random-item-count-set!");
f_15851(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k16973 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16982,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-count");
f_15860(t2,((C_word*)t0)[2]);}

/* k16980 in k16973 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16982,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16986,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-min");
f_15824(t2,((C_word*)t0)[2]);}

/* k16984 in k16980 in k16973 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_16844(t2,(C_word)C_i_lessp(((C_word*)t0)[2],t1));}

/* k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_16844(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16844,NULL,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  random-item-datum");
f_15770(((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16850,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache");
f_12474(t2,((C_word*)t0)[2]);}}

/* k16848 in k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16850,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16854,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16892,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16934,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=t2,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  pick");
f_16854(t7,t2,t1);}

/* k16932 in k16848 in k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16934,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16936,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word)li231),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_16936(t5,((C_word*)t0)[2],t1);}

/* do2139 in k16932 in k16848 in k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_16936(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16936,NULL,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16955,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16958,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-max");
f_15842(t4,t2);}

/* k16956 in do2139 in k16932 in k16848 in k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16958,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16965,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-count");
f_15860(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_16955(t2,C_SCHEME_FALSE);}}

/* k16963 in k16956 in do2139 in k16932 in k16848 in k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16965,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16969,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-max");
f_15842(t2,((C_word*)t0)[2]);}

/* k16967 in k16963 in k16956 in do2139 in k16932 in k16848 in k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16969(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_16955(t2,(C_word)C_i_nequalp(((C_word*)t0)[2],t1));}

/* k16953 in do2139 in k16932 in k16848 in k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_16955(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16955,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16951,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pick");
f_16854(t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)t0)[2]);
t3=((C_word*)t0)[7];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k16949 in k16953 in do2139 in k16932 in k16848 in k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_16936(t2,((C_word*)t0)[2],t1);}

/* k16890 in k16848 in k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16892,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16895,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[3]);
if(C_truep(t3)){
t4=t2;
f_16895(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16909,a[2]=t5,a[3]=((C_word)li230),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_16909(t7,t2,((C_word*)t0)[2]);}}

/* do2143 in k16890 in k16848 in k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_16909(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16909,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16919,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  random-item-count-set!");
f_15851(t3,t4,C_fix(0));}}

/* k16917 in do2143 in k16890 in k16848 in k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16909(t3,((C_word*)t0)[2],t2);}

/* k16893 in k16890 in k16848 in k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 377  random-item-datum");
f_15770(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* pick in k16848 in k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_16854(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16854,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16862,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  tb:ranf");
f_7407(t4,t3);}

/* k16860 in pick in k16848 in k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16862,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16864,a[2]=t3,a[3]=((C_word)li228),tmp=(C_word)a,a+=4,tmp));
t5=((C_word*)t3)[1];
f_16864(t5,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* do2134 in k16860 in pick in k16848 in k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_16864(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16864,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16885,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  random-item-index");
f_15788(t4,t5);}

/* k16883 in do2134 in k16860 in pick in k16848 in k16842 in k16836 in k16830 in k16827 in k16824 in next-in-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16885(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_lessp(((C_word*)t0)[5],t1))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}
else{
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=((C_word*)((C_word*)t0)[2])[1];
f_16864(t3,((C_word*)t0)[4],t2,((C_word*)t0)[5]);}}

/* recalc-weightings in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_16710(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16710,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16820,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t4,t2);}

/* k16818 in recalc-weightings in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16820(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16820,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=lf[299];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16717,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16779,a[2]=t7,a[3]=t4,a[4]=((C_word)li226),tmp=(C_word)a,a+=5,tmp));
t9=((C_word*)t7)[1];
f_16779(t9,t5,t2);}

/* do2106 in k16818 in recalc-weightings in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_16779(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16779,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16808,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16812,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  random-item-weight");
f_15806(t4,t5);}}

/* k16810 in do2106 in k16818 in recalc-weightings in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  next-1");
f_12880(((C_word*)t0)[2],t1);}

/* k16806 in do2106 in k16818 in recalc-weightings in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16808(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16808,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16793,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  random-item-index-set!");
f_15779(t4,t5,((C_word*)((C_word*)t0)[5])[1]);}

/* k16791 in k16806 in do2106 in k16818 in recalc-weightings in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_16779(t3,((C_word*)t0)[2],t2);}

/* k16715 in k16818 in recalc-weightings in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16717,2,t0,t1);}
if(C_truep(((C_word*)t0)[6])){
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16725,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=((C_word)li225),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_16725(t5,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_12465(((C_word*)t0)[3],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);}}

/* do2112 in k16715 in k16818 in recalc-weightings in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_16725(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16725,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_12465(t1,((C_word*)t0)[4],((C_word*)t6)[1]);}
else{
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16758,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t6,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16770,a[2]=t7,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t9=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 377  random-item-index");
f_15788(t8,t9);}}

/* k16768 in do2112 in k16715 in k16818 in recalc-weightings in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16770(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16770,2,t0,t1);}
t2=(C_word)C_a_i_divide(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_times(&a,2,t2,C_fix(1073741823));
C_trace("ChickenBridge.scm: 377  floor");
t4=*((C_word*)lf[170]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t3);}

/* k16756 in do2112 in k16715 in k16818 in recalc-weightings in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16758,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16742,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  random-item-index-set!");
f_15779(t4,t5,((C_word*)((C_word*)t0)[6])[1]);}

/* k16740 in k16756 in do2112 in k16715 in k16818 in recalc-weightings in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_16725(t4,((C_word*)t0)[2],t3,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]);}

/* make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15943(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+7)){
C_save_and_reclaim((void*)tr3r,(void*)f_15943r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15943r(t0,t1,t2,t3);}}

static void C_ccall f_15943r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(7);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15947,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16260,a[2]=((C_word)li223),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t6=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,t5,t2);}

/* %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16260(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16260,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16267,a[2]=t4,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t8=(C_word)C_i_car(t2);
t9=C_set_block_item(t4,0,t8);
t10=(C_word)C_i_cdr(t2);
t11=C_set_block_item(t6,0,t10);
t12=t7;
f_16267(t12,t11);}
else{
t8=C_set_block_item(t4,0,t2);
t9=t7;
f_16267(t9,t8);}}

/* k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_16267(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16267,NULL,2,t0,t1);}
t2=C_fix(1);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)((C_word*)t0)[4])[1];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16270,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t7,a[9]=t5,a[10]=t3,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_16270(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[296]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16573,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[296]);}
else{
t22=t21;
f_16573(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[297]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16608,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 377  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[297]);}
else{
t23=t22;
f_16608(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[298]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16643,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[298]);}
else{
t24=t23;
f_16643(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16672,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)((C_word*)t0)[4])[1]);}
else{
t24=t23;
f_16672(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k16670 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16672(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16672,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16679,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16687,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16685 in k16670 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16679(2,t2,C_SCHEME_UNDEFINED);}}

/* k16677 in k16670 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16679(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16270(t5,t4);}

/* k16641 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16643,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16647,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16647(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16645 in k16641 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16270(t7,t6);}

/* k16606 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16608,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16612,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16612(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16610 in k16606 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16612(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16270(t7,t6);}

/* k16571 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16573,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16577,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16577(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16575 in k16571 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16270(t7,t6);}

/* k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_16270(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16270,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_16273,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16273(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[296]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16438,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[296]);}
else{
t6=t5;
f_16438(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[297]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16473,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[297]);}
else{
t7=t6;
f_16473(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[298]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16508,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[298]);}
else{
t8=t7;
f_16508(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16537,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_16537(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16535 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16537,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16544,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16552,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16550 in k16535 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16544(2,t2,C_SCHEME_UNDEFINED);}}

/* k16542 in k16535 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16273(t5,t4);}

/* k16506 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16508,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16512,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16512(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16510 in k16506 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16273(t7,t6);}

/* k16471 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16473,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16477,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16477(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16475 in k16471 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16273(t7,t6);}

/* k16436 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16438,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16442,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16442(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16440 in k16436 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16273(t7,t6);}

/* k16271 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_16273(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16273,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_16276,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_16276(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[296]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16303,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[296]);}
else{
t6=t5;
f_16303(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[297]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16338,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[297]);}
else{
t7=t6;
f_16338(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[298]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16373,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[298]);}
else{
t8=t7;
f_16373(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16402,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)((C_word*)t0)[6])[1]);}
else{
t8=t7;
f_16402(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k16400 in k16271 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16402,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16409,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16417,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16415 in k16400 in k16271 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16409(2,t2,C_SCHEME_UNDEFINED);}}

/* k16407 in k16400 in k16271 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_16276(t5,t4);}

/* k16371 in k16271 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16373,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16377,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16377(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16375 in k16371 in k16271 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16276(t7,t6);}

/* k16336 in k16271 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16338,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16342,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16342(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16340 in k16336 in k16271 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16276(t7,t6);}

/* k16301 in k16271 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16303(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16303,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16307,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)((C_word*)t0)[2])[1]);}
else{
t4=t2;
f_16307(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16305 in k16301 in k16271 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_16276(t7,t6);}

/* k16274 in k16271 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_16276(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16276,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16279,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_16279(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)((C_word*)t0)[2])[1]);}}

/* k16277 in k16274 in k16271 in k16268 in k16265 in %make-random-item in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16279,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=((C_word*)((C_word*)t0)[5])[1];
t4=((C_word*)((C_word*)t0)[4])[1];
t5=((C_word*)((C_word*)t0)[3])[1];
t6=((C_word*)((C_word*)t0)[2])[1];
t7=t2;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,9,lf[285],t3,C_SCHEME_FALSE,t4,t5,t6,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15950,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_12529(t2);}

/* k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15950,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[4]);
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_TRUE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_fix(0);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_fix(0);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15956,a[2]=t10,a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t4,a[9]=t2,a[10]=t8,tmp=(C_word)a,a+=11,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16224,a[2]=t8,a[3]=t6,a[4]=((C_word)li222),tmp=(C_word)a,a+=5,tmp);
C_trace("for-each");
t13=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t13+1)))(4,t13,t11,t12,((C_word*)t0)[4]);}

/* a16223 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16224(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_16224,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16228,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  random-item-min");
f_15824(t3,t2);}

/* k16226 in a16223 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16228(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16228,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16231,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  random-item-max");
f_15842(t2,((C_word*)t0)[2]);}

/* k16229 in k16226 in a16223 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16231(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16231,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16234,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  random-item-weight");
f_15806(t2,((C_word*)t0)[2]);}

/* k16232 in k16229 in k16226 in a16223 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16234,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16237,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  random-item-datum");
f_15770(t2,((C_word*)t0)[2]);}

/* k16235 in k16232 in k16229 in k16226 in a16223 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16237(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16237,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16240,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16250,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_12225(t3,t1);}

/* k16248 in k16235 in k16232 in k16229 in k16226 in a16223 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16250,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_16240(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_16240(t2,C_SCHEME_UNDEFINED);}}

/* k16238 in k16235 in k16232 in k16229 in k16226 in a16223 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_16240(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_numberp(((C_word*)t0)[4]))){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}}

/* k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15956,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9]);
t3=(C_truep(t2)?C_fix(1):((C_word*)t0)[9]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_15963,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(4));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t5;
f_15963(t8,t7);}
else{
t6=t5;
f_15963(t6,C_SCHEME_UNDEFINED);}}

/* k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15963(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[50],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15963,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[9];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|15,a[1]=(C_word)f_15966,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[9],a[6]=t11,a[7]=((C_word*)t0)[2],a[8]=((C_word*)t0)[3],a[9]=((C_word*)t0)[4],a[10]=t5,a[11]=t3,a[12]=((C_word*)t0)[5],a[13]=((C_word*)t0)[6],a[14]=((C_word*)t0)[7],a[15]=((C_word*)t0)[8],tmp=(C_word)a,a+=16,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_15966(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[267]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16130,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 377  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[267]);}
else{
t18=t17;
f_16130(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[268]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16165,a[2]=((C_word*)t0)[9],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[268]);}
else{
t19=t18;
f_16165(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16194,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[9]);}
else{
t19=t18;
f_16194(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k16192 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16194,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16201,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16209,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16207 in k16192 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16201(2,t2,C_SCHEME_UNDEFINED);}}

/* k16199 in k16192 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15966(t5,t4);}

/* k16163 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16165,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16169,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16169(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16167 in k16163 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15966(t7,t6);}

/* k16128 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16130,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16134,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16134(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16132 in k16128 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16134(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15966(t7,t6);}

/* k15964 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15966(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15966,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15969,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[15],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_15969(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16030,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_16030(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16065,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_16065(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16094,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_16094(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k16092 in k15964 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16094,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16101,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16109,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k16107 in k16092 in k15964 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_16101(2,t2,C_SCHEME_UNDEFINED);}}

/* k16099 in k16092 in k15964 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15969(t5,t4);}

/* k16063 in k15964 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16065,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16069,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16069(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16067 in k16063 in k15964 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16069(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15969(t7,t6);}

/* k16028 in k15964 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16030,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16034,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_16034(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k16032 in k16028 in k15964 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16034(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15969(t7,t6);}

/* k15967 in k15964 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15969(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15969,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_15972,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15972(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15970 in k15967 in k15964 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15972,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15975,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15987,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_12539(t2,((C_word*)t0)[9],t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],C_retrieve2(lf[295],"next-in-weighting"),t4);}

/* a15986 in k15970 in k15967 in k15964 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15987(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15987,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15993,a[2]=t2,a[3]=((C_word)li220),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16009,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t5,t3);}

/* k16007 in a15986 in k15970 in k15967 in k15964 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* a15992 in a15986 in k15970 in k15967 in k15964 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15993(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15993,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16001,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  random-item-datum");
f_15770(t3,t2);}

/* k15999 in a15992 in a15986 in k15970 in k15967 in k15964 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_16001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  fn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k15973 in k15970 in k15967 in k15964 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15975,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15978,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  recalc-weightings");
f_16710(t2,((C_word*)t0)[3],C_SCHEME_TRUE);}
else{
t3=t2;
f_15978(2,t3,C_SCHEME_UNDEFINED);}}

/* k15976 in k15973 in k15970 in k15967 in k15964 in k15961 in k15954 in k15948 in k15945 in make-weighting in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* random-item-count in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15860(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15860,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[285]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* random-item-count-set! in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15851(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15851,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[285]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* random-item-max in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15842(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15842,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[285]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* random-item-min in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15824(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15824,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[285]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* random-item-weight in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15806(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15806,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[285]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* random-item-index in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15788(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15788,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[285]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* random-item-index-set! in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15779(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15779,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[285]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* random-item-datum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15770(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15770,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[285]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* next-in-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15548(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15548,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15551,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15598,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t4,t2);}

/* k15596 in next-in-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15598(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15598,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15601,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15624,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word*)t0)[3],a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15743,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache");
f_12474(t6,((C_word*)t0)[2]);}
else{
t4=t2;
f_15601(t4,C_SCHEME_UNDEFINED);}}

/* k15741 in k15596 in next-in-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15743(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  next-1");
f_12880(((C_word*)t0)[2],t1);}

/* k15622 in k15596 in next-in-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15624,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15631,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_pairp(t1))){
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_pairp(t3))){
t4=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_pairp(t4))){
t5=(C_word)C_i_cdddr(t1);
if(C_truep((C_word)C_i_pairp(t5))){
C_apply(5,0,t2,((C_word*)t0)[4],((C_word*)t0)[3],t1);}
else{
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_cadr(t1);
t8=(C_word)C_i_caddr(t1);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15678,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=((C_word*)t0)[4],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  pattern-length");
f_12276(t9,((C_word*)t0)[2]);}}
else{
t5=(C_word)C_i_car(t1);
t6=(C_word)C_i_cadr(t1);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15705,a[2]=t6,a[3]=t5,a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  pattern-length");
f_12276(t7,((C_word*)t0)[2]);}}
else{
t4=(C_word)C_i_car(t1);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15724,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-length");
f_12276(t5,((C_word*)t0)[2]);}}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15739,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-length");
f_12276(t3,((C_word*)t0)[2]);}}

/* k15737 in k15622 in k15596 in next-in-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15739,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  rotate-items");
t3=((C_word*)t0)[5];
f_15551(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k15722 in k15622 in k15596 in next-in-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15724(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15724,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  rotate-items");
t3=((C_word*)t0)[5];
f_15551(7,t3,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),C_fix(1),t2);}

/* k15703 in k15622 in k15596 in next-in-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15705(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15705,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  rotate-items");
t3=((C_word*)t0)[6];
f_15551(7,t3,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1),t2);}

/* k15676 in k15622 in k15596 in next-in-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15678,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[8]);
t3=(C_word)C_a_i_minus(&a,2,t1,t2);
C_trace("ChickenBridge.scm: 377  rotate-items");
t4=((C_word*)t0)[7];
f_15551(7,t4,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k15629 in k15622 in k15596 in next-in-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_15601(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k15599 in k15596 in next-in-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15601(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_cddr(((C_word*)t0)[3]);
t5=(C_word)C_i_set_cdr(((C_word*)t0)[3],t4);
t6=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t3);}

/* rotate-items in next-in-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15551(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[10],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_15551,7,t0,t1,t2,t3,t4,t5,t6);}
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15557,a[2]=t8,a[3]=t4,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=((C_word)li209),tmp=(C_word)a,a+=8,tmp));
t10=((C_word*)t8)[1];
f_15557(t10,t1,t3);}

/* do1874 in rotate-items in next-in-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15557(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15557,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[6]))){
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[4]);
t5=(C_word)C_i_list_ref(((C_word*)t0)[5],t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15573,a[2]=t3,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[3],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 377  list-set!");
t7=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t7))(5,t7,t6,((C_word*)t0)[5],t2,t5);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}}

/* k15571 in do1874 in rotate-items in next-in-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15573,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15576,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[8],((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 377  list-set!");
t4=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,((C_word*)t0)[3],t3,((C_word*)t0)[2]);}

/* k15574 in k15571 in do1874 in rotate-items in next-in-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15576,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_15557(t3,((C_word*)t0)[2],t2);}

/* make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15074(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_15074r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_15074r(t0,t1,t2,t3);}}

static void C_ccall f_15074r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15078,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15538,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_15078(t8,t7);}}

/* k15536 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15078(t3,t2);}

/* k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15078(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15078,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_fix(0);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15081,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_15081(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[267]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15411,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[267]);}
else{
t22=t21;
f_15411(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[268]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15446,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 377  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[268]);}
else{
t23=t22;
f_15446(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[283]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15481,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[283]);}
else{
t24=t23;
f_15481(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15510,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_15510(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k15508 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15510(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15510,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15517,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15525,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15523 in k15508 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15517(2,t2,C_SCHEME_UNDEFINED);}}

/* k15515 in k15508 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15081(t5,t4);}

/* k15479 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15481,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15485,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15485(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15483 in k15479 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15081(t7,t6);}

/* k15444 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15446,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15450,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15450(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15448 in k15444 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15081(t7,t6);}

/* k15409 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15411,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15415,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15415(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15413 in k15409 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15081(t7,t6);}

/* k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15081(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15081,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_15084,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15084(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15276,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_15276(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15311,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_15311(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[283]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15346,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[283]);}
else{
t8=t7;
f_15346(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15375,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_15375(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k15373 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15375,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15382,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15390,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15388 in k15373 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15382(2,t2,C_SCHEME_UNDEFINED);}}

/* k15380 in k15373 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15382(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15084(t5,t4);}

/* k15344 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15346(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15346,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15350,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15350(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15348 in k15344 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15084(t7,t6);}

/* k15309 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15311,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15315,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15315(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15313 in k15309 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15315(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15084(t7,t6);}

/* k15274 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15276(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15276,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15280,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15280(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15278 in k15274 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15084(t7,t6);}

/* k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15084(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15084,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15087,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_15087(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15141,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_15141(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15176,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_15176(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[283]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15211,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[283]);}
else{
t8=t7;
f_15211(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15240,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_15240(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k15238 in k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15240,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15247,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15255,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k15253 in k15238 in k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_15247(2,t2,C_SCHEME_UNDEFINED);}}

/* k15245 in k15238 in k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_15087(t5,t4);}

/* k15209 in k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15211,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15215,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15215(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15213 in k15209 in k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15087(t7,t6);}

/* k15174 in k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15176,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15180,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15180(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15178 in k15174 in k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15087(t7,t6);}

/* k15139 in k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15141(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15141,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15145,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_15145(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k15143 in k15139 in k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15087(t7,t6);}

/* k15085 in k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15087(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15087,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15090,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_15090(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k15088 in k15085 in k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15090(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15090,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15093,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_12529(t2);}

/* k15091 in k15088 in k15085 in k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15093,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15099,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15108,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_12539(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[282],"next-in-rotation"),t5);}

/* a15107 in k15091 in k15088 in k15085 in k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15108(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15108,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15120,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t4,t3);}

/* k15118 in a15107 in k15091 in k15088 in k15085 in k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15120(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k15097 in k15091 in k15088 in k15085 in k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15099(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15099,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15102,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_12465(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k15100 in k15097 in k15091 in k15088 in k15085 in k15082 in k15079 in k15076 in make-rotation in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15102(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14998(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14998,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15002,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t3,t2);}

/* k15000 in next-in-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15002,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15005,a[2]=((C_word*)t0)[3],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15021,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-length");
f_12276(t4,((C_word*)t0)[2]);}
else{
t4=t2;
f_15005(2,t4,C_SCHEME_UNDEFINED);}}

/* k15019 in k15000 in next-in-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15021(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15021,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15031,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  tb:rani");
f_7400(t3,t1);}

/* k15029 in k15019 in k15000 in next-in-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15031,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15033,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word)li205),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_15033(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do1774 in k15029 in k15019 in k15000 in next-in-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_15033(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15033,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[5]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_set_cdr(((C_word*)t0)[4],((C_word*)t0)[3]));}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15050,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t5,a[6]=t1,a[7]=((C_word*)t0)[2],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
C_trace("ChickenBridge.scm: 377  list-set!");
t10=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t10))(5,t10,t8,((C_word*)t0)[3],t2,t9);}}

/* k15048 in do1774 in k15029 in k15019 in k15000 in next-in-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15050,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15053,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  list-set!");
t3=C_retrieve(lf[60]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k15051 in k15048 in do1774 in k15029 in k15019 in k15000 in next-in-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15053(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15053,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15064,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  tb:rani");
f_7400(t3,((C_word*)t0)[2]);}

/* k15062 in k15051 in k15048 in do1774 in k15029 in k15019 in k15000 in next-in-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15064(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_15033(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* k15003 in k15000 in next-in-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_15005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14735(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_14735r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14735r(t0,t1,t2,t3);}}

static void C_ccall f_14735r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(14);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14739,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14988,a[2]=t5,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  append");
t7=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t4)[1],C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_14739(t8,t7);}}

/* k14986 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14739(t3,t2);}

/* k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_14739(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14739,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14742,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_14742(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[267]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14896,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 377  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[267]);}
else{
t18=t17;
f_14896(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[268]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14931,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[268]);}
else{
t19=t18;
f_14931(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14960,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_14960(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k14958 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14960,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14967,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14975,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14973 in k14958 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14967(2,t2,C_SCHEME_UNDEFINED);}}

/* k14965 in k14958 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14967(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14742(t5,t4);}

/* k14929 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14931(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14931,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14935,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14935(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14933 in k14929 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14935(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14742(t7,t6);}

/* k14894 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14896(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14896,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14900,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14900(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14898 in k14894 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14900(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14742(t7,t6);}

/* k14740 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_14742(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14742,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14745,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14745(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14796,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_14796(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14831,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_14831(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14860,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_14860(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14858 in k14740 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14860,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14867,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14875,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14873 in k14858 in k14740 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14875(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14867(2,t2,C_SCHEME_UNDEFINED);}}

/* k14865 in k14858 in k14740 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14745(t5,t4);}

/* k14829 in k14740 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14831(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14831,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14835,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14835(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14833 in k14829 in k14740 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14835(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14745(t7,t6);}

/* k14794 in k14740 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14796,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14800,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14800(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14798 in k14794 in k14740 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14800(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14745(t7,t6);}

/* k14743 in k14740 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_14745(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14745,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14748,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14748(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k14746 in k14743 in k14740 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14748,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14751,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_12529(t2);}

/* k14749 in k14746 in k14743 in k14740 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14751(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14751,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14757,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14763,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_12539(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[280],"next-in-heap"),t5);}

/* a14762 in k14749 in k14746 in k14743 in k14740 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14763(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14763,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14775,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t4,t3);}

/* k14773 in a14762 in k14749 in k14746 in k14743 in k14740 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k14755 in k14749 in k14746 in k14743 in k14740 in k14737 in make-heap in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14757(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14699(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14699,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14703,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t3,t2);}

/* k14701 in next-in-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14703,2,t0,t1);}
t2=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14712,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14719,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_12312(t4,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(t1);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14725,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 377  pattern-data-set!");
f_12249(t4,((C_word*)t0)[2],t5);}}

/* k14723 in k14701 in next-in-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14725(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* k14717 in k14701 in next-in-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12081(((C_word*)t0)[2],t1,C_fix(1));}

/* k14710 in k14701 in next-in-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[2]));}

/* make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14452(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_14452r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_14452r(t0,t1,t2,t3);}}

static void C_ccall f_14452r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14456,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_14456(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_14456(t8,t7);}}

/* k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_14456(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14456,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_14459,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_14459(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[267]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14605,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 377  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[267]);}
else{
t18=t17;
f_14605(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[268]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14640,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[268]);}
else{
t19=t18;
f_14640(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14669,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_14669(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k14667 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14669,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14676,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14684,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14682 in k14667 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14684(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14676(2,t2,C_SCHEME_UNDEFINED);}}

/* k14674 in k14667 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14676(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14459(t5,t4);}

/* k14638 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14640,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14644,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14644(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14642 in k14638 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14644(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14459(t7,t6);}

/* k14603 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14605(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14605,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14609,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14609(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14607 in k14603 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14459(t7,t6);}

/* k14457 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_14459(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14459,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14462,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_14462(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14505,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_14505(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14540,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_14540(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14569,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_14569(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k14567 in k14457 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14569(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14569,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14576,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14584,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14582 in k14567 in k14457 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14576(2,t2,C_SCHEME_UNDEFINED);}}

/* k14574 in k14567 in k14457 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14462(t5,t4);}

/* k14538 in k14457 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14540,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14544,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14544(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14542 in k14538 in k14457 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14462(t7,t6);}

/* k14503 in k14457 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14505(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14505,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14509,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14509(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14507 in k14503 in k14457 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14462(t7,t6);}

/* k14460 in k14457 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_14462(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14462,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14465,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_14465(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k14463 in k14460 in k14457 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14465,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14468,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_12529(t2);}

/* k14466 in k14463 in k14460 in k14457 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14468,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14474,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14476,a[2]=((C_word)li200),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_12539(t3,t1,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[278],"next-in-line"),t4);}

/* a14475 in k14466 in k14463 in k14460 in k14457 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14476(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14476,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14484,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t4,t3);}

/* k14482 in a14475 in k14466 in k14463 in k14460 in k14457 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k14472 in k14466 in k14463 in k14460 in k14457 in k14454 in make-line in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14237(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_14237,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14241,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-cache");
f_12474(t3,t2);}

/* k14239 in next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14241(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14241,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[270]);
t4=(C_word)C_i_block_ref(t2,C_fix(1));
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14247,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t6,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],C_fix(0)))){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14271,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t9=t1;
t10=(C_word)C_i_check_structure(t9,lf[270]);
t11=(C_word)C_i_block_ref(t9,C_fix(5));
C_trace("ChickenBridge.scm: 377  next-1");
f_12880(t8,t11);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14450,a[2]=t7,a[3]=t1,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  palin-len");
f_13678(t8,t1);}}

/* k14448 in k14239 in next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14450,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],t1))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14403,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  palin-inc-set!");
f_13687(t2,((C_word*)t0)[3],C_fix(-1));}
else{
t2=((C_word*)t0)[2];
f_14247(2,t2,C_SCHEME_UNDEFINED);}}

/* k14401 in k14448 in k14239 in next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14403(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14403,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[270]);
t4=(C_word)C_i_block_ref(t2,C_fix(4));
t5=(C_word)C_eqp(t4,C_SCHEME_TRUE);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14415,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t5)){
t7=t6;
f_14415(t7,t5);}
else{
if(C_truep((C_word)C_i_pairp(t4))){
t7=(C_word)C_i_cdr(t4);
if(C_truep((C_word)C_i_pairp(t7))){
t8=(C_word)C_i_cadr(t4);
t9=t6;
f_14415(t9,(C_word)C_eqp(t8,C_SCHEME_TRUE));}
else{
t8=t6;
f_14415(t8,C_SCHEME_FALSE);}}
else{
t7=t6;
f_14415(t7,C_SCHEME_FALSE);}}}

/* k14413 in k14401 in k14448 in k14239 in next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_14415(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14415,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(2));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14247(2,t4,t3);}
else{
t2=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14247(2,t4,t3);}}

/* k14269 in k14239 in next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14274,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  palin-len");
f_13678(t2,((C_word*)t0)[2]);}

/* k14272 in k14269 in k14239 in next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14274(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14274,2,t0,t1);}
t2=(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],C_fix(-2));
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14280,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t4=((C_word*)t0)[2];
t5=((C_word*)t0)[5];
t6=(C_word)C_i_check_structure(t4,lf[270]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t7=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t7+1)))(5,t7,t3,t4,C_fix(4),t5);}

/* k14278 in k14272 in k14269 in k14239 in next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14280(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14280,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14283,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  palin-inc-set!");
f_13687(t2,((C_word*)t0)[2],C_fix(1));}

/* k14281 in k14278 in k14272 in k14269 in k14239 in next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14283,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14286,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[6],C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14371,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t3)){
t5=t4;
f_14371(t5,t3);}
else{
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t5=(C_word)C_i_car(((C_word*)t0)[6]);
t6=t4;
f_14371(t6,(C_word)C_eqp(t5,C_SCHEME_TRUE));}
else{
t5=t4;
f_14371(t5,C_SCHEME_FALSE);}}}

/* k14369 in k14281 in k14278 in k14272 in k14269 in k14239 in next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_14371(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(C_truep(t1)){
if(C_truep(((C_word*)t0)[4])){
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_14286(t3,t2);}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(1));
t3=((C_word*)t0)[2];
f_14286(t3,t2);}}
else{
t2=C_set_block_item(((C_word*)t0)[3],0,C_fix(0));
t3=((C_word*)t0)[2];
f_14286(t3,t2);}}

/* k14284 in k14281 in k14278 in k14272 in k14269 in k14239 in next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_14286(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14286,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14292,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14365,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-flags");
f_12240(t3,((C_word*)t0)[2]);}

/* k14363 in k14284 in k14281 in k14278 in k14272 in k14269 in k14239 in next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7185(((C_word*)t0)[2],t1,C_fix(2));}

/* k14290 in k14284 in k14281 in k14278 in k14272 in k14269 in k14239 in next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14292(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14292,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14295,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_12312(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_14247(2,t2,C_SCHEME_UNDEFINED);}}

/* k14293 in k14290 in k14284 in k14281 in k14278 in k14272 in k14269 in k14239 in next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14295,2,t0,t1);}
t2=(C_word)C_a_i_times(&a,2,((C_word*)t0)[5],C_fix(2));
switch(((C_word*)t0)[4]){
case C_SCHEME_FALSE:
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12081(((C_word*)t0)[3],t1,t2);
case C_SCHEME_TRUE:
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(2)):(C_word)C_a_i_minus(&a,2,t2,C_fix(3)));
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12081(((C_word*)t0)[3],t1,t3);
default:
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[275]))){
t3=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12081(((C_word*)t0)[3],t1,t3);}
else{
if(C_truep((C_word)C_i_equalp(((C_word*)t0)[4],lf[276]))){
t3=(C_truep(((C_word*)t0)[2])?(C_word)C_a_i_minus(&a,2,t2,C_fix(1)):(C_word)C_a_i_minus(&a,2,t2,C_fix(2)));
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12081(((C_word*)t0)[3],t1,t3);}
else{
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12081(((C_word*)t0)[3],t1,t2);}}}}

/* k14245 in k14239 in next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14247(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14247,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14250,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)t0)[2];
t4=(C_word)C_i_check_structure(t3,lf[270]);
t5=(C_word)C_i_block_ref(t3,C_fix(3));
t6=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],t5);
t7=((C_word*)t0)[2];
t8=(C_word)C_i_check_structure(t7,lf[270]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t9=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t9+1)))(5,t9,t2,t7,C_fix(1),t6);}

/* k14248 in k14245 in k14239 in next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14250,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14257,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t2,((C_word*)t0)[2]);}

/* k14255 in k14248 in k14245 in k14239 in next-in-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)((C_word*)t0)[2])[1]));}

/* make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13767(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_13767r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13767r(t0,t1,t2,t3);}}

static void C_ccall f_13767r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13771,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_13771(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_13771(t8,t7);}}

/* k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13771(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[59],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13771,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=((C_word*)t0)[4];
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13774,a[2]=t13,a[3]=t11,a[4]=t17,a[5]=t9,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t5,a[9]=t3,a[10]=t7,a[11]=((C_word*)t0)[2],a[12]=((C_word*)t0)[3],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t15)[1]))){
t19=t18;
f_13774(t19,C_SCHEME_UNDEFINED);}
else{
t19=(C_word)C_i_car(((C_word*)t15)[1]);
t20=(C_word)C_eqp(t19,lf[267]);
if(C_truep(t20)){
t21=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14108,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t9,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t22=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t22))(4,t22,t21,lf[19],lf[267]);}
else{
t22=t21;
f_14108(2,t22,C_SCHEME_UNDEFINED);}}
else{
t21=(C_word)C_eqp(t19,lf[268]);
if(C_truep(t21)){
t22=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14143,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t11,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("ChickenBridge.scm: 377  error");
t23=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t23))(4,t23,t22,lf[19],lf[268]);}
else{
t23=t22;
f_14143(2,t23,C_SCHEME_UNDEFINED);}}
else{
t22=(C_word)C_eqp(t19,lf[274]);
if(C_truep(t22)){
t23=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14178,a[2]=((C_word*)t0)[4],a[3]=t18,a[4]=t15,a[5]=t17,a[6]=t13,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[19],lf[274]);}
else{
t24=t23;
f_14178(2,t24,C_SCHEME_UNDEFINED);}}
else{
t23=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14207,a[2]=t18,a[3]=t9,a[4]=t3,a[5]=t15,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("ChickenBridge.scm: 377  error");
t24=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t24))(4,t24,t23,lf[10],((C_word*)t0)[4]);}
else{
t24=t23;
f_14207(2,t24,C_SCHEME_UNDEFINED);}}}}}}

/* k14205 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14207,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14214,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14222,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14220 in k14205 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14214(2,t2,C_SCHEME_UNDEFINED);}}

/* k14212 in k14205 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14214(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13774(t5,t4);}

/* k14176 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14178,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14182,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14182(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14180 in k14176 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13774(t7,t6);}

/* k14141 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14143,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14147,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14147(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14145 in k14141 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14147(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13774(t7,t6);}

/* k14106 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14108(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14108,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14112,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14112(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14110 in k14106 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13774(t7,t6);}

/* k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13774(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[43],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13774,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_13777,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13777(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13973,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_13973(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14008,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_14008(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[274]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14043,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[274]);}
else{
t8=t7;
f_14043(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14072,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_14072(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k14070 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14072,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14079,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14087,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k14085 in k14070 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_14079(2,t2,C_SCHEME_UNDEFINED);}}

/* k14077 in k14070 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13777(t5,t4);}

/* k14041 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14043,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14047,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14047(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14045 in k14041 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13777(t7,t6);}

/* k14006 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14008(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14008,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14012,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_14012(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k14010 in k14006 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_14012(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13777(t7,t6);}

/* k13971 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13973,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13977,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13977(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13975 in k13971 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13977(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13777(t7,t6);}

/* k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13777(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13777,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13780,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t3=t2;
f_13780(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13838,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_13838(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13873,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_13873(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[274]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13908,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[274]);}
else{
t8=t7;
f_13908(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13937,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[10],((C_word*)t0)[6]);}
else{
t8=t7;
f_13937(2,t8,C_SCHEME_UNDEFINED);}}}}}}

/* k13935 in k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13937(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13937,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13944,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13952,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13950 in k13935 in k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13952(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13944(2,t2,C_SCHEME_UNDEFINED);}}

/* k13942 in k13935 in k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13780(t5,t4);}

/* k13906 in k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13908,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13912,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13912(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13910 in k13906 in k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13780(t7,t6);}

/* k13871 in k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13873,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13877,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13877(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13875 in k13871 in k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13877(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13780(t7,t6);}

/* k13836 in k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13838(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13838,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13842,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13842(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13840 in k13836 in k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13780(t7,t6);}

/* k13778 in k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13780(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13780,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13783,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13783(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k13781 in k13778 in k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13783,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13786,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_12529(t2);}

/* k13784 in k13781 in k13778 in k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13786(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13786,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13792,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=t1,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,C_fix(2));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13809,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_12539(t3,t1,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t4,C_retrieve2(lf[273],"next-in-palindrome"),t5);}

/* a13808 in k13784 in k13781 in k13778 in k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13809(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13809,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13817,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t4,t3);}

/* k13815 in a13808 in k13784 in k13781 in k13778 in k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13817(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("for-each");
t2=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13790 in k13784 in k13781 in k13778 in k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13792,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13795,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_record(&a,6,lf[270],C_fix(-2),t3,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);
C_trace("ChickenBridge.scm: 377  pattern-cache-set!");
f_12465(t2,((C_word*)t0)[4],t5);}

/* k13793 in k13790 in k13784 in k13781 in k13778 in k13775 in k13772 in k13769 in make-palindrome in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13795(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* palin-inc-set! in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13687(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13687,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[270]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(3),t3);}

/* palin-len in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13678(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13678,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[270]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* next-in-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13606(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13606,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13610,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t3,t2);}

/* k13608 in next-in-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13610,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13613,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t1);
t5=t2;
f_13613(t5,(C_word)C_i_set_cdr(t1,t4));}
else{
t4=t2;
f_13613(t4,C_SCHEME_UNDEFINED);}}

/* k13611 in k13608 in next-in-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13613(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)t0)[3]);
t3=(C_word)C_i_cddr(((C_word*)t0)[3]);
t4=(C_word)C_i_set_cdr(((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t2);}

/* make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13351(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+10)){
C_save_and_reclaim((void*)tr3r,(void*)f_13351r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_13351r(t0,t1,t2,t3);}}

static void C_ccall f_13351r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(10);
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13355,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t6=t5;
f_13355(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_list(&a,1,((C_word*)t4)[1]);
t7=C_set_block_item(t4,0,t6);
t8=t5;
f_13355(t8,t7);}}

/* k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13355(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13355,NULL,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=((C_word*)t0)[4];
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13358,a[2]=t9,a[3]=t13,a[4]=t7,a[5]=((C_word*)t0)[4],a[6]=t11,a[7]=t5,a[8]=t3,a[9]=((C_word*)t0)[2],a[10]=((C_word*)t0)[3],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t11)[1]))){
t15=t14;
f_13358(t15,C_SCHEME_UNDEFINED);}
else{
t15=(C_word)C_i_car(((C_word*)t11)[1]);
t16=(C_word)C_eqp(t15,lf[267]);
if(C_truep(t16)){
t17=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13512,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t7,a[7]=t3,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t7)[1])){
C_trace("ChickenBridge.scm: 377  error");
t18=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t18))(4,t18,t17,lf[19],lf[267]);}
else{
t18=t17;
f_13512(2,t18,C_SCHEME_UNDEFINED);}}
else{
t17=(C_word)C_eqp(t15,lf[268]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13547,a[2]=((C_word*)t0)[4],a[3]=t14,a[4]=t11,a[5]=t13,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[268]);}
else{
t19=t18;
f_13547(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13576,a[2]=t14,a[3]=t7,a[4]=t3,a[5]=t11,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("ChickenBridge.scm: 377  error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[10],((C_word*)t0)[4]);}
else{
t19=t18;
f_13576(2,t19,C_SCHEME_UNDEFINED);}}}}}

/* k13574 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13576,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13583,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13591,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13589 in k13574 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13591(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13583(2,t2,C_SCHEME_UNDEFINED);}}

/* k13581 in k13574 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13583(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13358(t5,t4);}

/* k13545 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13547,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13551,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13551(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13549 in k13545 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13551(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13358(t7,t6);}

/* k13510 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13512,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13516,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13516(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13514 in k13510 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13358(t7,t6);}

/* k13356 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13358(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13358,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13361,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_13361(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[267]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13412,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("ChickenBridge.scm: 377  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[267]);}
else{
t6=t5;
f_13412(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[268]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13447,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[268]);}
else{
t7=t6;
f_13447(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13476,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 377  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_13476(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k13474 in k13356 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13476,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13483,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13491,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k13489 in k13474 in k13356 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_13483(2,t2,C_SCHEME_UNDEFINED);}}

/* k13481 in k13474 in k13356 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13483(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13361(t5,t4);}

/* k13445 in k13356 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13447,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13451,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13451(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13449 in k13445 in k13356 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13451(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13361(t7,t6);}

/* k13410 in k13356 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13412(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13412,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13416,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 377  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_13416(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k13414 in k13410 in k13356 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13416(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_13361(t7,t6);}

/* k13359 in k13356 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13361(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13361,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13364,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_13364(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 377  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k13362 in k13359 in k13356 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13367,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  %alloc-pattern");
f_12529(t2);}

/* k13365 in k13362 in k13359 in k13356 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13367,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13373,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13379,a[2]=((C_word)li192),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  initialize-pattern");
f_12539(t3,t1,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],C_fix(0),t2,t2,C_retrieve2(lf[266],"next-in-cycle"),t5);}

/* a13378 in k13365 in k13362 in k13359 in k13356 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13379(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13379,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13391,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data");
f_12258(t4,t3);}

/* k13389 in a13378 in k13365 in k13362 in k13359 in k13356 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_car(t1);
C_trace("for-each");
t3=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13371 in k13365 in k13362 in k13359 in k13356 in k13353 in make-cycle in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13236(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13236,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13349,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_12225(t3,t2);}

/* k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13349,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13246,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_12312(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(1));}}

/* k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13246,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13249,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13334,a[2]=t6,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-stream");
f_12126(t7,t1);}

/* k13332 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13334,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13341,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13345,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  period-stream");
f_12126(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
f_13249(2,t2,C_SCHEME_UNDEFINED);}}

/* k13343 in k13332 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13345(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  next-1");
f_12880(((C_word*)t0)[2],t1);}

/* k13339 in k13332 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13341(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[218]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t4=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(2),t1);}

/* k13247 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13249(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13249,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13331,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 377  period-length");
f_12108(t2,((C_word*)t0)[3]);}

/* k13329 in k13247 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13331(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13331,2,t0,t1);}
t2=(C_word)C_eqp(t1,C_SCHEME_TRUE);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13257,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=((C_word*)t0)[3];
t6=(C_word)C_i_check_structure(t5,lf[218]);
t7=t4;
f_13257(2,t7,(C_word)C_i_block_ref(t5,C_fix(4)));}
else{
C_trace("ChickenBridge.scm: 377  period-length");
f_12108(t4,((C_word*)t0)[3]);}}

/* k13255 in k13329 in k13247 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13257,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13260,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13266,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13321,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-flags");
f_12240(t5,((C_word*)t0)[3]);}
else{
t5=t4;
f_13266(2,t5,C_SCHEME_FALSE);}}

/* k13319 in k13255 in k13329 in k13247 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7185(((C_word*)t0)[2],t1,C_fix(8));}

/* k13264 in k13255 in k13329 in k13247 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13266,2,t0,t1);}
if(C_truep(t1)){
t2=C_fix(0);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13269,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13285,a[2]=t3,a[3]=((C_word)li190),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  map-pattern-data");
f_13190(t4,t5,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13260(t2,C_SCHEME_UNDEFINED);}}

/* a13284 in k13264 in k13255 in k13329 in k13247 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13285(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13285,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13314,a[2]=t2,a[3]=t1,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  reset-period");
f_13236(t3,t2);}

/* k13312 in a13284 in k13264 in k13255 in k13329 in k13247 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13314(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13314,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13295,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_12312(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k13293 in k13312 in a13284 in k13264 in k13255 in k13329 in k13247 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13295(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13295,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13298,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13310,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-omit");
f_12162(t3,t1);}

/* k13308 in k13293 in k13312 in a13284 in k13264 in k13255 in k13329 in k13247 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13310(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13310,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  period-omit-set!");
f_12153(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13296 in k13293 in k13312 in a13284 in k13264 in k13255 in k13329 in k13247 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13298,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k13267 in k13264 in k13255 in k13329 in k13247 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13269(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13269,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13279,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 377  max");
t4=*((C_word*)lf[264]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,t3,C_fix(0));}
else{
t2=((C_word*)t0)[2];
f_13260(t2,C_SCHEME_UNDEFINED);}}

/* k13277 in k13267 in k13264 in k13255 in k13329 in k13247 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13260(t3,t2);}

/* k13258 in k13255 in k13329 in k13247 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13260(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13260,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13263,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12081(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k13261 in k13258 in k13255 in k13329 in k13247 in k13244 in k13347 in reset-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* map-pattern-data in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13190(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13190,NULL,3,t1,t2,t3);}
t4=t3;
t5=(C_word)C_i_check_structure(t4,lf[228]);
t6=(C_word)C_i_block_ref(t4,C_fix(13));
t7=t6;
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t2,t3);}

/* next-in-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13181(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13181,NULL,2,t1,t2);}
t3=t2;
t4=(C_word)C_i_check_structure(t3,lf[228]);
t5=(C_word)C_i_block_ref(t3,C_fix(12));
t6=t5;
((C_proc3)C_retrieve_proc(t6))(3,t6,t1,t2);}

/* next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12880(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12880,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12887,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_12225(t3,t2);}

/* k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12887,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12890,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_12312(t2,((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_closurep(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 377  obj");
t2=((C_word*)t0)[2];
((C_proc2)C_retrieve_proc(t2))(2,t2,((C_word*)t0)[3]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13176,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  promise?");
t3=C_retrieve(lf[263]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}}}

/* k13174 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  force");
t2=C_retrieve(lf[262]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12890,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12893,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13161,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  period-count");
f_12090(t5,t1);}

/* k13159 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13161,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13116,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13153,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  period-reps");
f_12180(t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
f_12893(2,t2,C_SCHEME_UNDEFINED);}}

/* k13151 in k13159 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13153,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=(C_word)C_i_block_ref(t2,C_fix(8));
if(C_truep((C_word)C_i_greater_or_equalp(t1,t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13145,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-value-set!");
f_12321(t5,((C_word*)t0)[4],lf[257]);}
else{
t5=((C_word*)t0)[2];
f_13116(t5,C_SCHEME_UNDEFINED);}}

/* k13143 in k13151 in k13159 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13145(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13145,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13148,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-state-set!");
f_12339(t2,((C_word*)t0)[2],lf[255]);}

/* k13146 in k13143 in k13151 in k13159 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[257]);
t3=((C_word*)t0)[2];
f_13116(t3,t2);}

/* k13114 in k13159 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13116(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13116,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13122,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[4])[1];
if(C_truep(t3)){
t4=t2;
f_13122(t4,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13139,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  reset-period");
f_13236(t4,((C_word*)t0)[2]);}}

/* k13137 in k13114 in k13159 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13139(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13122(t2,(C_word)C_i_nequalp(t1,C_fix(0)));}

/* k13120 in k13114 in k13159 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13122(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13122,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[243]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13126,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-value-set!");
f_12321(t3,((C_word*)t0)[2],lf[243]);}
else{
t2=((C_word*)t0)[3];
f_12893(2,t2,C_SCHEME_UNDEFINED);}}

/* k13124 in k13120 in k13114 in k13159 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  pattern-state-set!");
f_12339(((C_word*)t0)[3],((C_word*)t0)[2],lf[255]);}

/* k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12893(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12893,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12899,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-flags");
f_12240(t2,((C_word*)t0)[3]);}}

/* k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12899,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=(C_word)C_i_block_ref(t2,C_fix(9));
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12905,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t4,a[5]=t8,a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=((C_word*)t0)[3],tmp=(C_word)a,a+=9,tmp);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12991,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=t9,a[6]=t8,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7185(t10,t1,C_fix(1));}

/* k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12991,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12994,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13007,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  next-in-pattern");
f_13181(t3,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13014,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13103,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7185(t3,((C_word*)t0)[2],C_fix(8));}}

/* k13101 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13103(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13103,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13110,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  period-length");
f_12108(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13014(t2,C_SCHEME_FALSE);}}

/* k13108 in k13101 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13014(t2,(C_word)C_eqp(t1,C_SCHEME_TRUE));}

/* k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13014(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13014,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13016,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word)li186),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_13016(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13016(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13016,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep(((C_word*)t4)[1])){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13023,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],tmp=(C_word)a,a+=9,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13065,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=t7,a[5]=((C_word)li185),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_13065(t9,t5);}}

/* do1426 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13065(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13065,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13100,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum");
f_12294(t2,((C_word*)t0)[3]);}

/* k13098 in do1426 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13100(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13100,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[243]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13075,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13082,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)t0)[2])){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13089,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  next-in-pattern");
f_13181(t5,((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 377  next-in-pattern");
f_13181(t4,((C_word*)t0)[3]);}}
else{
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}

/* k13087 in k13098 in do1426 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13089,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13234,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_12225(t2,t1);}

/* k13232 in k13087 in k13098 in do1426 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13234,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13209,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-period");
f_12312(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_13082(2,t2,((C_word*)t0)[2]);}}

/* k13207 in k13232 in k13087 in k13098 in do1426 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13209,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13230,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  period-omit");
f_12162(t2,t1);}

/* k13228 in k13207 in k13232 in k13087 in k13098 in do1426 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13230,2,t0,t1);}
if(C_truep((C_word)C_i_greaterp(t1,C_fix(0)))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13218,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13226,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-omit");
f_12162(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[4];
f_13082(2,t2,((C_word*)t0)[2]);}}

/* k13224 in k13228 in k13207 in k13232 in k13087 in k13098 in do1426 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13226(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13226,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  period-omit-set!");
f_12153(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k13216 in k13228 in k13207 in k13232 in k13087 in k13098 in do1426 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13218(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13082(2,t2,lf[243]);}

/* k13080 in k13098 in do1426 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  pattern-datum-set!");
f_12285(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k13073 in k13098 in do1426 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_13065(t2,((C_word*)t0)[2]);}

/* k13021 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13023,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13027,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13063,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum");
f_12294(t3,((C_word*)t0)[3]);}

/* k13061 in k13021 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  next-1");
f_12880(((C_word*)t0)[2],t1);}

/* k13025 in k13021 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13027(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13027,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13030,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13046,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13059,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum");
f_12294(t5,((C_word*)t0)[3]);}

/* k13057 in k13025 in k13021 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  pattern?");
f_12225(((C_word*)t0)[2],t1);}

/* k13044 in k13025 in k13021 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13046,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13050,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13054,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum");
f_12294(t3,((C_word*)t0)[2]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[255]);
t3=((C_word*)t0)[3];
f_13030(t3,t2);}}

/* k13052 in k13044 in k13025 in k13021 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  pattern-state");
f_12348(((C_word*)t0)[2],t1);}

/* k13048 in k13044 in k13025 in k13021 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13030(t3,t2);}

/* k13028 in k13025 in k13021 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_13030(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13030,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13033,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[243]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 377  pattern-datum-set!");
f_12285(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=t2;
f_13033(2,t5,t4);}}

/* k13031 in k13028 in k13025 in k13021 in do1422 in k13012 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_13016(t2,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k13005 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  pattern-datum-set!");
f_12285(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12992 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12998,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13003,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum");
f_12294(t3,((C_word*)t0)[2]);}

/* k13001 in k12992 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_13003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  next-1");
f_12880(((C_word*)t0)[2],t1);}

/* k12996 in k12992 in k12989 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[255]);
t4=((C_word*)t0)[2];
f_12905(2,t4,t3);}

/* k12903 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12905(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12905,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12908,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[255]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12950,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12962,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-count");
f_12090(t5,((C_word*)t0)[3]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12965,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12985,a[2]=((C_word*)t0)[6],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7185(t5,((C_word*)t0)[2],C_fix(64));}}

/* k12983 in k12903 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12985(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 377  pattern-datum-set!");
f_12285(((C_word*)t0)[3],((C_word*)t0)[2],lf[243]);}
else{
t2=((C_word*)t0)[3];
f_12965(2,t2,C_SCHEME_UNDEFINED);}}

/* k12963 in k12903 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12965,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12971,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7185(t2,((C_word*)t0)[2],C_fix(16));}

/* k12969 in k12963 in k12903 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12971,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12982,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-count");
f_12090(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_12908(2,t2,C_SCHEME_UNDEFINED);}}

/* k12980 in k12969 in k12963 in k12903 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12982,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12081(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k12960 in k12903 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12962(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12962,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
C_trace("ChickenBridge.scm: 377  period-count-set!");
f_12081(((C_word*)t0)[3],((C_word*)t0)[2],t2);}

/* k12948 in k12903 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12950,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12953,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-datum-set!");
f_12285(t2,((C_word*)t0)[2],lf[243]);}

/* k12951 in k12948 in k12903 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
f_12908(2,t3,t2);}

/* k12906 in k12903 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12908,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12911,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12944,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  period-count");
f_12090(t3,((C_word*)t0)[2]);}

/* k12942 in k12906 in k12903 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12944,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(t1,C_fix(0)))){
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,lf[255]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12939,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  period-reps");
f_12180(t3,((C_word*)t0)[3]);}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[2];
f_12911(2,t3,t2);}}

/* k12937 in k12942 in k12906 in k12903 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12939(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12939,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,C_fix(1),t1);
t3=((C_word*)t0)[3];
t4=(C_word)C_i_check_structure(t3,lf[218]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,((C_word*)t0)[2],t3,C_fix(6),t2);}

/* k12909 in k12906 in k12903 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12911(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12911,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12914,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t0)[2])){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12924,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  retfn");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=t2;
f_12914(t3,C_SCHEME_UNDEFINED);}}

/* k12922 in k12909 in k12906 in k12903 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12914(t3,t2);}

/* k12912 in k12909 in k12906 in k12903 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12914(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12914,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12917,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  pattern-state-set!");
f_12339(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k12915 in k12912 in k12909 in k12906 in k12903 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12917,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12920,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern-value-set!");
f_12321(t2,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}

/* k12918 in k12915 in k12912 in k12909 in k12906 in k12903 in k12897 in k12891 in k12888 in k12885 in next-1 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12920(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* next in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12757(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr3rv,(void*)f_12757r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_12757r(t0,t1,t2,t3);}}

static void C_ccall f_12757r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(16);
t4=(C_word)C_vemptyp(t3);
t5=(C_truep(t4)?C_SCHEME_FALSE:(C_word)C_i_vector_ref(t3,C_fix(0)));
if(C_truep(t5)){
if(C_truep((C_word)C_i_numberp(t5))){
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12778,a[2]=t2,a[3]=t8,a[4]=t6,a[5]=t5,a[6]=((C_word)li182),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_12778(t10,t1,C_fix(0),t6);}
else{
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12816,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_12225(t6,t2);}}
else{
C_trace("ChickenBridge.scm: 377  next-1");
f_12880(t1,t2);}}

/* k12814 in next in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12816(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12816,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12826,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 377  next-1");
f_12880(t3,((C_word*)t0)[3]);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k12824 in k12814 in next in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12826,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12828,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li183),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_12828(t5,((C_word*)t0)[2],t1,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* do1398 in k12824 in k12814 in next in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12828(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12828,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_eqp(((C_word*)t5)[1],lf[257]);
t8=(C_truep(t7)?t7:((C_word*)t6)[1]);
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t9=(C_word)C_a_i_list(&a,1,((C_word*)t5)[1]);
t10=(C_word)C_i_set_cdr(t3,t9);
t11=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12847,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12857,a[2]=((C_word*)t0)[2],a[3]=t5,a[4]=t11,a[5]=t6,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  eop?");
t13=C_retrieve(lf[254]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t12,((C_word*)t0)[2]);}}

/* k12855 in do1398 in k12824 in k12814 in next in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12857(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12857,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[4];
f_12847(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12862,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  next-1");
f_12880(t2,((C_word*)t0)[2]);}}

/* k12860 in k12855 in do1398 in k12824 in k12814 in next in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12862(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_12847(t3,t2);}

/* k12845 in do1398 in k12824 in k12814 in next in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12847(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=((C_word*)((C_word*)t0)[5])[1];
f_12828(t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* do1391 in next in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12778(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12778,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t2,((C_word*)t0)[5]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12810,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 377  next-1");
f_12880(t4,((C_word*)t0)[2]);}}

/* k12808 in do1391 in next in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12810,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)t0)[5],t2);
t4=(C_word)C_a_i_plus(&a,2,C_fix(1),((C_word*)t0)[4]);
t5=(C_word)C_i_cdr(((C_word*)t0)[5]);
t6=((C_word*)((C_word*)t0)[3])[1];
f_12778(t6,((C_word*)t0)[2],t4,t5);}

/* eod? in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12738(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12738,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12745,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_12225(t3,t2);}

/* k12743 in eod? in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12745,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12752,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-value");
t3=C_retrieve2(lf[237],"pattern-value");
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[257]));}}

/* k12750 in k12743 in eod? in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  eod?");
t2=C_retrieve(lf[256]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* eop? in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12719(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12719,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12726,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_12225(t3,t2);}

/* k12724 in eop? in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12726,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12733,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 377  pattern-state");
f_12348(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_eqp(((C_word*)t0)[2],lf[255]));}}

/* k12731 in k12724 in eop? in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  eop?");
t2=C_retrieve(lf[254]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12539(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7,C_word t8,C_word t9,C_word t10){
C_word tmp;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12539,NULL,10,t1,t2,t3,t4,t5,t6,t7,t8,t9,t10);}
t11=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12543,a[2]=t7,a[3]=t10,a[4]=t9,a[5]=t5,a[6]=t11,a[7]=t1,a[8]=t8,a[9]=t4,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 377  pattern-data-set!");
f_12249(t12,t2,t3);}

/* k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12543,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12546,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],tmp=(C_word)a,a+=10,tmp);
t3=((C_word*)t0)[10];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t6=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(3),t4);}

/* k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12546(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12546,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12549,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[9];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t6=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(13),t4);}

/* k12547 in k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12549,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12552,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[8];
t4=((C_word*)t0)[2];
t5=(C_word)C_i_check_structure(t3,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t6=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(12),t4);}

/* k12550 in k12547 in k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12552(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12552,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12555,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12709,a[2]=t3,a[3]=((C_word)li178),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  map-pattern-data");
f_13190(t4,t5,((C_word*)t0)[7]);}

/* a12708 in k12550 in k12547 in k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12709(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12709,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12716,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  pattern?");
f_12225(t3,t2);}

/* k12714 in a12708 in k12550 in k12547 in k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}}

/* k12553 in k12550 in k12547 in k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12555,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12558,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t2;
f_12558(t5,t4);}
else{
t3=t2;
f_12558(t3,C_SCHEME_UNDEFINED);}}

/* k12556 in k12553 in k12550 in k12547 in k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12558(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12558,NULL,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=(C_word)C_i_block_ref(t2,C_fix(10));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12564,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[244]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_12564(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[251]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(16));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_12564(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[252],t4);}}}

/* k12562 in k12556 in k12553 in k12550 in k12547 in k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12564,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=(C_word)C_i_block_ref(t2,C_fix(11));
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12570,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t6=(C_word)C_eqp(t4,lf[245]);
if(C_truep(t6)){
t7=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(32));
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=t5;
f_12570(2,t9,t8);}
else{
t7=(C_word)C_eqp(t4,lf[249]);
if(C_truep(t7)){
t8=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(64));
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t5;
f_12570(2,t10,t9);}
else{
C_trace("ChickenBridge.scm: 377  error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t5,lf[250],t4);}}}

/* k12568 in k12562 in k12556 in k12553 in k12550 in k12547 in k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12570,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_12573,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12633,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7185(t3,((C_word*)((C_word*)t0)[3])[1],C_fix(16));}

/* k12631 in k12568 in k12562 in k12556 in k12553 in k12550 in k12547 in k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12633(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12633,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[247]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_12573(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12647,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 377  bitwise-test");
f_7185(t2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));}}

/* k12645 in k12631 in k12568 in k12562 in k12556 in k12553 in k12550 in k12547 in k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12647,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_bitwise_and(&a,2,((C_word*)((C_word*)t0)[3])[1],lf[248]);
t3=(C_word)C_a_i_bitwise_ior(&a,2,t2,C_fix(16));
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_12573(t5,t4);}
else{
t2=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(8));
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_12573(t4,t3);}}

/* k12571 in k12568 in k12562 in k12556 in k12553 in k12550 in k12547 in k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12573(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12573,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12576,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_numberp(((C_word*)t0)[2]);
t4=(C_truep(t3)?(C_word)C_i_greaterp(((C_word*)t0)[2],C_fix(0)):C_SCHEME_FALSE);
t5=(C_truep(t4)?((C_word*)t0)[2]:C_fix(1073741823));
t6=((C_word*)t0)[4];
t7=(C_word)C_i_check_structure(t6,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t8=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t8+1)))(5,t8,t2,t6,C_fix(8),t5);}

/* k12574 in k12571 in k12568 in k12562 in k12556 in k12553 in k12550 in k12547 in k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12576(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12576,2,t0,t1);}
t2=((C_word*)t0)[6];
t3=(C_truep(t2)?t2:((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12582,a[2]=((C_word*)t0)[5],a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t5=((C_word*)t0)[6];
if(C_truep(t5)){
t6=t4;
f_12582(t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_a_i_bitwise_ior(&a,2,((C_word*)((C_word*)t0)[2])[1],C_fix(2));
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t4;
f_12582(t8,t7);}}

/* k12580 in k12574 in k12571 in k12568 in k12562 in k12556 in k12553 in k12550 in k12547 in k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12582(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12582,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12585,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12595,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_numberp(((C_word*)t0)[3]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(((C_word*)t0)[3],C_SCHEME_TRUE));
if(C_truep(t5)){
C_trace("ChickenBridge.scm: 377  make-period");
f_12069(t3,C_fix(0),((C_word*)t0)[3],C_SCHEME_FALSE,((C_word*)t0)[2],C_fix(0),C_fix(0));}
else{
C_trace("ChickenBridge.scm: 377  make-period");
f_12069(t3,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0),C_fix(0));}}

/* k12593 in k12580 in k12574 in k12571 in k12568 in k12562 in k12556 in k12553 in k12550 in k12547 in k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)t0)[3];
t3=(C_word)C_i_check_structure(t2,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t4=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t4+1)))(5,t4,((C_word*)t0)[2],t2,C_fix(5),t1);}

/* k12583 in k12580 in k12574 in k12571 in k12568 in k12562 in k12556 in k12553 in k12550 in k12547 in k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12585,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12588,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)t0)[3];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_i_check_structure(t3,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t6=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t6+1)))(5,t6,t2,t3,C_fix(1),t4);}

/* k12586 in k12583 in k12580 in k12574 in k12571 in k12568 in k12562 in k12556 in k12553 in k12550 in k12547 in k12544 in k12541 in initialize-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 377  values");
C_values(2,0,((C_word*)t0)[2]);}

/* %alloc-pattern in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12529(C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12529,NULL,1,t1);}
t2=lf[243];
t3=lf[243];
t4=lf[243];
t5=lf[244];
t6=lf[245];
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,15,lf[228],C_fix(0),C_SCHEME_END_OF_LIST,C_SCHEME_FALSE,t2,C_SCHEME_FALSE,t3,t4,C_fix(1073741823),C_SCHEME_FALSE,t5,t6,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE));}

/* pattern-cache in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12474(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12474,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(14)));}

/* pattern-cache-set! in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12465(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12465,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(14),t3);}

/* pattern-state in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12348(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12348,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(7)));}

/* pattern-state-set! in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12339(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12339,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(7),t3);}

/* f_12330 in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12330(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12330,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* pattern-value-set! in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12321(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12321,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(6),t3);}

/* pattern-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12312(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12312,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* pattern-datum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12294(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12294,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* pattern-datum-set! in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12285(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12285,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(4),t3);}

/* pattern-length in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12276(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12276,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* pattern-data in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12258(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12258,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* pattern-data-set! in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12249(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12249,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[228]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(2),t3);}

/* pattern-flags in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12240(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12240,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[228]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* pattern? in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12225(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12225,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[228]));}

/* period-reps in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12180(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12180,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[218]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(6)));}

/* period-omit in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12162(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12162,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[218]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(5)));}

/* period-omit-set! in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12153(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12153,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[218]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(5),t3);}

/* period-stream in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12126(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12126,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[218]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* period-length in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12108(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12108,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[218]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* period-count in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12090(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12090,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[218]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* period-count-set! in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12081(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12081,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_check_structure(t2,lf[218]);
C_trace("ChickenBridge.scm: 377  ##sys#block-set!");
t5=*((C_word*)lf[220]+1);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t1,t2,C_fix(1),t3);}

/* make-period in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12069(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12069,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_a_i_record(&a,7,lf[218],t2,t3,t4,t5,t6,t7));}

/* fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11756(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11756,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_times(&a,2,t2,t3);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12067,a[2]=t4,a[3]=t2,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  round");
t7=*((C_word*)lf[103]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t4);}

/* k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12067(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12067,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11769,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_12002,a[2]=t9,a[3]=((C_word*)t0)[2],a[4]=t8,a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t5,a[8]=t6,a[9]=t3,tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 376  -");
C_minus(3,0,t10,t3);}

/* k12000 in k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12002,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_12004,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t3,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word)li153),tmp=(C_word)a,a+=11,tmp));
t5=((C_word*)t3)[1];
f_12004(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* do1118 in k12000 in k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12004(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12004,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)t0)[9]))){
t5=(C_word)C_i_cdr(((C_word*)t0)[8]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_12019,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[6],a[7]=t2,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t6=t2;
t7=((C_word*)t0)[2];
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7502,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t8+1)))(4,t8,t5,t6,t7);}}

/* f_7502 in do1118 in k12000 in k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7502(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7502,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub358(t4,t5,t6));}

/* k12017 in do1118 in k12000 in k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_12019(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12019,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12022,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[8])[1],lf[216]))){
t4=t3;
f_12022(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],((C_word*)t0)[7]);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7);
t9=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t10=C_mutate(((C_word *)((C_word*)t0)[2])+1,t9);
t11=t3;
f_12022(t11,t10);}}

/* k12020 in k12017 in do1118 in k12000 in k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_12022(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12022,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t3=((C_word*)((C_word*)t0)[4])[1];
f_12004(t3,((C_word*)t0)[3],t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k11767 in k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11769(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11769,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11772,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11845,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word)li151),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_11845(t6,t2,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do1126 in k11767 in k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_11845(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11845,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11998,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t4,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  caar");
t7=*((C_word*)lf[215]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k11996 in do1126 in k11767 in k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11998,2,t0,t1);}
if(C_truep((C_word)C_i_negativep(t1))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_abs(&a,1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_i_set_car(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11982,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=t10,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
C_trace("ChickenBridge.scm: 376  -");
C_minus(3,0,t11,t12);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k11980 in k11996 in do1126 in k11767 in k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11982(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11982,2,t0,t1);}
t2=(C_word)C_i_set_car(((C_word*)t0)[7],t1);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_i_assoc(t3,((C_word*)((C_word*)t0)[5])[1]);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11876,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t4)){
t6=(C_word)C_i_cdr(t4);
t7=(C_word)C_i_cadr(t4);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t9=(C_word)C_a_i_plus(&a,2,t7,t8);
t10=t5;
f_11876(t10,(C_word)C_i_set_car(t6,t9));}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11901,a[2]=t5,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_length(((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_a_i_minus(&a,2,t7,C_fix(1));
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11934,a[2]=((C_word*)t0)[2],a[3]=t10,a[4]=((C_word*)t0)[5],a[5]=((C_word)li150),tmp=(C_word)a,a+=6,tmp));
t12=((C_word*)t10)[1];
f_11934(t12,t6,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}}

/* do1132 in k11980 in k11996 in do1126 in k11767 in k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_11934(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11934,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t7=((C_word*)t5)[1];
t8=(C_truep(t7)?t7:(C_word)C_i_lessp(t2,C_fix(0)));
if(C_truep(t8)){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,((C_word*)t5)[1]);}
else{
t9=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[4])[1],t2);
t10=(C_word)C_i_car(t9);
t11=C_set_block_item(t6,0,t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11948,a[2]=t6,a[3]=t5,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_lessp(((C_word*)t6)[1],((C_word*)((C_word*)t0)[2])[1]))){
t13=C_set_block_item(t5,0,t2);
t14=t12;
f_11948(t14,t13);}
else{
t13=t12;
f_11948(t13,C_SCHEME_UNDEFINED);}}}

/* k11946 in do1132 in k11980 in k11996 in do1126 in k11767 in k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_11948(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11948,NULL,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[6],C_fix(1));
t3=((C_word*)((C_word*)t0)[5])[1];
f_11934(t3,((C_word*)t0)[4],t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k11899 in k11980 in k11996 in do1126 in k11767 in k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11901,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(C_word)C_i_list_tail(((C_word*)((C_word*)t0)[4])[1],t1);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=(C_word)C_i_cdr(t3);
t7=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t6);
t8=((C_word*)t0)[2];
f_11876(t8,(C_word)C_i_set_cdr(t3,((C_word*)((C_word*)t0)[3])[1]));}
else{
t3=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
f_11876(t5,t4);}}

/* k11874 in k11980 in k11996 in do1126 in k11767 in k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_11876(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_11845(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k11770 in k11767 in k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11772,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11780,a[2]=t5,a[3]=t2,a[4]=t3,a[5]=((C_word)li149),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_11780(t7,((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1],C_fix(0),t3);}

/* do1154 in k11770 in k11767 in k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_11780(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11780,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 376  make-spektrum");
f_10551(t1,C_SCHEME_FALSE,t3,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_car(t6);
t8=(C_word)C_i_cdr(t6);
t9=(C_word)C_i_cadr(t6);
t10=(C_word)C_a_i_abs(&a,1,t9);
t11=(C_word)C_i_set_car(t8,t10);
t12=(C_word)C_i_cdr(t6);
t13=(C_word)C_i_set_cdr(((C_word*)t5)[1],t12);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
t15=C_set_block_item(t5,0,t14);
t16=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11813,a[2]=t5,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=t3,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t17=*((C_word*)lf[214]+1);
t18=t17;
((C_proc4)C_retrieve_proc(t18))(4,t18,t16,t2,t7);}}

/* k11811 in do1154 in k11770 in k11767 in k12065 in fm-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11813,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[5],C_fix(1));
t4=((C_word*)((C_word*)t0)[4])[1];
f_11780(t4,((C_word*)t0)[3],t2,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11049(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+73)){
C_save_and_reclaim((void*)tr3r,(void*)f_11049r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11049r(t0,t1,t2,t3);}}

static void C_ccall f_11049r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word *a=C_alloc(73);
t4=C_fix(1);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=t3;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_11053,a[2]=t19,a[3]=t17,a[4]=t15,a[5]=t23,a[6]=t13,a[7]=t3,a[8]=t21,a[9]=t11,a[10]=t9,a[11]=t7,a[12]=t5,a[13]=t2,a[14]=t1,tmp=(C_word)a,a+=15,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t21)[1]))){
t25=t24;
f_11053(t25,C_SCHEME_UNDEFINED);}
else{
t25=(C_word)C_i_car(((C_word*)t21)[1]);
t26=(C_word)C_eqp(t25,lf[209]);
if(C_truep(t26)){
t27=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11599,a[2]=t3,a[3]=t24,a[4]=t21,a[5]=t23,a[6]=t13,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t13)[1])){
C_trace("error");
t28=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t28))(4,t28,t27,lf[19],lf[209]);}
else{
t28=t27;
f_11599(2,t28,C_SCHEME_UNDEFINED);}}
else{
t27=(C_word)C_eqp(t25,lf[210]);
if(C_truep(t27)){
t28=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11634,a[2]=t3,a[3]=t24,a[4]=t21,a[5]=t23,a[6]=t15,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t29=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t29))(4,t29,t28,lf[19],lf[210]);}
else{
t29=t28;
f_11634(2,t29,C_SCHEME_UNDEFINED);}}
else{
t28=(C_word)C_eqp(t25,lf[211]);
if(C_truep(t28)){
t29=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11669,a[2]=t3,a[3]=t24,a[4]=t21,a[5]=t23,a[6]=t17,a[7]=t9,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t17)[1])){
C_trace("error");
t30=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t30))(4,t30,t29,lf[19],lf[211]);}
else{
t30=t29;
f_11669(2,t30,C_SCHEME_UNDEFINED);}}
else{
t29=(C_word)C_eqp(t25,lf[212]);
if(C_truep(t29)){
t30=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11704,a[2]=t3,a[3]=t24,a[4]=t21,a[5]=t23,a[6]=t19,a[7]=t11,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t19)[1])){
C_trace("error");
t31=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[19],lf[212]);}
else{
t31=t30;
f_11704(2,t31,C_SCHEME_UNDEFINED);}}
else{
t30=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11733,a[2]=t24,a[3]=t13,a[4]=t5,a[5]=t21,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t23)[1])){
C_trace("error");
t31=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t31))(4,t31,t30,lf[10],t3);}
else{
t31=t30;
f_11733(2,t31,C_SCHEME_UNDEFINED);}}}}}}}

/* k11731 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11733,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11740,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11748,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11746 in k11731 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11740(2,t2,C_SCHEME_UNDEFINED);}}

/* k11738 in k11731 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11740(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11053(t5,t4);}

/* k11702 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11704(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11704,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11708,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11708(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11706 in k11702 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11053(t7,t6);}

/* k11667 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11669(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11669,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11673,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11673(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11671 in k11667 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11053(t7,t6);}

/* k11632 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11638,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11638(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11636 in k11632 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11053(t7,t6);}

/* k11597 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11599(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11599,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11603,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11603(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11601 in k11597 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11603(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11053(t7,t6);}

/* k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_11053(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[53],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11053,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_11056,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],tmp=(C_word)a,a+=15,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_11056(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[209]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11429,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[209]);}
else{
t6=t5;
f_11429(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[210]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11464,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[210]);}
else{
t7=t6;
f_11464(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[211]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11499,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[211]);}
else{
t8=t7;
f_11499(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[212]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11534,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[212]);}
else{
t9=t8;
f_11534(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11563,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_11563(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k11561 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11563,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11570,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11578,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11576 in k11561 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11578(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11570(2,t2,C_SCHEME_UNDEFINED);}}

/* k11568 in k11561 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11570(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11056(t5,t4);}

/* k11532 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11534(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11534,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11538,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11538(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11536 in k11532 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11538(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11056(t7,t6);}

/* k11497 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11499,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11503,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11503(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11501 in k11497 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11056(t7,t6);}

/* k11462 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11464(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11464,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11468,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11468(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11466 in k11462 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11468(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11056(t7,t6);}

/* k11427 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11429,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11433,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11433(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11431 in k11427 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11056(t7,t6);}

/* k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_11056(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[53],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11056,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_11059,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],tmp=(C_word)a,a+=15,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_11059(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[209]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11259,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[209]);}
else{
t6=t5;
f_11259(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[210]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11294,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[210]);}
else{
t7=t6;
f_11294(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[211]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11329,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[211]);}
else{
t8=t7;
f_11329(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[212]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11364,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[212]);}
else{
t9=t8;
f_11364(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11393,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_11393(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k11391 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11393,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11400,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11408,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11406 in k11391 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11400(2,t2,C_SCHEME_UNDEFINED);}}

/* k11398 in k11391 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11059(t5,t4);}

/* k11362 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11368,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11368(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11366 in k11362 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11059(t7,t6);}

/* k11327 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11329,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11333,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11333(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11331 in k11327 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11059(t7,t6);}

/* k11292 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11294(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11294,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11298,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11298(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11296 in k11292 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11059(t7,t6);}

/* k11257 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11259,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11263,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11263(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11261 in k11257 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11059(t7,t6);}

/* k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_11059(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[48],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11059,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11062,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[14],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
t3=t2;
f_11062(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t4=(C_word)C_eqp(t3,lf[209]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11089,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[209]);}
else{
t6=t5;
f_11089(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[210]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11124,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[210]);}
else{
t7=t6;
f_11124(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t3,lf[211]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11159,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t8=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t7,lf[19],lf[211]);}
else{
t8=t7;
f_11159(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t3,lf[212]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11194,a[2]=((C_word*)t0)[7],a[3]=t2,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[19],lf[212]);}
else{
t9=t8;
f_11194(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11223,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
C_trace("error");
t9=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t8,lf[10],((C_word*)t0)[7]);}
else{
t9=t8;
f_11223(2,t9,C_SCHEME_UNDEFINED);}}}}}}}

/* k11221 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11223,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11230,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11238,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k11236 in k11221 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11238(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_11230(2,t2,C_SCHEME_UNDEFINED);}}

/* k11228 in k11221 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_11062(t5,t4);}

/* k11192 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11194(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11194,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11198,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11198(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11196 in k11192 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11198(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11062(t7,t6);}

/* k11157 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11159(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11159,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11163,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11163(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11161 in k11157 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11062(t7,t6);}

/* k11122 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11124,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11128,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11128(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11126 in k11122 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11128(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11062(t7,t6);}

/* k11087 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11089,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11093,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_11093(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k11091 in k11087 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_11062(t7,t6);}

/* k11060 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_11062(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11062,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11065,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_11065(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k11063 in k11060 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11065,2,t0,t1);}
t2=((C_word*)t0)[7];
t3=((C_word*)t0)[6];
t4=((C_word*)((C_word*)t0)[5])[1];
t5=((C_word*)((C_word*)t0)[4])[1];
t6=((C_word*)((C_word*)t0)[3])[1];
t7=((C_word*)((C_word*)t0)[2])[1];
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10815,a[2]=t3,a[3]=t8,a[4]=t5,a[5]=t2,a[6]=t6,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_eqp(((C_word*)t8)[1],C_SCHEME_TRUE);
if(C_truep(t10)){
t11=C_set_block_item(t8,0,C_fix(1));
t12=t9;
f_10815(t12,t11);}
else{
t11=t9;
f_10815(t11,C_SCHEME_UNDEFINED);}}

/* k10813 in k11063 in k11060 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_10815(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10815,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_UNDEFINED;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_UNDEFINED;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_UNDEFINED;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t21=C_set_block_item(t3,0,t20);
t22=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_10824,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t19,a[7]=t17,a[8]=((C_word*)t0)[6],a[9]=t15,a[10]=t13,a[11]=t11,a[12]=t3,a[13]=t20,a[14]=((C_word*)t0)[7],a[15]=t9,a[16]=t7,a[17]=t5,tmp=(C_word)a,a+=18,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t23=C_retrieve(lf[195]);
((C_proc3)C_retrieve_proc(t23))(3,t23,t22,((C_word*)t0)[2]);}

/* k10822 in k10813 in k11063 in k11060 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10824(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10824,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|16,a[1]=(C_word)f_10828,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],a[14]=((C_word*)t0)[14],a[15]=((C_word*)t0)[15],a[16]=((C_word*)t0)[16],tmp=(C_word)a,a+=17,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t4=C_retrieve(lf[196]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k10826 in k10822 in k10813 in k11063 in k11060 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10828(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[55],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10828,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[16])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[15])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10830,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[13],a[4]=((C_word*)t0)[14],a[5]=((C_word)li138),tmp=(C_word)a,a+=6,tmp));
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10863,a[2]=((C_word*)t0)[13],a[3]=((C_word)li139),tmp=(C_word)a,a+=4,tmp));
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10873,a[2]=((C_word*)t0)[15],a[3]=((C_word)li140),tmp=(C_word)a,a+=4,tmp));
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10883,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[15],a[4]=((C_word)li141),tmp=(C_word)a,a+=5,tmp));
t7=C_mutate(((C_word *)((C_word*)t0)[7])+1,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10897,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[15],a[4]=((C_word)li142),tmp=(C_word)a,a+=5,tmp));
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10912,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[15],a[5]=((C_word)li143),tmp=(C_word)a,a+=6,tmp));
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10932,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[14],a[4]=((C_word*)t0)[13],tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_not(((C_word*)t0)[4]);
t11=(C_truep(t10)?t10:(C_word)C_i_not(((C_word*)((C_word*)t0)[16])[1]));
if(C_truep(t11)){
if(C_truep(((C_word*)t0)[8])){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t12=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t12+1)))(4,t12,t9,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
C_trace("for-each");
t12=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t12+1)))(4,t12,t9,((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[2])[1]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("for-each");
t12=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t12+1)))(4,t12,t9,((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
C_trace("for-each");
t12=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t12+1)))(4,t12,t9,((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[2])[1]);}}}
else{
if(C_truep(((C_word*)t0)[8])){
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10982,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],a[4]=((C_word)li144),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  for-each");
t13=*((C_word*)lf[208]+1);
((C_proc5)C_retrieve_proc(t13))(5,t13,t9,t12,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}
else{
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10997,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[4],a[4]=((C_word)li145),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  for-each");
t13=*((C_word*)lf[208]+1);
((C_proc5)C_retrieve_proc(t13))(5,t13,t9,t12,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11015,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[4],a[4]=((C_word)li146),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  for-each");
t13=*((C_word*)lf[208]+1);
((C_proc5)C_retrieve_proc(t13))(5,t13,t9,t12,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}
else{
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11030,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[4],a[4]=((C_word)li147),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  for-each");
t13=*((C_word*)lf[208]+1);
((C_proc5)C_retrieve_proc(t13))(5,t13,t9,t12,((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[16])[1]);}}}}

/* a11029 in k10826 in k10822 in k10813 in k11063 in k11060 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11030(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11030,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 376  addkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a11014 in k10826 in k10822 in k10813 in k11063 in k11060 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_11015(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11015,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 376  adduniquekey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a10996 in k10826 in k10822 in k10813 in k11063 in k11060 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10997(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10997,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 376  addquantkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* a10981 in k10826 in k10822 in k10813 in k11063 in k11060 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10982(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10982,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_greater_or_equalp(t3,((C_word*)t0)[3]))){
C_trace("ChickenBridge.scm: 376  adduniquequantkey");
t4=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t2);}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_UNDEFINED);}}

/* k10930 in k10826 in k10822 in k10813 in k11063 in k11060 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=(C_word)C_eqp(((C_word*)t0)[3],C_fix(0));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 376  shuffle!");
t4=C_retrieve(lf[139]);
((C_proc3)C_retrieve_proc(t4))(3,t4,((C_word*)t0)[2],t2);}
else{
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}}

/* f_10912 in k10826 in k10822 in k10813 in k11063 in k11060 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10912(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10912,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10916,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10929,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k10927 */
static void C_ccall f_10929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  quantize");
t2=C_retrieve(lf[101]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k10914 */
static void C_ccall f_10916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10916,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10922,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  in?");
t3=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,t1);}

/* k10920 in k10914 */
static void C_ccall f_10922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[2]);}}

/* f_10897 in k10826 in k10822 in k10813 in k11063 in k11060 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10897(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10897,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10901,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  key");
t4=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k10899 */
static void C_ccall f_10901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10901,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10907,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  in?");
t3=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,t1);}

/* k10905 in k10899 */
static void C_ccall f_10907(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 376  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[2]);}}

/* f_10883 in k10826 in k10822 in k10813 in k11063 in k11060 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10883(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10883,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10891,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10895,a[2]=((C_word*)t0)[2],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t5=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k10893 */
static void C_ccall f_10895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  quantize");
t2=C_retrieve(lf[101]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k10889 */
static void C_ccall f_10891(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* f_10873 in k10826 in k10822 in k10813 in k11063 in k11060 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10873(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10873,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10881,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  key");
t4=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k10879 */
static void C_ccall f_10881(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  add");
t2=((C_word*)((C_word*)t0)[3])[1];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* f_10863 in k10826 in k10822 in k10813 in k11063 in k11060 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10863(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10863,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(((C_word*)t0)[2]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_member(t2,t3));}

/* f_10830 in k10826 in k10822 in k10813 in k11063 in k11060 in k11057 in k11054 in k11051 in spectrum-keys in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10830(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10830,3,t0,t1,t2);}
t3=(C_word)C_eqp(((C_word*)t0)[4],C_fix(-1));
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_cdr(((C_word*)t0)[3]);
t6=(C_word)C_i_set_cdr(t4,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_set_cdr(((C_word*)t0)[3],t4));}
else{
t4=(C_word)C_a_i_list(&a,1,t2);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t4);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}}

/* spectrum-maxamp in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10786(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10786,3,t0,t1,t2);}
t3=lf[206];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10790,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t6=C_retrieve(lf[196]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k10788 in spectrum-maxamp in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10790,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10799,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10801,a[2]=((C_word*)t0)[2],a[3]=((C_word)li136),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)((C_word*)t0)[2])[1]);}}

/* a10800 in k10788 in spectrum-maxamp in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10801(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10801,3,t0,t1,t2);}
if(C_truep((C_word)C_i_greaterp(t2,((C_word*)((C_word*)t0)[2])[1]))){
t3=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_UNDEFINED);}}

/* k10797 in k10788 in spectrum-maxamp in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-minamp in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10755(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10755,3,t0,t1,t2);}
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10759,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-amps");
t6=C_retrieve(lf[196]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}

/* k10757 in spectrum-minamp in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10759(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10759,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10768,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10770,a[2]=((C_word*)t0)[2],a[3]=((C_word)li134),tmp=(C_word)a,a+=4,tmp);
C_trace("for-each");
t5=*((C_word*)lf[203]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,t1);}
else{
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[204]);}}

/* a10769 in k10757 in spectrum-minamp in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10770(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10770,3,t0,t1,t2);}
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_lessp(t2,((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_UNDEFINED);}}

/* k10766 in k10757 in spectrum-minamp in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* spectrum-maxfreq in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10737(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10737,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10745,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t4=C_retrieve(lf[195]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k10743 in spectrum-maxfreq in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10745(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10745,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10753,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-size");
t3=C_retrieve(lf[194]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k10751 in k10743 in spectrum-maxfreq in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10753,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_list_ref(((C_word*)t0)[2],t2));}

/* spectrum-minfreq in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10727(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10727,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10735,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 376  spectrum-freqs");
t4=C_retrieve(lf[195]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k10733 in spectrum-minfreq in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10735(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* spectrum-pairs in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10668(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10668,3,t0,t1,t2);}
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10675,a[2]=t2,a[3]=t1,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 376  spektrum-freqs");
t7=C_retrieve2(lf[190],"spektrum-freqs");
f_10608(3,t7,t6,t2);}

/* k10673 in spectrum-pairs in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10675,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10678,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  spektrum-amps");
t3=C_retrieve2(lf[191],"spektrum-amps");
f_10626(3,t3,t2,((C_word*)t0)[2]);}

/* k10676 in k10673 in spectrum-pairs in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10678,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10681,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 376  spektrum-size");
t3=C_retrieve2(lf[189],"spektrum-size");
f_10590(3,t3,t2,((C_word*)t0)[2]);}

/* k10679 in k10676 in k10673 in spectrum-pairs in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10681(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10681,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10686,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word)li130),tmp=(C_word)a,a+=9,tmp));
t5=((C_word*)t3)[1];
f_10686(t5,((C_word*)t0)[2],C_fix(0));}

/* do930 in k10679 in k10676 in k10673 in spectrum-pairs in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_10686(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
loop:
a=C_alloc(10);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10686,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[7]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[6]));}
else{
t3=(C_word)C_i_list_ref(((C_word*)t0)[5],t2);
t4=(C_truep(((C_word*)t0)[4])?(C_word)C_i_list_ref(((C_word*)t0)[4],t2):lf[199]);
t5=(C_word)C_a_i_list(&a,2,t3,t4);
t6=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[3])[1],t5);
t7=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t11=t1;
t12=t9;
t1=t11;
t2=t12;
goto loop;}}

/* make-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10638(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr3rv,(void*)f_10638r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_10638r(t0,t1,t2,t3);}}

static void C_ccall f_10638r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(4);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10642,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_vemptyp(t3))){
t5=t4;
f_10642(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_vector_ref(t3,C_fix(0));
C_trace("ChickenBridge.scm: 376  list->vector");
t6=*((C_word*)lf[193]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}}

/* k10640 in make-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10642(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10642,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10652,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 376  list->vector");
t4=*((C_word*)lf[193]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k10650 in k10640 in make-spectrum in k10634 in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 376  make-spektrum");
f_10551(((C_word*)t0)[4],C_SCHEME_FALSE,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* spektrum-amps in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10626(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10626,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[187]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(4)));}

/* spektrum-freqs in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10608(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10608,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[187]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* spektrum-size in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10590(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10590,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[187]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* spektrum-time in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10572(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10572,3,t0,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[187]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-spektrum in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_10551(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10551,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_record(&a,5,lf[187],t2,t3,t4,t5));}

/* transpose in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10243(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10243,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_numberp(t3))){
t4=(C_word)C_i_lessp(t2,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t3,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(C_word)C_a_i_plus(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 375  modulo");
t7=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t1,t6,C_fix(12));}
else{
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_plus(&a,2,t2,t3));}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10289,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t3);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10296,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10344,a[2]=t4,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_numberp(t3))){
t6=t5;
f_10344(2,t6,t3);}
else{
C_trace("ChickenBridge.scm: 375  key");
t6=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t3);}}
else{
C_trace("ChickenBridge.scm: 375  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,lf[183],t2);}}}

/* k10342 in transpose in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10344(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10344,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_numberp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_lessp(t3,C_fix(12));
t5=(C_truep(t4)?(C_word)C_i_lessp(t1,C_fix(12)):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10361,a[2]=t1,a[3]=((C_word)li122),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],t6,((C_word*)t0)[4]);}
else{
C_trace("ChickenBridge.scm: 375  transpkeys");
f_10296(((C_word*)t0)[3],((C_word*)t0)[4],t1);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10389,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10393,a[2]=t1,a[3]=t3,a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[4]);}}

/* k10391 in k10342 in transpose in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  transpkeys");
f_10296(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k10387 in k10342 in transpose in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10389(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  note");
t2=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a10360 in k10342 in transpose in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10361(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10361,3,t0,t1,t2);}
t3=(C_word)C_a_i_plus(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 375  modulo");
t4=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* transpkeys in transpose in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_10296(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10296,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10305,a[2]=t6,a[3]=t3,a[4]=t4,a[5]=((C_word)li120),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_10305(t8,t1,t2,t4);}

/* do790 in transpkeys in transpose in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_10305(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
loop:
a=C_alloc(7);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10305,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cdr(((C_word*)t0)[4]));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
t7=(C_word)C_i_set_cdr(t3,t6);
t8=(C_word)C_i_cdr(t3);
t9=t3=t8;
t10=(C_word)C_i_cdr(t2);
t12=t1;
t13=t10;
t14=t3;
t1=t12;
t2=t13;
t3=t14;
goto loop;}}

/* k10287 in transpose in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10289,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 375  note");
t3=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* invert in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10108(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10108,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_lessp(t2,C_fix(12)))){
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 375  modulo");
t4=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}
else{
C_trace("ChickenBridge.scm: 375  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[180],t2);}}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10138,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t4))){
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_lessp(t5,C_fix(12)))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10208,a[2]=((C_word)li118),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t1,t6,t2);}
else{
C_trace("ChickenBridge.scm: 375  invkeys");
f_10138(t1,t2);}}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10230,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10234,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  key");
t7=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}}
else{
C_trace("ChickenBridge.scm: 375  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[181],t2);}}}

/* k10232 in invert in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10234(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  invkeys");
f_10138(((C_word*)t0)[2],t1);}

/* k10228 in invert in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  note");
t2=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a10207 in invert in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10208(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10208,3,t0,t1,t2);}
t3=(C_word)C_a_i_minus(&a,2,C_fix(12),t2);
C_trace("ChickenBridge.scm: 375  modulo");
t4=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t3,C_fix(12));}

/* invkeys in invert in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_10138(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10138,NULL,2,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_cdr(t2);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10154,a[2]=t7,a[3]=t3,a[4]=t4,a[5]=((C_word)li116),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_10154(t9,t1,t5,t4);}

/* do775 in invkeys in invert in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_10154(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_10154,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t0)[4]);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_a_i_minus(&a,2,t4,((C_word*)t0)[3]);
t6=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t5);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=(C_word)C_i_set_cdr(t3,t7);
t9=(C_word)C_i_cdr(t3);
t10=t3=t9;
t11=(C_word)C_i_cdr(t2);
t13=t1;
t14=t11;
t15=t3;
t1=t13;
t2=t14;
t3=t15;
goto loop;}}

/* pc in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10063(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10063,3,t0,t1,t2);}
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 375  modulo");
t3=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,t2,C_fix(12));}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_numberp(t3))){
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,C_retrieve(lf[178]),t2);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10095,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  key");
t5=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10106,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  key");
t4=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}}}

/* k10104 in pc in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  modulo");
t2=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_fix(12));}

/* k10093 in pc in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10095(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[2],C_retrieve(lf[178]),t1);}

/* hz in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9947(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9947,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9962,a[2]=t5,a[3]=t3,a[4]=((C_word)li113),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_9962(t7,t1,t2,lf[177],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
C_trace("ChickenBridge.scm: 375  tb:keynum->hertz");
f_7376(t1,t2);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10061,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9675(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k10059 in hz in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_caddr(t1));}

/* do755 in hz in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9962(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9962,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9975,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_numberp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9992,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_9992(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_9992(t14,(C_word)C_i_listp(t13));}}}

/* k9990 in do755 in hz in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9992(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9992,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9996,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 375  hz");
t4=C_retrieve(lf[176]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10011,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9675(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k10009 in k9990 in do755 in hz in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_10011(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10011,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_9975(t9,t8);}

/* k9994 in k9990 in do755 in hz in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9996,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_9975(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k9973 in do755 in hz in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9975(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_9962(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* key in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9825(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9825,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9840,a[2]=t5,a[3]=t3,a[4]=((C_word)li111),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_9840(t7,t1,t2,lf[175],C_SCHEME_FALSE,t3);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_greaterp(t2,C_fix(0)))){
t3=t1;
t4=t2;
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=t3;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub278(t5,t6));}
else{
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(-1));}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9945,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9675(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}}

/* k9943 in key in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_cadr(t1));}

/* do739 in key in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9840(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9840,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9853,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_listp(t10);
t12=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9870,a[2]=t6,a[3]=t2,a[4]=t8,a[5]=t9,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t11)){
t13=t12;
f_9870(t13,t11);}
else{
t13=(C_word)C_i_car(t2);
t14=t12;
f_9870(t14,(C_word)C_i_numberp(t13));}}}

/* k9868 in do739 in key in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9870(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9870,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9874,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 375  key");
t4=C_retrieve(lf[174]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9889,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9675(t2,t3,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_TRUE);}}

/* k9887 in k9868 in do739 in key in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9889(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9889,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t6);
t8=C_mutate(((C_word *)((C_word*)t0)[3])+1,t7);
t9=((C_word*)t0)[2];
f_9853(t9,t8);}

/* k9872 in k9868 in do739 in key in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9874,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_9853(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k9851 in do739 in key in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9853(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_9840(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9728(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_9728,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
t3=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9743,a[2]=t5,a[3]=t3,a[4]=((C_word)li109),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_9743(t7,t1,t2,lf[173],C_SCHEME_FALSE,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9823,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9675(t3,t2,C_SCHEME_FALSE,C_SCHEME_TRUE);}}

/* k9821 in note in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(t1));}

/* do725 in note in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9743(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9743,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)C_i_cdr(((C_word*)t0)[3]));}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9756,a[2]=t7,a[3]=t6,a[4]=t1,a[5]=((C_word*)t0)[2],a[6]=t2,a[7]=t8,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t10))){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9774,a[2]=t8,a[3]=t9,a[4]=t7,tmp=(C_word)a,a+=5,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  note");
t13=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t11,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9789,a[2]=t8,a[3]=t9,a[4]=t6,a[5]=t7,tmp=(C_word)a,a+=6,tmp);
t12=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  note-aux");
f_9675(t11,t12,((C_word*)t6)[1],C_SCHEME_TRUE);}}}

/* k9787 in do725 in note in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9789,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cddddr(((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_i_car(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,1,t6);
t8=((C_word*)t0)[3];
f_9756(t8,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t7));}

/* k9772 in do725 in note in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9774,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
t4=((C_word*)t0)[3];
f_9756(t4,(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3));}

/* k9754 in do725 in note in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9756(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=((C_word*)((C_word*)t0)[5])[1];
f_9743(t5,((C_word*)t0)[4],t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[7])[1]);}

/* note-aux in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9675(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9675,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_numberp(t2))){
t5=t1;
t6=t2;
t7=t4;
if(C_truep((C_word)C_i_exactp(t6))){
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9625,a[2]=t6,a[3]=t7,a[4]=((C_word)li106),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-ref");
t9=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t9))(5,t9,t5,C_retrieve2(lf[159],"*notes*"),t6,t8);}
else{
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9673,a[2]=t5,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  floor");
t9=*((C_word*)lf[170]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,t6);}}
else{
if(C_truep((C_word)C_i_symbolp(t2))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9698,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 375  string->note-entry");
f_9573(t1,t2,t3,t4);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9713,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,t2);}}}}

/* k9711 in note-aux in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9713(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9713,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9720,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  keyword->string");
t3=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[171],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}}

/* k9718 in k9711 in note-aux in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9720(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  string->note-entry");
f_9573(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k9696 in note-aux in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9698(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  string->note-entry");
f_9573(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k9671 in note-aux in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9673,2,t0,t1);}
t2=(C_word)C_i_inexact_to_exact(t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9645,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t3,lf[167]))){
t5=t4;
f_9645(t5,t2);}
else{
t5=(C_word)C_i_lessp(t3,lf[168]);
t6=t4;
f_9645(t6,(C_truep(t5)?(C_word)C_a_i_plus(&a,2,t2,lf[169]):(C_word)C_a_i_plus(&a,2,t2,C_fix(1))));}}

/* k9643 in k9671 in note-aux in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9645(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9645,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9647,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li107),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[159],"*notes*"),t1,t2);}

/* a9646 in k9643 in k9671 in note-aux in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9647(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9647,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[166],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* a9624 in note-aux in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9625(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9625,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[165],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* string->note-entry in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9573(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9573,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9577,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9610,a[2]=((C_word)li104),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-ref");
t7=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t7))(5,t7,t5,C_retrieve2(lf[159],"*notes*"),t2,t6);}

/* a9609 in string->note-entry in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9610(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9610,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k9575 in string->note-entry in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9577,2,t0,t1);}
t2=t1;
if(C_truep(t2)){
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t1);}
else{
if(C_truep(((C_word*)t0)[4])){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9593,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  string-append");
t4=*((C_word*)lf[162]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[5],lf[163],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}}}}

/* k9591 in k9575 in string->note-entry in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9595,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li103),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  hash-table-ref");
t3=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[2],C_retrieve2(lf[159],"*notes*"),t1,t2);}

/* a9594 in k9591 in k9575 in string->note-entry in k9569 in k9566 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9595(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9595,2,t0,t1);}
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 375  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,t1,lf[161],((C_word*)t0)[2]);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* segs in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9359(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr4r,(void*)f_9359r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_9359r(t0,t1,t2,t3,t4);}}

static void C_ccall f_9359r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(11);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(1)))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_END_OF_LIST);}
else{
t6=C_fix(1);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9372,a[2]=t1,a[3]=t3,a[4]=t2,a[5]=t5,a[6]=t7,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t5)[1]))){
t9=(C_word)C_i_car(((C_word*)t5)[1]);
t10=C_set_block_item(t7,0,t9);
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
t12=C_set_block_item(t5,0,t11);
t13=t8;
f_9372(t13,t12);}
else{
t9=t8;
f_9372(t9,C_SCHEME_UNDEFINED);}}}

/* k9370 in segs in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9372(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[23],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9372,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(2)));
if(C_truep(t3)){
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(1));
t5=(C_truep(t4)?C_retrieve2(lf[73],"tb:explseg"):C_retrieve2(lf[74],"tb:geoseg"));
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]);
t7=(C_truep(t6)?C_fix(2):(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]));
t8=(C_word)C_a_i_list(&a,1,C_SCHEME_FALSE);
t9=t8;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9393,a[2]=((C_word*)t0)[2],a[3]=t7,a[4]=((C_word*)t0)[3],a[5]=t5,a[6]=t10,a[7]=t8,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_lessp(t7,C_fix(0)))){
C_trace("ChickenBridge.scm: 375  error");
t12=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t12))(4,t12,t11,lf[157],t7);}
else{
t12=t11;
f_9393(2,t12,C_SCHEME_UNDEFINED);}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[6])[1],C_fix(3));
if(C_truep(t4)){
t5=C_retrieve(lf[122]);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9454,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[5])[1]))){
t8=t7;
f_9454(t8,C_SCHEME_UNDEFINED);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[5])+1,t10);
t12=t7;
f_9454(t12,t11);}}
else{
C_trace("ChickenBridge.scm: 375  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],lf[158],((C_word*)((C_word*)t0)[6])[1]);}}}

/* k9452 in k9370 in segs in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9454(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9454,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9457,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_apply(4,0,t2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}

/* k9455 in k9452 in k9370 in segs in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9457,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t3)[1]);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9465,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t8,a[7]=t3,a[8]=t6,a[9]=((C_word*)t0)[6],a[10]=((C_word)li101),tmp=(C_word)a,a+=11,tmp));
t10=((C_word*)t8)[1];
f_9465(t10,((C_word*)t0)[2],C_fix(1),C_SCHEME_FALSE);}

/* do655 in k9455 in k9452 in k9370 in segs in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9465(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9465,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[9]))){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9506,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_apply(4,0,t5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}
else{
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9477,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=t6,a[5]=((C_word*)t0)[3],a[6]=((C_word)li100),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_9477(t8,t1,((C_word*)t0)[3]);}}

/* do659 in do655 in k9455 in k9452 in k9370 in segs in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9477(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9477,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9498,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  tb:rescale");
f_7226(t3,t4,C_fix(0),((C_word*)((C_word*)t0)[3])[1],C_fix(0),((C_word*)t0)[2],C_fix(1));}}

/* k9496 in do659 in do655 in k9455 in k9452 in k9370 in segs in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_9477(t4,((C_word*)t0)[2],t3);}

/* k9504 in do655 in k9455 in k9452 in k9370 in segs in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9506,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[7])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t10=((C_word*)((C_word*)t0)[3])[1];
f_9465(t10,((C_word*)t0)[2],t9,((C_word*)((C_word*)t0)[7])[1]);}

/* k9391 in k9370 in segs in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9393,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9398,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word)li99),tmp=(C_word)a,a+=10,tmp));
t5=((C_word*)t3)[1];
f_9398(t5,((C_word*)t0)[2],C_fix(0));}

/* do643 in k9391 in k9370 in segs in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9398(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9398,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[8]))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[7]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9430,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  func");
t4=((C_word*)t0)[4];
((C_proc6)C_retrieve_proc(t4))(6,t4,t3,t2,((C_word*)t0)[8],((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k9428 in do643 in k9391 in k9370 in segs in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9430,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t7=((C_word*)((C_word*)t0)[3])[1];
f_9398(t7,((C_word*)t0)[2],t6);}

/* rangamma in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9338(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9338r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9338r(t0,t1,t2);}}

static void C_ccall f_9338r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 375  tb:rangamma");
f_7474(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 375  tb:rangamma");
f_7474(t1,t3);}}

/* ranpoisson in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9319(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9319r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9319r(t0,t1,t2);}}

static void C_ccall f_9319r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[152])))){
C_trace("ChickenBridge.scm: 375  tb:ranpoisson");
f_7484(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 375  tb:ranpoisson");
f_7484(t1,t3);}}

/* rangauss in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9278(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_9278r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9278r(t0,t1,t2);}}

static void C_ccall f_9278r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 375  tb:rangauss");
f_7445(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  tb:rangauss");
f_7445(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 375  tb:rangauss");
f_7445(t1,t4,t5);}}}

/* ranexp in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9259(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_9259r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_9259r(t0,t1,t2);}}

static void C_ccall f_9259r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 375  tb:ranexp");
f_7456(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 375  tb:ranexp");
f_7456(t1,t3);}}

/* ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9031(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+44)){
C_save_and_reclaim((void*)tr2r,(void*)f_9031r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_9031r(t0,t1,t2);}}

static void C_ccall f_9031r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word *a=C_alloc(44);
t3=lf[145];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=t2;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9035,a[2]=t10,a[3]=t14,a[4]=t8,a[5]=t2,a[6]=t12,a[7]=t6,a[8]=t4,a[9]=t1,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t12)[1]))){
t16=t15;
f_9035(t16,C_SCHEME_UNDEFINED);}
else{
t16=(C_word)C_i_car(((C_word*)t12)[1]);
t17=(C_word)C_eqp(t16,lf[146]);
if(C_truep(t17)){
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9172,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t8,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t8)[1])){
C_trace("error");
t19=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t19))(4,t19,t18,lf[19],lf[146]);}
else{
t19=t18;
f_9172(2,t19,C_SCHEME_UNDEFINED);}}
else{
t18=(C_word)C_eqp(t16,lf[147]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9207,a[2]=t2,a[3]=t15,a[4]=t12,a[5]=t14,a[6]=t10,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t10)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[147]);}
else{
t20=t19;
f_9207(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9236,a[2]=t15,a[3]=t8,a[4]=t4,a[5]=t12,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t14)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[10],t2);}
else{
t20=t19;
f_9236(2,t20,C_SCHEME_UNDEFINED);}}}}}

/* k9234 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9236,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9243,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9251,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9249 in k9234 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9243(2,t2,C_SCHEME_UNDEFINED);}}

/* k9241 in k9234 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9035(t5,t4);}

/* k9205 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9207,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9211,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9211(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9209 in k9205 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9035(t7,t6);}

/* k9170 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9172,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9176,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9176(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9174 in k9170 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9176(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9035(t7,t6);}

/* k9033 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9035(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9035,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9038,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_9038(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[146]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9072,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[146]);}
else{
t6=t5;
f_9072(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[147]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9107,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[147]);}
else{
t7=t6;
f_9107(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9136,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_9136(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k9134 in k9033 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9136,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9143,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9151,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k9149 in k9134 in k9033 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9151(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_9143(2,t2,C_SCHEME_UNDEFINED);}}

/* k9141 in k9134 in k9033 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9143(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_9038(t5,t4);}

/* k9105 in k9033 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9107,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9111,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9111(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9109 in k9105 in k9033 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9111(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9038(t7,t6);}

/* k9070 in k9033 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9072,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9076,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_9076(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k9074 in k9070 in k9033 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9038(t7,t6);}

/* k9036 in k9033 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9038(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9038,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9041,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_9041(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k9039 in k9036 in k9033 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9041,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9044,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
if(C_truep(t3)){
t4=t2;
f_9044(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[2])+1,((C_word*)((C_word*)t0)[3])[1]);
t5=t2;
f_9044(t5,t4);}}

/* k9042 in k9039 in k9036 in k9033 in ranbeta in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_9044(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9044,NULL,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=((C_word*)((C_word*)t0)[3])[1];
t4=((C_word*)((C_word*)t0)[2])[1];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=(C_word)C_i_foreign_flonum_argumentp(t4);
t8=t2;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub331(t5,t6,t7));}

/* shuffle in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8989(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_8989r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8989r(t0,t1,t2);}}

static void C_ccall f_8989r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(6);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9003,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 375  append");
t6=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t5,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9018,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 375  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,t2,C_SCHEME_END_OF_LIST);}}

/* k9016 in shuffle in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  shuffle!");
t2=C_retrieve(lf[139]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k9001 in shuffle in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_9003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 375  shuffle!");
t2=C_retrieve(lf[139]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* shuffle! in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8934(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8934,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8945,a[2]=t1,a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  tb:rani");
f_7400(t4,t3);}

/* k8943 in shuffle! in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8945(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8945,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8947,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word)li91),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_8947(t5,((C_word*)t0)[2],C_fix(0),t1,C_SCHEME_FALSE);}

/* do575 in k8943 in shuffle! in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8947(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8947,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(t2,((C_word*)t0)[4]))){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t0)[3]);}
else{
t6=(C_word)C_i_list_ref(((C_word*)t0)[3],t2);
t7=C_set_block_item(t5,0,t6);
t8=(C_word)C_i_list_tail(((C_word*)t0)[3],t2);
t9=(C_word)C_i_list_ref(((C_word*)t0)[3],t3);
t10=(C_word)C_i_set_car(t8,t9);
t11=(C_word)C_i_list_tail(((C_word*)t0)[3],t3);
t12=(C_word)C_i_set_car(t11,((C_word*)t5)[1]);
t13=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t14=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8975,a[2]=t5,a[3]=t13,a[4]=t1,a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  tb:rani");
f_7400(t14,((C_word*)t0)[4]);}}

/* k8973 in do575 in k8943 in shuffle! in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_8947(t2,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* vary in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8835(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr4r,(void*)f_8835r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8835r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8835r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8839,a[2]=t1,a[3]=t5,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
t7=C_set_block_item(t5,0,C_fix(0));
t8=t6;
f_8839(t8,t7);}
else{
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=t6;
f_8839(t9,t8);}}

/* k8837 in vary in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8839(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8839,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8842,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep((C_truep((C_word)C_i_equalp(t3,C_fix(0)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(-1)))?C_SCHEME_TRUE:(C_truep((C_word)C_i_equalp(t3,C_fix(1)))?C_SCHEME_TRUE:C_SCHEME_FALSE))))){
t4=t2;
f_8842(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 375  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[138],((C_word*)((C_word*)t0)[3])[1]);}}

/* k8840 in k8837 in vary in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8842(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8842,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8844,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8907,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word)li89),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 375  vary1");
f_8844(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8906 in k8840 in k8837 in vary in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8907(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8907,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  vary1");
f_8844(t1,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* vary1 in k8840 in k8837 in vary in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8844(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8844,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_less_or_equalp(t3,C_fix(0));
t6=(C_truep(t5)?t5:(C_word)C_i_nequalp(t2,C_fix(0)));
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t7=(C_word)C_a_i_times(&a,2,t2,t3);
t8=(C_word)C_a_i_abs(&a,1,t7);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8860,a[2]=t1,a[3]=t2,a[4]=t8,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  tb:ranf");
f_7407(t9,t8);}}

/* k8858 in vary1 in k8840 in k8837 in vary in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8860(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8860,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[5],C_fix(0));
if(C_truep(t2)){
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[4],lf[137]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_plus(&a,2,t4,t1));}
else{
t3=(C_word)C_eqp(((C_word*)t0)[5],C_fix(1));
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_plus(&a,2,((C_word*)t0)[3],t1):(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],t1)));}}

/* odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8607(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_8607r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8607r(t0,t1,t2,t3);}}

static void C_ccall f_8607r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=C_SCHEME_TRUE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8611,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t7,a[8]=t5,a[9]=t1,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_8611(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[134]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8748,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[134]);}
else{
t20=t19;
f_8748(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[135]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8783,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[135]);}
else{
t21=t20;
f_8783(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8812,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_8812(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k8810 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8812,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8819,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8827,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8825 in k8810 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8827(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8819(2,t2,C_SCHEME_UNDEFINED);}}

/* k8817 in k8810 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8819(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8611(t5,t4);}

/* k8781 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8783(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8783,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8787,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8787(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8785 in k8781 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8611(t7,t6);}

/* k8746 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8748,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8752,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8752(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8750 in k8746 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8752(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8611(t7,t6);}

/* k8609 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8611(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8611,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8614,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_8614(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[134]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8648,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[134]);}
else{
t6=t5;
f_8648(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[135]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8683,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[135]);}
else{
t7=t6;
f_8683(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8712,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_8712(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k8710 in k8609 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8712,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8719,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8727,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8725 in k8710 in k8609 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8727(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8719(2,t2,C_SCHEME_UNDEFINED);}}

/* k8717 in k8710 in k8609 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_8614(t5,t4);}

/* k8681 in k8609 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8683(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8683,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8687,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8687(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8685 in k8681 in k8609 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8614(t7,t6);}

/* k8646 in k8609 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8648,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8652,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_8652(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k8650 in k8646 in k8609 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8614(t7,t6);}

/* k8612 in k8609 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8614(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8614,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8617,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_8617(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k8615 in k8612 in k8609 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8617,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8627,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 375  tb:ranf");
f_7407(t2,lf[133]);}

/* k8625 in k8615 in k8612 in k8609 in odds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8627(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?((C_word*)((C_word*)t0)[3])[1]:((C_word*)((C_word*)t0)[2])[1]));}

/* pick in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8564(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr2r,(void*)f_8564r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8564r(t0,t1,t2);}}

static void C_ccall f_8564r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8582,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_length(t6);
C_trace("ChickenBridge.scm: 375  tb:rani");
f_7400(t5,t7);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8597,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 375  tb:rani");
f_7400(t4,t5);}}

/* k8595 in pick in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* k8580 in pick in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8582(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* between in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8543(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8543,4,t0,t1,t2,t3);}
t4=(C_word)C_fixnump(t2);
t5=(C_truep(t4)?(C_word)C_fixnump(t3):C_SCHEME_FALSE);
if(C_truep(t5)){
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_i_foreign_fixnum_argumentp(t7);
t10=(C_word)C_i_foreign_fixnum_argumentp(t8);
t11=t6;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub297(C_SCHEME_UNDEFINED,t9,t10));}
else{
t6=t1;
t7=t2;
t8=t3;
t9=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t10=(C_word)C_i_foreign_flonum_argumentp(t7);
t11=(C_word)C_i_foreign_flonum_argumentp(t8);
t12=t6;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub303(t9,t10,t11));}}

/* ran in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8508(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr2r,(void*)f_8508r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_8508r(t0,t1,t2);}}

static void C_ccall f_8508r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(6);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8512,a[2]=t1,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=C_set_block_item(t3,0,C_fix(1));
t6=t4;
f_8512(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)t3)[1]);
t6=C_set_block_item(t3,0,t5);
t7=t4;
f_8512(t7,t6);}}

/* k8510 in ran in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8512(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[3])[1],C_fix(1)))){
if(C_truep((C_word)C_fixnump(((C_word*)((C_word*)t0)[3])[1]))){
C_trace("ChickenBridge.scm: 375  tb:rani");
f_7400(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 375  tb:ranf");
f_7407(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}
else{
C_trace("ChickenBridge.scm: 375  tb:ranf");
f_7407(((C_word*)t0)[2],((C_word*)((C_word*)t0)[3])[1]);}}

/* scale in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8400(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+19)){
C_save_and_reclaim((void*)tr4r,(void*)f_8400r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_8400r(t0,t1,t2,t3,t4);}}

static void C_ccall f_8400r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(19);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8407,a[2]=t1,a[3]=t6,a[4]=t3,a[5]=t8,a[6]=t2,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t10=(C_word)C_i_car(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_pairp(t10))){
t11=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t11))){
t12=(C_word)C_i_car(((C_word*)t5)[1]);
t13=C_set_block_item(t5,0,t12);
t14=t9;
f_8407(t14,t13);}
else{
t12=(C_word)C_i_cadr(((C_word*)t5)[1]);
t13=C_set_block_item(t8,0,t12);
t14=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8487,a[2]=t9,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)t8)[1],t3))){
C_trace("ChickenBridge.scm: 375  error");
t15=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t14,lf[128],((C_word*)t8)[1]);}
else{
t15=t14;
f_8487(2,t15,C_SCHEME_UNDEFINED);}}}
else{
t11=t9;
f_8407(t11,C_SCHEME_UNDEFINED);}}

/* k8485 in scale in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8407(t4,t3);}

/* k8405 in scale in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8407(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8407,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[7])[1]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8416,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word)li82),tmp=(C_word)a,a+=9,tmp));
t6=((C_word*)t4)[1];
f_8416(t6,((C_word*)t0)[2],C_fix(0),((C_word*)t0)[4],t2,((C_word*)t0)[3]);}

/* do498 in k8405 in scale in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8416(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8416,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[7]))){
t8=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8429,a[2]=t4,a[3]=t1,a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t6,tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8463,a[2]=t8,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  fit");
t10=C_retrieve(lf[123]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,((C_word*)t6)[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[4])[1],C_fix(1));}
else{
t9=t8;
f_8429(t9,C_SCHEME_UNDEFINED);}}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k8461 in do498 in k8405 in scale in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8429(t3,t2);}

/* k8427 in do498 in k8405 in scale in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8429(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8429,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[7])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8455,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 375  modulo");
t7=*((C_word*)lf[127]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,((C_word*)t0)[5],((C_word*)t0)[2]);}

/* k8453 in k8427 in do498 in k8405 in scale in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8455(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8455,2,t0,t1);}
t2=(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[8])[1],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_8416(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* fit in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8267(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr5r,(void*)f_8267r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_8267r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_8267r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word *a=C_alloc(13);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8271,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t6,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t10=C_set_block_item(t8,0,C_fix(1));
t11=t9;
f_8271(t11,t10);}
else{
t10=(C_word)C_i_car(((C_word*)t8)[1]);
t11=C_set_block_item(t8,0,t10);
t12=t9;
f_8271(t12,t11);}}

/* k8269 in fit in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8271(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8271,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8274,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]))){
t3=((C_word*)((C_word*)t0)[5])[1];
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t6=t2;
f_8274(t6,t5);}
else{
t3=t2;
f_8274(t3,C_SCHEME_UNDEFINED);}}

/* k8272 in k8269 in fit in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8274(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8274,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8276,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[6]))){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8378,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t2,a[6]=((C_word)li80),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t3,((C_word*)t0)[6]);}
else{
C_trace("ChickenBridge.scm: 375  fit1");
f_8276(((C_word*)t0)[2],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a8377 in k8272 in k8269 in fit in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8378(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8378,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  fit1");
f_8276(t1,t2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* fit1 in k8272 in k8269 in fit in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8276(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8276,NULL,5,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8283,a[2]=t5,a[3]=t3,a[4]=t4,a[5]=t2,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 375  <=");
C_less_or_equal_p(5,0,t6,t3,t2,t4);}

/* k8281 in fit1 in k8272 in k8269 in fit in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8283,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[5]);}
else{
t2=(C_word)C_i_greaterp(((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_truep(t2)?((C_word*)t0)[4]:((C_word*)t0)[3]);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],((C_word*)t0)[3]);
switch(((C_word*)t0)[2]){
case C_fix(1):
t5=(C_word)C_i_nequalp(t3,((C_word*)t0)[4]);
t6=(C_truep(t5)?((C_word*)t0)[3]:((C_word*)t0)[4]);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8306,a[2]=t6,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 375  remainder");
t9=*((C_word*)lf[124]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,t8,t4);
case C_fix(2):
t5=(C_word)C_a_i_times(&a,2,C_fix(2),t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8325,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[5],t3);
C_trace("ChickenBridge.scm: 375  remainder");
t8=*((C_word*)lf[124]+1);
((C_proc4)C_retrieve_proc(t8))(4,t8,t6,t7,t5);
case C_fix(3):
t5=((C_word*)t0)[6];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t3);
default:
C_trace("ChickenBridge.scm: 375  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[6],lf[125],((C_word*)t0)[2]);}}}

/* k8323 in k8281 in fit1 in k8272 in k8269 in fit in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8325,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8332,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_abs(&a,1,t1);
if(C_truep((C_word)C_i_greaterp(t3,((C_word*)t0)[3]))){
t4=(C_word)C_i_greater_or_equalp(t1,C_fix(0));
t5=(C_truep(t4)?*((C_word*)lf[96]+1):*((C_word*)lf[94]+1));
t6=t5;
((C_proc4)C_retrieve_proc(t6))(4,t6,t2,t1,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 375  -");
C_minus(3,0,t2,t1);}}

/* k8330 in k8323 in k8281 in fit1 in k8272 in k8269 in fit in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8332,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,t1,((C_word*)t0)[2]));}

/* k8304 in k8281 in fit1 in k8272 in k8269 in fit in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8306,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)t0)[2],t1));}

/* tendency in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,...){
C_word tmp;
C_word t5;
va_list v;
C_word *a,c2=c;
C_save_rest(t4,c2,5);
if(c<5) C_bad_min_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr5r,(void*)f_8200r,5,t0,t1,t2,t3,t4);}
else{
a=C_alloc((c-5)*3);
t5=C_restore_rest(a,C_rest_count(0));
f_8200r(t0,t1,t2,t3,t4,t5);}}

static void C_ccall f_8200r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word *a=C_alloc(16);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t9=C_retrieve(lf[122]);
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8204,a[2]=t2,a[3]=t8,a[4]=t10,a[5]=t1,a[6]=t7,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t8)[1]))){
t12=t11;
f_8204(t12,C_SCHEME_UNDEFINED);}
else{
t12=(C_word)C_i_car(((C_word*)t8)[1]);
t13=C_set_block_item(t10,0,t12);
t14=(C_word)C_i_cdr(((C_word*)t8)[1]);
t15=C_set_block_item(t8,0,t14);
t16=t11;
f_8204(t16,t15);}}

/* k8202 in tendency in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8204(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8204,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8207,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[7])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8250,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  interp1");
f_8068(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[7])[1],C_fix(1));}
else{
t3=t2;
f_8207(t3,C_SCHEME_UNDEFINED);}}

/* k8248 in k8202 in tendency in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8250(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8207(t3,t2);}

/* k8205 in k8202 in tendency in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8207(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8207,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8210,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[6])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8243,a[2]=t2,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  interp1");
f_8068(t3,((C_word*)t0)[2],((C_word*)((C_word*)t0)[6])[1],C_fix(1));}
else{
t3=t2;
f_8210(t3,C_SCHEME_UNDEFINED);}}

/* k8241 in k8205 in k8202 in tendency in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8243(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_8210(t3,t2);}

/* k8208 in k8205 in k8202 in tendency in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8210(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8210,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]))){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8223,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_truep(t3)?(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[6])[1]));
C_apply(5,0,t2,((C_word*)((C_word*)t0)[3])[1],t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k8221 in k8208 in k8205 in k8202 in tendency in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8223,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[2])[1],t1));}

/* interp in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8154(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_8154r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_8154r(t0,t1,t2,t3);}}

static void C_ccall f_8154r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8158,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 375  error");
t5=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[120]);}
else{
t5=t4;
f_8158(2,t5,C_SCHEME_UNDEFINED);}}

/* k8156 in interp in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8158(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_pairp(t2))){
t3=(C_word)C_i_car(((C_word*)t0)[4]);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
t5=(C_word)C_i_nullp(t4);
t6=(C_truep(t5)?C_fix(1):(C_word)C_i_cadr(((C_word*)t0)[4]));
C_trace("ChickenBridge.scm: 375  interp1");
f_8068(((C_word*)t0)[3],((C_word*)t0)[2],t3,t6);}
else{
C_trace("ChickenBridge.scm: 375  interp1");
f_8068(((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4],C_fix(1));}}

/* interp1 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8068(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8068,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8072,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 375  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[118],t3);}
else{
t6=t5;
f_8072(2,t6,(C_word)C_i_car(t3));}}

/* k8070 in interp1 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8072(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8072,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8075,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 375  err");
t6=C_retrieve(lf[116]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[117],((C_word*)t0)[4]);}
else{
t6=t4;
f_8075(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k8073 in k8070 in interp1 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8075,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=((C_word*)t0)[5];
t9=(C_word)C_i_cddr(((C_word*)t0)[4]);
t10=C_SCHEME_UNDEFINED;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_set_block_item(t11,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8084,a[2]=((C_word*)t0)[4],a[3]=t11,a[4]=t8,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li75),tmp=(C_word)a,a+=11,tmp));
t13=((C_word*)t11)[1];
f_8084(t13,((C_word*)t0)[2],t9);}

/* do449 in k8073 in k8070 in interp1 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_8084(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8084,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 375  tb:rescale");
f_7226(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8106,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 375  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[115],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_8106(2,t13,t12);}}}

/* k8104 in do449 in k8073 in k8070 in interp1 in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8106(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8084(t3,((C_word*)t0)[2],t2);}

/* ratio->cents in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8053(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8053,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[72],"tb:scaler->cents"),t2);}
else{
C_trace("ChickenBridge.scm: 375  tb:scaler->cents");
t3=C_retrieve2(lf[72],"tb:scaler->cents");
f_7331(3,t3,t1,t2);}}

/* cents->ratio in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8038(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8038,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[71],"tb:cents->scaler"),t2);}
else{
C_trace("ChickenBridge.scm: 375  tb:cents->scaler");
t3=C_retrieve2(lf[71],"tb:cents->scaler");
f_7324(3,t3,t1,t2);}}

/* rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7802(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+45)){
C_save_and_reclaim((void*)tr3r,(void*)f_7802r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7802r(t0,t1,t2,t3);}}

static void C_ccall f_7802r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word *a=C_alloc(45);
t4=lf[108];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=lf[109];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=t3;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7806,a[2]=t11,a[3]=t15,a[4]=t9,a[5]=t3,a[6]=t13,a[7]=t1,a[8]=t7,a[9]=t5,a[10]=t2,tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t13)[1]))){
t17=t16;
f_7806(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_car(((C_word*)t13)[1]);
t18=(C_word)C_eqp(t17,lf[110]);
if(C_truep(t18)){
t19=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7951,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t9,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t9)[1])){
C_trace("error");
t20=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t20))(4,t20,t19,lf[19],lf[110]);}
else{
t20=t19;
f_7951(2,t20,C_SCHEME_UNDEFINED);}}
else{
t19=(C_word)C_eqp(t17,lf[111]);
if(C_truep(t19)){
t20=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7986,a[2]=t3,a[3]=t16,a[4]=t13,a[5]=t15,a[6]=t11,a[7]=t7,tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)t11)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[19],lf[111]);}
else{
t21=t20;
f_7986(2,t21,C_SCHEME_UNDEFINED);}}
else{
t20=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8015,a[2]=t16,a[3]=t9,a[4]=t5,a[5]=t13,tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)t15)[1])){
C_trace("error");
t21=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t21))(4,t21,t20,lf[10],t3);}
else{
t21=t20;
f_8015(2,t21,C_SCHEME_UNDEFINED);}}}}}

/* k8013 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8015,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8022,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8030,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k8028 in k8013 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8030(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_8022(2,t2,C_SCHEME_UNDEFINED);}}

/* k8020 in k8013 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_8022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7806(t5,t4);}

/* k7984 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7986,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7990,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7990(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7988 in k7984 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7806(t7,t6);}

/* k7949 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7951(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7951,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7955,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7955(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7953 in k7949 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7806(t7,t6);}

/* k7804 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7806(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7806,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7809,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_7809(t3,C_SCHEME_UNDEFINED);}
else{
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_eqp(t3,lf[110]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7851,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
C_trace("error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[19],lf[110]);}
else{
t6=t5;
f_7851(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t3,lf[111]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7886,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[19],lf[111]);}
else{
t7=t6;
f_7886(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7915,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[10],((C_word*)t0)[5]);}
else{
t7=t6;
f_7915(2,t7,C_SCHEME_UNDEFINED);}}}}}

/* k7913 in k7804 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7915(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7915,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7922,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7930,a[2]=((C_word*)t0)[4],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("keyword?");
t6=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[4])[1]);}

/* k7928 in k7913 in k7804 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[14],((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=((C_word*)t0)[3];
f_7922(2,t2,C_SCHEME_UNDEFINED);}}

/* k7920 in k7913 in k7804 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_7809(t5,t4);}

/* k7884 in k7804 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7886,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7890,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7890(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7888 in k7884 in k7804 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7890(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7809(t7,t6);}

/* k7849 in k7804 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7851(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7851,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7855,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[21],((C_word*)t0)[2]);}
else{
t4=t2;
f_7855(2,t4,(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]));}}

/* k7853 in k7849 in k7804 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_TRUE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_7809(t7,t6);}

/* k7807 in k7804 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7809(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7809,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7812,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[3])[1]))){
t3=t2;
f_7812(2,t3,C_SCHEME_UNDEFINED);}
else{
C_trace("error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[5],((C_word*)t0)[2]);}}

/* k7810 in k7807 in k7804 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7812,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[5]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7823,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li71),tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t2,((C_word*)t0)[5]);}
else{
C_trace("ChickenBridge.scm: 375  tb:rhythm->seconds");
f_7309(((C_word*)t0)[2],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}}

/* a7822 in k7810 in k7807 in k7804 in rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7823(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7823,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  tb:rhythm->seconds");
f_7309(t1,t2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* decimals in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7762(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7762,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7766,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 375  expt");
t5=*((C_word*)lf[105]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[106],t3);}

/* k7764 in decimals in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7766(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7766,2,t0,t1);}
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7777,a[2]=t1,a[3]=((C_word)li69),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,C_retrieve(lf[104]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7796,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_times(&a,2,((C_word*)t0)[2],t1);
C_trace("ChickenBridge.scm: 375  round");
t4=*((C_word*)lf[103]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}}

/* k7794 in k7764 in decimals in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7796(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7796,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* a7776 in k7764 in decimals in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7777(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7777,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7785,a[2]=((C_word*)t0)[2],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_a_i_times(&a,2,t2,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 375  round");
t5=*((C_word*)lf[103]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}

/* k7783 in a7776 in k7764 in decimals in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7785,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_divide(&a,2,t1,((C_word*)t0)[2]));}

/* quantize in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7741(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_7741,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_listp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7753,a[2]=t3,a[3]=((C_word)li67),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t1,t4,t2);}
else{
C_trace("ChickenBridge.scm: 375  tb:quantize");
f_7298(t1,t2,t3);}}

/* a7752 in quantize in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7753(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7753,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  tb:quantize");
f_7298(t1,t2,((C_word*)t0)[2]);}

/* minus in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7715(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_7715r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7715r(t0,t1,t2,t3);}}

static void C_ccall f_7715r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
if(C_truep((C_word)C_i_nullp(t3))){
if(C_truep((C_word)C_i_listp(t2))){
C_apply(4,0,t1,*((C_word*)lf[96]+1),t2);}
else{
C_trace("ChickenBridge.scm: 375  -");
C_minus(3,0,t1,t2);}}
else{
C_apply(5,0,t1,*((C_word*)lf[96]+1),t2,t3);}}

/* plus in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7673(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_7673r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7673r(t0,t1,t2);}}

static void C_ccall f_7673r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_listp(t4))){
t5=(C_word)C_i_car(t2);
C_apply(4,0,t1,*((C_word*)lf[94]+1),t5);}
else{
C_apply(4,0,t1,*((C_word*)lf[94]+1),t2);}}
else{
C_apply(4,0,t1,*((C_word*)lf[94]+1),t2);}}}

/* int in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7658(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7658,3,t0,t1,t2);}
if(C_truep((C_word)C_i_listp(t2))){
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,C_retrieve2(lf[68],"tb:int"),t2);}
else{
C_trace("ChickenBridge.scm: 375  tb:int");
t3=C_retrieve2(lf[68],"tb:int");
f_7280(3,t3,t1,t2);}}

/* discrete in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7547(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+21)){
C_save_and_reclaim((void*)tr6r,(void*)f_7547r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_7547r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_7547r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word *a=C_alloc(21);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_fix(1);
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7551,a[2]=t5,a[3]=t1,a[4]=t12,a[5]=t8,a[6]=t4,a[7]=t3,a[8]=t2,a[9]=t10,tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_pairp(t5))){
t14=C_set_block_item(t10,0,t5);
if(C_truep((C_word)C_i_nullp(t6))){
t15=(C_word)C_i_length(((C_word*)t10)[1]);
t16=C_set_block_item(t8,0,t15);
t17=t13;
f_7551(t17,t16);}
else{
t15=(C_word)C_i_car(t6);
t16=C_set_block_item(t8,0,t15);
t17=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7622,a[2]=t13,a[3]=t12,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t18=(C_word)C_i_cdr(t6);
t19=(C_word)C_i_nullp(t18);
C_trace("ChickenBridge.scm: 375  not?");
t20=C_retrieve(lf[91]);
((C_proc3)C_retrieve_proc(t20))(3,t20,t17,t19);}}
else{
t14=(C_word)C_i_car(t6);
t15=C_set_block_item(t8,0,t14);
t16=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t16))){
t17=t13;
f_7551(t17,C_SCHEME_UNDEFINED);}
else{
t17=(C_word)C_i_cadr(t6);
t18=C_set_block_item(t12,0,t17);
t19=t13;
f_7551(t19,t18);}}}

/* k7620 in discrete in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7622(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7551(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_7551(t2,C_SCHEME_UNDEFINED);}}

/* k7549 in discrete in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7551(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7551,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7565,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[9],a[7]=((C_word)li61),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7580,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  tb:discrete");
f_7253(t2,((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],C_fix(0),((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7591,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word)li62),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[8]);}
else{
C_trace("ChickenBridge.scm: 375  tb:discrete");
f_7253(((C_word*)t0)[3],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);}}}

/* a7590 in k7549 in discrete in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7591(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7591,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 375  tb:discrete");
f_7253(t1,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k7578 in k7549 in discrete in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7580(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* a7564 in k7549 in discrete in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7565(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7565,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7573,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 375  tb:discrete");
f_7253(t3,t2,((C_word*)t0)[5],((C_word*)t0)[4],C_fix(0),((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k7571 in a7564 in k7549 in discrete in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7573(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)((C_word*)t0)[2])[1],t1));}

/* rescale in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7513(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr7r,(void*)f_7513r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest(a,C_rest_count(0));
f_7513r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_7513r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(8);
if(C_truep((C_word)C_i_listp(t2))){
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7525,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t4,a[6]=t3,a[7]=((C_word)li59),tmp=(C_word)a,a+=8,tmp);
C_trace("map");
t9=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t1,t8,t2);}
else{
if(C_truep((C_word)C_i_nullp(t7))){
C_trace("ChickenBridge.scm: 375  tb:rescale");
f_7226(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 375  tb:rescale");
f_7226(t1,t2,t3,t4,t5,t6,t8);}}}

/* a7524 in rescale in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7525(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7525,3,t0,t1,t2);}
C_apply(9,0,t1,C_retrieve(lf[89]),t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* tb:ranbrown in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7494(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7494,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub351(t2));}

/* tb:ranpink in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7491(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7491,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub348(t2));}

/* tb:ranpoisson in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7484(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7484,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub345(C_SCHEME_UNDEFINED,t3));}

/* tb:rancauchy in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7481,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub341(t2));}

/* tb:rangamma in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7474(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7474,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub337(t3,t4));}

/* tb:ranexp in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7456(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7456,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub325(t3,t4));}

/* tb:rangauss in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7445(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7445,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub319(t4,t5,t6));}

/* tb:ranmiddle in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7442,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub314(t2));}

/* tb:ranhigh in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7439(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7439,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub311(t2));}

/* tb:ranlow in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7436(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7436,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub308(t2));}

/* tb:ranf in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7407(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7407,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub291(t3,t4));}

/* tb:rani in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7400(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7400,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub287(C_SCHEME_UNDEFINED,t3));}

/* tb:ran-set! in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7397(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7397,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub283(C_SCHEME_UNDEFINED,t2));}

/* tb:keynum->hertz in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7376(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7376,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub269(t3,t4));}

/* tb:geoseg in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7357(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7357,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub261(t6,t7,t8,t9,t10));}

/* tb:explseg in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7338(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[6],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7338,6,t0,t1,t2,t3,t4,t5);}
t6=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_fixnum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=t1;
((C_proc2)(void*)(*((C_word*)t11+1)))(2,t11,(C_word)stub250(t6,t7,t8,t9,t10));}

/* tb:scaler->cents in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7331(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7331,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub243(C_SCHEME_UNDEFINED,t3));}

/* tb:cents->scaler in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7324(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7324,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub238(t3,t4));}

/* tb:rhythm->seconds in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7309(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7309,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=(C_word)C_i_foreign_flonum_argumentp(t4);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub231(t5,t6,t7,t8));}

/* tb:quantize in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7298(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7298,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub223(t4,t5,t6));}

/* tb:int in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7280(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7280,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub211(C_SCHEME_UNDEFINED,t3));}

/* tb:discrete in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7253(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7253,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub202(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7226(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7226,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub187(t8,t9,t10,t11,t12,t13,t14));}

/* bitwise-test in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7185(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7185,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7191,a[2]=t7,a[3]=t4,a[4]=t5,a[5]=((C_word)li34),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_7191(t9,t1,C_SCHEME_FALSE);}

/* do155 in bitwise-test in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7191(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7191,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7201,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[4])[1],C_fix(0)))){
if(C_truep((C_word)C_i_bit_setp(((C_word*)((C_word*)t0)[3])[1],C_fix(0)))){
t5=C_set_block_item(t3,0,C_SCHEME_TRUE);
t6=t4;
f_7201(t6,t5);}
else{
t5=C_set_block_item(t3,0,C_SCHEME_FALSE);
t6=C_set_block_item(((C_word*)t0)[4],0,C_fix(0));
t7=t4;
f_7201(t7,t6);}}
else{
t5=t4;
f_7201(t5,C_SCHEME_UNDEFINED);}}}

/* k7199 in do155 in bitwise-test in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7201(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7201,NULL,2,t0,t1);}
t2=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[6])[1],C_fix(-1));
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_arithmetic_shift(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=((C_word*)((C_word*)t0)[4])[1];
f_7191(t6,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* list-prop in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7099(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr4r,(void*)f_7099r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_7099r(t0,t1,t2,t3,t4);}}

static void C_ccall f_7099r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
if(C_truep((C_word)C_i_nullp(t2))){
t5=(C_word)C_i_nullp(t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_truep(t5)?C_SCHEME_FALSE:(C_word)C_i_car(t4)));}
else{
t5=(C_word)C_i_car(t2);
t6=(C_word)C_eqp(t5,t3);
if(C_truep(t6)){
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_i_cadr(t2));}
else{
t7=(C_word)C_i_cddr(t2);
C_apply(6,0,t1,C_retrieve2(lf[64],"list-prop"),t7,t3,t4);}}}

/* make-list in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7000(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+5)){
C_save_and_reclaim((void*)tr3r,(void*)f_7000r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_7000r(t0,t1,t2,t3);}}

static void C_ccall f_7000r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(5);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7004,a[2]=t2,a[3]=t1,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_lessp(t2,C_fix(0)))){
C_trace("ChickenBridge.scm: 374  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t4,lf[63],t2);}
else{
t5=t4;
f_7004(2,t5,C_SCHEME_UNDEFINED);}}

/* k7002 in make-list in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7004,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7006,a[2]=t3,a[3]=((C_word)li30),tmp=(C_word)a,a+=4,tmp));
t7=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7029,a[2]=t5,a[3]=((C_word)li31),tmp=(C_word)a,a+=4,tmp));
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 374  l1");
t8=((C_word*)t3)[1];
f_7006(t8,((C_word*)t0)[3],((C_word*)t0)[2],C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_closurep(t8))){
C_trace("ChickenBridge.scm: 374  l2");
t9=((C_word*)t5)[1];
f_7029(t9,((C_word*)t0)[3],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 374  l1");
t10=((C_word*)t3)[1];
f_7006(t10,((C_word*)t0)[3],((C_word*)t0)[2],t9);}}}

/* l2 in k7002 in make-list in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7029(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7029,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7046,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cdr(t3);
C_apply(4,0,t4,t5,t6);}}

/* k7044 in l2 in k7002 in make-list in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7046,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7050,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[4],C_fix(1));
C_trace("ChickenBridge.scm: 374  l2");
t4=((C_word*)((C_word*)t0)[3])[1];
f_7029(t4,t2,t3,((C_word*)t0)[2]);}

/* k7048 in k7044 in l2 in k7002 in make-list in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7050,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* l1 in k7002 in make-list in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_7006(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a;
loop:
a=C_alloc(8);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_7006,NULL,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_nequalp(t2,C_fix(0)))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7023,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(1));
C_trace("ChickenBridge.scm: 374  l1");
t7=t4;
t8=t5;
t9=t3;
t1=t7;
t2=t8;
t3=t9;
goto loop;}}

/* k7021 in l1 in k7002 in make-list in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_7023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7023,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* reverse! in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6939(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6939,3,t0,t1,t2);}
t3=(C_word)C_i_length(t2);
t4=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6952,a[2]=t2,a[3]=t6,a[4]=((C_word)li28),tmp=(C_word)a,a+=5,tmp));
t8=((C_word*)t6)[1];
f_6952(t8,t1,C_fix(0),t4,t2);}

/* do126 in reverse! in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_6952(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word *a;
loop:
a=C_alloc(12);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_6952,NULL,5,t0,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_lessp(t2,t3))){
t5=(C_word)C_i_car(t4);
t6=(C_word)C_a_i_minus(&a,2,t3,t2);
t7=(C_word)C_i_list_tail(t4,t6);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_i_set_car(t4,t8);
t10=(C_word)C_i_set_car(t7,t5);
t11=(C_word)C_a_i_plus(&a,2,t2,C_fix(1));
t12=(C_word)C_a_i_minus(&a,2,t3,C_fix(1));
t13=(C_word)C_i_cdr(t4);
t15=t1;
t16=t11;
t17=t12;
t18=t13;
t1=t15;
t2=t16;
t3=t17;
t4=t18;
goto loop;}
else{
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,((C_word*)t0)[2]);}}

/* list-set! in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6929(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6929,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_list_tail(t2,t3);
t6=(C_word)C_i_set_car(t5,t4);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t4);}

/* list* in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6889(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_6889r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_6889r(t0,t1,t2);}}

static void C_ccall f_6889r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 374  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[59]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6919,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[58]),t6);}}}

/* k6917 in list* in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6919,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* butlast in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6751(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6751,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6785,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 374  butlast");
t8=C_retrieve(lf[57]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k6783 in butlast in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6785,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6728(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6728,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 374  last");
t5=C_retrieve(lf[56]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* rest in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6722(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6722,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* tenth in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6707(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6707,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6693(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6693,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6683(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6683,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6673(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6673,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6663(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6663,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6653(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6653,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* chdir in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6624(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_6624r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_6624r(t0,t1,t2);}}

static void C_ccall f_6624r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[45]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6633,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_6633 in chdir in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6633(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6633,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6638,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[46]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_6638(2,t4,C_SCHEME_FALSE);}}

/* k6636 */
static void C_ccall f_6638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub95(C_SCHEME_UNDEFINED,t1));}

/* cwd in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6613,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6618,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_6618 in cwd in k6609 in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6618,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[43]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub90(t2),C_fix(0));}

/* expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6320(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6320,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6600,a[2]=((C_word)li5),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6589,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6598,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6330,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 280  symbol->string");
t11=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_6330(2,t11,t2);}}

/* k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6330,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6333,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6581,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 281  hash-table-ref");
t4=*((C_word*)lf[41]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,C_retrieve(lf[29]),t1,t3);}

/* a6580 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6581,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6333,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6336,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_6336(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 282  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[40],((C_word*)t0)[3]);}}

/* k6334 in k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6336(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6336,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6351,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_6351(t10,(C_word)C_eqp(t9,lf[39]));}
else{
t9=t8;
f_6351(t9,C_SCHEME_FALSE);}}

/* k6349 in k6334 in k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_6351(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6351,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6361,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 296  append");
t3=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k6359 in k6349 in k6334 in k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6361(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6361,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_6363,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li10),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_6363(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do63 in k6359 in k6349 in k6334 in k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_6363(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6363,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6375,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li8),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_6375(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6416,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_6422,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_6422(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 311  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k6420 in do63 in k6359 in k6349 in k6334 in k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6422,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_6416(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6476,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6549,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 332  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6432,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 322  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[38],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_6432(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k6430 in k6420 in do63 in k6359 in k6349 in k6334 in k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6432,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_6416(t9,t8);}

/* k6547 in k6420 in do63 in k6359 in k6349 in k6334 in k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6549,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6522,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 337  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_6476(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6535,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6537,a[2]=((C_word*)t0)[5],a[3]=((C_word)li9),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 333  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[37],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a6536 in k6547 in k6420 in do63 in k6359 in k6349 in k6334 in k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6537(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6537,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 341  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k6533 in k6547 in k6420 in do63 in k6359 in k6349 in k6334 in k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6535(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 339  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[36],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k6520 in k6547 in k6420 in do63 in k6359 in k6349 in k6334 in k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6522(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 336  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[35],((C_word*)t0)[2],t1);}

/* k6474 in k6420 in do63 in k6359 in k6349 in k6334 in k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6476,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6482,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_6482(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6503,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 348  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k6501 in k6474 in k6420 in do63 in k6359 in k6349 in k6334 in k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6503(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 347  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[34],((C_word*)t0)[2],t1);}

/* k6480 in k6474 in k6420 in do63 in k6359 in k6349 in k6334 in k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_6416(t6,t5);}

/* k6414 in do63 in k6359 in k6349 in k6334 in k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_6416(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_6363(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do69 in do63 in k6359 in k6349 in k6334 in k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_6375(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6375,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6388,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_6388(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_6388(t5,C_SCHEME_UNDEFINED);}}}

/* k6386 in do69 in do63 in k6359 in k6349 in k6334 in k6331 in k6328 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_fcall f_6388(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_6375(t3,((C_word*)t0)[2],t2);}

/* f_6598 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6598(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6598,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_6589 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6589(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6589,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6597,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 278  keyword->string");
t4=C_retrieve(lf[33]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k6595 */
static void C_ccall f_6597(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 278  sprintf");
t2=C_retrieve(lf[31]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[32],t1);}

/* f_6600 in expand-send in k6316 in k6313 in k6309 in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6600(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_6600r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_6600r(t0,t1,t2,t3);}}

static void C_ccall f_6600r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6608,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[31]),t2,t3);}

/* k6606 */
static void C_ccall f_6608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 274  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6022(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_6022,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6183,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6275,a[2]=((C_word)li3),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t7=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,t5,t6,t3);}

/* a6274 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6275(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6275,3,t0,t1,t2);}
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6289,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6293,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 226  symbol->string");
t6=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t4,t5);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6304,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6308,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 227  symbol->string");
t5=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}}

/* k6306 in a6274 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 227  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6302 in a6274 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6304(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6304,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,t1,((C_word*)t0)[2],C_SCHEME_FALSE));}

/* k6291 in a6274 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 226  gensym");
t2=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6287 in a6274 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6289(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6289,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[2]));}

/* k6181 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6183,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6186,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 229  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[28]);}

/* k6184 in k6181 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6186(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6186,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6189,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 230  gensym");
t3=C_retrieve(lf[26]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[27]);}

/* k6187 in k6184 in k6181 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6189,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6192,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6269,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word)li2),tmp=(C_word)a,a+=6,tmp);
C_trace("map");
t4=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t2,t3,((C_word*)t0)[2]);}

/* a6268 in k6187 in k6184 in k6181 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6269(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6269,3,t0,t1,t2);}
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(C_word)C_i_car(t2);
t7=(C_word)C_i_cadr(t2);
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6035,a[2]=t1,a[3]=t3,a[4]=t7,a[5]=t5,a[6]=t4,a[7]=t6,tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6094,a[2]=t8,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 190  symbol->string");
t10=*((C_word*)lf[25]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,t7);}

/* k6092 in a6268 in k6187 in k6184 in k6181 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6094(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 190  string->keyword");
t2=C_retrieve(lf[24]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k6033 in a6268 in k6187 in k6184 in k6181 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6035(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[120],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6035,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[19],t1);
t4=(C_word)C_a_i_list(&a,3,lf[20],((C_word*)t0)[7],t3);
t5=(C_word)C_a_i_list(&a,2,lf[15],((C_word*)t0)[6]);
t6=(C_word)C_a_i_list(&a,2,lf[3],t5);
t7=(C_word)C_a_i_list(&a,3,lf[4],lf[21],((C_word*)t0)[5]);
t8=(C_word)C_a_i_list(&a,2,lf[22],((C_word*)t0)[6]);
t9=(C_word)C_a_i_list(&a,4,lf[20],t6,t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[4],t9);
t11=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[7],C_SCHEME_TRUE);
t12=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[3],C_SCHEME_TRUE);
t13=(C_word)C_a_i_list(&a,2,lf[23],((C_word*)t0)[6]);
t14=(C_word)C_a_i_list(&a,3,lf[12],((C_word*)t0)[6],t13);
t15=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)C_a_i_list(&a,6,t2,t4,t10,t11,t12,t14));}

/* k6190 in k6187 in k6184 in k6181 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6192,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6199,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("map");
t3=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t2,*((C_word*)lf[15]+1),((C_word*)t0)[2]);}

/* k6197 in k6190 in k6187 in k6184 in k6181 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6199(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6199,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6211,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6245,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6259,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6258 in k6197 in k6190 in k6187 in k6184 in k6181 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6259(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6259,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t3,C_SCHEME_FALSE));}

/* k6243 in k6197 in k6190 in k6187 in k6184 in k6181 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6245,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 236  append");
t5=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[2],t1,t4);}

/* k6209 in k6197 in k6190 in k6187 in k6184 in k6181 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6211,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6215,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6219,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6237,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[4],a[6]=((C_word)li0),tmp=(C_word)a,a+=7,tmp);
C_trace("map");
t5=*((C_word*)lf[17]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}

/* a6236 in k6209 in k6197 in k6190 in k6187 in k6184 in k6181 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6237(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[119],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_6237,3,t0,t1,t2);}
t3=((C_word*)t0)[5];
t4=((C_word*)t0)[4];
t5=((C_word*)t0)[3];
t6=((C_word*)t0)[2];
t7=(C_word)C_a_i_list(&a,2,lf[3],t4);
t8=(C_word)C_a_i_list(&a,2,lf[8],t4);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6172,a[2]=t7,a[3]=t1,a[4]=t8,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_car(t2);
t11=(C_word)C_i_cadr(t2);
t12=(C_word)C_a_i_list(&a,3,lf[4],lf[10],t5);
t13=(C_word)C_a_i_list(&a,3,lf[11],t3,t12);
t14=(C_word)C_a_i_list(&a,2,lf[8],t4);
t15=(C_word)C_a_i_list(&a,3,lf[12],t11,t14);
t16=(C_word)C_a_i_list(&a,2,lf[13],t11);
t17=(C_word)C_a_i_list(&a,3,lf[4],lf[14],t11);
t18=(C_word)C_a_i_list(&a,3,lf[11],t16,t17);
t19=(C_word)C_a_i_list(&a,3,lf[12],t10,C_SCHEME_TRUE);
t20=(C_word)C_a_i_list(&a,2,lf[15],t4);
t21=(C_word)C_a_i_list(&a,3,lf[12],t4,t20);
t22=(C_word)C_a_i_list(&a,6,lf[16],t13,t15,t18,t19,t21);
t23=(C_word)C_a_i_list(&a,1,t22);
C_trace("##sys#append");
t24=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t9,t6,t23);}

/* k6170 in a6236 in k6209 in k6197 in k6190 in k6187 in k6184 in k6181 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6172(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6172,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[9],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[6],((C_word*)t0)[2],t3));}

/* k6217 in k6209 in k6197 in k6190 in k6187 in k6184 in k6181 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6219,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[3],((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,3,lf[4],lf[5],((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[6],t2,t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)t0)[3]);
C_trace("##sys#append");
t6=*((C_word*)lf[7]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[2],t1,t5);}

/* k6213 in k6209 in k6197 in k6190 in k6187 in k6184 in k6181 in expand-optkeys in k6018 in k6015 in k6012 in k6009 */
static void C_ccall f_6215(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6215,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[1],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,3,lf[2],((C_word*)t0)[2],t3));}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[2539] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_6011ChickenBridge.scm",(void*)f_6011},
{"f_6014ChickenBridge.scm",(void*)f_6014},
{"f_6017ChickenBridge.scm",(void*)f_6017},
{"f_6020ChickenBridge.scm",(void*)f_6020},
{"f_37850ChickenBridge.scm",(void*)f_37850},
{"f_6311ChickenBridge.scm",(void*)f_6311},
{"f_6315ChickenBridge.scm",(void*)f_6315},
{"f_37798ChickenBridge.scm",(void*)f_37798},
{"f_37845ChickenBridge.scm",(void*)f_37845},
{"f_37835ChickenBridge.scm",(void*)f_37835},
{"f_37802ChickenBridge.scm",(void*)f_37802},
{"f_6318ChickenBridge.scm",(void*)f_6318},
{"f_37792ChickenBridge.scm",(void*)f_37792},
{"f_6611ChickenBridge.scm",(void*)f_6611},
{"f_9568ChickenBridge.scm",(void*)f_9568},
{"f_37576ChickenBridge.scm",(void*)f_37576},
{"f_37790ChickenBridge.scm",(void*)f_37790},
{"f_37610ChickenBridge.scm",(void*)f_37610},
{"f_37622ChickenBridge.scm",(void*)f_37622},
{"f_37626ChickenBridge.scm",(void*)f_37626},
{"f_37630ChickenBridge.scm",(void*)f_37630},
{"f_37774ChickenBridge.scm",(void*)f_37774},
{"f_37636ChickenBridge.scm",(void*)f_37636},
{"f_37656ChickenBridge.scm",(void*)f_37656},
{"f_37659ChickenBridge.scm",(void*)f_37659},
{"f_37667ChickenBridge.scm",(void*)f_37667},
{"f_37674ChickenBridge.scm",(void*)f_37674},
{"f_37677ChickenBridge.scm",(void*)f_37677},
{"f_37681ChickenBridge.scm",(void*)f_37681},
{"f_37688ChickenBridge.scm",(void*)f_37688},
{"f_37691ChickenBridge.scm",(void*)f_37691},
{"f_37695ChickenBridge.scm",(void*)f_37695},
{"f_37702ChickenBridge.scm",(void*)f_37702},
{"f_37646ChickenBridge.scm",(void*)f_37646},
{"f_37599ChickenBridge.scm",(void*)f_37599},
{"f_37589ChickenBridge.scm",(void*)f_37589},
{"f_37592ChickenBridge.scm",(void*)f_37592},
{"f_9571ChickenBridge.scm",(void*)f_9571},
{"f_37566ChickenBridge.scm",(void*)f_37566},
{"f_37574ChickenBridge.scm",(void*)f_37574},
{"f_10636ChickenBridge.scm",(void*)f_10636},
{"f_37552ChickenBridge.scm",(void*)f_37552},
{"f_37560ChickenBridge.scm",(void*)f_37560},
{"f_37564ChickenBridge.scm",(void*)f_37564},
{"f_19846ChickenBridge.scm",(void*)f_19846},
{"f_19897ChickenBridge.scm",(void*)f_19897},
{"f_37542ChickenBridge.scm",(void*)f_37542},
{"f_37550ChickenBridge.scm",(void*)f_37550},
{"f_20002ChickenBridge.scm",(void*)f_20002},
{"f_37439ChickenBridge.scm",(void*)f_37439},
{"f_37502ChickenBridge.scm",(void*)f_37502},
{"f_37506ChickenBridge.scm",(void*)f_37506},
{"f_37520ChickenBridge.scm",(void*)f_37520},
{"f_37442ChickenBridge.scm",(void*)f_37442},
{"f_37462ChickenBridge.scm",(void*)f_37462},
{"f_37466ChickenBridge.scm",(void*)f_37466},
{"f_20005ChickenBridge.scm",(void*)f_20005},
{"f_37425ChickenBridge.scm",(void*)f_37425},
{"f_37433ChickenBridge.scm",(void*)f_37433},
{"f_37437ChickenBridge.scm",(void*)f_37437},
{"f_20198ChickenBridge.scm",(void*)f_20198},
{"f_37399ChickenBridge.scm",(void*)f_37399},
{"f_37403ChickenBridge.scm",(void*)f_37403},
{"f_37409ChickenBridge.scm",(void*)f_37409},
{"f_37420ChickenBridge.scm",(void*)f_37420},
{"f_37416ChickenBridge.scm",(void*)f_37416},
{"f_20267ChickenBridge.scm",(void*)f_20267},
{"f_37377ChickenBridge.scm",(void*)f_37377},
{"f_21512ChickenBridge.scm",(void*)f_21512},
{"f_37357ChickenBridge.scm",(void*)f_37357},
{"f_21515ChickenBridge.scm",(void*)f_21515},
{"f_37317ChickenBridge.scm",(void*)f_37317},
{"f_21518ChickenBridge.scm",(void*)f_21518},
{"f_37223ChickenBridge.scm",(void*)f_37223},
{"f_37227ChickenBridge.scm",(void*)f_37227},
{"f_37230ChickenBridge.scm",(void*)f_37230},
{"f_37248ChickenBridge.scm",(void*)f_37248},
{"f_37251ChickenBridge.scm",(void*)f_37251},
{"f_37282ChickenBridge.scm",(void*)f_37282},
{"f_37254ChickenBridge.scm",(void*)f_37254},
{"f_37260ChickenBridge.scm",(void*)f_37260},
{"f_37213ChickenBridge.scm",(void*)f_37213},
{"f_37207ChickenBridge.scm",(void*)f_37207},
{"f_21521ChickenBridge.scm",(void*)f_21521},
{"f_37115ChickenBridge.scm",(void*)f_37115},
{"f_37117ChickenBridge.scm",(void*)f_37117},
{"f_37121ChickenBridge.scm",(void*)f_37121},
{"f_37124ChickenBridge.scm",(void*)f_37124},
{"f_37127ChickenBridge.scm",(void*)f_37127},
{"f_37167ChickenBridge.scm",(void*)f_37167},
{"f_37159ChickenBridge.scm",(void*)f_37159},
{"f_37130ChickenBridge.scm",(void*)f_37130},
{"f_37133ChickenBridge.scm",(void*)f_37133},
{"f_37136ChickenBridge.scm",(void*)f_37136},
{"f_37107ChickenBridge.scm",(void*)f_37107},
{"f_21524ChickenBridge.scm",(void*)f_21524},
{"f_37079ChickenBridge.scm",(void*)f_37079},
{"f_21527ChickenBridge.scm",(void*)f_21527},
{"f_37043ChickenBridge.scm",(void*)f_37043},
{"f_37055ChickenBridge.scm",(void*)f_37055},
{"f_37051ChickenBridge.scm",(void*)f_37051},
{"f_37025ChickenBridge.scm",(void*)f_37025},
{"f_37019ChickenBridge.scm",(void*)f_37019},
{"f_21530ChickenBridge.scm",(void*)f_21530},
{"f_36933ChickenBridge.scm",(void*)f_36933},
{"f_36937ChickenBridge.scm",(void*)f_36937},
{"f_36940ChickenBridge.scm",(void*)f_36940},
{"f_36943ChickenBridge.scm",(void*)f_36943},
{"f_36956ChickenBridge.scm",(void*)f_36956},
{"f_36902ChickenBridge.scm",(void*)f_36902},
{"f_36906ChickenBridge.scm",(void*)f_36906},
{"f_36921ChickenBridge.scm",(void*)f_36921},
{"f_36896ChickenBridge.scm",(void*)f_36896},
{"f_21533ChickenBridge.scm",(void*)f_21533},
{"f_36782ChickenBridge.scm",(void*)f_36782},
{"f_36798ChickenBridge.scm",(void*)f_36798},
{"f_36809ChickenBridge.scm",(void*)f_36809},
{"f_36776ChickenBridge.scm",(void*)f_36776},
{"f_21589ChickenBridge.scm",(void*)f_21589},
{"f_36643ChickenBridge.scm",(void*)f_36643},
{"f_36666ChickenBridge.scm",(void*)f_36666},
{"f_36663ChickenBridge.scm",(void*)f_36663},
{"f_36637ChickenBridge.scm",(void*)f_36637},
{"f_21592ChickenBridge.scm",(void*)f_21592},
{"f_36491ChickenBridge.scm",(void*)f_36491},
{"f_36509ChickenBridge.scm",(void*)f_36509},
{"f_36518ChickenBridge.scm",(void*)f_36518},
{"f_36485ChickenBridge.scm",(void*)f_36485},
{"f_21595ChickenBridge.scm",(void*)f_21595},
{"f_36438ChickenBridge.scm",(void*)f_36438},
{"f_36442ChickenBridge.scm",(void*)f_36442},
{"f_36445ChickenBridge.scm",(void*)f_36445},
{"f_36461ChickenBridge.scm",(void*)f_36461},
{"f_36420ChickenBridge.scm",(void*)f_36420},
{"f_36414ChickenBridge.scm",(void*)f_36414},
{"f_21598ChickenBridge.scm",(void*)f_21598},
{"f_36338ChickenBridge.scm",(void*)f_36338},
{"f_21737ChickenBridge.scm",(void*)f_21737},
{"f_36264ChickenBridge.scm",(void*)f_36264},
{"f_36271ChickenBridge.scm",(void*)f_36271},
{"f_36258ChickenBridge.scm",(void*)f_36258},
{"f_21740ChickenBridge.scm",(void*)f_21740},
{"f_36154ChickenBridge.scm",(void*)f_36154},
{"f_36162ChickenBridge.scm",(void*)f_36162},
{"f_36128ChickenBridge.scm",(void*)f_36128},
{"f_36145ChickenBridge.scm",(void*)f_36145},
{"f_36136ChickenBridge.scm",(void*)f_36136},
{"f_36122ChickenBridge.scm",(void*)f_36122},
{"f_21743ChickenBridge.scm",(void*)f_21743},
{"f_36078ChickenBridge.scm",(void*)f_36078},
{"f_21746ChickenBridge.scm",(void*)f_21746},
{"f_35996ChickenBridge.scm",(void*)f_35996},
{"f_36007ChickenBridge.scm",(void*)f_36007},
{"f_36009ChickenBridge.scm",(void*)f_36009},
{"f_36038ChickenBridge.scm",(void*)f_36038},
{"f_35974ChickenBridge.scm",(void*)f_35974},
{"f_35990ChickenBridge.scm",(void*)f_35990},
{"f_35968ChickenBridge.scm",(void*)f_35968},
{"f_21749ChickenBridge.scm",(void*)f_21749},
{"f_35921ChickenBridge.scm",(void*)f_35921},
{"f_35925ChickenBridge.scm",(void*)f_35925},
{"f_35932ChickenBridge.scm",(void*)f_35932},
{"f_35899ChickenBridge.scm",(void*)f_35899},
{"f_35915ChickenBridge.scm",(void*)f_35915},
{"f_35893ChickenBridge.scm",(void*)f_35893},
{"f_21752ChickenBridge.scm",(void*)f_21752},
{"f_35761ChickenBridge.scm",(void*)f_35761},
{"f_35801ChickenBridge.scm",(void*)f_35801},
{"f_35765ChickenBridge.scm",(void*)f_35765},
{"f_35781ChickenBridge.scm",(void*)f_35781},
{"f_35793ChickenBridge.scm",(void*)f_35793},
{"f_35797ChickenBridge.scm",(void*)f_35797},
{"f_35789ChickenBridge.scm",(void*)f_35789},
{"f_35686ChickenBridge.scm",(void*)f_35686},
{"f_35729ChickenBridge.scm",(void*)f_35729},
{"f_35733ChickenBridge.scm",(void*)f_35733},
{"f_35693ChickenBridge.scm",(void*)f_35693},
{"f_35704ChickenBridge.scm",(void*)f_35704},
{"f_35680ChickenBridge.scm",(void*)f_35680},
{"f_21755ChickenBridge.scm",(void*)f_21755},
{"f_35660ChickenBridge.scm",(void*)f_35660},
{"f_35654ChickenBridge.scm",(void*)f_35654},
{"f_21758ChickenBridge.scm",(void*)f_21758},
{"f_35634ChickenBridge.scm",(void*)f_35634},
{"f_35638ChickenBridge.scm",(void*)f_35638},
{"f_35626ChickenBridge.scm",(void*)f_35626},
{"f_21761ChickenBridge.scm",(void*)f_21761},
{"f_35606ChickenBridge.scm",(void*)f_35606},
{"f_35610ChickenBridge.scm",(void*)f_35610},
{"f_35598ChickenBridge.scm",(void*)f_35598},
{"f_21764ChickenBridge.scm",(void*)f_21764},
{"f_35578ChickenBridge.scm",(void*)f_35578},
{"f_35582ChickenBridge.scm",(void*)f_35582},
{"f_35570ChickenBridge.scm",(void*)f_35570},
{"f_21767ChickenBridge.scm",(void*)f_21767},
{"f_35550ChickenBridge.scm",(void*)f_35550},
{"f_35554ChickenBridge.scm",(void*)f_35554},
{"f_35542ChickenBridge.scm",(void*)f_35542},
{"f_21770ChickenBridge.scm",(void*)f_21770},
{"f_35441ChickenBridge.scm",(void*)f_35441},
{"f_35411ChickenBridge.scm",(void*)f_35411},
{"f_35435ChickenBridge.scm",(void*)f_35435},
{"f_35405ChickenBridge.scm",(void*)f_35405},
{"f_21773ChickenBridge.scm",(void*)f_21773},
{"f_35355ChickenBridge.scm",(void*)f_35355},
{"f_35357ChickenBridge.scm",(void*)f_35357},
{"f_35361ChickenBridge.scm",(void*)f_35361},
{"f_35389ChickenBridge.scm",(void*)f_35389},
{"f_35381ChickenBridge.scm",(void*)f_35381},
{"f_35377ChickenBridge.scm",(void*)f_35377},
{"f_35364ChickenBridge.scm",(void*)f_35364},
{"f_35347ChickenBridge.scm",(void*)f_35347},
{"f_21776ChickenBridge.scm",(void*)f_21776},
{"f_35294ChickenBridge.scm",(void*)f_35294},
{"f_35296ChickenBridge.scm",(void*)f_35296},
{"f_35300ChickenBridge.scm",(void*)f_35300},
{"f_35331ChickenBridge.scm",(void*)f_35331},
{"f_35323ChickenBridge.scm",(void*)f_35323},
{"f_35319ChickenBridge.scm",(void*)f_35319},
{"f_35303ChickenBridge.scm",(void*)f_35303},
{"f_35306ChickenBridge.scm",(void*)f_35306},
{"f_35286ChickenBridge.scm",(void*)f_35286},
{"f_21779ChickenBridge.scm",(void*)f_21779},
{"f_35236ChickenBridge.scm",(void*)f_35236},
{"f_35250ChickenBridge.scm",(void*)f_35250},
{"f_35242ChickenBridge.scm",(void*)f_35242},
{"f_35201ChickenBridge.scm",(void*)f_35201},
{"f_35234ChickenBridge.scm",(void*)f_35234},
{"f_35195ChickenBridge.scm",(void*)f_35195},
{"f_21782ChickenBridge.scm",(void*)f_21782},
{"f_35142ChickenBridge.scm",(void*)f_35142},
{"f_35146ChickenBridge.scm",(void*)f_35146},
{"f_35159ChickenBridge.scm",(void*)f_35159},
{"f_35151ChickenBridge.scm",(void*)f_35151},
{"f_35099ChickenBridge.scm",(void*)f_35099},
{"f_35132ChickenBridge.scm",(void*)f_35132},
{"f_35093ChickenBridge.scm",(void*)f_35093},
{"f_21785ChickenBridge.scm",(void*)f_21785},
{"f_35013ChickenBridge.scm",(void*)f_35013},
{"f_35007ChickenBridge.scm",(void*)f_35007},
{"f_21788ChickenBridge.scm",(void*)f_21788},
{"f_34776ChickenBridge.scm",(void*)f_34776},
{"f_34780ChickenBridge.scm",(void*)f_34780},
{"f_34788ChickenBridge.scm",(void*)f_34788},
{"f_34811ChickenBridge.scm",(void*)f_34811},
{"f_34814ChickenBridge.scm",(void*)f_34814},
{"f_34817ChickenBridge.scm",(void*)f_34817},
{"f_34820ChickenBridge.scm",(void*)f_34820},
{"f_34880ChickenBridge.scm",(void*)f_34880},
{"f_34887ChickenBridge.scm",(void*)f_34887},
{"f_34897ChickenBridge.scm",(void*)f_34897},
{"f_34907ChickenBridge.scm",(void*)f_34907},
{"f_34921ChickenBridge.scm",(void*)f_34921},
{"f_34931ChickenBridge.scm",(void*)f_34931},
{"f_34941ChickenBridge.scm",(void*)f_34941},
{"f_34951ChickenBridge.scm",(void*)f_34951},
{"f_34823ChickenBridge.scm",(void*)f_34823},
{"f_34847ChickenBridge.scm",(void*)f_34847},
{"f_34826ChickenBridge.scm",(void*)f_34826},
{"f_34733ChickenBridge.scm",(void*)f_34733},
{"f_34766ChickenBridge.scm",(void*)f_34766},
{"f_34727ChickenBridge.scm",(void*)f_34727},
{"f_21791ChickenBridge.scm",(void*)f_21791},
{"f_34645ChickenBridge.scm",(void*)f_34645},
{"f_34649ChickenBridge.scm",(void*)f_34649},
{"f_34655ChickenBridge.scm",(void*)f_34655},
{"f_34675ChickenBridge.scm",(void*)f_34675},
{"f_34619ChickenBridge.scm",(void*)f_34619},
{"f_34629ChickenBridge.scm",(void*)f_34629},
{"f_34613ChickenBridge.scm",(void*)f_34613},
{"f_21794ChickenBridge.scm",(void*)f_21794},
{"f_34490ChickenBridge.scm",(void*)f_34490},
{"f_34494ChickenBridge.scm",(void*)f_34494},
{"f_34422ChickenBridge.scm",(void*)f_34422},
{"f_34441ChickenBridge.scm",(void*)f_34441},
{"f_34476ChickenBridge.scm",(void*)f_34476},
{"f_34447ChickenBridge.scm",(void*)f_34447},
{"f_34451ChickenBridge.scm",(void*)f_34451},
{"f_34465ChickenBridge.scm",(void*)f_34465},
{"f_34454ChickenBridge.scm",(void*)f_34454},
{"f_34435ChickenBridge.scm",(void*)f_34435},
{"f_34416ChickenBridge.scm",(void*)f_34416},
{"f_21797ChickenBridge.scm",(void*)f_21797},
{"f_34144ChickenBridge.scm",(void*)f_34144},
{"f_22320ChickenBridge.scm",(void*)f_22320},
{"f_34096ChickenBridge.scm",(void*)f_34096},
{"f_34088ChickenBridge.scm",(void*)f_34088},
{"f_22323ChickenBridge.scm",(void*)f_22323},
{"f_33968ChickenBridge.scm",(void*)f_33968},
{"f_22329ChickenBridge.scm",(void*)f_22329},
{"f_22788ChickenBridge.scm",(void*)f_22788},
{"f_22822ChickenBridge.scm",(void*)f_22822},
{"f_22814ChickenBridge.scm",(void*)f_22814},
{"f_22810ChickenBridge.scm",(void*)f_22810},
{"f_22795ChickenBridge.scm",(void*)f_22795},
{"f_22799ChickenBridge.scm",(void*)f_22799},
{"f_22792ChickenBridge.scm",(void*)f_22792},
{"f_22347ChickenBridge.scm",(void*)f_22347},
{"f_22781ChickenBridge.scm",(void*)f_22781},
{"f_22777ChickenBridge.scm",(void*)f_22777},
{"f_22354ChickenBridge.scm",(void*)f_22354},
{"f_22652ChickenBridge.scm",(void*)f_22652},
{"f_22673ChickenBridge.scm",(void*)f_22673},
{"f_22675ChickenBridge.scm",(void*)f_22675},
{"f_22689ChickenBridge.scm",(void*)f_22689},
{"f_22742ChickenBridge.scm",(void*)f_22742},
{"f_22692ChickenBridge.scm",(void*)f_22692},
{"f_22727ChickenBridge.scm",(void*)f_22727},
{"f_22695ChickenBridge.scm",(void*)f_22695},
{"f_22708ChickenBridge.scm",(void*)f_22708},
{"f_22720ChickenBridge.scm",(void*)f_22720},
{"f_22712ChickenBridge.scm",(void*)f_22712},
{"f_22698ChickenBridge.scm",(void*)f_22698},
{"f_22662ChickenBridge.scm",(void*)f_22662},
{"f_22357ChickenBridge.scm",(void*)f_22357},
{"f_22616ChickenBridge.scm",(void*)f_22616},
{"f_22642ChickenBridge.scm",(void*)f_22642},
{"f_22627ChickenBridge.scm",(void*)f_22627},
{"f_22360ChickenBridge.scm",(void*)f_22360},
{"f_22364ChickenBridge.scm",(void*)f_22364},
{"f_22560ChickenBridge.scm",(void*)f_22560},
{"f_22570ChickenBridge.scm",(void*)f_22570},
{"f_22573ChickenBridge.scm",(void*)f_22573},
{"f_22594ChickenBridge.scm",(void*)f_22594},
{"f_22576ChickenBridge.scm",(void*)f_22576},
{"f_22580ChickenBridge.scm",(void*)f_22580},
{"f_22367ChickenBridge.scm",(void*)f_22367},
{"f_22370ChickenBridge.scm",(void*)f_22370},
{"f_22523ChickenBridge.scm",(void*)f_22523},
{"f_22531ChickenBridge.scm",(void*)f_22531},
{"f_22527ChickenBridge.scm",(void*)f_22527},
{"f_22373ChickenBridge.scm",(void*)f_22373},
{"f_22401ChickenBridge.scm",(void*)f_22401},
{"f_22404ChickenBridge.scm",(void*)f_22404},
{"f_22407ChickenBridge.scm",(void*)f_22407},
{"f_22410ChickenBridge.scm",(void*)f_22410},
{"f_22413ChickenBridge.scm",(void*)f_22413},
{"f_22472ChickenBridge.scm",(void*)f_22472},
{"f_33922ChickenBridge.scm",(void*)f_33922},
{"f_33938ChickenBridge.scm",(void*)f_33938},
{"f_33941ChickenBridge.scm",(void*)f_33941},
{"f_33944ChickenBridge.scm",(void*)f_33944},
{"f_33947ChickenBridge.scm",(void*)f_33947},
{"f_33958ChickenBridge.scm",(void*)f_33958},
{"f_33916ChickenBridge.scm",(void*)f_33916},
{"f_22829ChickenBridge.scm",(void*)f_22829},
{"f_33777ChickenBridge.scm",(void*)f_33777},
{"f_33816ChickenBridge.scm",(void*)f_33816},
{"f_33790ChickenBridge.scm",(void*)f_33790},
{"f_33771ChickenBridge.scm",(void*)f_33771},
{"f_22832ChickenBridge.scm",(void*)f_22832},
{"f_33359ChickenBridge.scm",(void*)f_33359},
{"f_33363ChickenBridge.scm",(void*)f_33363},
{"f_33375ChickenBridge.scm",(void*)f_33375},
{"f_33433ChickenBridge.scm",(void*)f_33433},
{"f_33436ChickenBridge.scm",(void*)f_33436},
{"f_33439ChickenBridge.scm",(void*)f_33439},
{"f_33651ChickenBridge.scm",(void*)f_33651},
{"f_33589ChickenBridge.scm",(void*)f_33589},
{"f_33623ChickenBridge.scm",(void*)f_33623},
{"f_33598ChickenBridge.scm",(void*)f_33598},
{"f_33609ChickenBridge.scm",(void*)f_33609},
{"f_33605ChickenBridge.scm",(void*)f_33605},
{"f_33448ChickenBridge.scm",(void*)f_33448},
{"f_33526ChickenBridge.scm",(void*)f_33526},
{"f_33567ChickenBridge.scm",(void*)f_33567},
{"f_33571ChickenBridge.scm",(void*)f_33571},
{"f_33575ChickenBridge.scm",(void*)f_33575},
{"f_33530ChickenBridge.scm",(void*)f_33530},
{"f_33534ChickenBridge.scm",(void*)f_33534},
{"f_33561ChickenBridge.scm",(void*)f_33561},
{"f_33537ChickenBridge.scm",(void*)f_33537},
{"f_33451ChickenBridge.scm",(void*)f_33451},
{"f_33523ChickenBridge.scm",(void*)f_33523},
{"f_33465ChickenBridge.scm",(void*)f_33465},
{"f_33467ChickenBridge.scm",(void*)f_33467},
{"f_33515ChickenBridge.scm",(void*)f_33515},
{"f_33486ChickenBridge.scm",(void*)f_33486},
{"f_33503ChickenBridge.scm",(void*)f_33503},
{"f_33489ChickenBridge.scm",(void*)f_33489},
{"f_33482ChickenBridge.scm",(void*)f_33482},
{"f_33454ChickenBridge.scm",(void*)f_33454},
{"f_33384ChickenBridge.scm",(void*)f_33384},
{"f_33394ChickenBridge.scm",(void*)f_33394},
{"f_33400ChickenBridge.scm",(void*)f_33400},
{"f_33372ChickenBridge.scm",(void*)f_33372},
{"f_33320ChickenBridge.scm",(void*)f_33320},
{"f_33337ChickenBridge.scm",(void*)f_33337},
{"f_33353ChickenBridge.scm",(void*)f_33353},
{"f_33331ChickenBridge.scm",(void*)f_33331},
{"f_33314ChickenBridge.scm",(void*)f_33314},
{"f_22835ChickenBridge.scm",(void*)f_22835},
{"f_33238ChickenBridge.scm",(void*)f_33238},
{"f_22838ChickenBridge.scm",(void*)f_22838},
{"f_33214ChickenBridge.scm",(void*)f_33214},
{"f_33226ChickenBridge.scm",(void*)f_33226},
{"f_33222ChickenBridge.scm",(void*)f_33222},
{"f_33200ChickenBridge.scm",(void*)f_33200},
{"f_33208ChickenBridge.scm",(void*)f_33208},
{"f_33194ChickenBridge.scm",(void*)f_33194},
{"f_22841ChickenBridge.scm",(void*)f_22841},
{"f_33186ChickenBridge.scm",(void*)f_33186},
{"f_26612ChickenBridge.scm",(void*)f_26612},
{"f_26615ChickenBridge.scm",(void*)f_26615},
{"f_26781ChickenBridge.scm",(void*)f_26781},
{"f_26777ChickenBridge.scm",(void*)f_26777},
{"f_26767ChickenBridge.scm",(void*)f_26767},
{"f_26622ChickenBridge.scm",(void*)f_26622},
{"f_26626ChickenBridge.scm",(void*)f_26626},
{"f_26629ChickenBridge.scm",(void*)f_26629},
{"f_26640ChickenBridge.scm",(void*)f_26640},
{"f_26648ChickenBridge.scm",(void*)f_26648},
{"f_26720ChickenBridge.scm",(void*)f_26720},
{"f_26728ChickenBridge.scm",(void*)f_26728},
{"f_26724ChickenBridge.scm",(void*)f_26724},
{"f_26716ChickenBridge.scm",(void*)f_26716},
{"f_26712ChickenBridge.scm",(void*)f_26712},
{"f_26684ChickenBridge.scm",(void*)f_26684},
{"f_26680ChickenBridge.scm",(void*)f_26680},
{"f_26644ChickenBridge.scm",(void*)f_26644},
{"f_23259ChickenBridge.scm",(void*)f_23259},
{"f_33172ChickenBridge.scm",(void*)f_33172},
{"f_23262ChickenBridge.scm",(void*)f_23262},
{"f_33143ChickenBridge.scm",(void*)f_33143},
{"f_33147ChickenBridge.scm",(void*)f_33147},
{"f_23265ChickenBridge.scm",(void*)f_23265},
{"f_33140ChickenBridge.scm",(void*)f_33140},
{"f_23268ChickenBridge.scm",(void*)f_23268},
{"f_32998ChickenBridge.scm",(void*)f_32998},
{"f_26794ChickenBridge.scm",(void*)f_26794},
{"f_26926ChickenBridge.scm",(void*)f_26926},
{"f_26797ChickenBridge.scm",(void*)f_26797},
{"f_26808ChickenBridge.scm",(void*)f_26808},
{"f_26816ChickenBridge.scm",(void*)f_26816},
{"f_26840ChickenBridge.scm",(void*)f_26840},
{"f_26843ChickenBridge.scm",(void*)f_26843},
{"f_26851ChickenBridge.scm",(void*)f_26851},
{"f_26859ChickenBridge.scm",(void*)f_26859},
{"f_26879ChickenBridge.scm",(void*)f_26879},
{"f_26875ChickenBridge.scm",(void*)f_26875},
{"f_26855ChickenBridge.scm",(void*)f_26855},
{"f_26847ChickenBridge.scm",(void*)f_26847},
{"f_26836ChickenBridge.scm",(void*)f_26836},
{"f_26812ChickenBridge.scm",(void*)f_26812},
{"f_26788ChickenBridge.scm",(void*)f_26788},
{"f_31710ChickenBridge.scm",(void*)f_31710},
{"f_31713ChickenBridge.scm",(void*)f_31713},
{"f_31716ChickenBridge.scm",(void*)f_31716},
{"f_31719ChickenBridge.scm",(void*)f_31719},
{"f_31722ChickenBridge.scm",(void*)f_31722},
{"f_31725ChickenBridge.scm",(void*)f_31725},
{"f_31728ChickenBridge.scm",(void*)f_31728},
{"f_31731ChickenBridge.scm",(void*)f_31731},
{"f_31734ChickenBridge.scm",(void*)f_31734},
{"f_31737ChickenBridge.scm",(void*)f_31737},
{"f_31740ChickenBridge.scm",(void*)f_31740},
{"f_31865ChickenBridge.scm",(void*)f_31865},
{"f_31868ChickenBridge.scm",(void*)f_31868},
{"f_31871ChickenBridge.scm",(void*)f_31871},
{"f_32935ChickenBridge.scm",(void*)f_32935},
{"f_32963ChickenBridge.scm",(void*)f_32963},
{"f_32602ChickenBridge.scm",(void*)f_32602},
{"f_32929ChickenBridge.scm",(void*)f_32929},
{"f_32647ChickenBridge.scm",(void*)f_32647},
{"f_32653ChickenBridge.scm",(void*)f_32653},
{"f_32656ChickenBridge.scm",(void*)f_32656},
{"f_32659ChickenBridge.scm",(void*)f_32659},
{"f_32663ChickenBridge.scm",(void*)f_32663},
{"f_32873ChickenBridge.scm",(void*)f_32873},
{"f_32885ChickenBridge.scm",(void*)f_32885},
{"f_32881ChickenBridge.scm",(void*)f_32881},
{"f_32666ChickenBridge.scm",(void*)f_32666},
{"f_32830ChickenBridge.scm",(void*)f_32830},
{"f_32866ChickenBridge.scm",(void*)f_32866},
{"f_32859ChickenBridge.scm",(void*)f_32859},
{"f_32669ChickenBridge.scm",(void*)f_32669},
{"f_32768ChickenBridge.scm",(void*)f_32768},
{"f_32776ChickenBridge.scm",(void*)f_32776},
{"f_32772ChickenBridge.scm",(void*)f_32772},
{"f_32764ChickenBridge.scm",(void*)f_32764},
{"f_32760ChickenBridge.scm",(void*)f_32760},
{"f_32716ChickenBridge.scm",(void*)f_32716},
{"f_32712ChickenBridge.scm",(void*)f_32712},
{"f_32679ChickenBridge.scm",(void*)f_32679},
{"f_32690ChickenBridge.scm",(void*)f_32690},
{"f_32698ChickenBridge.scm",(void*)f_32698},
{"f_32694ChickenBridge.scm",(void*)f_32694},
{"f_32892ChickenBridge.scm",(void*)f_32892},
{"f_32900ChickenBridge.scm",(void*)f_32900},
{"f_32914ChickenBridge.scm",(void*)f_32914},
{"f_32904ChickenBridge.scm",(void*)f_32904},
{"f_32895ChickenBridge.scm",(void*)f_32895},
{"f_32898ChickenBridge.scm",(void*)f_32898},
{"f_32604ChickenBridge.scm",(void*)f_32604},
{"f_32620ChickenBridge.scm",(void*)f_32620},
{"f_32531ChickenBridge.scm",(void*)f_32531},
{"f_32542ChickenBridge.scm",(void*)f_32542},
{"f_32545ChickenBridge.scm",(void*)f_32545},
{"f_32552ChickenBridge.scm",(void*)f_32552},
{"f_32521ChickenBridge.scm",(void*)f_32521},
{"f_32176ChickenBridge.scm",(void*)f_32176},
{"f_32525ChickenBridge.scm",(void*)f_32525},
{"f_32463ChickenBridge.scm",(void*)f_32463},
{"f_32481ChickenBridge.scm",(void*)f_32481},
{"f_32491ChickenBridge.scm",(void*)f_32491},
{"f_32467ChickenBridge.scm",(void*)f_32467},
{"f_32454ChickenBridge.scm",(void*)f_32454},
{"f_32154ChickenBridge.scm",(void*)f_32154},
{"f_32458ChickenBridge.scm",(void*)f_32458},
{"f_32448ChickenBridge.scm",(void*)f_32448},
{"f_32136ChickenBridge.scm",(void*)f_32136},
{"f_32439ChickenBridge.scm",(void*)f_32439},
{"f_32145ChickenBridge.scm",(void*)f_32145},
{"f_32443ChickenBridge.scm",(void*)f_32443},
{"f_32376ChickenBridge.scm",(void*)f_32376},
{"f_32401ChickenBridge.scm",(void*)f_32401},
{"f_32101ChickenBridge.scm",(void*)f_32101},
{"f_32389ChickenBridge.scm",(void*)f_32389},
{"f_32200ChickenBridge.scm",(void*)f_32200},
{"f_32327ChickenBridge.scm",(void*)f_32327},
{"f_32322ChickenBridge.scm",(void*)f_32322},
{"f_32202ChickenBridge.scm",(void*)f_32202},
{"f_32321ChickenBridge.scm",(void*)f_32321},
{"f_32317ChickenBridge.scm",(void*)f_32317},
{"f_32309ChickenBridge.scm",(void*)f_32309},
{"f_32273ChickenBridge.scm",(void*)f_32273},
{"f_32306ChickenBridge.scm",(void*)f_32306},
{"f_32302ChickenBridge.scm",(void*)f_32302},
{"f_32283ChickenBridge.scm",(void*)f_32283},
{"f_32262ChickenBridge.scm",(void*)f_32262},
{"f_32232ChickenBridge.scm",(void*)f_32232},
{"f_32204ChickenBridge.scm",(void*)f_32204},
{"f_32181ChickenBridge.scm",(void*)f_32181},
{"f_32186ChickenBridge.scm",(void*)f_32186},
{"f_32191ChickenBridge.scm",(void*)f_32191},
{"f_32159ChickenBridge.scm",(void*)f_32159},
{"f_32163ChickenBridge.scm",(void*)f_32163},
{"f_32115ChickenBridge.scm",(void*)f_32115},
{"f_32119ChickenBridge.scm",(void*)f_32119},
{"f_32106ChickenBridge.scm",(void*)f_32106},
{"f_32110ChickenBridge.scm",(void*)f_32110},
{"f_32094ChickenBridge.scm",(void*)f_32094},
{"f_32091ChickenBridge.scm",(void*)f_32091},
{"f_32077ChickenBridge.scm",(void*)f_32077},
{"f_32082ChickenBridge.scm",(void*)f_32082},
{"f_32063ChickenBridge.scm",(void*)f_32063},
{"f_32068ChickenBridge.scm",(void*)f_32068},
{"f_31873ChickenBridge.scm",(void*)f_31873},
{"f_31934ChickenBridge.scm",(void*)f_31934},
{"f_31936ChickenBridge.scm",(void*)f_31936},
{"f_31946ChickenBridge.scm",(void*)f_31946},
{"f_31965ChickenBridge.scm",(void*)f_31965},
{"f_32005ChickenBridge.scm",(void*)f_32005},
{"f_32047ChickenBridge.scm",(void*)f_32047},
{"f_32017ChickenBridge.scm",(void*)f_32017},
{"f_32002ChickenBridge.scm",(void*)f_32002},
{"f_31920ChickenBridge.scm",(void*)f_31920},
{"f_31885ChickenBridge.scm",(void*)f_31885},
{"f_31912ChickenBridge.scm",(void*)f_31912},
{"f_31893ChickenBridge.scm",(void*)f_31893},
{"f_31900ChickenBridge.scm",(void*)f_31900},
{"f_31904ChickenBridge.scm",(void*)f_31904},
{"f_31908ChickenBridge.scm",(void*)f_31908},
{"f_31985ChickenBridge.scm",(void*)f_31985},
{"f_31963ChickenBridge.scm",(void*)f_31963},
{"f_31949ChickenBridge.scm",(void*)f_31949},
{"f_31952ChickenBridge.scm",(void*)f_31952},
{"f_31927ChickenBridge.scm",(void*)f_31927},
{"f_31856ChickenBridge.scm",(void*)f_31856},
{"f_31861ChickenBridge.scm",(void*)f_31861},
{"f_31799ChickenBridge.scm",(void*)f_31799},
{"f_31832ChickenBridge.scm",(void*)f_31832},
{"f_31812ChickenBridge.scm",(void*)f_31812},
{"f_31820ChickenBridge.scm",(void*)f_31820},
{"f_31803ChickenBridge.scm",(void*)f_31803},
{"f_31742ChickenBridge.scm",(void*)f_31742},
{"f_31775ChickenBridge.scm",(void*)f_31775},
{"f_31755ChickenBridge.scm",(void*)f_31755},
{"f_31763ChickenBridge.scm",(void*)f_31763},
{"f_31746ChickenBridge.scm",(void*)f_31746},
{"f_31652ChickenBridge.scm",(void*)f_31652},
{"f_31706ChickenBridge.scm",(void*)f_31706},
{"f_31701ChickenBridge.scm",(void*)f_31701},
{"f_31664ChickenBridge.scm",(void*)f_31664},
{"f_31670ChickenBridge.scm",(void*)f_31670},
{"f_31696ChickenBridge.scm",(void*)f_31696},
{"f_31700ChickenBridge.scm",(void*)f_31700},
{"f_31676ChickenBridge.scm",(void*)f_31676},
{"f_31694ChickenBridge.scm",(void*)f_31694},
{"f_31691ChickenBridge.scm",(void*)f_31691},
{"f_31687ChickenBridge.scm",(void*)f_31687},
{"f_31680ChickenBridge.scm",(void*)f_31680},
{"f_31637ChickenBridge.scm",(void*)f_31637},
{"f_31642ChickenBridge.scm",(void*)f_31642},
{"f_31609ChickenBridge.scm",(void*)f_31609},
{"f_31614ChickenBridge.scm",(void*)f_31614},
{"f_31581ChickenBridge.scm",(void*)f_31581},
{"f_31586ChickenBridge.scm",(void*)f_31586},
{"f_31553ChickenBridge.scm",(void*)f_31553},
{"f_31558ChickenBridge.scm",(void*)f_31558},
{"f_31525ChickenBridge.scm",(void*)f_31525},
{"f_31530ChickenBridge.scm",(void*)f_31530},
{"f_31497ChickenBridge.scm",(void*)f_31497},
{"f_31502ChickenBridge.scm",(void*)f_31502},
{"f_31469ChickenBridge.scm",(void*)f_31469},
{"f_31474ChickenBridge.scm",(void*)f_31474},
{"f_31441ChickenBridge.scm",(void*)f_31441},
{"f_31446ChickenBridge.scm",(void*)f_31446},
{"f_31413ChickenBridge.scm",(void*)f_31413},
{"f_31418ChickenBridge.scm",(void*)f_31418},
{"f_31385ChickenBridge.scm",(void*)f_31385},
{"f_31390ChickenBridge.scm",(void*)f_31390},
{"f_31362ChickenBridge.scm",(void*)f_31362},
{"f_31367ChickenBridge.scm",(void*)f_31367},
{"f_31366ChickenBridge.scm",(void*)f_31366},
{"f_31343ChickenBridge.scm",(void*)f_31343},
{"f_31348ChickenBridge.scm",(void*)f_31348},
{"f_31288ChickenBridge.scm",(void*)f_31288},
{"f_31295ChickenBridge.scm",(void*)f_31295},
{"f_31298ChickenBridge.scm",(void*)f_31298},
{"f_31322ChickenBridge.scm",(void*)f_31322},
{"f_31302ChickenBridge.scm",(void*)f_31302},
{"f_31292ChickenBridge.scm",(void*)f_31292},
{"f_31241ChickenBridge.scm",(void*)f_31241},
{"f_31248ChickenBridge.scm",(void*)f_31248},
{"f_31251ChickenBridge.scm",(void*)f_31251},
{"f_31271ChickenBridge.scm",(void*)f_31271},
{"f_31255ChickenBridge.scm",(void*)f_31255},
{"f_31218ChickenBridge.scm",(void*)f_31218},
{"f_31223ChickenBridge.scm",(void*)f_31223},
{"f_31222ChickenBridge.scm",(void*)f_31222},
{"f_31199ChickenBridge.scm",(void*)f_31199},
{"f_31204ChickenBridge.scm",(void*)f_31204},
{"f_31176ChickenBridge.scm",(void*)f_31176},
{"f_31181ChickenBridge.scm",(void*)f_31181},
{"f_31180ChickenBridge.scm",(void*)f_31180},
{"f_31157ChickenBridge.scm",(void*)f_31157},
{"f_31162ChickenBridge.scm",(void*)f_31162},
{"f_31138ChickenBridge.scm",(void*)f_31138},
{"f_31143ChickenBridge.scm",(void*)f_31143},
{"f_31142ChickenBridge.scm",(void*)f_31142},
{"f_31123ChickenBridge.scm",(void*)f_31123},
{"f_31128ChickenBridge.scm",(void*)f_31128},
{"f_31104ChickenBridge.scm",(void*)f_31104},
{"f_31109ChickenBridge.scm",(void*)f_31109},
{"f_31108ChickenBridge.scm",(void*)f_31108},
{"f_31089ChickenBridge.scm",(void*)f_31089},
{"f_31094ChickenBridge.scm",(void*)f_31094},
{"f_31074ChickenBridge.scm",(void*)f_31074},
{"f_31079ChickenBridge.scm",(void*)f_31079},
{"f_31056ChickenBridge.scm",(void*)f_31056},
{"f_31064ChickenBridge.scm",(void*)f_31064},
{"f_31060ChickenBridge.scm",(void*)f_31060},
{"f_30586ChickenBridge.scm",(void*)f_30586},
{"f_31014ChickenBridge.scm",(void*)f_31014},
{"f_31029ChickenBridge.scm",(void*)f_31029},
{"f_31021ChickenBridge.scm",(void*)f_31021},
{"f_30985ChickenBridge.scm",(void*)f_30985},
{"f_30989ChickenBridge.scm",(void*)f_30989},
{"f_30950ChickenBridge.scm",(void*)f_30950},
{"f_30954ChickenBridge.scm",(void*)f_30954},
{"f_30915ChickenBridge.scm",(void*)f_30915},
{"f_30919ChickenBridge.scm",(void*)f_30919},
{"f_30590ChickenBridge.scm",(void*)f_30590},
{"f_30879ChickenBridge.scm",(void*)f_30879},
{"f_30894ChickenBridge.scm",(void*)f_30894},
{"f_30886ChickenBridge.scm",(void*)f_30886},
{"f_30850ChickenBridge.scm",(void*)f_30850},
{"f_30854ChickenBridge.scm",(void*)f_30854},
{"f_30815ChickenBridge.scm",(void*)f_30815},
{"f_30819ChickenBridge.scm",(void*)f_30819},
{"f_30780ChickenBridge.scm",(void*)f_30780},
{"f_30784ChickenBridge.scm",(void*)f_30784},
{"f_30593ChickenBridge.scm",(void*)f_30593},
{"f_30744ChickenBridge.scm",(void*)f_30744},
{"f_30759ChickenBridge.scm",(void*)f_30759},
{"f_30751ChickenBridge.scm",(void*)f_30751},
{"f_30715ChickenBridge.scm",(void*)f_30715},
{"f_30719ChickenBridge.scm",(void*)f_30719},
{"f_30680ChickenBridge.scm",(void*)f_30680},
{"f_30684ChickenBridge.scm",(void*)f_30684},
{"f_30645ChickenBridge.scm",(void*)f_30645},
{"f_30649ChickenBridge.scm",(void*)f_30649},
{"f_30596ChickenBridge.scm",(void*)f_30596},
{"f_30599ChickenBridge.scm",(void*)f_30599},
{"f_30603ChickenBridge.scm",(void*)f_30603},
{"f_30567ChickenBridge.scm",(void*)f_30567},
{"f_30572ChickenBridge.scm",(void*)f_30572},
{"f_30116ChickenBridge.scm",(void*)f_30116},
{"f_30544ChickenBridge.scm",(void*)f_30544},
{"f_30559ChickenBridge.scm",(void*)f_30559},
{"f_30551ChickenBridge.scm",(void*)f_30551},
{"f_30515ChickenBridge.scm",(void*)f_30515},
{"f_30519ChickenBridge.scm",(void*)f_30519},
{"f_30480ChickenBridge.scm",(void*)f_30480},
{"f_30484ChickenBridge.scm",(void*)f_30484},
{"f_30445ChickenBridge.scm",(void*)f_30445},
{"f_30449ChickenBridge.scm",(void*)f_30449},
{"f_30120ChickenBridge.scm",(void*)f_30120},
{"f_30409ChickenBridge.scm",(void*)f_30409},
{"f_30424ChickenBridge.scm",(void*)f_30424},
{"f_30416ChickenBridge.scm",(void*)f_30416},
{"f_30380ChickenBridge.scm",(void*)f_30380},
{"f_30384ChickenBridge.scm",(void*)f_30384},
{"f_30345ChickenBridge.scm",(void*)f_30345},
{"f_30349ChickenBridge.scm",(void*)f_30349},
{"f_30310ChickenBridge.scm",(void*)f_30310},
{"f_30314ChickenBridge.scm",(void*)f_30314},
{"f_30123ChickenBridge.scm",(void*)f_30123},
{"f_30274ChickenBridge.scm",(void*)f_30274},
{"f_30289ChickenBridge.scm",(void*)f_30289},
{"f_30281ChickenBridge.scm",(void*)f_30281},
{"f_30245ChickenBridge.scm",(void*)f_30245},
{"f_30249ChickenBridge.scm",(void*)f_30249},
{"f_30210ChickenBridge.scm",(void*)f_30210},
{"f_30214ChickenBridge.scm",(void*)f_30214},
{"f_30175ChickenBridge.scm",(void*)f_30175},
{"f_30179ChickenBridge.scm",(void*)f_30179},
{"f_30126ChickenBridge.scm",(void*)f_30126},
{"f_30129ChickenBridge.scm",(void*)f_30129},
{"f_30133ChickenBridge.scm",(void*)f_30133},
{"f_30097ChickenBridge.scm",(void*)f_30097},
{"f_30102ChickenBridge.scm",(void*)f_30102},
{"f_29646ChickenBridge.scm",(void*)f_29646},
{"f_30074ChickenBridge.scm",(void*)f_30074},
{"f_30089ChickenBridge.scm",(void*)f_30089},
{"f_30081ChickenBridge.scm",(void*)f_30081},
{"f_30045ChickenBridge.scm",(void*)f_30045},
{"f_30049ChickenBridge.scm",(void*)f_30049},
{"f_30010ChickenBridge.scm",(void*)f_30010},
{"f_30014ChickenBridge.scm",(void*)f_30014},
{"f_29975ChickenBridge.scm",(void*)f_29975},
{"f_29979ChickenBridge.scm",(void*)f_29979},
{"f_29650ChickenBridge.scm",(void*)f_29650},
{"f_29939ChickenBridge.scm",(void*)f_29939},
{"f_29954ChickenBridge.scm",(void*)f_29954},
{"f_29946ChickenBridge.scm",(void*)f_29946},
{"f_29910ChickenBridge.scm",(void*)f_29910},
{"f_29914ChickenBridge.scm",(void*)f_29914},
{"f_29875ChickenBridge.scm",(void*)f_29875},
{"f_29879ChickenBridge.scm",(void*)f_29879},
{"f_29840ChickenBridge.scm",(void*)f_29840},
{"f_29844ChickenBridge.scm",(void*)f_29844},
{"f_29653ChickenBridge.scm",(void*)f_29653},
{"f_29804ChickenBridge.scm",(void*)f_29804},
{"f_29819ChickenBridge.scm",(void*)f_29819},
{"f_29811ChickenBridge.scm",(void*)f_29811},
{"f_29775ChickenBridge.scm",(void*)f_29775},
{"f_29779ChickenBridge.scm",(void*)f_29779},
{"f_29740ChickenBridge.scm",(void*)f_29740},
{"f_29744ChickenBridge.scm",(void*)f_29744},
{"f_29705ChickenBridge.scm",(void*)f_29705},
{"f_29709ChickenBridge.scm",(void*)f_29709},
{"f_29656ChickenBridge.scm",(void*)f_29656},
{"f_29659ChickenBridge.scm",(void*)f_29659},
{"f_29663ChickenBridge.scm",(void*)f_29663},
{"f_29627ChickenBridge.scm",(void*)f_29627},
{"f_29632ChickenBridge.scm",(void*)f_29632},
{"f_28898ChickenBridge.scm",(void*)f_28898},
{"f_29604ChickenBridge.scm",(void*)f_29604},
{"f_29619ChickenBridge.scm",(void*)f_29619},
{"f_29611ChickenBridge.scm",(void*)f_29611},
{"f_29575ChickenBridge.scm",(void*)f_29575},
{"f_29579ChickenBridge.scm",(void*)f_29579},
{"f_29540ChickenBridge.scm",(void*)f_29540},
{"f_29544ChickenBridge.scm",(void*)f_29544},
{"f_29505ChickenBridge.scm",(void*)f_29505},
{"f_29509ChickenBridge.scm",(void*)f_29509},
{"f_29470ChickenBridge.scm",(void*)f_29470},
{"f_29474ChickenBridge.scm",(void*)f_29474},
{"f_28902ChickenBridge.scm",(void*)f_28902},
{"f_29434ChickenBridge.scm",(void*)f_29434},
{"f_29449ChickenBridge.scm",(void*)f_29449},
{"f_29441ChickenBridge.scm",(void*)f_29441},
{"f_29405ChickenBridge.scm",(void*)f_29405},
{"f_29409ChickenBridge.scm",(void*)f_29409},
{"f_29370ChickenBridge.scm",(void*)f_29370},
{"f_29374ChickenBridge.scm",(void*)f_29374},
{"f_29335ChickenBridge.scm",(void*)f_29335},
{"f_29339ChickenBridge.scm",(void*)f_29339},
{"f_29300ChickenBridge.scm",(void*)f_29300},
{"f_29304ChickenBridge.scm",(void*)f_29304},
{"f_28905ChickenBridge.scm",(void*)f_28905},
{"f_29264ChickenBridge.scm",(void*)f_29264},
{"f_29279ChickenBridge.scm",(void*)f_29279},
{"f_29271ChickenBridge.scm",(void*)f_29271},
{"f_29235ChickenBridge.scm",(void*)f_29235},
{"f_29239ChickenBridge.scm",(void*)f_29239},
{"f_29200ChickenBridge.scm",(void*)f_29200},
{"f_29204ChickenBridge.scm",(void*)f_29204},
{"f_29165ChickenBridge.scm",(void*)f_29165},
{"f_29169ChickenBridge.scm",(void*)f_29169},
{"f_29130ChickenBridge.scm",(void*)f_29130},
{"f_29134ChickenBridge.scm",(void*)f_29134},
{"f_28908ChickenBridge.scm",(void*)f_28908},
{"f_29094ChickenBridge.scm",(void*)f_29094},
{"f_29109ChickenBridge.scm",(void*)f_29109},
{"f_29101ChickenBridge.scm",(void*)f_29101},
{"f_29065ChickenBridge.scm",(void*)f_29065},
{"f_29069ChickenBridge.scm",(void*)f_29069},
{"f_29030ChickenBridge.scm",(void*)f_29030},
{"f_29034ChickenBridge.scm",(void*)f_29034},
{"f_28995ChickenBridge.scm",(void*)f_28995},
{"f_28999ChickenBridge.scm",(void*)f_28999},
{"f_28960ChickenBridge.scm",(void*)f_28960},
{"f_28964ChickenBridge.scm",(void*)f_28964},
{"f_28911ChickenBridge.scm",(void*)f_28911},
{"f_28914ChickenBridge.scm",(void*)f_28914},
{"f_28918ChickenBridge.scm",(void*)f_28918},
{"f_28879ChickenBridge.scm",(void*)f_28879},
{"f_28884ChickenBridge.scm",(void*)f_28884},
{"f_28150ChickenBridge.scm",(void*)f_28150},
{"f_28856ChickenBridge.scm",(void*)f_28856},
{"f_28871ChickenBridge.scm",(void*)f_28871},
{"f_28863ChickenBridge.scm",(void*)f_28863},
{"f_28827ChickenBridge.scm",(void*)f_28827},
{"f_28831ChickenBridge.scm",(void*)f_28831},
{"f_28792ChickenBridge.scm",(void*)f_28792},
{"f_28796ChickenBridge.scm",(void*)f_28796},
{"f_28757ChickenBridge.scm",(void*)f_28757},
{"f_28761ChickenBridge.scm",(void*)f_28761},
{"f_28722ChickenBridge.scm",(void*)f_28722},
{"f_28726ChickenBridge.scm",(void*)f_28726},
{"f_28154ChickenBridge.scm",(void*)f_28154},
{"f_28686ChickenBridge.scm",(void*)f_28686},
{"f_28701ChickenBridge.scm",(void*)f_28701},
{"f_28693ChickenBridge.scm",(void*)f_28693},
{"f_28657ChickenBridge.scm",(void*)f_28657},
{"f_28661ChickenBridge.scm",(void*)f_28661},
{"f_28622ChickenBridge.scm",(void*)f_28622},
{"f_28626ChickenBridge.scm",(void*)f_28626},
{"f_28587ChickenBridge.scm",(void*)f_28587},
{"f_28591ChickenBridge.scm",(void*)f_28591},
{"f_28552ChickenBridge.scm",(void*)f_28552},
{"f_28556ChickenBridge.scm",(void*)f_28556},
{"f_28157ChickenBridge.scm",(void*)f_28157},
{"f_28516ChickenBridge.scm",(void*)f_28516},
{"f_28531ChickenBridge.scm",(void*)f_28531},
{"f_28523ChickenBridge.scm",(void*)f_28523},
{"f_28487ChickenBridge.scm",(void*)f_28487},
{"f_28491ChickenBridge.scm",(void*)f_28491},
{"f_28452ChickenBridge.scm",(void*)f_28452},
{"f_28456ChickenBridge.scm",(void*)f_28456},
{"f_28417ChickenBridge.scm",(void*)f_28417},
{"f_28421ChickenBridge.scm",(void*)f_28421},
{"f_28382ChickenBridge.scm",(void*)f_28382},
{"f_28386ChickenBridge.scm",(void*)f_28386},
{"f_28160ChickenBridge.scm",(void*)f_28160},
{"f_28346ChickenBridge.scm",(void*)f_28346},
{"f_28361ChickenBridge.scm",(void*)f_28361},
{"f_28353ChickenBridge.scm",(void*)f_28353},
{"f_28317ChickenBridge.scm",(void*)f_28317},
{"f_28321ChickenBridge.scm",(void*)f_28321},
{"f_28282ChickenBridge.scm",(void*)f_28282},
{"f_28286ChickenBridge.scm",(void*)f_28286},
{"f_28247ChickenBridge.scm",(void*)f_28247},
{"f_28251ChickenBridge.scm",(void*)f_28251},
{"f_28212ChickenBridge.scm",(void*)f_28212},
{"f_28216ChickenBridge.scm",(void*)f_28216},
{"f_28163ChickenBridge.scm",(void*)f_28163},
{"f_28166ChickenBridge.scm",(void*)f_28166},
{"f_28170ChickenBridge.scm",(void*)f_28170},
{"f_28131ChickenBridge.scm",(void*)f_28131},
{"f_28136ChickenBridge.scm",(void*)f_28136},
{"f_27680ChickenBridge.scm",(void*)f_27680},
{"f_28108ChickenBridge.scm",(void*)f_28108},
{"f_28123ChickenBridge.scm",(void*)f_28123},
{"f_28115ChickenBridge.scm",(void*)f_28115},
{"f_28079ChickenBridge.scm",(void*)f_28079},
{"f_28083ChickenBridge.scm",(void*)f_28083},
{"f_28044ChickenBridge.scm",(void*)f_28044},
{"f_28048ChickenBridge.scm",(void*)f_28048},
{"f_28009ChickenBridge.scm",(void*)f_28009},
{"f_28013ChickenBridge.scm",(void*)f_28013},
{"f_27684ChickenBridge.scm",(void*)f_27684},
{"f_27973ChickenBridge.scm",(void*)f_27973},
{"f_27988ChickenBridge.scm",(void*)f_27988},
{"f_27980ChickenBridge.scm",(void*)f_27980},
{"f_27944ChickenBridge.scm",(void*)f_27944},
{"f_27948ChickenBridge.scm",(void*)f_27948},
{"f_27909ChickenBridge.scm",(void*)f_27909},
{"f_27913ChickenBridge.scm",(void*)f_27913},
{"f_27874ChickenBridge.scm",(void*)f_27874},
{"f_27878ChickenBridge.scm",(void*)f_27878},
{"f_27687ChickenBridge.scm",(void*)f_27687},
{"f_27838ChickenBridge.scm",(void*)f_27838},
{"f_27853ChickenBridge.scm",(void*)f_27853},
{"f_27845ChickenBridge.scm",(void*)f_27845},
{"f_27809ChickenBridge.scm",(void*)f_27809},
{"f_27813ChickenBridge.scm",(void*)f_27813},
{"f_27774ChickenBridge.scm",(void*)f_27774},
{"f_27778ChickenBridge.scm",(void*)f_27778},
{"f_27739ChickenBridge.scm",(void*)f_27739},
{"f_27743ChickenBridge.scm",(void*)f_27743},
{"f_27690ChickenBridge.scm",(void*)f_27690},
{"f_27693ChickenBridge.scm",(void*)f_27693},
{"f_27697ChickenBridge.scm",(void*)f_27697},
{"f_27661ChickenBridge.scm",(void*)f_27661},
{"f_27666ChickenBridge.scm",(void*)f_27666},
{"f_26932ChickenBridge.scm",(void*)f_26932},
{"f_27638ChickenBridge.scm",(void*)f_27638},
{"f_27653ChickenBridge.scm",(void*)f_27653},
{"f_27645ChickenBridge.scm",(void*)f_27645},
{"f_27609ChickenBridge.scm",(void*)f_27609},
{"f_27613ChickenBridge.scm",(void*)f_27613},
{"f_27574ChickenBridge.scm",(void*)f_27574},
{"f_27578ChickenBridge.scm",(void*)f_27578},
{"f_27539ChickenBridge.scm",(void*)f_27539},
{"f_27543ChickenBridge.scm",(void*)f_27543},
{"f_27504ChickenBridge.scm",(void*)f_27504},
{"f_27508ChickenBridge.scm",(void*)f_27508},
{"f_26936ChickenBridge.scm",(void*)f_26936},
{"f_27468ChickenBridge.scm",(void*)f_27468},
{"f_27483ChickenBridge.scm",(void*)f_27483},
{"f_27475ChickenBridge.scm",(void*)f_27475},
{"f_27439ChickenBridge.scm",(void*)f_27439},
{"f_27443ChickenBridge.scm",(void*)f_27443},
{"f_27404ChickenBridge.scm",(void*)f_27404},
{"f_27408ChickenBridge.scm",(void*)f_27408},
{"f_27369ChickenBridge.scm",(void*)f_27369},
{"f_27373ChickenBridge.scm",(void*)f_27373},
{"f_27334ChickenBridge.scm",(void*)f_27334},
{"f_27338ChickenBridge.scm",(void*)f_27338},
{"f_26939ChickenBridge.scm",(void*)f_26939},
{"f_27298ChickenBridge.scm",(void*)f_27298},
{"f_27313ChickenBridge.scm",(void*)f_27313},
{"f_27305ChickenBridge.scm",(void*)f_27305},
{"f_27269ChickenBridge.scm",(void*)f_27269},
{"f_27273ChickenBridge.scm",(void*)f_27273},
{"f_27234ChickenBridge.scm",(void*)f_27234},
{"f_27238ChickenBridge.scm",(void*)f_27238},
{"f_27199ChickenBridge.scm",(void*)f_27199},
{"f_27203ChickenBridge.scm",(void*)f_27203},
{"f_27164ChickenBridge.scm",(void*)f_27164},
{"f_27168ChickenBridge.scm",(void*)f_27168},
{"f_26942ChickenBridge.scm",(void*)f_26942},
{"f_27128ChickenBridge.scm",(void*)f_27128},
{"f_27143ChickenBridge.scm",(void*)f_27143},
{"f_27135ChickenBridge.scm",(void*)f_27135},
{"f_27099ChickenBridge.scm",(void*)f_27099},
{"f_27103ChickenBridge.scm",(void*)f_27103},
{"f_27064ChickenBridge.scm",(void*)f_27064},
{"f_27068ChickenBridge.scm",(void*)f_27068},
{"f_27029ChickenBridge.scm",(void*)f_27029},
{"f_27033ChickenBridge.scm",(void*)f_27033},
{"f_26994ChickenBridge.scm",(void*)f_26994},
{"f_26998ChickenBridge.scm",(void*)f_26998},
{"f_26945ChickenBridge.scm",(void*)f_26945},
{"f_26948ChickenBridge.scm",(void*)f_26948},
{"f_26952ChickenBridge.scm",(void*)f_26952},
{"f_26594ChickenBridge.scm",(void*)f_26594},
{"f_26434ChickenBridge.scm",(void*)f_26434},
{"f_26469ChickenBridge.scm",(void*)f_26469},
{"f_26479ChickenBridge.scm",(void*)f_26479},
{"f_26483ChickenBridge.scm",(void*)f_26483},
{"f_26486ChickenBridge.scm",(void*)f_26486},
{"f_26547ChickenBridge.scm",(void*)f_26547},
{"f_26538ChickenBridge.scm",(void*)f_26538},
{"f_26489ChickenBridge.scm",(void*)f_26489},
{"f_26508ChickenBridge.scm",(void*)f_26508},
{"f_26515ChickenBridge.scm",(void*)f_26515},
{"f_26492ChickenBridge.scm",(void*)f_26492},
{"f_26498ChickenBridge.scm",(void*)f_26498},
{"f_26467ChickenBridge.scm",(void*)f_26467},
{"f_26442ChickenBridge.scm",(void*)f_26442},
{"f_26441ChickenBridge.scm",(void*)f_26441},
{"f_26602ChickenBridge.scm",(void*)f_26602},
{"f_26180ChickenBridge.scm",(void*)f_26180},
{"f_26202ChickenBridge.scm",(void*)f_26202},
{"f_26217ChickenBridge.scm",(void*)f_26217},
{"f_26220ChickenBridge.scm",(void*)f_26220},
{"f_26396ChickenBridge.scm",(void*)f_26396},
{"f_26390ChickenBridge.scm",(void*)f_26390},
{"f_26223ChickenBridge.scm",(void*)f_26223},
{"f_26372ChickenBridge.scm",(void*)f_26372},
{"f_26226ChickenBridge.scm",(void*)f_26226},
{"f_26229ChickenBridge.scm",(void*)f_26229},
{"f_26365ChickenBridge.scm",(void*)f_26365},
{"f_26353ChickenBridge.scm",(void*)f_26353},
{"f_26249ChickenBridge.scm",(void*)f_26249},
{"f_26256ChickenBridge.scm",(void*)f_26256},
{"f_26326ChickenBridge.scm",(void*)f_26326},
{"f_26312ChickenBridge.scm",(void*)f_26312},
{"f_26320ChickenBridge.scm",(void*)f_26320},
{"f_26259ChickenBridge.scm",(void*)f_26259},
{"f_26298ChickenBridge.scm",(void*)f_26298},
{"f_26262ChickenBridge.scm",(void*)f_26262},
{"f_26291ChickenBridge.scm",(void*)f_26291},
{"f_26268ChickenBridge.scm",(void*)f_26268},
{"f_26271ChickenBridge.scm",(void*)f_26271},
{"f_26275ChickenBridge.scm",(void*)f_26275},
{"f_26236ChickenBridge.scm",(void*)f_26236},
{"f_26239ChickenBridge.scm",(void*)f_26239},
{"f_26049ChickenBridge.scm",(void*)f_26049},
{"f_26058ChickenBridge.scm",(void*)f_26058},
{"f_26006ChickenBridge.scm",(void*)f_26006},
{"f_26012ChickenBridge.scm",(void*)f_26012},
{"f_26075ChickenBridge.scm",(void*)f_26075},
{"f_26161ChickenBridge.scm",(void*)f_26161},
{"f_26148ChickenBridge.scm",(void*)f_26148},
{"f_26156ChickenBridge.scm",(void*)f_26156},
{"f_26078ChickenBridge.scm",(void*)f_26078},
{"f_26082ChickenBridge.scm",(void*)f_26082},
{"f_26125ChickenBridge.scm",(void*)f_26125},
{"f_26087ChickenBridge.scm",(void*)f_26087},
{"f_26053ChickenBridge.scm",(void*)f_26053},
{"f_25948ChickenBridge.scm",(void*)f_25948},
{"f_25955ChickenBridge.scm",(void*)f_25955},
{"f_25986ChickenBridge.scm",(void*)f_25986},
{"f_25982ChickenBridge.scm",(void*)f_25982},
{"f_25974ChickenBridge.scm",(void*)f_25974},
{"f_25857ChickenBridge.scm",(void*)f_25857},
{"f_25864ChickenBridge.scm",(void*)f_25864},
{"f_25932ChickenBridge.scm",(void*)f_25932},
{"f_25875ChickenBridge.scm",(void*)f_25875},
{"f_25902ChickenBridge.scm",(void*)f_25902},
{"f_25886ChickenBridge.scm",(void*)f_25886},
{"f_25791ChickenBridge.scm",(void*)f_25791},
{"f_25802ChickenBridge.scm",(void*)f_25802},
{"f_25805ChickenBridge.scm",(void*)f_25805},
{"f_25812ChickenBridge.scm",(void*)f_25812},
{"f_25785ChickenBridge.scm",(void*)f_25785},
{"f_25239ChickenBridge.scm",(void*)f_25239},
{"f_25270ChickenBridge.scm",(void*)f_25270},
{"f_25734ChickenBridge.scm",(void*)f_25734},
{"f_25740ChickenBridge.scm",(void*)f_25740},
{"f_25281ChickenBridge.scm",(void*)f_25281},
{"f_25166ChickenBridge.scm",(void*)f_25166},
{"f_25191ChickenBridge.scm",(void*)f_25191},
{"f_25126ChickenBridge.scm",(void*)f_25126},
{"f_25139ChickenBridge.scm",(void*)f_25139},
{"f_25180ChickenBridge.scm",(void*)f_25180},
{"f_25285ChickenBridge.scm",(void*)f_25285},
{"f_25722ChickenBridge.scm",(void*)f_25722},
{"f_25718ChickenBridge.scm",(void*)f_25718},
{"f_25714ChickenBridge.scm",(void*)f_25714},
{"f_25288ChickenBridge.scm",(void*)f_25288},
{"f_25508ChickenBridge.scm",(void*)f_25508},
{"f_25617ChickenBridge.scm",(void*)f_25617},
{"f_25682ChickenBridge.scm",(void*)f_25682},
{"f_25624ChickenBridge.scm",(void*)f_25624},
{"f_25628ChickenBridge.scm",(void*)f_25628},
{"f_25632ChickenBridge.scm",(void*)f_25632},
{"f_25674ChickenBridge.scm",(void*)f_25674},
{"f_25670ChickenBridge.scm",(void*)f_25670},
{"f_25648ChickenBridge.scm",(void*)f_25648},
{"f_25511ChickenBridge.scm",(void*)f_25511},
{"f_25514ChickenBridge.scm",(void*)f_25514},
{"f_25413ChickenBridge.scm",(void*)f_25413},
{"f_25496ChickenBridge.scm",(void*)f_25496},
{"f_25463ChickenBridge.scm",(void*)f_25463},
{"f_25489ChickenBridge.scm",(void*)f_25489},
{"f_25471ChickenBridge.scm",(void*)f_25471},
{"f_25419ChickenBridge.scm",(void*)f_25419},
{"f_25459ChickenBridge.scm",(void*)f_25459},
{"f_25401ChickenBridge.scm",(void*)f_25401},
{"f_25372ChickenBridge.scm",(void*)f_25372},
{"f_25394ChickenBridge.scm",(void*)f_25394},
{"f_25380ChickenBridge.scm",(void*)f_25380},
{"f_25334ChickenBridge.scm",(void*)f_25334},
{"f_25291ChickenBridge.scm",(void*)f_25291},
{"f_25302ChickenBridge.scm",(void*)f_25302},
{"f_25306ChickenBridge.scm",(void*)f_25306},
{"f_25310ChickenBridge.scm",(void*)f_25310},
{"f_25314ChickenBridge.scm",(void*)f_25314},
{"f_25298ChickenBridge.scm",(void*)f_25298},
{"f_25258ChickenBridge.scm",(void*)f_25258},
{"f_25253ChickenBridge.scm",(void*)f_25253},
{"f_25248ChickenBridge.scm",(void*)f_25248},
{"f_25080ChickenBridge.scm",(void*)f_25080},
{"f_25091ChickenBridge.scm",(void*)f_25091},
{"f_25106ChickenBridge.scm",(void*)f_25106},
{"f_25042ChickenBridge.scm",(void*)f_25042},
{"f_25053ChickenBridge.scm",(void*)f_25053},
{"f_25068ChickenBridge.scm",(void*)f_25068},
{"f_24975ChickenBridge.scm",(void*)f_24975},
{"f_24995ChickenBridge.scm",(void*)f_24995},
{"f_25005ChickenBridge.scm",(void*)f_25005},
{"f_25018ChickenBridge.scm",(void*)f_25018},
{"f_24986ChickenBridge.scm",(void*)f_24986},
{"f_24993ChickenBridge.scm",(void*)f_24993},
{"f_24782ChickenBridge.scm",(void*)f_24782},
{"f_24842ChickenBridge.scm",(void*)f_24842},
{"f_24852ChickenBridge.scm",(void*)f_24852},
{"f_24966ChickenBridge.scm",(void*)f_24966},
{"f_24931ChickenBridge.scm",(void*)f_24931},
{"f_24923ChickenBridge.scm",(void*)f_24923},
{"f_24894ChickenBridge.scm",(void*)f_24894},
{"f_24872ChickenBridge.scm",(void*)f_24872},
{"f_24875ChickenBridge.scm",(void*)f_24875},
{"f_24863ChickenBridge.scm",(void*)f_24863},
{"f_24789ChickenBridge.scm",(void*)f_24789},
{"f_24840ChickenBridge.scm",(void*)f_24840},
{"f_24832ChickenBridge.scm",(void*)f_24832},
{"f_24792ChickenBridge.scm",(void*)f_24792},
{"f_24803ChickenBridge.scm",(void*)f_24803},
{"f_24807ChickenBridge.scm",(void*)f_24807},
{"f_24799ChickenBridge.scm",(void*)f_24799},
{"f_24640ChickenBridge.scm",(void*)f_24640},
{"f_24688ChickenBridge.scm",(void*)f_24688},
{"f_24698ChickenBridge.scm",(void*)f_24698},
{"f_24709ChickenBridge.scm",(void*)f_24709},
{"f_24746ChickenBridge.scm",(void*)f_24746},
{"f_24721ChickenBridge.scm",(void*)f_24721},
{"f_24712ChickenBridge.scm",(void*)f_24712},
{"f_24650ChickenBridge.scm",(void*)f_24650},
{"f_24686ChickenBridge.scm",(void*)f_24686},
{"f_24657ChickenBridge.scm",(void*)f_24657},
{"f_24289ChickenBridge.scm",(void*)f_24289},
{"f_24296ChickenBridge.scm",(void*)f_24296},
{"f_24530ChickenBridge.scm",(void*)f_24530},
{"f_24540ChickenBridge.scm",(void*)f_24540},
{"f_24551ChickenBridge.scm",(void*)f_24551},
{"f_24563ChickenBridge.scm",(void*)f_24563},
{"f_24566ChickenBridge.scm",(void*)f_24566},
{"f_24554ChickenBridge.scm",(void*)f_24554},
{"f_24302ChickenBridge.scm",(void*)f_24302},
{"f_24528ChickenBridge.scm",(void*)f_24528},
{"f_24524ChickenBridge.scm",(void*)f_24524},
{"f_24470ChickenBridge.scm",(void*)f_24470},
{"f_24435ChickenBridge.scm",(void*)f_24435},
{"f_24451ChickenBridge.scm",(void*)f_24451},
{"f_24406ChickenBridge.scm",(void*)f_24406},
{"f_24330ChickenBridge.scm",(void*)f_24330},
{"f_24333ChickenBridge.scm",(void*)f_24333},
{"f_24397ChickenBridge.scm",(void*)f_24397},
{"f_24393ChickenBridge.scm",(void*)f_24393},
{"f_24313ChickenBridge.scm",(void*)f_24313},
{"f_24324ChickenBridge.scm",(void*)f_24324},
{"f_24320ChickenBridge.scm",(void*)f_24320},
{"f_24242ChickenBridge.scm",(void*)f_24242},
{"f_24275ChickenBridge.scm",(void*)f_24275},
{"f_24257ChickenBridge.scm",(void*)f_24257},
{"f_24269ChickenBridge.scm",(void*)f_24269},
{"f_23860ChickenBridge.scm",(void*)f_23860},
{"f_24069ChickenBridge.scm",(void*)f_24069},
{"f_24079ChickenBridge.scm",(void*)f_24079},
{"f_24090ChickenBridge.scm",(void*)f_24090},
{"f_24210ChickenBridge.scm",(void*)f_24210},
{"f_24189ChickenBridge.scm",(void*)f_24189},
{"f_24168ChickenBridge.scm",(void*)f_24168},
{"f_24147ChickenBridge.scm",(void*)f_24147},
{"f_24126ChickenBridge.scm",(void*)f_24126},
{"f_24105ChickenBridge.scm",(void*)f_24105},
{"f_24093ChickenBridge.scm",(void*)f_24093},
{"f_23870ChickenBridge.scm",(void*)f_23870},
{"f_23873ChickenBridge.scm",(void*)f_23873},
{"f_24036ChickenBridge.scm",(void*)f_24036},
{"f_23876ChickenBridge.scm",(void*)f_23876},
{"f_24027ChickenBridge.scm",(void*)f_24027},
{"f_24007ChickenBridge.scm",(void*)f_24007},
{"f_23879ChickenBridge.scm",(void*)f_23879},
{"f_23972ChickenBridge.scm",(void*)f_23972},
{"f_23989ChickenBridge.scm",(void*)f_23989},
{"f_23882ChickenBridge.scm",(void*)f_23882},
{"f_23921ChickenBridge.scm",(void*)f_23921},
{"f_23955ChickenBridge.scm",(void*)f_23955},
{"f_23939ChickenBridge.scm",(void*)f_23939},
{"f_23924ChickenBridge.scm",(void*)f_23924},
{"f_23889ChickenBridge.scm",(void*)f_23889},
{"f_23900ChickenBridge.scm",(void*)f_23900},
{"f_23904ChickenBridge.scm",(void*)f_23904},
{"f_23896ChickenBridge.scm",(void*)f_23896},
{"f_23778ChickenBridge.scm",(void*)f_23778},
{"f_23782ChickenBridge.scm",(void*)f_23782},
{"f_23800ChickenBridge.scm",(void*)f_23800},
{"f_23618ChickenBridge.scm",(void*)f_23618},
{"f_23626ChickenBridge.scm",(void*)f_23626},
{"f_23636ChickenBridge.scm",(void*)f_23636},
{"f_23674ChickenBridge.scm",(void*)f_23674},
{"f_23677ChickenBridge.scm",(void*)f_23677},
{"f_23680ChickenBridge.scm",(void*)f_23680},
{"f_23755ChickenBridge.scm",(void*)f_23755},
{"f_23765ChickenBridge.scm",(void*)f_23765},
{"f_23683ChickenBridge.scm",(void*)f_23683},
{"f_23686ChickenBridge.scm",(void*)f_23686},
{"f_23689ChickenBridge.scm",(void*)f_23689},
{"f_23709ChickenBridge.scm",(void*)f_23709},
{"f_23719ChickenBridge.scm",(void*)f_23719},
{"f_23722ChickenBridge.scm",(void*)f_23722},
{"f_23725ChickenBridge.scm",(void*)f_23725},
{"f_23692ChickenBridge.scm",(void*)f_23692},
{"f_23695ChickenBridge.scm",(void*)f_23695},
{"f_23612ChickenBridge.scm",(void*)f_23612},
{"f_23606ChickenBridge.scm",(void*)f_23606},
{"f_23600ChickenBridge.scm",(void*)f_23600},
{"f_23529ChickenBridge.scm",(void*)f_23529},
{"f_23570ChickenBridge.scm",(void*)f_23570},
{"f_23574ChickenBridge.scm",(void*)f_23574},
{"f_23578ChickenBridge.scm",(void*)f_23578},
{"f_23582ChickenBridge.scm",(void*)f_23582},
{"f_23586ChickenBridge.scm",(void*)f_23586},
{"f_23590ChickenBridge.scm",(void*)f_23590},
{"f_23594ChickenBridge.scm",(void*)f_23594},
{"f_23598ChickenBridge.scm",(void*)f_23598},
{"f_23531ChickenBridge.scm",(void*)f_23531},
{"f_23537ChickenBridge.scm",(void*)f_23537},
{"f_23559ChickenBridge.scm",(void*)f_23559},
{"f_23548ChickenBridge.scm",(void*)f_23548},
{"f_23378ChickenBridge.scm",(void*)f_23378},
{"f_23393ChickenBridge.scm",(void*)f_23393},
{"f_23406ChickenBridge.scm",(void*)f_23406},
{"f_23366ChickenBridge.scm",(void*)f_23366},
{"f_23354ChickenBridge.scm",(void*)f_23354},
{"f_23342ChickenBridge.scm",(void*)f_23342},
{"f_23336ChickenBridge.scm",(void*)f_23336},
{"f_23330ChickenBridge.scm",(void*)f_23330},
{"f_23318ChickenBridge.scm",(void*)f_23318},
{"f_23306ChickenBridge.scm",(void*)f_23306},
{"f_23294ChickenBridge.scm",(void*)f_23294},
{"f_23282ChickenBridge.scm",(void*)f_23282},
{"f_23276ChickenBridge.scm",(void*)f_23276},
{"f_23240ChickenBridge.scm",(void*)f_23240},
{"f_23234ChickenBridge.scm",(void*)f_23234},
{"f_23187ChickenBridge.scm",(void*)f_23187},
{"f_23191ChickenBridge.scm",(void*)f_23191},
{"f_23207ChickenBridge.scm",(void*)f_23207},
{"f_23216ChickenBridge.scm",(void*)f_23216},
{"f_23194ChickenBridge.scm",(void*)f_23194},
{"f_23178ChickenBridge.scm",(void*)f_23178},
{"f_23182ChickenBridge.scm",(void*)f_23182},
{"f_23025ChickenBridge.scm",(void*)f_23025},
{"f_23152ChickenBridge.scm",(void*)f_23152},
{"f_23165ChickenBridge.scm",(void*)f_23165},
{"f_23147ChickenBridge.scm",(void*)f_23147},
{"f_23028ChickenBridge.scm",(void*)f_23028},
{"f_23144ChickenBridge.scm",(void*)f_23144},
{"f_23128ChickenBridge.scm",(void*)f_23128},
{"f_23056ChickenBridge.scm",(void*)f_23056},
{"f_23064ChickenBridge.scm",(void*)f_23064},
{"f_23074ChickenBridge.scm",(void*)f_23074},
{"f_23077ChickenBridge.scm",(void*)f_23077},
{"f_23059ChickenBridge.scm",(void*)f_23059},
{"f_22848ChickenBridge.scm",(void*)f_22848},
{"f_22852ChickenBridge.scm",(void*)f_22852},
{"f_22857ChickenBridge.scm",(void*)f_22857},
{"f_22860ChickenBridge.scm",(void*)f_22860},
{"f_20672ChickenBridge.scm",(void*)f_20672},
{"f_20685ChickenBridge.scm",(void*)f_20685},
{"f_20692ChickenBridge.scm",(void*)f_20692},
{"f_20699ChickenBridge.scm",(void*)f_20699},
{"f_20678ChickenBridge.scm",(void*)f_20678},
{"f_22864ChickenBridge.scm",(void*)f_22864},
{"f_22901ChickenBridge.scm",(void*)f_22901},
{"f_22994ChickenBridge.scm",(void*)f_22994},
{"f_23004ChickenBridge.scm",(void*)f_23004},
{"f_22907ChickenBridge.scm",(void*)f_22907},
{"f_22964ChickenBridge.scm",(void*)f_22964},
{"f_22974ChickenBridge.scm",(void*)f_22974},
{"f_22915ChickenBridge.scm",(void*)f_22915},
{"f_22929ChickenBridge.scm",(void*)f_22929},
{"f_22933ChickenBridge.scm",(void*)f_22933},
{"f_22937ChickenBridge.scm",(void*)f_22937},
{"f_22941ChickenBridge.scm",(void*)f_22941},
{"f_22948ChickenBridge.scm",(void*)f_22948},
{"f_22925ChickenBridge.scm",(void*)f_22925},
{"f_22918ChickenBridge.scm",(void*)f_22918},
{"f_22867ChickenBridge.scm",(void*)f_22867},
{"f_21799ChickenBridge.scm",(void*)f_21799},
{"f_21812ChickenBridge.scm",(void*)f_21812},
{"f_21862ChickenBridge.scm",(void*)f_21862},
{"f_21959ChickenBridge.scm",(void*)f_21959},
{"f_22027ChickenBridge.scm",(void*)f_22027},
{"f_22284ChickenBridge.scm",(void*)f_22284},
{"f_22034ChickenBridge.scm",(void*)f_22034},
{"f_22272ChickenBridge.scm",(void*)f_22272},
{"f_22223ChickenBridge.scm",(void*)f_22223},
{"f_22229ChickenBridge.scm",(void*)f_22229},
{"f_22253ChickenBridge.scm",(void*)f_22253},
{"f_22249ChickenBridge.scm",(void*)f_22249},
{"f_22237ChickenBridge.scm",(void*)f_22237},
{"f_22037ChickenBridge.scm",(void*)f_22037},
{"f_22199ChickenBridge.scm",(void*)f_22199},
{"f_22203ChickenBridge.scm",(void*)f_22203},
{"f_22040ChickenBridge.scm",(void*)f_22040},
{"f_22176ChickenBridge.scm",(void*)f_22176},
{"f_22180ChickenBridge.scm",(void*)f_22180},
{"f_22043ChickenBridge.scm",(void*)f_22043},
{"f_22153ChickenBridge.scm",(void*)f_22153},
{"f_22157ChickenBridge.scm",(void*)f_22157},
{"f_22046ChickenBridge.scm",(void*)f_22046},
{"f_22078ChickenBridge.scm",(void*)f_22078},
{"f_22096ChickenBridge.scm",(void*)f_22096},
{"f_22114ChickenBridge.scm",(void*)f_22114},
{"f_22132ChickenBridge.scm",(void*)f_22132},
{"f_22049ChickenBridge.scm",(void*)f_22049},
{"f_22053ChickenBridge.scm",(void*)f_22053},
{"f_21963ChickenBridge.scm",(void*)f_21963},
{"f_21967ChickenBridge.scm",(void*)f_21967},
{"f_21971ChickenBridge.scm",(void*)f_21971},
{"f_21866ChickenBridge.scm",(void*)f_21866},
{"f_21870ChickenBridge.scm",(void*)f_21870},
{"f_21874ChickenBridge.scm",(void*)f_21874},
{"f_21893ChickenBridge.scm",(void*)f_21893},
{"f_21897ChickenBridge.scm",(void*)f_21897},
{"f_21877ChickenBridge.scm",(void*)f_21877},
{"f_21881ChickenBridge.scm",(void*)f_21881},
{"f_21816ChickenBridge.scm",(void*)f_21816},
{"f_21820ChickenBridge.scm",(void*)f_21820},
{"f_21824ChickenBridge.scm",(void*)f_21824},
{"f_21806ChickenBridge.scm",(void*)f_21806},
{"f_21621ChickenBridge.scm",(void*)f_21621},
{"f_21633ChickenBridge.scm",(void*)f_21633},
{"f_21652ChickenBridge.scm",(void*)f_21652},
{"f_21670ChickenBridge.scm",(void*)f_21670},
{"f_21702ChickenBridge.scm",(void*)f_21702},
{"f_21705ChickenBridge.scm",(void*)f_21705},
{"f_21698ChickenBridge.scm",(void*)f_21698},
{"f_21684ChickenBridge.scm",(void*)f_21684},
{"f_21655ChickenBridge.scm",(void*)f_21655},
{"f_21600ChickenBridge.scm",(void*)f_21600},
{"f_21607ChickenBridge.scm",(void*)f_21607},
{"f_21610ChickenBridge.scm",(void*)f_21610},
{"f_21616ChickenBridge.scm",(void*)f_21616},
{"f_21535ChickenBridge.scm",(void*)f_21535},
{"f_21544ChickenBridge.scm",(void*)f_21544},
{"f_21567ChickenBridge.scm",(void*)f_21567},
{"f_21557ChickenBridge.scm",(void*)f_21557},
{"f_21491ChickenBridge.scm",(void*)f_21491},
{"f_21479ChickenBridge.scm",(void*)f_21479},
{"f_21377ChickenBridge.scm",(void*)f_21377},
{"f_21329ChickenBridge.scm",(void*)f_21329},
{"f_20710ChickenBridge.scm",(void*)f_20710},
{"f_20714ChickenBridge.scm",(void*)f_20714},
{"f_20717ChickenBridge.scm",(void*)f_20717},
{"f_21143ChickenBridge.scm",(void*)f_21143},
{"f_21139ChickenBridge.scm",(void*)f_21139},
{"f_21135ChickenBridge.scm",(void*)f_21135},
{"f_20720ChickenBridge.scm",(void*)f_20720},
{"f_20843ChickenBridge.scm",(void*)f_20843},
{"f_20076ChickenBridge.scm",(void*)f_20076},
{"f_20849ChickenBridge.scm",(void*)f_20849},
{"f_20092ChickenBridge.scm",(void*)f_20092},
{"f_20937ChickenBridge.scm",(void*)f_20937},
{"f_21007ChickenBridge.scm",(void*)f_21007},
{"f_20108ChickenBridge.scm",(void*)f_20108},
{"f_21010ChickenBridge.scm",(void*)f_21010},
{"f_20140ChickenBridge.scm",(void*)f_20140},
{"f_21088ChickenBridge.scm",(void*)f_21088},
{"f_21114ChickenBridge.scm",(void*)f_21114},
{"f_21108ChickenBridge.scm",(void*)f_21108},
{"f_21097ChickenBridge.scm",(void*)f_21097},
{"f_21039ChickenBridge.scm",(void*)f_21039},
{"f_21049ChickenBridge.scm",(void*)f_21049},
{"f_21075ChickenBridge.scm",(void*)f_21075},
{"f_21069ChickenBridge.scm",(void*)f_21069},
{"f_21052ChickenBridge.scm",(void*)f_21052},
{"f_21062ChickenBridge.scm",(void*)f_21062},
{"f_21055ChickenBridge.scm",(void*)f_21055},
{"f_21016ChickenBridge.scm",(void*)f_21016},
{"f_21025ChickenBridge.scm",(void*)f_21025},
{"f_21019ChickenBridge.scm",(void*)f_21019},
{"f_20943ChickenBridge.scm",(void*)f_20943},
{"f_20961ChickenBridge.scm",(void*)f_20961},
{"f_20994ChickenBridge.scm",(void*)f_20994},
{"f_20980ChickenBridge.scm",(void*)f_20980},
{"f_20988ChickenBridge.scm",(void*)f_20988},
{"f_20971ChickenBridge.scm",(void*)f_20971},
{"f_20946ChickenBridge.scm",(void*)f_20946},
{"f_20858ChickenBridge.scm",(void*)f_20858},
{"f_20880ChickenBridge.scm",(void*)f_20880},
{"f_20927ChickenBridge.scm",(void*)f_20927},
{"f_20913ChickenBridge.scm",(void*)f_20913},
{"f_20921ChickenBridge.scm",(void*)f_20921},
{"f_20893ChickenBridge.scm",(void*)f_20893},
{"f_20896ChickenBridge.scm",(void*)f_20896},
{"f_20861ChickenBridge.scm",(void*)f_20861},
{"f_20878ChickenBridge.scm",(void*)f_20878},
{"f_20864ChickenBridge.scm",(void*)f_20864},
{"f_20729ChickenBridge.scm",(void*)f_20729},
{"f_20735ChickenBridge.scm",(void*)f_20735},
{"f_20793ChickenBridge.scm",(void*)f_20793},
{"f_20796ChickenBridge.scm",(void*)f_20796},
{"f_20817ChickenBridge.scm",(void*)f_20817},
{"f_20828ChickenBridge.scm",(void*)f_20828},
{"f_20807ChickenBridge.scm",(void*)f_20807},
{"f_20741ChickenBridge.scm",(void*)f_20741},
{"f_20751ChickenBridge.scm",(void*)f_20751},
{"f_20787ChickenBridge.scm",(void*)f_20787},
{"f_20757ChickenBridge.scm",(void*)f_20757},
{"f_20772ChickenBridge.scm",(void*)f_20772},
{"f_20776ChickenBridge.scm",(void*)f_20776},
{"f_20780ChickenBridge.scm",(void*)f_20780},
{"f_20764ChickenBridge.scm",(void*)f_20764},
{"f_20606ChickenBridge.scm",(void*)f_20606},
{"f_20608ChickenBridge.scm",(void*)f_20608},
{"f_20656ChickenBridge.scm",(void*)f_20656},
{"f_20612ChickenBridge.scm",(void*)f_20612},
{"f_20615ChickenBridge.scm",(void*)f_20615},
{"f_20620ChickenBridge.scm",(void*)f_20620},
{"f_20641ChickenBridge.scm",(void*)f_20641},
{"f_20598ChickenBridge.scm",(void*)f_20598},
{"f_20600ChickenBridge.scm",(void*)f_20600},
{"f_20390ChickenBridge.scm",(void*)f_20390},
{"f_20407ChickenBridge.scm",(void*)f_20407},
{"f_20411ChickenBridge.scm",(void*)f_20411},
{"f_20357ChickenBridge.scm",(void*)f_20357},
{"f_20364ChickenBridge.scm",(void*)f_20364},
{"f_20308ChickenBridge.scm",(void*)f_20308},
{"f_20315ChickenBridge.scm",(void*)f_20315},
{"f_20373ChickenBridge.scm",(void*)f_20373},
{"f_20596ChickenBridge.scm",(void*)f_20596},
{"f_20573ChickenBridge.scm",(void*)f_20573},
{"f_20589ChickenBridge.scm",(void*)f_20589},
{"f_20435ChickenBridge.scm",(void*)f_20435},
{"f_20438ChickenBridge.scm",(void*)f_20438},
{"f_20462ChickenBridge.scm",(void*)f_20462},
{"f_20519ChickenBridge.scm",(void*)f_20519},
{"f_20525ChickenBridge.scm",(void*)f_20525},
{"f_20534ChickenBridge.scm",(void*)f_20534},
{"f_20543ChickenBridge.scm",(void*)f_20543},
{"f_20552ChickenBridge.scm",(void*)f_20552},
{"f_20561ChickenBridge.scm",(void*)f_20561},
{"f_20513ChickenBridge.scm",(void*)f_20513},
{"f_20468ChickenBridge.scm",(void*)f_20468},
{"f_20474ChickenBridge.scm",(void*)f_20474},
{"f_20480ChickenBridge.scm",(void*)f_20480},
{"f_20486ChickenBridge.scm",(void*)f_20486},
{"f_20492ChickenBridge.scm",(void*)f_20492},
{"f_20498ChickenBridge.scm",(void*)f_20498},
{"f_20339ChickenBridge.scm",(void*)f_20339},
{"f_20346ChickenBridge.scm",(void*)f_20346},
{"f_20329ChickenBridge.scm",(void*)f_20329},
{"f_20317ChickenBridge.scm",(void*)f_20317},
{"f_20285ChickenBridge.scm",(void*)f_20285},
{"f_20292ChickenBridge.scm",(void*)f_20292},
{"f_20299ChickenBridge.scm",(void*)f_20299},
{"f_20269ChickenBridge.scm",(void*)f_20269},
{"f_20276ChickenBridge.scm",(void*)f_20276},
{"f_20283ChickenBridge.scm",(void*)f_20283},
{"f_20257ChickenBridge.scm",(void*)f_20257},
{"f_20239ChickenBridge.scm",(void*)f_20239},
{"f_20221ChickenBridge.scm",(void*)f_20221},
{"f_20206ChickenBridge.scm",(void*)f_20206},
{"f_20200ChickenBridge.scm",(void*)f_20200},
{"f_20188ChickenBridge.scm",(void*)f_20188},
{"f_20170ChickenBridge.scm",(void*)f_20170},
{"f_20149ChickenBridge.scm",(void*)f_20149},
{"f_20117ChickenBridge.scm",(void*)f_20117},
{"f_20124ChickenBridge.scm",(void*)f_20124},
{"f_20059ChickenBridge.scm",(void*)f_20059},
{"f_20067ChickenBridge.scm",(void*)f_20067},
{"f_20049ChickenBridge.scm",(void*)f_20049},
{"f_20057ChickenBridge.scm",(void*)f_20057},
{"f_20043ChickenBridge.scm",(void*)f_20043},
{"f_20031ChickenBridge.scm",(void*)f_20031},
{"f_20028ChickenBridge.scm",(void*)f_20028},
{"f_20007ChickenBridge.scm",(void*)f_20007},
{"f_19920ChickenBridge.scm",(void*)f_19920},
{"f_19899ChickenBridge.scm",(void*)f_19899},
{"f_19889ChickenBridge.scm",(void*)f_19889},
{"f_19877ChickenBridge.scm",(void*)f_19877},
{"f_19848ChickenBridge.scm",(void*)f_19848},
{"f_19836ChickenBridge.scm",(void*)f_19836},
{"f_19818ChickenBridge.scm",(void*)f_19818},
{"f_19800ChickenBridge.scm",(void*)f_19800},
{"f_19779ChickenBridge.scm",(void*)f_19779},
{"f_18757ChickenBridge.scm",(void*)f_18757},
{"f_19756ChickenBridge.scm",(void*)f_19756},
{"f_19771ChickenBridge.scm",(void*)f_19771},
{"f_19763ChickenBridge.scm",(void*)f_19763},
{"f_19727ChickenBridge.scm",(void*)f_19727},
{"f_19731ChickenBridge.scm",(void*)f_19731},
{"f_19692ChickenBridge.scm",(void*)f_19692},
{"f_19696ChickenBridge.scm",(void*)f_19696},
{"f_18767ChickenBridge.scm",(void*)f_18767},
{"f_19656ChickenBridge.scm",(void*)f_19656},
{"f_19671ChickenBridge.scm",(void*)f_19671},
{"f_19663ChickenBridge.scm",(void*)f_19663},
{"f_19627ChickenBridge.scm",(void*)f_19627},
{"f_19631ChickenBridge.scm",(void*)f_19631},
{"f_19592ChickenBridge.scm",(void*)f_19592},
{"f_19596ChickenBridge.scm",(void*)f_19596},
{"f_18770ChickenBridge.scm",(void*)f_18770},
{"f_18773ChickenBridge.scm",(void*)f_18773},
{"f_18778ChickenBridge.scm",(void*)f_18778},
{"f_19485ChickenBridge.scm",(void*)f_19485},
{"f_19508ChickenBridge.scm",(void*)f_19508},
{"f_19561ChickenBridge.scm",(void*)f_19561},
{"f_19543ChickenBridge.scm",(void*)f_19543},
{"f_19536ChickenBridge.scm",(void*)f_19536},
{"f_19518ChickenBridge.scm",(void*)f_19518},
{"f_19495ChickenBridge.scm",(void*)f_19495},
{"f_18972ChickenBridge.scm",(void*)f_18972},
{"f_19447ChickenBridge.scm",(void*)f_19447},
{"f_19469ChickenBridge.scm",(void*)f_19469},
{"f_19453ChickenBridge.scm",(void*)f_19453},
{"f_19461ChickenBridge.scm",(void*)f_19461},
{"f_19465ChickenBridge.scm",(void*)f_19465},
{"f_19451ChickenBridge.scm",(void*)f_19451},
{"f_19441ChickenBridge.scm",(void*)f_19441},
{"f_18975ChickenBridge.scm",(void*)f_18975},
{"f_19318ChickenBridge.scm",(void*)f_19318},
{"f_19342ChickenBridge.scm",(void*)f_19342},
{"f_19404ChickenBridge.scm",(void*)f_19404},
{"f_19345ChickenBridge.scm",(void*)f_19345},
{"f_19361ChickenBridge.scm",(void*)f_19361},
{"f_19386ChickenBridge.scm",(void*)f_19386},
{"f_19352ChickenBridge.scm",(void*)f_19352},
{"f_19329ChickenBridge.scm",(void*)f_19329},
{"f_18978ChickenBridge.scm",(void*)f_18978},
{"f_19304ChickenBridge.scm",(void*)f_19304},
{"f_18982ChickenBridge.scm",(void*)f_18982},
{"f_19026ChickenBridge.scm",(void*)f_19026},
{"f_19029ChickenBridge.scm",(void*)f_19029},
{"f_19285ChickenBridge.scm",(void*)f_19285},
{"f_19295ChickenBridge.scm",(void*)f_19295},
{"f_19032ChickenBridge.scm",(void*)f_19032},
{"f_19223ChickenBridge.scm",(void*)f_19223},
{"f_19233ChickenBridge.scm",(void*)f_19233},
{"f_19236ChickenBridge.scm",(void*)f_19236},
{"f_19256ChickenBridge.scm",(void*)f_19256},
{"f_19258ChickenBridge.scm",(void*)f_19258},
{"f_19268ChickenBridge.scm",(void*)f_19268},
{"f_19242ChickenBridge.scm",(void*)f_19242},
{"f_19245ChickenBridge.scm",(void*)f_19245},
{"f_19035ChickenBridge.scm",(void*)f_19035},
{"f_19043ChickenBridge.scm",(void*)f_19043},
{"f_19056ChickenBridge.scm",(void*)f_19056},
{"f_18930ChickenBridge.scm",(void*)f_18930},
{"f_18939ChickenBridge.scm",(void*)f_18939},
{"f_18961ChickenBridge.scm",(void*)f_18961},
{"f_18950ChickenBridge.scm",(void*)f_18950},
{"f_19059ChickenBridge.scm",(void*)f_19059},
{"f_19194ChickenBridge.scm",(void*)f_19194},
{"f_19196ChickenBridge.scm",(void*)f_19196},
{"f_19206ChickenBridge.scm",(void*)f_19206},
{"f_19065ChickenBridge.scm",(void*)f_19065},
{"f_19167ChickenBridge.scm",(void*)f_19167},
{"f_19169ChickenBridge.scm",(void*)f_19169},
{"f_19179ChickenBridge.scm",(void*)f_19179},
{"f_19068ChickenBridge.scm",(void*)f_19068},
{"f_19080ChickenBridge.scm",(void*)f_19080},
{"f_19106ChickenBridge.scm",(void*)f_19106},
{"f_19112ChickenBridge.scm",(void*)f_19112},
{"f_19118ChickenBridge.scm",(void*)f_19118},
{"f_19128ChickenBridge.scm",(void*)f_19128},
{"f_19130ChickenBridge.scm",(void*)f_19130},
{"f_19140ChickenBridge.scm",(void*)f_19140},
{"f_19121ChickenBridge.scm",(void*)f_19121},
{"f_19093ChickenBridge.scm",(void*)f_19093},
{"f_19071ChickenBridge.scm",(void*)f_19071},
{"f_19038ChickenBridge.scm",(void*)f_19038},
{"f_18985ChickenBridge.scm",(void*)f_18985},
{"f_19008ChickenBridge.scm",(void*)f_19008},
{"f_18997ChickenBridge.scm",(void*)f_18997},
{"f_18862ChickenBridge.scm",(void*)f_18862},
{"f_18910ChickenBridge.scm",(void*)f_18910},
{"f_18872ChickenBridge.scm",(void*)f_18872},
{"f_18900ChickenBridge.scm",(void*)f_18900},
{"f_18875ChickenBridge.scm",(void*)f_18875},
{"f_18780ChickenBridge.scm",(void*)f_18780},
{"f_18852ChickenBridge.scm",(void*)f_18852},
{"f_18784ChickenBridge.scm",(void*)f_18784},
{"f_18802ChickenBridge.scm",(void*)f_18802},
{"f_18834ChickenBridge.scm",(void*)f_18834},
{"f_18663ChickenBridge.scm",(void*)f_18663},
{"f_18667ChickenBridge.scm",(void*)f_18667},
{"f_18696ChickenBridge.scm",(void*)f_18696},
{"f_18701ChickenBridge.scm",(void*)f_18701},
{"f_18726ChickenBridge.scm",(void*)f_18726},
{"f_18711ChickenBridge.scm",(void*)f_18711},
{"f_18145ChickenBridge.scm",(void*)f_18145},
{"f_18416ChickenBridge.scm",(void*)f_18416},
{"f_18420ChickenBridge.scm",(void*)f_18420},
{"f_18425ChickenBridge.scm",(void*)f_18425},
{"f_18631ChickenBridge.scm",(void*)f_18631},
{"f_18646ChickenBridge.scm",(void*)f_18646},
{"f_18638ChickenBridge.scm",(void*)f_18638},
{"f_18602ChickenBridge.scm",(void*)f_18602},
{"f_18606ChickenBridge.scm",(void*)f_18606},
{"f_18567ChickenBridge.scm",(void*)f_18567},
{"f_18571ChickenBridge.scm",(void*)f_18571},
{"f_18429ChickenBridge.scm",(void*)f_18429},
{"f_18531ChickenBridge.scm",(void*)f_18531},
{"f_18546ChickenBridge.scm",(void*)f_18546},
{"f_18538ChickenBridge.scm",(void*)f_18538},
{"f_18502ChickenBridge.scm",(void*)f_18502},
{"f_18506ChickenBridge.scm",(void*)f_18506},
{"f_18467ChickenBridge.scm",(void*)f_18467},
{"f_18471ChickenBridge.scm",(void*)f_18471},
{"f_18432ChickenBridge.scm",(void*)f_18432},
{"f_18435ChickenBridge.scm",(void*)f_18435},
{"f_18438ChickenBridge.scm",(void*)f_18438},
{"f_18407ChickenBridge.scm",(void*)f_18407},
{"f_18149ChickenBridge.scm",(void*)f_18149},
{"f_18376ChickenBridge.scm",(void*)f_18376},
{"f_18391ChickenBridge.scm",(void*)f_18391},
{"f_18383ChickenBridge.scm",(void*)f_18383},
{"f_18347ChickenBridge.scm",(void*)f_18347},
{"f_18351ChickenBridge.scm",(void*)f_18351},
{"f_18312ChickenBridge.scm",(void*)f_18312},
{"f_18316ChickenBridge.scm",(void*)f_18316},
{"f_18152ChickenBridge.scm",(void*)f_18152},
{"f_18276ChickenBridge.scm",(void*)f_18276},
{"f_18291ChickenBridge.scm",(void*)f_18291},
{"f_18283ChickenBridge.scm",(void*)f_18283},
{"f_18247ChickenBridge.scm",(void*)f_18247},
{"f_18251ChickenBridge.scm",(void*)f_18251},
{"f_18212ChickenBridge.scm",(void*)f_18212},
{"f_18216ChickenBridge.scm",(void*)f_18216},
{"f_18155ChickenBridge.scm",(void*)f_18155},
{"f_18158ChickenBridge.scm",(void*)f_18158},
{"f_18161ChickenBridge.scm",(void*)f_18161},
{"f_18173ChickenBridge.scm",(void*)f_18173},
{"f_18191ChickenBridge.scm",(void*)f_18191},
{"f_18179ChickenBridge.scm",(void*)f_18179},
{"f_18167ChickenBridge.scm",(void*)f_18167},
{"f_18082ChickenBridge.scm",(void*)f_18082},
{"f_17742ChickenBridge.scm",(void*)f_17742},
{"f_17924ChickenBridge.scm",(void*)f_17924},
{"f_17928ChickenBridge.scm",(void*)f_17928},
{"f_17930ChickenBridge.scm",(void*)f_17930},
{"f_17855ChickenBridge.scm",(void*)f_17855},
{"f_17865ChickenBridge.scm",(void*)f_17865},
{"f_17872ChickenBridge.scm",(void*)f_17872},
{"f_17940ChickenBridge.scm",(void*)f_17940},
{"f_17943ChickenBridge.scm",(void*)f_17943},
{"f_17947ChickenBridge.scm",(void*)f_17947},
{"f_17967ChickenBridge.scm",(void*)f_17967},
{"f_17983ChickenBridge.scm",(void*)f_17983},
{"f_17950ChickenBridge.scm",(void*)f_17950},
{"f_17745ChickenBridge.scm",(void*)f_17745},
{"f_17757ChickenBridge.scm",(void*)f_17757},
{"f_17793ChickenBridge.scm",(void*)f_17793},
{"f_17813ChickenBridge.scm",(void*)f_17813},
{"f_17818ChickenBridge.scm",(void*)f_17818},
{"f_17255ChickenBridge.scm",(void*)f_17255},
{"f_17182ChickenBridge.scm",(void*)f_17182},
{"f_17027ChickenBridge.scm",(void*)f_17027},
{"f_17033ChickenBridge.scm",(void*)f_17033},
{"f_17118ChickenBridge.scm",(void*)f_17118},
{"f_17045ChickenBridge.scm",(void*)f_17045},
{"f_17061ChickenBridge.scm",(void*)f_17061},
{"f_17065ChickenBridge.scm",(void*)f_17065},
{"f_17068ChickenBridge.scm",(void*)f_17068},
{"f_17048ChickenBridge.scm",(void*)f_17048},
{"f_17059ChickenBridge.scm",(void*)f_17059},
{"f_17199ChickenBridge.scm",(void*)f_17199},
{"f_17736ChickenBridge.scm",(void*)f_17736},
{"f_17259ChickenBridge.scm",(void*)f_17259},
{"f_17705ChickenBridge.scm",(void*)f_17705},
{"f_17720ChickenBridge.scm",(void*)f_17720},
{"f_17712ChickenBridge.scm",(void*)f_17712},
{"f_17676ChickenBridge.scm",(void*)f_17676},
{"f_17680ChickenBridge.scm",(void*)f_17680},
{"f_17641ChickenBridge.scm",(void*)f_17641},
{"f_17645ChickenBridge.scm",(void*)f_17645},
{"f_17606ChickenBridge.scm",(void*)f_17606},
{"f_17610ChickenBridge.scm",(void*)f_17610},
{"f_17262ChickenBridge.scm",(void*)f_17262},
{"f_17570ChickenBridge.scm",(void*)f_17570},
{"f_17585ChickenBridge.scm",(void*)f_17585},
{"f_17577ChickenBridge.scm",(void*)f_17577},
{"f_17541ChickenBridge.scm",(void*)f_17541},
{"f_17545ChickenBridge.scm",(void*)f_17545},
{"f_17506ChickenBridge.scm",(void*)f_17506},
{"f_17510ChickenBridge.scm",(void*)f_17510},
{"f_17471ChickenBridge.scm",(void*)f_17471},
{"f_17475ChickenBridge.scm",(void*)f_17475},
{"f_17265ChickenBridge.scm",(void*)f_17265},
{"f_17435ChickenBridge.scm",(void*)f_17435},
{"f_17450ChickenBridge.scm",(void*)f_17450},
{"f_17442ChickenBridge.scm",(void*)f_17442},
{"f_17406ChickenBridge.scm",(void*)f_17406},
{"f_17410ChickenBridge.scm",(void*)f_17410},
{"f_17371ChickenBridge.scm",(void*)f_17371},
{"f_17375ChickenBridge.scm",(void*)f_17375},
{"f_17336ChickenBridge.scm",(void*)f_17336},
{"f_17340ChickenBridge.scm",(void*)f_17340},
{"f_17268ChickenBridge.scm",(void*)f_17268},
{"f_17271ChickenBridge.scm",(void*)f_17271},
{"f_17274ChickenBridge.scm",(void*)f_17274},
{"f_17307ChickenBridge.scm",(void*)f_17307},
{"f_17315ChickenBridge.scm",(void*)f_17315},
{"f_17280ChickenBridge.scm",(void*)f_17280},
{"f_17293ChickenBridge.scm",(void*)f_17293},
{"f_17283ChickenBridge.scm",(void*)f_17283},
{"f_17286ChickenBridge.scm",(void*)f_17286},
{"f_16822ChickenBridge.scm",(void*)f_16822},
{"f_16826ChickenBridge.scm",(void*)f_16826},
{"f_16829ChickenBridge.scm",(void*)f_16829},
{"f_16832ChickenBridge.scm",(void*)f_16832},
{"f_17001ChickenBridge.scm",(void*)f_17001},
{"f_17014ChickenBridge.scm",(void*)f_17014},
{"f_17018ChickenBridge.scm",(void*)f_17018},
{"f_16838ChickenBridge.scm",(void*)f_16838},
{"f_16994ChickenBridge.scm",(void*)f_16994},
{"f_16975ChickenBridge.scm",(void*)f_16975},
{"f_16982ChickenBridge.scm",(void*)f_16982},
{"f_16986ChickenBridge.scm",(void*)f_16986},
{"f_16844ChickenBridge.scm",(void*)f_16844},
{"f_16850ChickenBridge.scm",(void*)f_16850},
{"f_16934ChickenBridge.scm",(void*)f_16934},
{"f_16936ChickenBridge.scm",(void*)f_16936},
{"f_16958ChickenBridge.scm",(void*)f_16958},
{"f_16965ChickenBridge.scm",(void*)f_16965},
{"f_16969ChickenBridge.scm",(void*)f_16969},
{"f_16955ChickenBridge.scm",(void*)f_16955},
{"f_16951ChickenBridge.scm",(void*)f_16951},
{"f_16892ChickenBridge.scm",(void*)f_16892},
{"f_16909ChickenBridge.scm",(void*)f_16909},
{"f_16919ChickenBridge.scm",(void*)f_16919},
{"f_16895ChickenBridge.scm",(void*)f_16895},
{"f_16854ChickenBridge.scm",(void*)f_16854},
{"f_16862ChickenBridge.scm",(void*)f_16862},
{"f_16864ChickenBridge.scm",(void*)f_16864},
{"f_16885ChickenBridge.scm",(void*)f_16885},
{"f_16710ChickenBridge.scm",(void*)f_16710},
{"f_16820ChickenBridge.scm",(void*)f_16820},
{"f_16779ChickenBridge.scm",(void*)f_16779},
{"f_16812ChickenBridge.scm",(void*)f_16812},
{"f_16808ChickenBridge.scm",(void*)f_16808},
{"f_16793ChickenBridge.scm",(void*)f_16793},
{"f_16717ChickenBridge.scm",(void*)f_16717},
{"f_16725ChickenBridge.scm",(void*)f_16725},
{"f_16770ChickenBridge.scm",(void*)f_16770},
{"f_16758ChickenBridge.scm",(void*)f_16758},
{"f_16742ChickenBridge.scm",(void*)f_16742},
{"f_15943ChickenBridge.scm",(void*)f_15943},
{"f_16260ChickenBridge.scm",(void*)f_16260},
{"f_16267ChickenBridge.scm",(void*)f_16267},
{"f_16672ChickenBridge.scm",(void*)f_16672},
{"f_16687ChickenBridge.scm",(void*)f_16687},
{"f_16679ChickenBridge.scm",(void*)f_16679},
{"f_16643ChickenBridge.scm",(void*)f_16643},
{"f_16647ChickenBridge.scm",(void*)f_16647},
{"f_16608ChickenBridge.scm",(void*)f_16608},
{"f_16612ChickenBridge.scm",(void*)f_16612},
{"f_16573ChickenBridge.scm",(void*)f_16573},
{"f_16577ChickenBridge.scm",(void*)f_16577},
{"f_16270ChickenBridge.scm",(void*)f_16270},
{"f_16537ChickenBridge.scm",(void*)f_16537},
{"f_16552ChickenBridge.scm",(void*)f_16552},
{"f_16544ChickenBridge.scm",(void*)f_16544},
{"f_16508ChickenBridge.scm",(void*)f_16508},
{"f_16512ChickenBridge.scm",(void*)f_16512},
{"f_16473ChickenBridge.scm",(void*)f_16473},
{"f_16477ChickenBridge.scm",(void*)f_16477},
{"f_16438ChickenBridge.scm",(void*)f_16438},
{"f_16442ChickenBridge.scm",(void*)f_16442},
{"f_16273ChickenBridge.scm",(void*)f_16273},
{"f_16402ChickenBridge.scm",(void*)f_16402},
{"f_16417ChickenBridge.scm",(void*)f_16417},
{"f_16409ChickenBridge.scm",(void*)f_16409},
{"f_16373ChickenBridge.scm",(void*)f_16373},
{"f_16377ChickenBridge.scm",(void*)f_16377},
{"f_16338ChickenBridge.scm",(void*)f_16338},
{"f_16342ChickenBridge.scm",(void*)f_16342},
{"f_16303ChickenBridge.scm",(void*)f_16303},
{"f_16307ChickenBridge.scm",(void*)f_16307},
{"f_16276ChickenBridge.scm",(void*)f_16276},
{"f_16279ChickenBridge.scm",(void*)f_16279},
{"f_15947ChickenBridge.scm",(void*)f_15947},
{"f_15950ChickenBridge.scm",(void*)f_15950},
{"f_16224ChickenBridge.scm",(void*)f_16224},
{"f_16228ChickenBridge.scm",(void*)f_16228},
{"f_16231ChickenBridge.scm",(void*)f_16231},
{"f_16234ChickenBridge.scm",(void*)f_16234},
{"f_16237ChickenBridge.scm",(void*)f_16237},
{"f_16250ChickenBridge.scm",(void*)f_16250},
{"f_16240ChickenBridge.scm",(void*)f_16240},
{"f_15956ChickenBridge.scm",(void*)f_15956},
{"f_15963ChickenBridge.scm",(void*)f_15963},
{"f_16194ChickenBridge.scm",(void*)f_16194},
{"f_16209ChickenBridge.scm",(void*)f_16209},
{"f_16201ChickenBridge.scm",(void*)f_16201},
{"f_16165ChickenBridge.scm",(void*)f_16165},
{"f_16169ChickenBridge.scm",(void*)f_16169},
{"f_16130ChickenBridge.scm",(void*)f_16130},
{"f_16134ChickenBridge.scm",(void*)f_16134},
{"f_15966ChickenBridge.scm",(void*)f_15966},
{"f_16094ChickenBridge.scm",(void*)f_16094},
{"f_16109ChickenBridge.scm",(void*)f_16109},
{"f_16101ChickenBridge.scm",(void*)f_16101},
{"f_16065ChickenBridge.scm",(void*)f_16065},
{"f_16069ChickenBridge.scm",(void*)f_16069},
{"f_16030ChickenBridge.scm",(void*)f_16030},
{"f_16034ChickenBridge.scm",(void*)f_16034},
{"f_15969ChickenBridge.scm",(void*)f_15969},
{"f_15972ChickenBridge.scm",(void*)f_15972},
{"f_15987ChickenBridge.scm",(void*)f_15987},
{"f_16009ChickenBridge.scm",(void*)f_16009},
{"f_15993ChickenBridge.scm",(void*)f_15993},
{"f_16001ChickenBridge.scm",(void*)f_16001},
{"f_15975ChickenBridge.scm",(void*)f_15975},
{"f_15978ChickenBridge.scm",(void*)f_15978},
{"f_15860ChickenBridge.scm",(void*)f_15860},
{"f_15851ChickenBridge.scm",(void*)f_15851},
{"f_15842ChickenBridge.scm",(void*)f_15842},
{"f_15824ChickenBridge.scm",(void*)f_15824},
{"f_15806ChickenBridge.scm",(void*)f_15806},
{"f_15788ChickenBridge.scm",(void*)f_15788},
{"f_15779ChickenBridge.scm",(void*)f_15779},
{"f_15770ChickenBridge.scm",(void*)f_15770},
{"f_15548ChickenBridge.scm",(void*)f_15548},
{"f_15598ChickenBridge.scm",(void*)f_15598},
{"f_15743ChickenBridge.scm",(void*)f_15743},
{"f_15624ChickenBridge.scm",(void*)f_15624},
{"f_15739ChickenBridge.scm",(void*)f_15739},
{"f_15724ChickenBridge.scm",(void*)f_15724},
{"f_15705ChickenBridge.scm",(void*)f_15705},
{"f_15678ChickenBridge.scm",(void*)f_15678},
{"f_15631ChickenBridge.scm",(void*)f_15631},
{"f_15601ChickenBridge.scm",(void*)f_15601},
{"f_15551ChickenBridge.scm",(void*)f_15551},
{"f_15557ChickenBridge.scm",(void*)f_15557},
{"f_15573ChickenBridge.scm",(void*)f_15573},
{"f_15576ChickenBridge.scm",(void*)f_15576},
{"f_15074ChickenBridge.scm",(void*)f_15074},
{"f_15538ChickenBridge.scm",(void*)f_15538},
{"f_15078ChickenBridge.scm",(void*)f_15078},
{"f_15510ChickenBridge.scm",(void*)f_15510},
{"f_15525ChickenBridge.scm",(void*)f_15525},
{"f_15517ChickenBridge.scm",(void*)f_15517},
{"f_15481ChickenBridge.scm",(void*)f_15481},
{"f_15485ChickenBridge.scm",(void*)f_15485},
{"f_15446ChickenBridge.scm",(void*)f_15446},
{"f_15450ChickenBridge.scm",(void*)f_15450},
{"f_15411ChickenBridge.scm",(void*)f_15411},
{"f_15415ChickenBridge.scm",(void*)f_15415},
{"f_15081ChickenBridge.scm",(void*)f_15081},
{"f_15375ChickenBridge.scm",(void*)f_15375},
{"f_15390ChickenBridge.scm",(void*)f_15390},
{"f_15382ChickenBridge.scm",(void*)f_15382},
{"f_15346ChickenBridge.scm",(void*)f_15346},
{"f_15350ChickenBridge.scm",(void*)f_15350},
{"f_15311ChickenBridge.scm",(void*)f_15311},
{"f_15315ChickenBridge.scm",(void*)f_15315},
{"f_15276ChickenBridge.scm",(void*)f_15276},
{"f_15280ChickenBridge.scm",(void*)f_15280},
{"f_15084ChickenBridge.scm",(void*)f_15084},
{"f_15240ChickenBridge.scm",(void*)f_15240},
{"f_15255ChickenBridge.scm",(void*)f_15255},
{"f_15247ChickenBridge.scm",(void*)f_15247},
{"f_15211ChickenBridge.scm",(void*)f_15211},
{"f_15215ChickenBridge.scm",(void*)f_15215},
{"f_15176ChickenBridge.scm",(void*)f_15176},
{"f_15180ChickenBridge.scm",(void*)f_15180},
{"f_15141ChickenBridge.scm",(void*)f_15141},
{"f_15145ChickenBridge.scm",(void*)f_15145},
{"f_15087ChickenBridge.scm",(void*)f_15087},
{"f_15090ChickenBridge.scm",(void*)f_15090},
{"f_15093ChickenBridge.scm",(void*)f_15093},
{"f_15108ChickenBridge.scm",(void*)f_15108},
{"f_15120ChickenBridge.scm",(void*)f_15120},
{"f_15099ChickenBridge.scm",(void*)f_15099},
{"f_15102ChickenBridge.scm",(void*)f_15102},
{"f_14998ChickenBridge.scm",(void*)f_14998},
{"f_15002ChickenBridge.scm",(void*)f_15002},
{"f_15021ChickenBridge.scm",(void*)f_15021},
{"f_15031ChickenBridge.scm",(void*)f_15031},
{"f_15033ChickenBridge.scm",(void*)f_15033},
{"f_15050ChickenBridge.scm",(void*)f_15050},
{"f_15053ChickenBridge.scm",(void*)f_15053},
{"f_15064ChickenBridge.scm",(void*)f_15064},
{"f_15005ChickenBridge.scm",(void*)f_15005},
{"f_14735ChickenBridge.scm",(void*)f_14735},
{"f_14988ChickenBridge.scm",(void*)f_14988},
{"f_14739ChickenBridge.scm",(void*)f_14739},
{"f_14960ChickenBridge.scm",(void*)f_14960},
{"f_14975ChickenBridge.scm",(void*)f_14975},
{"f_14967ChickenBridge.scm",(void*)f_14967},
{"f_14931ChickenBridge.scm",(void*)f_14931},
{"f_14935ChickenBridge.scm",(void*)f_14935},
{"f_14896ChickenBridge.scm",(void*)f_14896},
{"f_14900ChickenBridge.scm",(void*)f_14900},
{"f_14742ChickenBridge.scm",(void*)f_14742},
{"f_14860ChickenBridge.scm",(void*)f_14860},
{"f_14875ChickenBridge.scm",(void*)f_14875},
{"f_14867ChickenBridge.scm",(void*)f_14867},
{"f_14831ChickenBridge.scm",(void*)f_14831},
{"f_14835ChickenBridge.scm",(void*)f_14835},
{"f_14796ChickenBridge.scm",(void*)f_14796},
{"f_14800ChickenBridge.scm",(void*)f_14800},
{"f_14745ChickenBridge.scm",(void*)f_14745},
{"f_14748ChickenBridge.scm",(void*)f_14748},
{"f_14751ChickenBridge.scm",(void*)f_14751},
{"f_14763ChickenBridge.scm",(void*)f_14763},
{"f_14775ChickenBridge.scm",(void*)f_14775},
{"f_14757ChickenBridge.scm",(void*)f_14757},
{"f_14699ChickenBridge.scm",(void*)f_14699},
{"f_14703ChickenBridge.scm",(void*)f_14703},
{"f_14725ChickenBridge.scm",(void*)f_14725},
{"f_14719ChickenBridge.scm",(void*)f_14719},
{"f_14712ChickenBridge.scm",(void*)f_14712},
{"f_14452ChickenBridge.scm",(void*)f_14452},
{"f_14456ChickenBridge.scm",(void*)f_14456},
{"f_14669ChickenBridge.scm",(void*)f_14669},
{"f_14684ChickenBridge.scm",(void*)f_14684},
{"f_14676ChickenBridge.scm",(void*)f_14676},
{"f_14640ChickenBridge.scm",(void*)f_14640},
{"f_14644ChickenBridge.scm",(void*)f_14644},
{"f_14605ChickenBridge.scm",(void*)f_14605},
{"f_14609ChickenBridge.scm",(void*)f_14609},
{"f_14459ChickenBridge.scm",(void*)f_14459},
{"f_14569ChickenBridge.scm",(void*)f_14569},
{"f_14584ChickenBridge.scm",(void*)f_14584},
{"f_14576ChickenBridge.scm",(void*)f_14576},
{"f_14540ChickenBridge.scm",(void*)f_14540},
{"f_14544ChickenBridge.scm",(void*)f_14544},
{"f_14505ChickenBridge.scm",(void*)f_14505},
{"f_14509ChickenBridge.scm",(void*)f_14509},
{"f_14462ChickenBridge.scm",(void*)f_14462},
{"f_14465ChickenBridge.scm",(void*)f_14465},
{"f_14468ChickenBridge.scm",(void*)f_14468},
{"f_14476ChickenBridge.scm",(void*)f_14476},
{"f_14484ChickenBridge.scm",(void*)f_14484},
{"f_14474ChickenBridge.scm",(void*)f_14474},
{"f_14237ChickenBridge.scm",(void*)f_14237},
{"f_14241ChickenBridge.scm",(void*)f_14241},
{"f_14450ChickenBridge.scm",(void*)f_14450},
{"f_14403ChickenBridge.scm",(void*)f_14403},
{"f_14415ChickenBridge.scm",(void*)f_14415},
{"f_14271ChickenBridge.scm",(void*)f_14271},
{"f_14274ChickenBridge.scm",(void*)f_14274},
{"f_14280ChickenBridge.scm",(void*)f_14280},
{"f_14283ChickenBridge.scm",(void*)f_14283},
{"f_14371ChickenBridge.scm",(void*)f_14371},
{"f_14286ChickenBridge.scm",(void*)f_14286},
{"f_14365ChickenBridge.scm",(void*)f_14365},
{"f_14292ChickenBridge.scm",(void*)f_14292},
{"f_14295ChickenBridge.scm",(void*)f_14295},
{"f_14247ChickenBridge.scm",(void*)f_14247},
{"f_14250ChickenBridge.scm",(void*)f_14250},
{"f_14257ChickenBridge.scm",(void*)f_14257},
{"f_13767ChickenBridge.scm",(void*)f_13767},
{"f_13771ChickenBridge.scm",(void*)f_13771},
{"f_14207ChickenBridge.scm",(void*)f_14207},
{"f_14222ChickenBridge.scm",(void*)f_14222},
{"f_14214ChickenBridge.scm",(void*)f_14214},
{"f_14178ChickenBridge.scm",(void*)f_14178},
{"f_14182ChickenBridge.scm",(void*)f_14182},
{"f_14143ChickenBridge.scm",(void*)f_14143},
{"f_14147ChickenBridge.scm",(void*)f_14147},
{"f_14108ChickenBridge.scm",(void*)f_14108},
{"f_14112ChickenBridge.scm",(void*)f_14112},
{"f_13774ChickenBridge.scm",(void*)f_13774},
{"f_14072ChickenBridge.scm",(void*)f_14072},
{"f_14087ChickenBridge.scm",(void*)f_14087},
{"f_14079ChickenBridge.scm",(void*)f_14079},
{"f_14043ChickenBridge.scm",(void*)f_14043},
{"f_14047ChickenBridge.scm",(void*)f_14047},
{"f_14008ChickenBridge.scm",(void*)f_14008},
{"f_14012ChickenBridge.scm",(void*)f_14012},
{"f_13973ChickenBridge.scm",(void*)f_13973},
{"f_13977ChickenBridge.scm",(void*)f_13977},
{"f_13777ChickenBridge.scm",(void*)f_13777},
{"f_13937ChickenBridge.scm",(void*)f_13937},
{"f_13952ChickenBridge.scm",(void*)f_13952},
{"f_13944ChickenBridge.scm",(void*)f_13944},
{"f_13908ChickenBridge.scm",(void*)f_13908},
{"f_13912ChickenBridge.scm",(void*)f_13912},
{"f_13873ChickenBridge.scm",(void*)f_13873},
{"f_13877ChickenBridge.scm",(void*)f_13877},
{"f_13838ChickenBridge.scm",(void*)f_13838},
{"f_13842ChickenBridge.scm",(void*)f_13842},
{"f_13780ChickenBridge.scm",(void*)f_13780},
{"f_13783ChickenBridge.scm",(void*)f_13783},
{"f_13786ChickenBridge.scm",(void*)f_13786},
{"f_13809ChickenBridge.scm",(void*)f_13809},
{"f_13817ChickenBridge.scm",(void*)f_13817},
{"f_13792ChickenBridge.scm",(void*)f_13792},
{"f_13795ChickenBridge.scm",(void*)f_13795},
{"f_13687ChickenBridge.scm",(void*)f_13687},
{"f_13678ChickenBridge.scm",(void*)f_13678},
{"f_13606ChickenBridge.scm",(void*)f_13606},
{"f_13610ChickenBridge.scm",(void*)f_13610},
{"f_13613ChickenBridge.scm",(void*)f_13613},
{"f_13351ChickenBridge.scm",(void*)f_13351},
{"f_13355ChickenBridge.scm",(void*)f_13355},
{"f_13576ChickenBridge.scm",(void*)f_13576},
{"f_13591ChickenBridge.scm",(void*)f_13591},
{"f_13583ChickenBridge.scm",(void*)f_13583},
{"f_13547ChickenBridge.scm",(void*)f_13547},
{"f_13551ChickenBridge.scm",(void*)f_13551},
{"f_13512ChickenBridge.scm",(void*)f_13512},
{"f_13516ChickenBridge.scm",(void*)f_13516},
{"f_13358ChickenBridge.scm",(void*)f_13358},
{"f_13476ChickenBridge.scm",(void*)f_13476},
{"f_13491ChickenBridge.scm",(void*)f_13491},
{"f_13483ChickenBridge.scm",(void*)f_13483},
{"f_13447ChickenBridge.scm",(void*)f_13447},
{"f_13451ChickenBridge.scm",(void*)f_13451},
{"f_13412ChickenBridge.scm",(void*)f_13412},
{"f_13416ChickenBridge.scm",(void*)f_13416},
{"f_13361ChickenBridge.scm",(void*)f_13361},
{"f_13364ChickenBridge.scm",(void*)f_13364},
{"f_13367ChickenBridge.scm",(void*)f_13367},
{"f_13379ChickenBridge.scm",(void*)f_13379},
{"f_13391ChickenBridge.scm",(void*)f_13391},
{"f_13373ChickenBridge.scm",(void*)f_13373},
{"f_13236ChickenBridge.scm",(void*)f_13236},
{"f_13349ChickenBridge.scm",(void*)f_13349},
{"f_13246ChickenBridge.scm",(void*)f_13246},
{"f_13334ChickenBridge.scm",(void*)f_13334},
{"f_13345ChickenBridge.scm",(void*)f_13345},
{"f_13341ChickenBridge.scm",(void*)f_13341},
{"f_13249ChickenBridge.scm",(void*)f_13249},
{"f_13331ChickenBridge.scm",(void*)f_13331},
{"f_13257ChickenBridge.scm",(void*)f_13257},
{"f_13321ChickenBridge.scm",(void*)f_13321},
{"f_13266ChickenBridge.scm",(void*)f_13266},
{"f_13285ChickenBridge.scm",(void*)f_13285},
{"f_13314ChickenBridge.scm",(void*)f_13314},
{"f_13295ChickenBridge.scm",(void*)f_13295},
{"f_13310ChickenBridge.scm",(void*)f_13310},
{"f_13298ChickenBridge.scm",(void*)f_13298},
{"f_13269ChickenBridge.scm",(void*)f_13269},
{"f_13279ChickenBridge.scm",(void*)f_13279},
{"f_13260ChickenBridge.scm",(void*)f_13260},
{"f_13263ChickenBridge.scm",(void*)f_13263},
{"f_13190ChickenBridge.scm",(void*)f_13190},
{"f_13181ChickenBridge.scm",(void*)f_13181},
{"f_12880ChickenBridge.scm",(void*)f_12880},
{"f_12887ChickenBridge.scm",(void*)f_12887},
{"f_13176ChickenBridge.scm",(void*)f_13176},
{"f_12890ChickenBridge.scm",(void*)f_12890},
{"f_13161ChickenBridge.scm",(void*)f_13161},
{"f_13153ChickenBridge.scm",(void*)f_13153},
{"f_13145ChickenBridge.scm",(void*)f_13145},
{"f_13148ChickenBridge.scm",(void*)f_13148},
{"f_13116ChickenBridge.scm",(void*)f_13116},
{"f_13139ChickenBridge.scm",(void*)f_13139},
{"f_13122ChickenBridge.scm",(void*)f_13122},
{"f_13126ChickenBridge.scm",(void*)f_13126},
{"f_12893ChickenBridge.scm",(void*)f_12893},
{"f_12899ChickenBridge.scm",(void*)f_12899},
{"f_12991ChickenBridge.scm",(void*)f_12991},
{"f_13103ChickenBridge.scm",(void*)f_13103},
{"f_13110ChickenBridge.scm",(void*)f_13110},
{"f_13014ChickenBridge.scm",(void*)f_13014},
{"f_13016ChickenBridge.scm",(void*)f_13016},
{"f_13065ChickenBridge.scm",(void*)f_13065},
{"f_13100ChickenBridge.scm",(void*)f_13100},
{"f_13089ChickenBridge.scm",(void*)f_13089},
{"f_13234ChickenBridge.scm",(void*)f_13234},
{"f_13209ChickenBridge.scm",(void*)f_13209},
{"f_13230ChickenBridge.scm",(void*)f_13230},
{"f_13226ChickenBridge.scm",(void*)f_13226},
{"f_13218ChickenBridge.scm",(void*)f_13218},
{"f_13082ChickenBridge.scm",(void*)f_13082},
{"f_13075ChickenBridge.scm",(void*)f_13075},
{"f_13023ChickenBridge.scm",(void*)f_13023},
{"f_13063ChickenBridge.scm",(void*)f_13063},
{"f_13027ChickenBridge.scm",(void*)f_13027},
{"f_13059ChickenBridge.scm",(void*)f_13059},
{"f_13046ChickenBridge.scm",(void*)f_13046},
{"f_13054ChickenBridge.scm",(void*)f_13054},
{"f_13050ChickenBridge.scm",(void*)f_13050},
{"f_13030ChickenBridge.scm",(void*)f_13030},
{"f_13033ChickenBridge.scm",(void*)f_13033},
{"f_13007ChickenBridge.scm",(void*)f_13007},
{"f_12994ChickenBridge.scm",(void*)f_12994},
{"f_13003ChickenBridge.scm",(void*)f_13003},
{"f_12998ChickenBridge.scm",(void*)f_12998},
{"f_12905ChickenBridge.scm",(void*)f_12905},
{"f_12985ChickenBridge.scm",(void*)f_12985},
{"f_12965ChickenBridge.scm",(void*)f_12965},
{"f_12971ChickenBridge.scm",(void*)f_12971},
{"f_12982ChickenBridge.scm",(void*)f_12982},
{"f_12962ChickenBridge.scm",(void*)f_12962},
{"f_12950ChickenBridge.scm",(void*)f_12950},
{"f_12953ChickenBridge.scm",(void*)f_12953},
{"f_12908ChickenBridge.scm",(void*)f_12908},
{"f_12944ChickenBridge.scm",(void*)f_12944},
{"f_12939ChickenBridge.scm",(void*)f_12939},
{"f_12911ChickenBridge.scm",(void*)f_12911},
{"f_12924ChickenBridge.scm",(void*)f_12924},
{"f_12914ChickenBridge.scm",(void*)f_12914},
{"f_12917ChickenBridge.scm",(void*)f_12917},
{"f_12920ChickenBridge.scm",(void*)f_12920},
{"f_12757ChickenBridge.scm",(void*)f_12757},
{"f_12816ChickenBridge.scm",(void*)f_12816},
{"f_12826ChickenBridge.scm",(void*)f_12826},
{"f_12828ChickenBridge.scm",(void*)f_12828},
{"f_12857ChickenBridge.scm",(void*)f_12857},
{"f_12862ChickenBridge.scm",(void*)f_12862},
{"f_12847ChickenBridge.scm",(void*)f_12847},
{"f_12778ChickenBridge.scm",(void*)f_12778},
{"f_12810ChickenBridge.scm",(void*)f_12810},
{"f_12738ChickenBridge.scm",(void*)f_12738},
{"f_12745ChickenBridge.scm",(void*)f_12745},
{"f_12752ChickenBridge.scm",(void*)f_12752},
{"f_12719ChickenBridge.scm",(void*)f_12719},
{"f_12726ChickenBridge.scm",(void*)f_12726},
{"f_12733ChickenBridge.scm",(void*)f_12733},
{"f_12539ChickenBridge.scm",(void*)f_12539},
{"f_12543ChickenBridge.scm",(void*)f_12543},
{"f_12546ChickenBridge.scm",(void*)f_12546},
{"f_12549ChickenBridge.scm",(void*)f_12549},
{"f_12552ChickenBridge.scm",(void*)f_12552},
{"f_12709ChickenBridge.scm",(void*)f_12709},
{"f_12716ChickenBridge.scm",(void*)f_12716},
{"f_12555ChickenBridge.scm",(void*)f_12555},
{"f_12558ChickenBridge.scm",(void*)f_12558},
{"f_12564ChickenBridge.scm",(void*)f_12564},
{"f_12570ChickenBridge.scm",(void*)f_12570},
{"f_12633ChickenBridge.scm",(void*)f_12633},
{"f_12647ChickenBridge.scm",(void*)f_12647},
{"f_12573ChickenBridge.scm",(void*)f_12573},
{"f_12576ChickenBridge.scm",(void*)f_12576},
{"f_12582ChickenBridge.scm",(void*)f_12582},
{"f_12595ChickenBridge.scm",(void*)f_12595},
{"f_12585ChickenBridge.scm",(void*)f_12585},
{"f_12588ChickenBridge.scm",(void*)f_12588},
{"f_12529ChickenBridge.scm",(void*)f_12529},
{"f_12474ChickenBridge.scm",(void*)f_12474},
{"f_12465ChickenBridge.scm",(void*)f_12465},
{"f_12348ChickenBridge.scm",(void*)f_12348},
{"f_12339ChickenBridge.scm",(void*)f_12339},
{"f_12330ChickenBridge.scm",(void*)f_12330},
{"f_12321ChickenBridge.scm",(void*)f_12321},
{"f_12312ChickenBridge.scm",(void*)f_12312},
{"f_12294ChickenBridge.scm",(void*)f_12294},
{"f_12285ChickenBridge.scm",(void*)f_12285},
{"f_12276ChickenBridge.scm",(void*)f_12276},
{"f_12258ChickenBridge.scm",(void*)f_12258},
{"f_12249ChickenBridge.scm",(void*)f_12249},
{"f_12240ChickenBridge.scm",(void*)f_12240},
{"f_12225ChickenBridge.scm",(void*)f_12225},
{"f_12180ChickenBridge.scm",(void*)f_12180},
{"f_12162ChickenBridge.scm",(void*)f_12162},
{"f_12153ChickenBridge.scm",(void*)f_12153},
{"f_12126ChickenBridge.scm",(void*)f_12126},
{"f_12108ChickenBridge.scm",(void*)f_12108},
{"f_12090ChickenBridge.scm",(void*)f_12090},
{"f_12081ChickenBridge.scm",(void*)f_12081},
{"f_12069ChickenBridge.scm",(void*)f_12069},
{"f_11756ChickenBridge.scm",(void*)f_11756},
{"f_12067ChickenBridge.scm",(void*)f_12067},
{"f_12002ChickenBridge.scm",(void*)f_12002},
{"f_12004ChickenBridge.scm",(void*)f_12004},
{"f_7502ChickenBridge.scm",(void*)f_7502},
{"f_12019ChickenBridge.scm",(void*)f_12019},
{"f_12022ChickenBridge.scm",(void*)f_12022},
{"f_11769ChickenBridge.scm",(void*)f_11769},
{"f_11845ChickenBridge.scm",(void*)f_11845},
{"f_11998ChickenBridge.scm",(void*)f_11998},
{"f_11982ChickenBridge.scm",(void*)f_11982},
{"f_11934ChickenBridge.scm",(void*)f_11934},
{"f_11948ChickenBridge.scm",(void*)f_11948},
{"f_11901ChickenBridge.scm",(void*)f_11901},
{"f_11876ChickenBridge.scm",(void*)f_11876},
{"f_11772ChickenBridge.scm",(void*)f_11772},
{"f_11780ChickenBridge.scm",(void*)f_11780},
{"f_11813ChickenBridge.scm",(void*)f_11813},
{"f_11049ChickenBridge.scm",(void*)f_11049},
{"f_11733ChickenBridge.scm",(void*)f_11733},
{"f_11748ChickenBridge.scm",(void*)f_11748},
{"f_11740ChickenBridge.scm",(void*)f_11740},
{"f_11704ChickenBridge.scm",(void*)f_11704},
{"f_11708ChickenBridge.scm",(void*)f_11708},
{"f_11669ChickenBridge.scm",(void*)f_11669},
{"f_11673ChickenBridge.scm",(void*)f_11673},
{"f_11634ChickenBridge.scm",(void*)f_11634},
{"f_11638ChickenBridge.scm",(void*)f_11638},
{"f_11599ChickenBridge.scm",(void*)f_11599},
{"f_11603ChickenBridge.scm",(void*)f_11603},
{"f_11053ChickenBridge.scm",(void*)f_11053},
{"f_11563ChickenBridge.scm",(void*)f_11563},
{"f_11578ChickenBridge.scm",(void*)f_11578},
{"f_11570ChickenBridge.scm",(void*)f_11570},
{"f_11534ChickenBridge.scm",(void*)f_11534},
{"f_11538ChickenBridge.scm",(void*)f_11538},
{"f_11499ChickenBridge.scm",(void*)f_11499},
{"f_11503ChickenBridge.scm",(void*)f_11503},
{"f_11464ChickenBridge.scm",(void*)f_11464},
{"f_11468ChickenBridge.scm",(void*)f_11468},
{"f_11429ChickenBridge.scm",(void*)f_11429},
{"f_11433ChickenBridge.scm",(void*)f_11433},
{"f_11056ChickenBridge.scm",(void*)f_11056},
{"f_11393ChickenBridge.scm",(void*)f_11393},
{"f_11408ChickenBridge.scm",(void*)f_11408},
{"f_11400ChickenBridge.scm",(void*)f_11400},
{"f_11364ChickenBridge.scm",(void*)f_11364},
{"f_11368ChickenBridge.scm",(void*)f_11368},
{"f_11329ChickenBridge.scm",(void*)f_11329},
{"f_11333ChickenBridge.scm",(void*)f_11333},
{"f_11294ChickenBridge.scm",(void*)f_11294},
{"f_11298ChickenBridge.scm",(void*)f_11298},
{"f_11259ChickenBridge.scm",(void*)f_11259},
{"f_11263ChickenBridge.scm",(void*)f_11263},
{"f_11059ChickenBridge.scm",(void*)f_11059},
{"f_11223ChickenBridge.scm",(void*)f_11223},
{"f_11238ChickenBridge.scm",(void*)f_11238},
{"f_11230ChickenBridge.scm",(void*)f_11230},
{"f_11194ChickenBridge.scm",(void*)f_11194},
{"f_11198ChickenBridge.scm",(void*)f_11198},
{"f_11159ChickenBridge.scm",(void*)f_11159},
{"f_11163ChickenBridge.scm",(void*)f_11163},
{"f_11124ChickenBridge.scm",(void*)f_11124},
{"f_11128ChickenBridge.scm",(void*)f_11128},
{"f_11089ChickenBridge.scm",(void*)f_11089},
{"f_11093ChickenBridge.scm",(void*)f_11093},
{"f_11062ChickenBridge.scm",(void*)f_11062},
{"f_11065ChickenBridge.scm",(void*)f_11065},
{"f_10815ChickenBridge.scm",(void*)f_10815},
{"f_10824ChickenBridge.scm",(void*)f_10824},
{"f_10828ChickenBridge.scm",(void*)f_10828},
{"f_11030ChickenBridge.scm",(void*)f_11030},
{"f_11015ChickenBridge.scm",(void*)f_11015},
{"f_10997ChickenBridge.scm",(void*)f_10997},
{"f_10982ChickenBridge.scm",(void*)f_10982},
{"f_10932ChickenBridge.scm",(void*)f_10932},
{"f_10912ChickenBridge.scm",(void*)f_10912},
{"f_10929ChickenBridge.scm",(void*)f_10929},
{"f_10916ChickenBridge.scm",(void*)f_10916},
{"f_10922ChickenBridge.scm",(void*)f_10922},
{"f_10897ChickenBridge.scm",(void*)f_10897},
{"f_10901ChickenBridge.scm",(void*)f_10901},
{"f_10907ChickenBridge.scm",(void*)f_10907},
{"f_10883ChickenBridge.scm",(void*)f_10883},
{"f_10895ChickenBridge.scm",(void*)f_10895},
{"f_10891ChickenBridge.scm",(void*)f_10891},
{"f_10873ChickenBridge.scm",(void*)f_10873},
{"f_10881ChickenBridge.scm",(void*)f_10881},
{"f_10863ChickenBridge.scm",(void*)f_10863},
{"f_10830ChickenBridge.scm",(void*)f_10830},
{"f_10786ChickenBridge.scm",(void*)f_10786},
{"f_10790ChickenBridge.scm",(void*)f_10790},
{"f_10801ChickenBridge.scm",(void*)f_10801},
{"f_10799ChickenBridge.scm",(void*)f_10799},
{"f_10755ChickenBridge.scm",(void*)f_10755},
{"f_10759ChickenBridge.scm",(void*)f_10759},
{"f_10770ChickenBridge.scm",(void*)f_10770},
{"f_10768ChickenBridge.scm",(void*)f_10768},
{"f_10737ChickenBridge.scm",(void*)f_10737},
{"f_10745ChickenBridge.scm",(void*)f_10745},
{"f_10753ChickenBridge.scm",(void*)f_10753},
{"f_10727ChickenBridge.scm",(void*)f_10727},
{"f_10735ChickenBridge.scm",(void*)f_10735},
{"f_10668ChickenBridge.scm",(void*)f_10668},
{"f_10675ChickenBridge.scm",(void*)f_10675},
{"f_10678ChickenBridge.scm",(void*)f_10678},
{"f_10681ChickenBridge.scm",(void*)f_10681},
{"f_10686ChickenBridge.scm",(void*)f_10686},
{"f_10638ChickenBridge.scm",(void*)f_10638},
{"f_10642ChickenBridge.scm",(void*)f_10642},
{"f_10652ChickenBridge.scm",(void*)f_10652},
{"f_10626ChickenBridge.scm",(void*)f_10626},
{"f_10608ChickenBridge.scm",(void*)f_10608},
{"f_10590ChickenBridge.scm",(void*)f_10590},
{"f_10572ChickenBridge.scm",(void*)f_10572},
{"f_10551ChickenBridge.scm",(void*)f_10551},
{"f_10243ChickenBridge.scm",(void*)f_10243},
{"f_10344ChickenBridge.scm",(void*)f_10344},
{"f_10393ChickenBridge.scm",(void*)f_10393},
{"f_10389ChickenBridge.scm",(void*)f_10389},
{"f_10361ChickenBridge.scm",(void*)f_10361},
{"f_10296ChickenBridge.scm",(void*)f_10296},
{"f_10305ChickenBridge.scm",(void*)f_10305},
{"f_10289ChickenBridge.scm",(void*)f_10289},
{"f_10108ChickenBridge.scm",(void*)f_10108},
{"f_10234ChickenBridge.scm",(void*)f_10234},
{"f_10230ChickenBridge.scm",(void*)f_10230},
{"f_10208ChickenBridge.scm",(void*)f_10208},
{"f_10138ChickenBridge.scm",(void*)f_10138},
{"f_10154ChickenBridge.scm",(void*)f_10154},
{"f_10063ChickenBridge.scm",(void*)f_10063},
{"f_10106ChickenBridge.scm",(void*)f_10106},
{"f_10095ChickenBridge.scm",(void*)f_10095},
{"f_9947ChickenBridge.scm",(void*)f_9947},
{"f_10061ChickenBridge.scm",(void*)f_10061},
{"f_9962ChickenBridge.scm",(void*)f_9962},
{"f_9992ChickenBridge.scm",(void*)f_9992},
{"f_10011ChickenBridge.scm",(void*)f_10011},
{"f_9996ChickenBridge.scm",(void*)f_9996},
{"f_9975ChickenBridge.scm",(void*)f_9975},
{"f_9825ChickenBridge.scm",(void*)f_9825},
{"f_9945ChickenBridge.scm",(void*)f_9945},
{"f_9840ChickenBridge.scm",(void*)f_9840},
{"f_9870ChickenBridge.scm",(void*)f_9870},
{"f_9889ChickenBridge.scm",(void*)f_9889},
{"f_9874ChickenBridge.scm",(void*)f_9874},
{"f_9853ChickenBridge.scm",(void*)f_9853},
{"f_9728ChickenBridge.scm",(void*)f_9728},
{"f_9823ChickenBridge.scm",(void*)f_9823},
{"f_9743ChickenBridge.scm",(void*)f_9743},
{"f_9789ChickenBridge.scm",(void*)f_9789},
{"f_9774ChickenBridge.scm",(void*)f_9774},
{"f_9756ChickenBridge.scm",(void*)f_9756},
{"f_9675ChickenBridge.scm",(void*)f_9675},
{"f_9713ChickenBridge.scm",(void*)f_9713},
{"f_9720ChickenBridge.scm",(void*)f_9720},
{"f_9698ChickenBridge.scm",(void*)f_9698},
{"f_9673ChickenBridge.scm",(void*)f_9673},
{"f_9645ChickenBridge.scm",(void*)f_9645},
{"f_9647ChickenBridge.scm",(void*)f_9647},
{"f_9625ChickenBridge.scm",(void*)f_9625},
{"f_9573ChickenBridge.scm",(void*)f_9573},
{"f_9610ChickenBridge.scm",(void*)f_9610},
{"f_9577ChickenBridge.scm",(void*)f_9577},
{"f_9593ChickenBridge.scm",(void*)f_9593},
{"f_9595ChickenBridge.scm",(void*)f_9595},
{"f_9359ChickenBridge.scm",(void*)f_9359},
{"f_9372ChickenBridge.scm",(void*)f_9372},
{"f_9454ChickenBridge.scm",(void*)f_9454},
{"f_9457ChickenBridge.scm",(void*)f_9457},
{"f_9465ChickenBridge.scm",(void*)f_9465},
{"f_9477ChickenBridge.scm",(void*)f_9477},
{"f_9498ChickenBridge.scm",(void*)f_9498},
{"f_9506ChickenBridge.scm",(void*)f_9506},
{"f_9393ChickenBridge.scm",(void*)f_9393},
{"f_9398ChickenBridge.scm",(void*)f_9398},
{"f_9430ChickenBridge.scm",(void*)f_9430},
{"f_9338ChickenBridge.scm",(void*)f_9338},
{"f_9319ChickenBridge.scm",(void*)f_9319},
{"f_9278ChickenBridge.scm",(void*)f_9278},
{"f_9259ChickenBridge.scm",(void*)f_9259},
{"f_9031ChickenBridge.scm",(void*)f_9031},
{"f_9236ChickenBridge.scm",(void*)f_9236},
{"f_9251ChickenBridge.scm",(void*)f_9251},
{"f_9243ChickenBridge.scm",(void*)f_9243},
{"f_9207ChickenBridge.scm",(void*)f_9207},
{"f_9211ChickenBridge.scm",(void*)f_9211},
{"f_9172ChickenBridge.scm",(void*)f_9172},
{"f_9176ChickenBridge.scm",(void*)f_9176},
{"f_9035ChickenBridge.scm",(void*)f_9035},
{"f_9136ChickenBridge.scm",(void*)f_9136},
{"f_9151ChickenBridge.scm",(void*)f_9151},
{"f_9143ChickenBridge.scm",(void*)f_9143},
{"f_9107ChickenBridge.scm",(void*)f_9107},
{"f_9111ChickenBridge.scm",(void*)f_9111},
{"f_9072ChickenBridge.scm",(void*)f_9072},
{"f_9076ChickenBridge.scm",(void*)f_9076},
{"f_9038ChickenBridge.scm",(void*)f_9038},
{"f_9041ChickenBridge.scm",(void*)f_9041},
{"f_9044ChickenBridge.scm",(void*)f_9044},
{"f_8989ChickenBridge.scm",(void*)f_8989},
{"f_9018ChickenBridge.scm",(void*)f_9018},
{"f_9003ChickenBridge.scm",(void*)f_9003},
{"f_8934ChickenBridge.scm",(void*)f_8934},
{"f_8945ChickenBridge.scm",(void*)f_8945},
{"f_8947ChickenBridge.scm",(void*)f_8947},
{"f_8975ChickenBridge.scm",(void*)f_8975},
{"f_8835ChickenBridge.scm",(void*)f_8835},
{"f_8839ChickenBridge.scm",(void*)f_8839},
{"f_8842ChickenBridge.scm",(void*)f_8842},
{"f_8907ChickenBridge.scm",(void*)f_8907},
{"f_8844ChickenBridge.scm",(void*)f_8844},
{"f_8860ChickenBridge.scm",(void*)f_8860},
{"f_8607ChickenBridge.scm",(void*)f_8607},
{"f_8812ChickenBridge.scm",(void*)f_8812},
{"f_8827ChickenBridge.scm",(void*)f_8827},
{"f_8819ChickenBridge.scm",(void*)f_8819},
{"f_8783ChickenBridge.scm",(void*)f_8783},
{"f_8787ChickenBridge.scm",(void*)f_8787},
{"f_8748ChickenBridge.scm",(void*)f_8748},
{"f_8752ChickenBridge.scm",(void*)f_8752},
{"f_8611ChickenBridge.scm",(void*)f_8611},
{"f_8712ChickenBridge.scm",(void*)f_8712},
{"f_8727ChickenBridge.scm",(void*)f_8727},
{"f_8719ChickenBridge.scm",(void*)f_8719},
{"f_8683ChickenBridge.scm",(void*)f_8683},
{"f_8687ChickenBridge.scm",(void*)f_8687},
{"f_8648ChickenBridge.scm",(void*)f_8648},
{"f_8652ChickenBridge.scm",(void*)f_8652},
{"f_8614ChickenBridge.scm",(void*)f_8614},
{"f_8617ChickenBridge.scm",(void*)f_8617},
{"f_8627ChickenBridge.scm",(void*)f_8627},
{"f_8564ChickenBridge.scm",(void*)f_8564},
{"f_8597ChickenBridge.scm",(void*)f_8597},
{"f_8582ChickenBridge.scm",(void*)f_8582},
{"f_8543ChickenBridge.scm",(void*)f_8543},
{"f_8508ChickenBridge.scm",(void*)f_8508},
{"f_8512ChickenBridge.scm",(void*)f_8512},
{"f_8400ChickenBridge.scm",(void*)f_8400},
{"f_8487ChickenBridge.scm",(void*)f_8487},
{"f_8407ChickenBridge.scm",(void*)f_8407},
{"f_8416ChickenBridge.scm",(void*)f_8416},
{"f_8463ChickenBridge.scm",(void*)f_8463},
{"f_8429ChickenBridge.scm",(void*)f_8429},
{"f_8455ChickenBridge.scm",(void*)f_8455},
{"f_8267ChickenBridge.scm",(void*)f_8267},
{"f_8271ChickenBridge.scm",(void*)f_8271},
{"f_8274ChickenBridge.scm",(void*)f_8274},
{"f_8378ChickenBridge.scm",(void*)f_8378},
{"f_8276ChickenBridge.scm",(void*)f_8276},
{"f_8283ChickenBridge.scm",(void*)f_8283},
{"f_8325ChickenBridge.scm",(void*)f_8325},
{"f_8332ChickenBridge.scm",(void*)f_8332},
{"f_8306ChickenBridge.scm",(void*)f_8306},
{"f_8200ChickenBridge.scm",(void*)f_8200},
{"f_8204ChickenBridge.scm",(void*)f_8204},
{"f_8250ChickenBridge.scm",(void*)f_8250},
{"f_8207ChickenBridge.scm",(void*)f_8207},
{"f_8243ChickenBridge.scm",(void*)f_8243},
{"f_8210ChickenBridge.scm",(void*)f_8210},
{"f_8223ChickenBridge.scm",(void*)f_8223},
{"f_8154ChickenBridge.scm",(void*)f_8154},
{"f_8158ChickenBridge.scm",(void*)f_8158},
{"f_8068ChickenBridge.scm",(void*)f_8068},
{"f_8072ChickenBridge.scm",(void*)f_8072},
{"f_8075ChickenBridge.scm",(void*)f_8075},
{"f_8084ChickenBridge.scm",(void*)f_8084},
{"f_8106ChickenBridge.scm",(void*)f_8106},
{"f_8053ChickenBridge.scm",(void*)f_8053},
{"f_8038ChickenBridge.scm",(void*)f_8038},
{"f_7802ChickenBridge.scm",(void*)f_7802},
{"f_8015ChickenBridge.scm",(void*)f_8015},
{"f_8030ChickenBridge.scm",(void*)f_8030},
{"f_8022ChickenBridge.scm",(void*)f_8022},
{"f_7986ChickenBridge.scm",(void*)f_7986},
{"f_7990ChickenBridge.scm",(void*)f_7990},
{"f_7951ChickenBridge.scm",(void*)f_7951},
{"f_7955ChickenBridge.scm",(void*)f_7955},
{"f_7806ChickenBridge.scm",(void*)f_7806},
{"f_7915ChickenBridge.scm",(void*)f_7915},
{"f_7930ChickenBridge.scm",(void*)f_7930},
{"f_7922ChickenBridge.scm",(void*)f_7922},
{"f_7886ChickenBridge.scm",(void*)f_7886},
{"f_7890ChickenBridge.scm",(void*)f_7890},
{"f_7851ChickenBridge.scm",(void*)f_7851},
{"f_7855ChickenBridge.scm",(void*)f_7855},
{"f_7809ChickenBridge.scm",(void*)f_7809},
{"f_7812ChickenBridge.scm",(void*)f_7812},
{"f_7823ChickenBridge.scm",(void*)f_7823},
{"f_7762ChickenBridge.scm",(void*)f_7762},
{"f_7766ChickenBridge.scm",(void*)f_7766},
{"f_7796ChickenBridge.scm",(void*)f_7796},
{"f_7777ChickenBridge.scm",(void*)f_7777},
{"f_7785ChickenBridge.scm",(void*)f_7785},
{"f_7741ChickenBridge.scm",(void*)f_7741},
{"f_7753ChickenBridge.scm",(void*)f_7753},
{"f_7715ChickenBridge.scm",(void*)f_7715},
{"f_7673ChickenBridge.scm",(void*)f_7673},
{"f_7658ChickenBridge.scm",(void*)f_7658},
{"f_7547ChickenBridge.scm",(void*)f_7547},
{"f_7622ChickenBridge.scm",(void*)f_7622},
{"f_7551ChickenBridge.scm",(void*)f_7551},
{"f_7591ChickenBridge.scm",(void*)f_7591},
{"f_7580ChickenBridge.scm",(void*)f_7580},
{"f_7565ChickenBridge.scm",(void*)f_7565},
{"f_7573ChickenBridge.scm",(void*)f_7573},
{"f_7513ChickenBridge.scm",(void*)f_7513},
{"f_7525ChickenBridge.scm",(void*)f_7525},
{"f_7494ChickenBridge.scm",(void*)f_7494},
{"f_7491ChickenBridge.scm",(void*)f_7491},
{"f_7484ChickenBridge.scm",(void*)f_7484},
{"f_7481ChickenBridge.scm",(void*)f_7481},
{"f_7474ChickenBridge.scm",(void*)f_7474},
{"f_7456ChickenBridge.scm",(void*)f_7456},
{"f_7445ChickenBridge.scm",(void*)f_7445},
{"f_7442ChickenBridge.scm",(void*)f_7442},
{"f_7439ChickenBridge.scm",(void*)f_7439},
{"f_7436ChickenBridge.scm",(void*)f_7436},
{"f_7407ChickenBridge.scm",(void*)f_7407},
{"f_7400ChickenBridge.scm",(void*)f_7400},
{"f_7397ChickenBridge.scm",(void*)f_7397},
{"f_7376ChickenBridge.scm",(void*)f_7376},
{"f_7357ChickenBridge.scm",(void*)f_7357},
{"f_7338ChickenBridge.scm",(void*)f_7338},
{"f_7331ChickenBridge.scm",(void*)f_7331},
{"f_7324ChickenBridge.scm",(void*)f_7324},
{"f_7309ChickenBridge.scm",(void*)f_7309},
{"f_7298ChickenBridge.scm",(void*)f_7298},
{"f_7280ChickenBridge.scm",(void*)f_7280},
{"f_7253ChickenBridge.scm",(void*)f_7253},
{"f_7226ChickenBridge.scm",(void*)f_7226},
{"f_7185ChickenBridge.scm",(void*)f_7185},
{"f_7191ChickenBridge.scm",(void*)f_7191},
{"f_7201ChickenBridge.scm",(void*)f_7201},
{"f_7099ChickenBridge.scm",(void*)f_7099},
{"f_7000ChickenBridge.scm",(void*)f_7000},
{"f_7004ChickenBridge.scm",(void*)f_7004},
{"f_7029ChickenBridge.scm",(void*)f_7029},
{"f_7046ChickenBridge.scm",(void*)f_7046},
{"f_7050ChickenBridge.scm",(void*)f_7050},
{"f_7006ChickenBridge.scm",(void*)f_7006},
{"f_7023ChickenBridge.scm",(void*)f_7023},
{"f_6939ChickenBridge.scm",(void*)f_6939},
{"f_6952ChickenBridge.scm",(void*)f_6952},
{"f_6929ChickenBridge.scm",(void*)f_6929},
{"f_6889ChickenBridge.scm",(void*)f_6889},
{"f_6919ChickenBridge.scm",(void*)f_6919},
{"f_6751ChickenBridge.scm",(void*)f_6751},
{"f_6785ChickenBridge.scm",(void*)f_6785},
{"f_6728ChickenBridge.scm",(void*)f_6728},
{"f_6722ChickenBridge.scm",(void*)f_6722},
{"f_6707ChickenBridge.scm",(void*)f_6707},
{"f_6693ChickenBridge.scm",(void*)f_6693},
{"f_6683ChickenBridge.scm",(void*)f_6683},
{"f_6673ChickenBridge.scm",(void*)f_6673},
{"f_6663ChickenBridge.scm",(void*)f_6663},
{"f_6653ChickenBridge.scm",(void*)f_6653},
{"f_6624ChickenBridge.scm",(void*)f_6624},
{"f_6633ChickenBridge.scm",(void*)f_6633},
{"f_6638ChickenBridge.scm",(void*)f_6638},
{"f_6613ChickenBridge.scm",(void*)f_6613},
{"f_6618ChickenBridge.scm",(void*)f_6618},
{"f_6320ChickenBridge.scm",(void*)f_6320},
{"f_6330ChickenBridge.scm",(void*)f_6330},
{"f_6581ChickenBridge.scm",(void*)f_6581},
{"f_6333ChickenBridge.scm",(void*)f_6333},
{"f_6336ChickenBridge.scm",(void*)f_6336},
{"f_6351ChickenBridge.scm",(void*)f_6351},
{"f_6361ChickenBridge.scm",(void*)f_6361},
{"f_6363ChickenBridge.scm",(void*)f_6363},
{"f_6422ChickenBridge.scm",(void*)f_6422},
{"f_6432ChickenBridge.scm",(void*)f_6432},
{"f_6549ChickenBridge.scm",(void*)f_6549},
{"f_6537ChickenBridge.scm",(void*)f_6537},
{"f_6535ChickenBridge.scm",(void*)f_6535},
{"f_6522ChickenBridge.scm",(void*)f_6522},
{"f_6476ChickenBridge.scm",(void*)f_6476},
{"f_6503ChickenBridge.scm",(void*)f_6503},
{"f_6482ChickenBridge.scm",(void*)f_6482},
{"f_6416ChickenBridge.scm",(void*)f_6416},
{"f_6375ChickenBridge.scm",(void*)f_6375},
{"f_6388ChickenBridge.scm",(void*)f_6388},
{"f_6598ChickenBridge.scm",(void*)f_6598},
{"f_6589ChickenBridge.scm",(void*)f_6589},
{"f_6597ChickenBridge.scm",(void*)f_6597},
{"f_6600ChickenBridge.scm",(void*)f_6600},
{"f_6608ChickenBridge.scm",(void*)f_6608},
{"f_6022ChickenBridge.scm",(void*)f_6022},
{"f_6275ChickenBridge.scm",(void*)f_6275},
{"f_6308ChickenBridge.scm",(void*)f_6308},
{"f_6304ChickenBridge.scm",(void*)f_6304},
{"f_6293ChickenBridge.scm",(void*)f_6293},
{"f_6289ChickenBridge.scm",(void*)f_6289},
{"f_6183ChickenBridge.scm",(void*)f_6183},
{"f_6186ChickenBridge.scm",(void*)f_6186},
{"f_6189ChickenBridge.scm",(void*)f_6189},
{"f_6269ChickenBridge.scm",(void*)f_6269},
{"f_6094ChickenBridge.scm",(void*)f_6094},
{"f_6035ChickenBridge.scm",(void*)f_6035},
{"f_6192ChickenBridge.scm",(void*)f_6192},
{"f_6199ChickenBridge.scm",(void*)f_6199},
{"f_6259ChickenBridge.scm",(void*)f_6259},
{"f_6245ChickenBridge.scm",(void*)f_6245},
{"f_6211ChickenBridge.scm",(void*)f_6211},
{"f_6237ChickenBridge.scm",(void*)f_6237},
{"f_6172ChickenBridge.scm",(void*)f_6172},
{"f_6219ChickenBridge.scm",(void*)f_6219},
{"f_6215ChickenBridge.scm",(void*)f_6215},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
