/* Generated from ChickenBridge.scm by the CHICKEN compiler
   http://www.call-with-current-continuation.org
   2008-03-11 07:15
   Version 3.0.0 - macosx-unix-gnu-x86	[ manyargs dload ptables applyhook ]
   (c)2000-2008 Felix L. Winkelmann	compiled 2008-02-24 on zippy.local (Darwin)
   command line: ChickenBridge.scm -output-file ChickenBridge.cpp -quiet
   unit: grace
*/

#include "chicken.h"


/*************************************************************************
 * Copyright (C) 2007 Todd Ingalls, Rick Taube.                          *
 * This program is free software; you can redistribute it and/or modify  *
 * it under the terms of the Lisp Lesser Gnu Public License. The text of *
 * this agreement is available at http://www.cliki.net/LLGPL             *
 *************************************************************************/

#include "Grace.h"
#include "Scheme.h"
#include "Syntax.h"
#include "Midi.h"
#include <juce.h>

//
// Console Window code
//

void print_message(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, false);
}

void print_error(char * st) {
  // attempt at buffering: if string ends with #\Return, send string
  // AND trigger update else send string without triggering update
  String s=String(st);
  if ( s.endsWithChar('\n') )
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  else
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, false);
}

//
// Scheduler code
//

void scheduler_sprout( C_word proc, double time, int id)
{
  ((GraceApp *)
   GraceApp::getInstance())->schemeProcess->addNode(0, time, proc, id);
}

bool scheduler_is_paused () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isPaused();
}

void scheduler_pause() {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(true);
}

void scheduler_cont () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setPaused(false);
}

void scheduler_stop (int id) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(id);
}

void scheduler_hush () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->stop(-1);
  ((GraceApp *)GraceApp::getInstance())->midiOutPort->clear();
}

bool scheduler_is_time_milliseconds () {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->isTimeMilliseconds();
}
 
void scheduler_set_time_milliseconds (bool b) {
  ((GraceApp *)GraceApp::getInstance())->schemeProcess->setTimeMilliseconds(b);
}

//void print_current_directory() {
//  String s=File::getCurrentWorkingDirectory().getFullPathName().quoted() + T("\n");
//  ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::TEXT, true);
//}

char *get_current_directory() {
  return (char *)File::getCurrentWorkingDirectory().getFullPathName().toUTF8();
}

void set_current_directory (char *path) {
  File dir=File(String(path));
  if ( dir.isDirectory() ) {
    dir.setAsCurrentWorkingDirectory();
    //print_working_directory();
  }
  else {
    String s=T(">>> Error: ") + dir.getFullPathName().quoted() + T(" is not a directory.\n");
    ((GraceApp *)GraceApp::getInstance())->getConsole()->postConsoleTextMessage(s, ConsoleMessage::ERROR, true);
  }			 
}

void load_sal_file(char *path) {
  SalSyntax::getInstance()->loadFile( String(path) );  
}



#include "Toolbox.h"



void mp_note(double time, double dur, float key, float vel, float chan) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendNote(time, dur, key, vel, chan); 
}

void mp_data(int type, double time, float chan, float data1, float data2) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendData(type, time, chan, data1, data2) ;
}

void mp_message(MidiMessage *m) {
 ((GraceApp *)GraceApp::getInstance())->midiOutPort->sendMessage(m) ;
}

/// MidiMessage accessors

MidiMessage *mm_make(int type, double time, int chan, 
		     int data1, int data2 ) {
  MidiMessage *m;
  chan++; // juce channels are 1 based
  switch (type) {
  case MidiNode::MM_OFF :
    m=new MidiMessage(MidiMessage::noteOff(chan, data1));
    break;
  case MidiNode::MM_ON :
    m=new MidiMessage(MidiMessage::noteOn(chan, data1, (juce::uint8)data2));
    break;
  case MidiNode::MM_TOUCH :
    m=new MidiMessage(MidiMessage::aftertouchChange(chan, data1, data2));
    break;
  case MidiNode::MM_CTRL :
    m=new MidiMessage(MidiMessage::controllerEvent(chan, data1, data2));
    break;
  case MidiNode::MM_PROG :
    m=new MidiMessage(MidiMessage::programChange(chan, data1));
    break;
  case MidiNode::MM_PRESS :
    m=new MidiMessage(MidiMessage::channelPressureChange(chan, data1));
    break;
  case MidiNode::MM_BEND :
    m=new MidiMessage(MidiMessage::pitchWheel(chan, data1));
    break;
  default:
    return NULL;
  }
  return m;
}

MidiMessage *mm_copy(MidiMessage *m) {
  return new MidiMessage(*m);
}

void mm_free(MidiMessage *m) {
  delete m;
}

bool mm_is_type(MidiMessage *m, int typ) {
  switch (typ) {
  case MidiNode::MM_OFF :
    return m->isNoteOff();
    break;
  case MidiNode::MM_ON :
    return m->isNoteOn();
    break;
  case MidiNode::MM_TOUCH :
    return m->isAftertouch();
    break;
  case MidiNode::MM_CTRL :
    return m->isController();
    break;
  case MidiNode::MM_PROG :
    return m->isProgramChange();
    break;
  case MidiNode::MM_PRESS :
    return m->isChannelPressure();
    break;
  case MidiNode::MM_BEND :
    return m->isPitchWheel();
    break;
  default:
    return false;
  }
}

double mm_time(MidiMessage *m) {
  return m->getTimeStamp();
}

void mm_set_time(MidiMessage *m, double t) {
  m->setTimeStamp(t);
  return ;		
}

int mm_chan(MidiMessage *m) {
  // juce channels are 1 based
  return m->getChannel()-1;
}

void mm_set_chan(MidiMessage *m, int chan) {
  // juce channels are 1 based
  m->setChannel(chan+1);
}

int mm_data(MidiMessage *m, int n ) {
  juce::uint8 *data=m->getRawData();
  return (int)data[n];
}

void mm_set_data(MidiMessage *m, int n, int v ) {
  juce::uint8 *data=m->getRawData();
  data[n]=(v & 0x7f);
}

//INput Hook Code
void set_input_hook( C_word proc )
{
 // FIX
 ((GraceApp *)GraceApp::getInstance())->schemeProcess->setInputHook( proc);
}



#include "Csound.h"

void cs_send_score_event (int type, int len, C_word lyst) {
  MYFLT buf[len];
  int i=0;
  for ( ; C_SCHEME_END_OF_LIST != lyst; lyst = C_u_i_cdr( lyst ) ) {
    if (i==len) break;
    C_word w = C_u_i_car( lyst );
    if ( C_immediatep(w) ) {
      if ( C_truep(C_fixnump(w)) ) {
	// printf("FIX: buf[%d]=%d\n", i, C_unfix(w) );
	buf[i++] = (MYFLT)C_unfix(w);
      }
      else
        buf[i++] = 0.0;
    }
    else if ( C_truep(C_blockp(w)) && C_truep( C_flonump( w ) )) {
      // printf("FLO: buf[%d]=%f\n", i, (float)C_flonum_magnitude( w ));
      buf[i++] = (MYFLT)C_flonum_magnitude( w );
    }
    else {
      buf[i++] = 0.0;
    }
  }
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->sendScoreEvent( ((type==2) ? 'f' : 'i'), len, buf);  
}

void cs_clear_score () {
  ((GraceApp *)GraceApp::getInstance())->getCsoundPort()->clearScore();
}



static C_PTABLE_ENTRY *create_ptable(void);
C_noret_decl(C_library_toplevel)
C_externimport void C_ccall C_library_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_eval_toplevel)
C_externimport void C_ccall C_eval_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;
C_noret_decl(C_extras_toplevel)
C_externimport void C_ccall C_extras_toplevel(C_word c,C_word d,C_word k) C_noret;

static C_TLS C_word lf[660];
static double C_possibly_force_alignment;
static C_char C_TLS li0[] C_aligned={C_lihdr(0,0,23),40,102,95,51,50,49,49,32,115,116,114,49,50,32,46,32,97,114,103,115,49,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li1[] C_aligned={C_lihdr(0,0,12),40,102,95,51,50,48,48,32,107,49,54,41,0,0,0,0};
static C_char C_TLS li2[] C_aligned={C_lihdr(0,0,12),40,102,95,51,50,48,57,32,107,49,55,41,0,0,0,0};
static C_char C_TLS li3[] C_aligned={C_lihdr(0,0,13),40,100,111,51,49,32,116,97,105,108,51,51,41,0,0,0,0,0};
static C_char C_TLS li4[] C_aligned={C_lihdr(0,0,11),40,97,51,49,52,55,32,120,51,57,41,0,0,0};
static C_char C_TLS li5[] C_aligned={C_lihdr(0,0,31),40,100,111,50,53,32,97,114,103,115,50,55,32,107,101,121,50,56,32,97,114,103,50,57,32,112,111,115,51,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li6[] C_aligned={C_lihdr(0,0,7),40,97,51,49,57,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li7[] C_aligned={C_lihdr(0,0,31),40,101,120,112,97,110,100,45,115,101,110,100,32,109,101,115,103,54,32,100,97,116,97,55,32,101,114,114,102,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li8[] C_aligned={C_lihdr(0,0,11),40,102,105,102,116,104,32,108,53,50,41,0,0,0};
static C_char C_TLS li9[] C_aligned={C_lihdr(0,0,11),40,115,105,120,116,104,32,108,53,51,41,0,0,0};
static C_char C_TLS li10[] C_aligned={C_lihdr(0,0,13),40,115,101,118,101,110,116,104,32,108,53,52,41,0,0,0,0,0};
static C_char C_TLS li11[] C_aligned={C_lihdr(0,0,12),40,101,105,103,104,116,104,32,108,53,53,41,0,0,0,0};
static C_char C_TLS li12[] C_aligned={C_lihdr(0,0,11),40,110,105,110,116,104,32,108,53,54,41,0,0,0};
static C_char C_TLS li13[] C_aligned={C_lihdr(0,0,11),40,116,101,110,116,104,32,108,53,55,41,0,0,0};
static C_char C_TLS li14[] C_aligned={C_lihdr(0,0,10),40,108,97,115,116,32,108,53,57,41,0,0};
static C_char C_TLS li15[] C_aligned={C_lihdr(0,0,13),40,98,117,116,108,97,115,116,32,108,54,48,41,0,0,0,0,0};
static C_char C_TLS li16[] C_aligned={C_lihdr(0,0,16),40,108,105,115,116,42,32,46,32,97,114,103,115,54,49,41};
static C_char C_TLS li17[] C_aligned={C_lihdr(0,0,8),40,102,95,51,52,49,53,41};
static C_char C_TLS li18[] C_aligned={C_lihdr(0,0,5),40,99,119,100,41,0,0,0,0,0};
static C_char C_TLS li19[] C_aligned={C_lihdr(0,0,14),40,102,95,51,52,51,48,32,97,54,54,55,48,41,0,0,0,0,0,0};
static C_char C_TLS li20[] C_aligned={C_lihdr(0,0,15),40,99,104,100,105,114,32,46,32,100,105,114,54,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li21[] C_aligned={C_lihdr(0,0,48),40,116,98,58,114,101,115,99,97,108,101,32,97,55,55,56,48,32,97,55,54,56,49,32,97,55,53,56,50,32,97,55,52,56,51,32,97,55,51,56,52,32,97,55,50,56,53,41};
static C_char C_TLS li22[] C_aligned={C_lihdr(0,0,50),40,116,98,58,100,105,115,99,114,101,116,101,32,97,57,50,57,53,32,97,57,49,57,54,32,97,57,48,57,55,32,97,56,57,57,56,32,97,56,56,57,57,32,97,56,55,49,48,48,41,0,0};
static C_char C_TLS li23[] C_aligned={C_lihdr(0,0,29),40,116,98,58,100,101,99,105,109,97,108,115,32,97,49,48,54,49,48,57,32,97,49,48,53,49,49,48,41,0,0,0,0,0};
static C_char C_TLS li24[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,105,32,97,49,53,53,49,53,56,41,0};
static C_char C_TLS li25[] C_aligned={C_lihdr(0,0,17),40,116,98,58,114,97,110,102,32,97,49,53,57,49,54,50,41,0};
static C_char C_TLS li26[] C_aligned={C_lihdr(0,0,29),40,116,98,58,114,97,110,103,97,117,115,115,32,97,49,56,55,49,57,48,32,97,49,56,54,49,57,49,41,0,0,0,0,0};
static C_char C_TLS li27[] C_aligned={C_lihdr(0,0,19),40,116,98,58,114,97,110,101,120,112,32,97,49,57,51,49,57,54,41,0,0,0};
static C_char C_TLS li28[] C_aligned={C_lihdr(0,0,28),40,116,98,58,114,97,110,98,101,116,97,32,97,49,57,57,50,48,50,32,97,49,57,56,50,48,51,41,0,0,0,0};
static C_char C_TLS li29[] C_aligned={C_lihdr(0,0,21),40,116,98,58,114,97,110,103,97,109,109,97,32,97,50,48,53,50,48,56,41,0,0,0,0,0};
static C_char C_TLS li30[] C_aligned={C_lihdr(0,0,23),40,116,98,58,114,97,110,112,111,105,115,115,111,110,32,97,50,49,51,50,49,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li31[] C_aligned={C_lihdr(0,0,45),40,114,101,115,99,97,108,101,32,120,50,50,51,32,120,49,50,50,52,32,120,50,50,50,53,32,121,49,50,50,54,32,121,50,50,50,55,32,46,32,98,50,50,56,41,0,0,0,0,0};
static C_char C_TLS li32[] C_aligned={C_lihdr(0,0,43),40,100,105,115,99,114,101,116,101,32,120,50,50,57,32,120,49,50,51,48,32,120,50,50,51,49,32,105,49,50,51,50,32,46,32,97,114,103,115,50,51,51,41,0,0,0};
static C_char C_TLS li33[] C_aligned={C_lihdr(0,0,10),40,105,110,116,32,102,50,51,52,41,0,0};
static C_char C_TLS li34[] C_aligned={C_lihdr(0,0,26),40,113,117,97,110,116,105,122,101,32,110,117,109,50,51,53,32,115,116,101,112,115,50,51,54,41,0,0};
static C_char C_TLS li35[] C_aligned={C_lihdr(0,0,29),40,100,101,99,105,109,97,108,115,32,110,117,109,50,51,55,32,46,32,100,105,103,105,116,115,50,51,56,41,0,0,0,0,0};
static C_char C_TLS li36[] C_aligned={C_lihdr(0,0,26),40,98,111,100,121,50,52,51,32,116,101,109,112,111,50,52,57,32,98,101,97,116,50,53,48,41,0,0};
static C_char C_TLS li37[] C_aligned={C_lihdr(0,0,26),40,100,101,102,45,98,101,97,116,50,52,54,32,37,116,101,109,112,111,50,52,49,50,53,50,41,0,0};
static C_char C_TLS li38[] C_aligned={C_lihdr(0,0,14),40,100,101,102,45,116,101,109,112,111,50,52,53,41,0,0,0,0,0,0};
static C_char C_TLS li39[] C_aligned={C_lihdr(0,0,36),40,114,104,121,116,104,109,45,62,115,101,99,111,110,100,115,32,98,101,97,116,115,50,51,57,32,46,32,97,114,103,115,50,52,48,41,0,0,0,0};
static C_char C_TLS li40[] C_aligned={C_lihdr(0,0,24),40,99,101,110,116,115,45,62,115,99,97,108,101,114,32,99,101,110,116,115,50,53,57,41};
static C_char C_TLS li41[] C_aligned={C_lihdr(0,0,22),40,115,99,97,108,101,114,45,62,99,101,110,116,115,32,110,117,109,50,54,48,41,0,0,0,0,0,0};
static C_char C_TLS li42[] C_aligned={C_lihdr(0,0,20),40,107,101,121,110,117,109,45,62,104,101,114,116,122,32,107,50,54,49,41,0,0,0,0};
static C_char C_TLS li43[] C_aligned={C_lihdr(0,0,17),40,107,101,121,110,117,109,45,62,112,99,32,107,50,54,50,41,0};
static C_char C_TLS li44[] C_aligned={C_lihdr(0,0,21),40,104,101,114,116,122,45,62,107,101,121,110,117,109,32,104,122,50,54,51,41,0,0,0,0,0};
static C_char C_TLS li45[] C_aligned={C_lihdr(0,0,15),40,100,111,50,55,50,32,116,97,105,108,50,55,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li46[] C_aligned={C_lihdr(0,0,34),40,105,110,116,101,114,112,108,32,120,50,54,52,32,99,111,111,114,100,115,50,54,53,32,46,32,98,97,115,101,50,54,54,41,0,0};
static C_char C_TLS li47[] C_aligned={C_lihdr(0,0,23),40,105,110,116,101,114,112,32,120,50,56,50,32,46,32,97,114,103,115,50,56,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li48[] C_aligned={C_lihdr(0,0,27),40,100,111,50,56,56,32,105,50,57,48,32,107,50,57,49,32,108,50,57,50,32,116,50,57,51,41,0,0,0};
static C_char C_TLS li49[] C_aligned={C_lihdr(0,0,34),40,115,116,101,112,115,32,108,101,110,50,56,52,32,107,101,121,110,117,109,50,56,53,32,46,32,97,114,103,115,50,56,54,41,0,0};
static C_char C_TLS li50[] C_aligned={C_lihdr(0,0,18),40,114,97,110,45,115,101,116,33,32,115,101,101,100,50,57,56,41,0,0};
static C_char C_TLS li51[] C_aligned={C_lihdr(0,0,15),40,114,97,110,32,46,32,97,114,103,115,50,57,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li52[] C_aligned={C_lihdr(0,0,19),40,98,101,116,119,101,101,110,32,97,51,48,48,32,98,51,48,49,41,0,0,0};
static C_char C_TLS li53[] C_aligned={C_lihdr(0,0,21),40,111,100,100,115,32,110,51,48,50,32,46,32,97,114,103,115,51,48,51,41,0,0,0,0,0};
static C_char C_TLS li54[] C_aligned={C_lihdr(0,0,15),40,112,105,99,107,108,32,97,114,103,115,51,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li55[] C_aligned={C_lihdr(0,0,16),40,112,105,99,107,32,46,32,97,114,103,115,51,48,53,41};
static C_char C_TLS li56[] C_aligned={C_lihdr(0,0,8),40,114,97,110,108,111,119,41};
static C_char C_TLS li57[] C_aligned={C_lihdr(0,0,9),40,114,97,110,104,105,103,104,41,0};
static C_char C_TLS li58[] C_aligned={C_lihdr(0,0,11),40,114,97,110,109,105,100,100,108,101,41,0,0,0};
static C_char C_TLS li59[] C_aligned={C_lihdr(0,0,19),40,114,97,110,98,101,116,97,32,46,32,97,114,103,115,51,48,54,41,0,0,0};
static C_char C_TLS li60[] C_aligned={C_lihdr(0,0,18),40,114,97,110,101,120,112,32,46,32,97,114,103,115,51,48,55,41,0,0};
static C_char C_TLS li61[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,117,115,115,32,46,32,97,114,103,115,51,48,56,41,0,0,0,0};
static C_char C_TLS li62[] C_aligned={C_lihdr(0,0,11),40,114,97,110,99,97,117,99,104,121,41,0,0,0};
static C_char C_TLS li63[] C_aligned={C_lihdr(0,0,22),40,114,97,110,112,111,105,115,115,111,110,32,46,32,97,114,103,115,51,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li64[] C_aligned={C_lihdr(0,0,20),40,114,97,110,103,97,109,109,97,32,46,32,97,114,103,115,51,49,48,41,0,0,0,0};
static C_char C_TLS li65[] C_aligned={C_lihdr(0,0,10),40,114,97,110,98,114,111,119,110,41,0,0};
static C_char C_TLS li66[] C_aligned={C_lihdr(0,0,9),40,114,97,110,112,105,110,107,41,0};
static C_char C_TLS li67[] C_aligned={C_lihdr(0,0,42),40,109,97,107,101,45,116,111,107,101,110,32,116,121,112,101,51,56,52,32,115,116,114,105,110,103,51,56,53,32,112,111,115,105,116,105,111,110,51,56,54,41,0,0};
static C_char C_TLS li68[] C_aligned={C_lihdr(0,0,17),40,116,111,107,101,110,45,116,121,112,101,32,120,51,57,49,41,0};
static C_char C_TLS li69[] C_aligned={C_lihdr(0,0,19),40,116,111,107,101,110,45,115,116,114,105,110,103,32,120,51,57,55,41,0,0,0};
static C_char C_TLS li70[] C_aligned={C_lihdr(0,0,21),40,116,111,107,101,110,45,112,111,115,105,116,105,111,110,32,120,52,48,51,41,0,0,0,0,0};
static C_char C_TLS li71[] C_aligned={C_lihdr(0,0,18),40,108,105,115,116,45,62,116,111,107,101,110,32,108,52,49,50,41,0,0};
static C_char C_TLS li72[] C_aligned={C_lihdr(0,0,21),40,102,105,114,115,116,45,116,111,107,101,110,32,116,111,107,115,52,49,52,41,0,0,0,0,0};
static C_char C_TLS li73[] C_aligned={C_lihdr(0,0,22),40,110,117,108,108,45,116,111,107,101,110,115,63,32,116,111,107,115,52,49,54,41,0,0,0,0,0,0};
static C_char C_TLS li74[] C_aligned={C_lihdr(0,0,58),40,109,97,107,101,45,114,117,108,101,32,110,97,109,101,52,49,55,32,116,121,112,101,52,49,56,32,112,97,116,116,101,114,110,52,49,57,32,112,97,114,115,101,114,52,50,48,32,101,109,105,116,101,114,52,50,49,41,0,0};
static C_char C_TLS li75[] C_aligned={C_lihdr(0,0,16),40,114,117,108,101,45,110,97,109,101,32,120,52,50,54,41};
static C_char C_TLS li76[] C_aligned={C_lihdr(0,0,24),40,103,101,116,45,114,117,108,101,32,116,121,112,52,55,48,32,100,101,102,52,55,49,41};
static C_char C_TLS li77[] C_aligned={C_lihdr(0,0,22),40,112,97,116,116,101,114,110,45,99,108,97,117,115,101,63,32,120,52,55,52,41,0,0,0,0,0,0};
static C_char C_TLS li78[] C_aligned={C_lihdr(0,0,19),40,112,97,116,116,101,114,110,45,115,117,98,115,32,120,52,55,54,41,0,0,0};
static C_char C_TLS li79[] C_aligned={C_lihdr(0,0,20),40,112,97,116,116,101,114,110,45,110,115,117,98,115,32,120,52,55,55,41,0,0,0,0};
static C_char C_TLS li80[] C_aligned={C_lihdr(0,0,23),40,112,97,116,116,101,114,110,45,115,117,98,32,120,52,55,56,32,105,52,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li81[] C_aligned={C_lihdr(0,0,28),40,112,97,116,116,101,114,110,45,122,101,114,111,45,111,114,45,109,111,114,101,63,32,120,52,56,51,41,0,0,0,0};
static C_char C_TLS li82[] C_aligned={C_lihdr(0,0,40),40,109,97,107,101,45,112,97,114,115,101,45,101,114,114,111,114,32,115,116,114,105,110,103,52,56,53,32,112,111,115,105,116,105,111,110,52,56,54,41};
static C_char C_TLS li83[] C_aligned={C_lihdr(0,0,25),40,112,97,114,115,101,45,101,114,114,111,114,45,115,116,114,105,110,103,32,120,52,57,49,41,0};
static C_char C_TLS li84[] C_aligned={C_lihdr(0,0,27),40,112,97,114,115,101,45,101,114,114,111,114,45,112,111,115,105,116,105,111,110,32,120,52,57,55,41,0,0,0};
static C_char C_TLS li85[] C_aligned={C_lihdr(0,0,47),40,109,97,107,101,45,112,97,114,115,101,45,117,110,105,116,32,116,121,112,101,53,48,53,32,112,97,114,115,101,100,53,48,54,32,112,111,115,105,116,105,111,110,53,48,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li86[] C_aligned={C_lihdr(0,0,18),40,112,97,114,115,101,45,117,110,105,116,63,32,120,53,48,56,41,0,0};
static C_char C_TLS li87[] C_aligned={C_lihdr(0,0,22),40,112,97,114,115,101,45,117,110,105,116,45,116,121,112,101,32,120,53,49,50,41,0,0,0,0,0,0};
static C_char C_TLS li88[] C_aligned={C_lihdr(0,0,24),40,112,97,114,115,101,45,117,110,105,116,45,112,97,114,115,101,100,32,120,53,49,56,41};
static C_char C_TLS li89[] C_aligned={C_lihdr(0,0,26),40,112,97,114,115,101,45,117,110,105,116,45,112,111,115,105,116,105,111,110,32,120,53,50,52,41,0,0};
static C_char C_TLS li90[] C_aligned={C_lihdr(0,0,18),40,116,111,107,101,110,45,117,110,105,116,63,32,120,53,51,52,41,0,0};
static C_char C_TLS li91[] C_aligned={C_lihdr(0,0,31),40,116,111,107,101,110,45,117,110,105,116,45,116,121,112,101,61,63,32,120,53,51,53,32,116,121,112,53,51,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li92[] C_aligned={C_lihdr(0,0,31),40,103,101,116,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,53,51,56,32,105,110,102,111,53,51,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li93[] C_aligned={C_lihdr(0,0,39),40,97,100,100,45,101,109,105,116,45,105,110,102,111,32,110,97,109,101,53,52,49,32,100,97,116,97,53,52,50,32,105,110,102,111,53,52,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li94[] C_aligned={C_lihdr(0,0,40),40,115,101,116,45,101,109,105,116,45,105,110,102,111,33,32,110,97,109,101,53,52,52,32,100,97,116,97,53,52,53,32,105,110,102,111,53,52,54,41};
static C_char C_TLS li95[] C_aligned={C_lihdr(0,0,27),40,101,109,105,116,32,120,53,52,57,32,105,110,102,111,53,53,48,32,101,114,114,102,53,53,49,41,0,0,0};
static C_char C_TLS li96[] C_aligned={C_lihdr(0,0,34),40,101,109,105,116,45,108,105,115,116,32,108,105,115,53,53,50,32,105,110,102,111,53,53,51,32,101,114,114,102,53,53,52,41,0,0};
static C_char C_TLS li97[] C_aligned={C_lihdr(0,0,24),40,102,95,53,50,53,48,32,97,114,103,115,53,54,55,32,101,114,114,102,53,54,56,41};
static C_char C_TLS li98[] C_aligned={C_lihdr(0,0,28),40,115,105,109,112,108,101,45,117,110,105,116,45,112,97,114,115,101,114,32,116,121,112,101,53,54,54,41,0,0,0,0};
static C_char C_TLS li99[] C_aligned={C_lihdr(0,0,15),40,100,111,53,55,54,32,116,97,105,108,53,55,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li100[] C_aligned={C_lihdr(0,0,32),40,102,95,53,50,53,56,32,117,110,105,116,53,55,48,32,105,110,102,111,53,55,49,32,101,114,114,102,53,55,50,41};
static C_char C_TLS li101[] C_aligned={C_lihdr(0,0,29),40,115,105,109,112,108,101,45,117,110,105,116,45,101,109,105,116,116,101,114,32,102,117,110,99,53,54,57,41,0,0,0,0,0};
static C_char C_TLS li102[] C_aligned={C_lihdr(0,0,7),40,97,53,52,53,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li103[] C_aligned={C_lihdr(0,0,22),40,97,53,52,54,54,32,97,54,48,56,32,98,54,48,57,32,99,54,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li104[] C_aligned={C_lihdr(0,0,7),40,97,53,53,54,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li105[] C_aligned={C_lihdr(0,0,22),40,97,53,53,55,54,32,97,54,50,52,32,98,54,50,53,32,99,54,50,54,41,0,0,0,0,0,0};
static C_char C_TLS li106[] C_aligned={C_lihdr(0,0,12),40,100,111,54,49,57,32,105,54,50,49,41,0,0,0,0};
static C_char C_TLS li107[] C_aligned={C_lihdr(0,0,7),40,97,53,54,50,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li108[] C_aligned={C_lihdr(0,0,22),40,97,53,54,52,51,32,97,54,52,54,32,98,54,52,55,32,99,54,52,56,41,0,0,0,0,0,0};
static C_char C_TLS li109[] C_aligned={C_lihdr(0,0,12),40,100,111,54,52,49,32,105,54,52,51,41,0,0,0,0};
static C_char C_TLS li110[] C_aligned={C_lihdr(0,0,7),40,97,53,55,49,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li111[] C_aligned={C_lihdr(0,0,22),40,97,53,55,50,52,32,97,54,54,53,32,98,54,54,54,32,99,54,54,55,41,0,0,0,0,0,0};
static C_char C_TLS li112[] C_aligned={C_lihdr(0,0,7),40,100,111,54,54,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li113[] C_aligned={C_lihdr(0,0,7),40,97,53,55,53,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li114[] C_aligned={C_lihdr(0,0,22),40,97,53,55,54,51,32,97,54,56,51,32,98,54,56,52,32,99,54,56,53,41,0,0,0,0,0,0};
static C_char C_TLS li115[] C_aligned={C_lihdr(0,0,64),40,112,97,114,115,101,114,32,112,97,116,53,57,53,32,116,111,107,101,110,115,53,57,54,32,102,111,114,99,101,45,97,110,100,53,57,55,32,108,101,118,101,108,53,57,56,32,116,114,97,99,101,53,57,57,32,101,114,114,102,54,48,48,41};
static C_char C_TLS li116[] C_aligned={C_lihdr(0,0,20),40,83,97,108,84,111,107,101,110,84,121,112,101,63,32,105,56,54,48,41,0,0,0,0};
static C_char C_TLS li117[] C_aligned={C_lihdr(0,0,17),40,83,97,108,79,112,84,121,112,101,63,32,105,56,54,52,41,0};
static C_char C_TLS li118[] C_aligned={C_lihdr(0,0,19),40,83,97,108,82,117,108,101,84,121,112,101,63,32,105,56,55,51,41,0,0,0};
static C_char C_TLS li119[] C_aligned={C_lihdr(0,0,27),40,83,97,108,84,121,112,101,61,63,32,116,121,112,49,56,55,52,32,116,121,112,50,56,55,53,41,0,0,0};
static C_char C_TLS li120[] C_aligned={C_lihdr(0,0,15),40,100,111,57,50,52,32,116,111,107,115,57,50,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li121[] C_aligned={C_lihdr(0,0,34),40,114,101,109,111,118,101,45,116,111,107,101,110,45,116,121,112,101,32,116,111,107,115,57,50,48,32,116,121,112,57,50,49,41,0,0};
static C_char C_TLS li122[] C_aligned={C_lihdr(0,0,13),40,105,115,45,111,112,63,32,120,57,53,49,41,0,0,0,0,0};
static C_char C_TLS li123[] C_aligned={C_lihdr(0,0,25),40,100,111,57,54,48,32,119,50,57,54,50,32,111,107,57,54,51,32,108,105,57,54,52,41,0};
static C_char C_TLS li124[] C_aligned={C_lihdr(0,0,7),40,100,111,57,53,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li125[] C_aligned={C_lihdr(0,0,17),40,105,110,102,45,62,112,114,101,32,105,110,102,57,53,51,41,0};
static C_char C_TLS li126[] C_aligned={C_lihdr(0,0,38),40,115,97,108,45,112,97,114,115,101,45,115,116,101,112,112,105,110,103,32,97,114,103,115,49,49,49,57,32,101,114,114,102,49,49,50,48,41,0,0,0,0,0,0};
static C_char C_TLS li127[] C_aligned={C_lihdr(0,0,14),40,100,111,49,51,50,56,32,102,49,51,51,48,41,0,0,0,0,0,0};
static C_char C_TLS li128[] C_aligned={C_lihdr(0,0,14),40,100,111,49,51,50,49,32,102,49,51,50,51,41,0,0,0,0,0,0};
static C_char C_TLS li129[] C_aligned={C_lihdr(0,0,7),40,97,53,51,50,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li130[] C_aligned={C_lihdr(0,0,40),40,97,53,51,51,52,32,115,117,99,99,101,115,115,53,57,48,32,114,101,115,117,108,116,115,53,57,49,32,114,101,109,97,105,110,115,53,57,50,41};
static C_char C_TLS li131[] C_aligned={C_lihdr(0,0,15),40,97,53,51,50,49,32,101,114,114,102,53,56,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li132[] C_aligned={C_lihdr(0,0,47),40,115,97,108,32,115,116,114,105,110,103,49,51,48,54,32,114,117,108,101,49,51,48,55,32,116,111,107,101,110,115,49,51,48,56,32,116,114,97,99,101,63,49,51,48,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li133[] C_aligned={C_lihdr(0,0,17),40,100,111,49,51,52,55,32,116,97,105,108,49,51,52,57,41,0};
static C_char C_TLS li134[] C_aligned={C_lihdr(0,0,19),40,112,114,105,110,116,101,114,32,116,104,105,110,103,49,51,52,54,41,0,0,0};
static C_char C_TLS li135[] C_aligned={C_lihdr(0,0,17),40,100,111,49,51,53,53,32,116,97,105,108,49,51,53,55,41,0};
static C_char C_TLS li136[] C_aligned={C_lihdr(0,0,22),40,115,97,108,58,112,114,105,110,116,32,46,32,97,114,103,115,49,51,52,52,41,0,0,0,0,0,0};
static C_char C_TLS li137[] C_aligned={C_lihdr(0,0,20),40,115,97,108,58,99,104,100,105,114,32,112,97,116,104,49,51,54,50,41,0,0,0,0};
static C_char C_TLS li138[] C_aligned={C_lihdr(0,0,19),40,115,97,108,58,108,111,97,100,32,102,105,108,101,49,51,54,52,41,0,0,0};
static C_char C_TLS li139[] C_aligned={C_lihdr(0,0,21),40,115,97,108,58,111,112,101,110,32,46,32,97,114,103,115,49,51,54,56,41,0,0,0,0,0};
static C_char C_TLS li140[] C_aligned={C_lihdr(0,0,23),40,115,97,108,58,111,117,116,112,117,116,32,46,32,97,114,103,115,49,51,54,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li141[] C_aligned={C_lihdr(0,0,32),40,108,111,111,112,45,111,112,101,114,97,116,111,114,45,115,101,116,33,32,99,49,52,57,57,32,120,49,53,48,48,41};
static C_char C_TLS li142[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,98,105,110,100,105,110,103,115,32,99,49,53,48,49,41,0,0,0,0,0};
static C_char C_TLS li143[] C_aligned={C_lihdr(0,0,23),40,108,111,111,112,45,99,111,108,108,101,99,116,111,114,115,32,99,49,53,48,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li144[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,105,110,105,116,105,97,108,108,121,32,99,49,53,48,55,41,0,0,0,0,0,0};
static C_char C_TLS li145[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,101,110,100,45,116,101,115,116,115,32,99,49,53,49,48,41,0,0,0,0,0,0};
static C_char C_TLS li146[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,108,111,111,112,105,110,103,32,99,49,53,49,51,41,0,0,0,0};
static C_char C_TLS li147[] C_aligned={C_lihdr(0,0,31),40,108,111,111,112,45,108,111,111,112,105,110,103,45,115,101,116,33,32,99,49,53,49,52,32,120,49,53,49,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li148[] C_aligned={C_lihdr(0,0,21),40,108,111,111,112,45,115,116,101,112,112,105,110,103,32,99,49,53,49,54,41,0,0,0,0,0};
static C_char C_TLS li149[] C_aligned={C_lihdr(0,0,20),40,108,111,111,112,45,102,105,110,97,108,108,121,32,99,49,53,49,57,41,0,0,0,0};
static C_char C_TLS li150[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,105,110,103,32,99,49,53,50,50,41,0,0,0,0,0,0};
static C_char C_TLS li151[] C_aligned={C_lihdr(0,0,14),40,100,111,49,53,50,55,32,97,49,53,50,57,41,0,0,0,0,0,0};
static C_char C_TLS li152[] C_aligned={C_lihdr(0,0,27),40,109,97,107,101,45,108,111,111,112,45,99,108,97,117,115,101,32,97,114,103,115,49,53,50,53,41,0,0,0};
static C_char C_TLS li153[] C_aligned={C_lihdr(0,0,14),40,100,111,49,53,51,57,32,108,49,53,52,49,41,0,0,0,0,0,0};
static C_char C_TLS li154[] C_aligned={C_lihdr(0,0,40),40,103,97,116,104,101,114,45,99,108,97,117,115,101,32,99,108,97,117,115,101,115,49,53,51,55,32,97,99,99,101,115,115,111,114,49,53,51,56,41};
static C_char C_TLS li155[] C_aligned={C_lihdr(0,0,39),40,103,97,116,104,101,114,45,99,108,97,117,115,101,115,32,99,97,108,108,101,114,49,53,51,52,32,99,108,97,117,115,101,115,49,53,51,53,41,0,0,0,0,0,0,0};
static C_char C_TLS li156[] C_aligned={C_lihdr(0,0,24),40,108,111,111,112,45,111,112,63,32,120,49,53,52,53,32,111,112,115,49,53,52,54,41};
static C_char C_TLS li157[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,118,97,114,105,97,98,108,101,63,32,120,49,53,52,55,41,0,0,0,0,0,0};
static C_char C_TLS li158[] C_aligned={C_lihdr(0,0,30),40,109,97,107,101,45,98,105,110,100,105,110,103,32,118,97,114,49,53,52,56,32,118,97,108,49,53,52,57,41,0,0,0,0,0,0};
static C_char C_TLS li159[] C_aligned={C_lihdr(0,0,17),40,100,111,49,53,55,49,32,116,97,105,108,49,53,55,51,41,0};
static C_char C_TLS li160[] C_aligned={C_lihdr(0,0,17),40,100,111,49,53,54,54,32,116,97,105,108,49,53,54,56,41,0};
static C_char C_TLS li161[] C_aligned={C_lihdr(0,0,20),40,100,111,49,53,53,54,32,104,49,53,53,56,32,108,49,53,53,57,41,0,0,0,0};
static C_char C_TLS li162[] C_aligned={C_lihdr(0,0,39),40,108,111,111,112,45,101,114,114,111,114,32,111,112,115,49,53,53,48,32,102,111,114,109,115,49,53,53,49,32,97,114,103,115,49,53,53,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li163[] C_aligned={C_lihdr(0,0,41),40,112,97,114,115,101,45,102,111,114,32,102,111,114,109,115,49,53,56,53,32,99,108,97,117,115,101,115,49,53,56,54,32,111,112,115,49,53,56,55,41,0};
static C_char C_TLS li164[] C_aligned={C_lihdr(0,0,17),40,100,111,49,54,48,53,32,110,101,120,116,49,54,48,55,41,0};
static C_char C_TLS li165[] C_aligned={C_lihdr(0,0,51),40,112,97,114,115,101,45,110,117,109,101,114,105,99,97,108,45,102,111,114,32,102,111,114,109,115,49,53,57,49,32,99,108,97,117,115,101,115,49,53,57,50,32,111,112,115,49,53,57,51,41,0,0,0};
static C_char C_TLS li166[] C_aligned={C_lihdr(0,0,7),40,97,56,57,52,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li167[] C_aligned={C_lihdr(0,0,29),40,97,56,57,53,57,32,99,108,97,117,115,101,49,54,56,54,32,105,103,110,111,114,101,49,54,56,55,41,0,0,0,0,0};
static C_char C_TLS li168[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,112,101,97,116,32,102,111,114,109,115,49,54,56,51,32,99,108,97,117,115,101,115,49,54,56,52,32,111,112,115,49,54,56,53,41,0,0,0,0};
static C_char C_TLS li169[] C_aligned={C_lihdr(0,0,17),40,100,111,49,55,48,52,32,110,101,120,116,49,55,48,54,41,0};
static C_char C_TLS li170[] C_aligned={C_lihdr(0,0,56),40,112,97,114,115,101,45,115,101,113,117,101,110,99,101,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,49,54,56,57,32,99,108,97,117,115,101,115,49,54,57,48,32,111,112,115,49,54,57,49,41};
static C_char C_TLS li171[] C_aligned={C_lihdr(0,0,17),40,100,111,49,55,55,49,32,110,101,120,116,49,55,55,51,41,0};
static C_char C_TLS li172[] C_aligned={C_lihdr(0,0,55),40,112,97,114,115,101,45,103,101,110,101,114,97,108,45,105,116,101,114,97,116,105,111,110,32,102,111,114,109,115,49,55,54,49,32,99,108,97,117,115,101,115,49,55,54,50,32,111,112,115,49,55,54,51,41,0,0,0,0,0,0,0};
static C_char C_TLS li173[] C_aligned={C_lihdr(0,0,26),40,100,111,49,56,48,57,32,110,101,101,100,49,56,49,49,32,110,101,120,116,49,56,49,50,41,0,0};
static C_char C_TLS li174[] C_aligned={C_lihdr(0,0,42),40,112,97,114,115,101,45,119,105,116,104,32,102,111,114,109,115,49,55,57,57,32,99,108,97,117,115,101,115,49,56,48,48,32,111,112,115,49,56,48,49,41,0,0};
static C_char C_TLS li175[] C_aligned={C_lihdr(0,0,8),40,100,111,49,56,53,51,41};
static C_char C_TLS li176[] C_aligned={C_lihdr(0,0,40),40,112,97,114,115,101,45,100,111,32,102,111,114,109,115,49,56,52,52,32,99,108,97,117,115,101,115,49,56,52,53,32,111,112,115,49,56,52,54,41};
static C_char C_TLS li177[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,102,105,110,97,108,108,121,32,102,111,114,109,115,49,56,54,51,32,99,108,97,117,115,101,115,49,56,54,52,32,111,112,115,49,56,54,53,41,0,0,0,0,0};
static C_char C_TLS li178[] C_aligned={C_lihdr(0,0,47),40,112,97,114,115,101,45,105,110,105,116,105,97,108,108,121,32,102,111,114,109,115,49,56,55,55,32,99,108,97,117,115,101,115,49,56,55,56,32,111,112,115,49,56,55,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li179[] C_aligned={C_lihdr(0,0,50),40,109,97,107,101,45,99,111,108,108,101,99,116,111,114,32,118,97,114,49,57,52,52,32,116,121,112,101,49,57,52,53,32,97,99,99,49,57,52,54,32,104,101,97,100,49,57,52,55,41,0,0};
static C_char C_TLS li180[] C_aligned={C_lihdr(0,0,24),40,99,111,108,108,101,99,116,111,114,45,116,121,112,101,32,99,111,108,49,57,52,56,41};
static C_char C_TLS li181[] C_aligned={C_lihdr(0,0,23),40,99,111,108,108,101,99,116,111,114,45,97,99,99,32,99,111,108,49,57,52,57,41,0,0,0,0,0,0,0};
static C_char C_TLS li182[] C_aligned={C_lihdr(0,0,14),40,100,111,49,56,57,54,32,97,49,56,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li183[] C_aligned={C_lihdr(0,0,14),40,100,111,49,57,48,52,32,99,49,57,48,54,41,0,0,0,0,0,0};
static C_char C_TLS li184[] C_aligned={C_lihdr(0,0,50),40,112,97,114,115,101,45,97,99,99,117,109,117,108,97,116,105,111,110,32,102,111,114,109,115,49,57,50,51,32,99,108,97,117,115,101,115,49,57,50,52,32,111,112,115,49,57,50,53,41,0,0};
static C_char C_TLS li185[] C_aligned={C_lihdr(0,0,22),40,108,111,111,112,45,114,101,116,117,114,110,32,101,120,112,114,50,48,50,52,41,0,0,0,0,0,0};
static C_char C_TLS li186[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,119,104,105,108,101,45,117,110,116,105,108,32,102,111,114,109,115,50,48,50,53,32,99,108,97,117,115,101,115,50,48,50,54,32,111,112,115,50,48,50,55,41,0};
static C_char C_TLS li187[] C_aligned={C_lihdr(0,0,45),40,112,97,114,115,101,45,116,104,101,114,101,105,115,32,102,111,114,109,115,50,48,52,54,32,99,108,97,117,115,101,115,50,48,52,55,32,111,112,115,50,48,52,56,41,0,0,0,0,0};
static C_char C_TLS li188[] C_aligned={C_lihdr(0,0,44),40,112,97,114,115,101,45,114,101,116,117,114,110,32,102,111,114,109,115,50,48,54,50,32,99,108,97,117,115,101,115,50,48,54,51,32,111,112,115,50,48,54,52,41,0,0,0,0};
static C_char C_TLS li189[] C_aligned={C_lihdr(0,0,8),40,97,49,48,56,51,50,41};
static C_char C_TLS li190[] C_aligned={C_lihdr(0,0,20),40,97,49,48,56,52,53,32,97,50,48,56,57,32,98,50,48,57,48,41,0,0,0,0};
static C_char C_TLS li191[] C_aligned={C_lihdr(0,0,38),40,100,111,50,48,56,50,32,111,112,50,48,56,52,32,99,108,97,117,115,101,50,48,56,53,32,114,101,109,97,105,110,115,50,48,56,54,41,0,0,0,0,0,0};
static C_char C_TLS li192[] C_aligned={C_lihdr(0,0,58),40,112,97,114,115,101,45,116,104,101,110,45,101,108,115,101,45,100,101,112,101,110,100,101,110,116,115,32,102,111,114,109,115,50,48,55,54,32,99,108,97,117,115,101,115,50,48,55,55,32,111,112,115,50,48,55,56,41,0,0};
static C_char C_TLS li193[] C_aligned={C_lihdr(0,0,8),40,97,49,48,57,57,54,41};
static C_char C_TLS li194[] C_aligned={C_lihdr(0,0,20),40,97,49,49,48,49,48,32,97,50,49,49,56,32,98,50,49,49,57,41,0,0,0,0};
static C_char C_TLS li195[] C_aligned={C_lihdr(0,0,8),40,97,49,49,48,55,52,41};
static C_char C_TLS li196[] C_aligned={C_lihdr(0,0,20),40,97,49,49,48,56,48,32,97,50,49,49,53,32,98,50,49,49,54,41,0,0,0,0};
static C_char C_TLS li197[] C_aligned={C_lihdr(0,0,49),40,112,97,114,115,101,45,99,111,110,100,105,116,105,111,110,97,108,32,102,111,114,109,115,50,49,48,50,32,99,108,97,117,115,101,115,50,49,48,51,32,111,112,115,50,49,48,52,41,0};
static C_char C_TLS li198[] C_aligned={C_lihdr(0,0,26),40,111,112,45,116,121,112,101,63,32,111,112,50,49,52,53,32,116,121,112,101,50,49,52,54,41,0,0};
static C_char C_TLS li199[] C_aligned={C_lihdr(0,0,8),40,97,49,49,50,50,50,41};
static C_char C_TLS li200[] C_aligned={C_lihdr(0,0,20),40,97,49,49,50,51,49,32,97,50,49,53,56,32,98,50,49,53,57,41,0,0,0,0};
static C_char C_TLS li201[] C_aligned={C_lihdr(0,0,47),40,100,111,50,49,52,57,32,111,112,50,49,53,49,32,99,108,97,117,115,101,50,49,53,50,32,114,101,109,97,105,110,115,50,49,53,51,32,98,111,100,121,50,49,53,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li202[] C_aligned={C_lihdr(0,0,46),40,112,97,114,115,101,45,105,116,101,114,97,116,105,111,110,32,99,97,108,108,101,114,50,49,55,49,32,102,111,114,109,115,50,49,55,50,32,111,112,115,50,49,55,51,41,0,0,0,0,0,0};
static C_char C_TLS li203[] C_aligned={C_lihdr(0,0,59),40,102,95,49,49,54,53,51,32,97,50,50,53,52,50,50,53,55,32,97,50,50,53,51,50,50,53,56,32,97,50,50,53,50,50,50,53,57,32,97,50,50,53,49,50,50,54,48,32,97,50,50,53,48,50,50,54,49,41,0,0,0};
static C_char C_TLS li204[] C_aligned={C_lihdr(0,0,59),40,102,95,49,49,54,56,52,32,97,50,50,54,55,50,50,55,48,32,97,50,50,54,54,50,50,55,49,32,97,50,50,54,53,50,50,55,50,32,97,50,50,54,52,50,50,55,51,32,97,50,50,54,51,50,50,55,52,41,0,0,0};
static C_char C_TLS li205[] C_aligned={C_lihdr(0,0,59),40,102,95,49,49,55,49,53,32,97,50,50,56,48,50,50,56,51,32,97,50,50,55,57,50,50,56,52,32,97,50,50,55,56,50,50,56,53,32,97,50,50,55,55,50,50,56,54,32,97,50,50,55,54,50,50,56,55,41,0,0,0};
static C_char C_TLS li206[] C_aligned={C_lihdr(0,0,59),40,102,95,49,49,55,52,54,32,97,50,50,57,51,50,50,57,54,32,97,50,50,57,50,50,50,57,55,32,97,50,50,57,49,50,50,57,56,32,97,50,50,57,48,50,50,57,57,32,97,50,50,56,57,50,51,48,48,41,0,0,0};
static C_char C_TLS li207[] C_aligned={C_lihdr(0,0,8),40,97,49,49,55,55,49,41};
static C_char C_TLS li208[] C_aligned={C_lihdr(0,0,8),40,97,49,49,55,55,52,41};
static C_char C_TLS li209[] C_aligned={C_lihdr(0,0,8),40,97,49,49,55,55,55,41};
static C_char C_TLS li210[] C_aligned={C_lihdr(0,0,8),40,97,49,49,55,56,48,41};
static C_char C_TLS li211[] C_aligned={C_lihdr(0,0,8),40,97,49,49,55,56,51,41};
static C_char C_TLS li212[] C_aligned={C_lihdr(0,0,8),40,97,49,49,55,56,54,41};
static C_char C_TLS li213[] C_aligned={C_lihdr(0,0,30),40,109,109,58,109,97,107,101,32,116,121,112,101,50,50,52,50,32,46,32,103,50,50,52,49,50,50,52,51,41,0,0,0,0,0,0};
static C_char C_TLS li214[] C_aligned={C_lihdr(0,0,19),40,102,95,49,49,55,57,56,32,97,50,51,48,51,50,51,48,55,41,0,0,0};
static C_char C_TLS li215[] C_aligned={C_lihdr(0,0,15),40,109,109,58,102,114,101,101,32,109,50,51,48,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li216[] C_aligned={C_lihdr(0,0,19),40,102,95,49,49,56,49,51,32,97,50,51,49,49,50,51,49,53,41,0,0,0};
static C_char C_TLS li217[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,111,112,121,32,109,50,51,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li218[] C_aligned={C_lihdr(0,0,29),40,102,95,49,49,56,50,56,32,97,50,51,50,49,50,51,50,53,32,97,50,51,50,48,50,51,50,54,41,0,0,0,0,0};
static C_char C_TLS li219[] C_aligned={C_lihdr(0,0,22),40,109,109,58,116,121,112,101,63,32,109,50,51,49,56,32,116,50,51,49,57,41,0,0,0,0,0,0};
static C_char C_TLS li220[] C_aligned={C_lihdr(0,0,19),40,102,95,49,49,56,52,55,32,97,50,51,50,57,50,51,51,51,41,0,0,0};
static C_char C_TLS li221[] C_aligned={C_lihdr(0,0,15),40,109,109,58,116,105,109,101,32,109,50,51,50,56,41,0,0,0,0,0,0,0};
static C_char C_TLS li222[] C_aligned={C_lihdr(0,0,29),40,102,95,49,49,56,54,50,32,97,50,51,51,57,50,51,52,51,32,97,50,51,51,56,50,51,52,52,41,0,0,0,0,0};
static C_char C_TLS li223[] C_aligned={C_lihdr(0,0,26),40,109,109,58,116,105,109,101,45,115,101,116,33,32,109,50,51,51,54,32,116,50,51,51,55,41,0,0};
static C_char C_TLS li224[] C_aligned={C_lihdr(0,0,19),40,102,95,49,49,56,56,49,32,97,50,51,52,56,50,51,53,50,41,0,0,0};
static C_char C_TLS li225[] C_aligned={C_lihdr(0,0,15),40,109,109,58,99,104,97,110,32,109,50,51,52,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li226[] C_aligned={C_lihdr(0,0,29),40,102,95,49,49,56,57,54,32,97,50,51,53,55,50,51,54,49,32,97,50,51,53,54,50,51,54,50,41,0,0,0,0,0};
static C_char C_TLS li227[] C_aligned={C_lihdr(0,0,26),40,109,109,58,99,104,97,110,45,115,101,116,33,32,109,50,51,53,52,32,99,50,51,53,53,41,0,0};
static C_char C_TLS li228[] C_aligned={C_lihdr(0,0,29),40,102,95,49,49,57,49,53,32,97,50,51,54,55,50,51,55,49,32,97,50,51,54,54,50,51,55,50,41,0,0,0,0,0};
static C_char C_TLS li229[] C_aligned={C_lihdr(0,0,14),40,109,109,58,107,101,121,32,109,50,51,54,53,41,0,0,0,0,0,0};
static C_char C_TLS li230[] C_aligned={C_lihdr(0,0,39),40,102,95,49,49,57,51,52,32,97,50,51,55,56,50,51,56,50,32,97,50,51,55,55,50,51,56,51,32,97,50,51,55,54,50,51,56,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li231[] C_aligned={C_lihdr(0,0,25),40,109,109,58,107,101,121,45,115,101,116,33,32,109,50,51,55,52,32,107,50,51,55,53,41,0};
static C_char C_TLS li232[] C_aligned={C_lihdr(0,0,29),40,102,95,49,49,57,53,55,32,97,50,51,56,57,50,51,57,51,32,97,50,51,56,56,50,51,57,52,41,0,0,0,0,0};
static C_char C_TLS li233[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,101,108,32,109,50,51,56,55,41,0,0,0,0,0,0};
static C_char C_TLS li234[] C_aligned={C_lihdr(0,0,39),40,102,95,49,49,57,55,54,32,97,50,52,48,48,50,52,48,52,32,97,50,51,57,57,50,52,48,53,32,97,50,51,57,56,50,52,48,54,41,0,0,0,0,0,0,0};
static C_char C_TLS li235[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,101,108,45,115,101,116,33,32,109,50,51,57,54,32,118,50,51,57,55,41,0};
static C_char C_TLS li236[] C_aligned={C_lihdr(0,0,29),40,102,95,49,50,48,48,56,32,97,50,52,49,51,50,52,49,55,32,97,50,52,49,50,50,52,49,56,41,0,0,0,0,0};
static C_char C_TLS li237[] C_aligned={C_lihdr(0,0,29),40,102,95,49,50,48,50,52,32,97,50,52,50,49,50,52,50,53,32,97,50,52,50,48,50,52,50,54,41,0,0,0,0,0};
static C_char C_TLS li238[] C_aligned={C_lihdr(0,0,14),40,109,109,58,118,97,108,32,109,50,52,48,57,41,0,0,0,0,0,0};
static C_char C_TLS li239[] C_aligned={C_lihdr(0,0,39),40,102,95,49,50,48,53,53,32,97,50,52,51,52,50,52,51,56,32,97,50,52,51,51,50,52,51,57,32,97,50,52,51,50,50,52,52,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li240[] C_aligned={C_lihdr(0,0,39),40,102,95,49,50,48,55,53,32,97,50,52,52,52,50,52,52,56,32,97,50,52,52,51,50,52,52,57,32,97,50,52,52,50,50,52,53,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li241[] C_aligned={C_lihdr(0,0,25),40,109,109,58,118,97,108,45,115,101,116,33,32,109,50,52,50,56,32,118,50,52,50,57,41,0};
static C_char C_TLS li242[] C_aligned={C_lihdr(0,0,29),40,102,95,49,50,49,48,49,32,97,50,52,53,53,50,52,53,57,32,97,50,52,53,52,50,52,54,48,41,0,0,0,0,0};
static C_char C_TLS li243[] C_aligned={C_lihdr(0,0,14),40,109,109,58,110,117,109,32,109,50,52,53,51,41,0,0,0,0,0,0};
static C_char C_TLS li244[] C_aligned={C_lihdr(0,0,39),40,102,95,49,50,49,50,48,32,97,50,52,54,54,50,52,55,48,32,97,50,52,54,53,50,52,55,49,32,97,50,52,54,52,50,52,55,50,41,0,0,0,0,0,0,0};
static C_char C_TLS li245[] C_aligned={C_lihdr(0,0,25),40,109,109,58,110,117,109,45,115,101,116,33,32,109,50,52,54,50,32,118,50,52,54,51,41,0};
static C_char C_TLS li246[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,49,52,51,32,97,50,52,56,52,50,52,56,55,32,97,50,52,56,51,50,52,56,56,32,97,50,52,56,50,50,52,56,57,32,97,50,52,56,49,50,52,57,48,32,97,50,52,56,48,50,52,57,49,41,0,0,0};
static C_char C_TLS li247[] C_aligned={C_lihdr(0,0,51),40,109,112,58,110,111,116,101,32,116,105,109,101,50,52,55,53,32,100,117,114,50,52,55,54,32,107,101,121,50,52,55,55,32,97,109,112,50,52,55,56,32,99,104,97,110,50,52,55,57,41,0,0,0};
static C_char C_TLS li248[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,49,55,49,32,97,50,53,48,49,50,53,48,52,32,97,50,53,48,48,50,53,48,53,32,97,50,52,57,57,50,53,48,54,32,97,50,52,57,56,50,53,48,55,32,97,50,52,57,55,50,53,48,56,41,0,0,0};
static C_char C_TLS li249[] C_aligned={C_lihdr(0,0,51),40,109,112,58,109,105,100,105,32,116,105,109,101,50,52,57,50,32,100,117,114,50,52,57,51,32,107,101,121,50,52,57,52,32,97,109,112,50,52,57,53,32,99,104,97,110,50,52,57,54,41,0,0,0};
static C_char C_TLS li250[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,49,57,57,32,97,50,53,49,54,50,53,49,57,32,97,50,53,49,53,50,53,50,48,32,97,50,53,49,52,50,53,50,49,32,97,50,53,49,51,50,53,50,50,32,97,50,53,49,50,50,53,50,51,41,0,0,0};
static C_char C_TLS li251[] C_aligned={C_lihdr(0,0,34),40,109,112,58,111,102,102,32,116,105,109,101,50,53,48,57,32,107,101,121,50,53,49,48,32,99,104,97,110,50,53,49,49,41,0,0};
static C_char C_TLS li252[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,50,50,55,32,97,50,53,51,50,50,53,51,53,32,97,50,53,51,49,50,53,51,54,32,97,50,53,51,48,50,53,51,55,32,97,50,53,50,57,50,53,51,56,32,97,50,53,50,56,50,53,51,57,41,0,0,0};
static C_char C_TLS li253[] C_aligned={C_lihdr(0,0,41),40,109,112,58,111,110,32,116,105,109,101,50,53,50,52,32,107,101,121,50,53,50,53,32,118,101,108,50,53,50,54,32,99,104,97,110,50,53,50,55,41,0};
static C_char C_TLS li254[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,50,53,53,32,97,50,53,52,56,50,53,53,49,32,97,50,53,52,55,50,53,53,50,32,97,50,53,52,54,50,53,53,51,32,97,50,53,52,53,50,53,53,52,32,97,50,53,52,52,50,53,53,53,41,0,0,0};
static C_char C_TLS li255[] C_aligned={C_lihdr(0,0,44),40,109,112,58,116,111,117,99,104,32,116,105,109,101,50,53,52,48,32,107,101,121,50,53,52,49,32,118,97,108,50,53,52,50,32,99,104,97,110,50,53,52,51,41,0,0,0,0};
static C_char C_TLS li256[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,50,56,51,32,97,50,53,54,52,50,53,54,55,32,97,50,53,54,51,50,53,54,56,32,97,50,53,54,50,50,53,54,57,32,97,50,53,54,49,50,53,55,48,32,97,50,53,54,48,50,53,55,49,41,0,0,0};
static C_char C_TLS li257[] C_aligned={C_lihdr(0,0,43),40,109,112,58,99,116,114,108,32,116,105,109,101,50,53,53,54,32,110,117,109,50,53,53,55,32,118,97,108,50,53,53,56,32,99,104,97,110,50,53,53,57,41,0,0,0};
static C_char C_TLS li258[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,51,49,49,32,97,50,53,55,57,50,53,56,50,32,97,50,53,55,56,50,53,56,51,32,97,50,53,55,55,50,53,56,52,32,97,50,53,55,54,50,53,56,53,32,97,50,53,55,53,50,53,56,54,41,0,0,0};
static C_char C_TLS li259[] C_aligned={C_lihdr(0,0,35),40,109,112,58,112,114,111,103,32,116,105,109,101,50,53,55,50,32,118,97,108,50,53,55,51,32,99,104,97,110,50,53,55,52,41,0,0,0};
static C_char C_TLS li260[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,51,51,57,32,97,50,53,57,52,50,53,57,55,32,97,50,53,57,51,50,53,57,56,32,97,50,53,57,50,50,53,57,57,32,97,50,53,57,49,50,54,48,48,32,97,50,53,57,48,50,54,48,49,41,0,0,0};
static C_char C_TLS li261[] C_aligned={C_lihdr(0,0,36),40,109,112,58,112,114,101,115,115,32,116,105,109,101,50,53,56,55,32,118,97,108,50,53,56,56,32,99,104,97,110,50,53,56,57,41,0,0,0,0};
static C_char C_TLS li262[] C_aligned={C_lihdr(0,0,59),40,102,95,49,50,51,54,55,32,97,50,54,48,57,50,54,49,50,32,97,50,54,48,56,50,54,49,51,32,97,50,54,48,55,50,54,49,52,32,97,50,54,48,54,50,54,49,53,32,97,50,54,48,53,50,54,49,54,41,0,0,0};
static C_char C_TLS li263[] C_aligned={C_lihdr(0,0,35),40,109,112,58,98,101,110,100,32,116,105,109,101,50,54,48,50,32,118,97,108,50,54,48,51,32,99,104,97,110,50,54,48,52,41,0,0,0};
static C_char C_TLS li264[] C_aligned={C_lihdr(0,0,19),40,102,95,49,50,51,57,53,32,97,50,54,49,56,50,54,50,50,41,0,0,0};
static C_char C_TLS li265[] C_aligned={C_lihdr(0,0,15),40,109,112,58,109,109,32,112,116,114,50,54,49,55,41,0,0,0,0,0,0,0};
static C_char C_TLS li266[] C_aligned={C_lihdr(0,0,17),40,97,49,50,52,50,56,32,37,101,114,114,50,54,51,49,41,0};
static C_char C_TLS li267[] C_aligned={C_lihdr(0,0,8),40,97,49,50,52,52,56,41};
static C_char C_TLS li268[] C_aligned={C_lihdr(0,0,18),40,97,49,50,52,50,50,32,37,99,111,110,116,50,54,51,48,41,0,0};
static C_char C_TLS li269[] C_aligned={C_lihdr(0,0,17),40,97,49,50,52,49,54,32,37,109,115,103,50,54,50,57,41,0};
static C_char C_TLS li270[] C_aligned={C_lihdr(0,0,19),40,102,95,49,50,52,53,52,32,97,50,54,50,53,50,54,50,56,41,0,0,0};
static C_char C_TLS li271[] C_aligned={C_lihdr(0,0,19),40,102,95,49,50,52,53,57,32,97,50,54,51,52,50,54,51,55,41,0,0,0};
static C_char C_TLS li272[] C_aligned={C_lihdr(0,0,21),40,109,112,58,105,110,104,111,111,107,32,37,104,111,111,107,50,54,50,52,41,0,0,0,0,0};
static C_char C_TLS li273[] C_aligned={C_lihdr(0,0,39),40,102,95,49,50,53,49,54,32,97,50,54,56,53,50,54,56,56,32,97,50,54,56,52,50,54,56,57,32,97,50,54,56,51,50,54,57,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li274[] C_aligned={C_lihdr(0,0,17),40,99,115,58,105,32,46,32,97,114,103,115,50,54,56,50,41,0};
static C_char C_TLS li275[] C_aligned={C_lihdr(0,0,39),40,102,95,49,50,53,55,51,32,97,50,54,57,54,50,54,57,57,32,97,50,54,57,53,50,55,48,48,32,97,50,54,57,52,50,55,48,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li276[] C_aligned={C_lihdr(0,0,17),40,99,115,58,102,32,46,32,97,114,103,115,50,54,57,51,41,0};
static C_char C_TLS li277[] C_aligned={C_lihdr(0,0,9),40,102,95,49,50,54,49,52,41,0};
static C_char C_TLS li278[] C_aligned={C_lihdr(0,0,10),40,99,115,58,99,108,101,97,114,41,0,0};
static C_char C_TLS li279[] C_aligned={C_lihdr(0,0,25),40,112,114,105,110,116,45,109,101,115,115,97,103,101,32,97,50,55,49,49,50,55,49,53,41,0};
static C_char C_TLS li280[] C_aligned={C_lihdr(0,0,23),40,112,114,105,110,116,45,101,114,114,111,114,32,97,50,55,49,55,50,55,50,49,41,0,0,0,0,0,0,0};
static C_char C_TLS li281[] C_aligned={C_lihdr(0,0,27),40,99,117,114,114,101,110,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,41,0,0,0};
static C_char C_TLS li282[] C_aligned={C_lihdr(0,0,22),40,99,117,114,114,101,110,116,45,116,105,109,101,45,115,101,99,111,110,100,115,41,0,0,0,0,0,0};
static C_char C_TLS li283[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li284[] C_aligned={C_lihdr(0,0,43),40,115,99,104,101,100,117,108,101,114,45,115,101,116,45,116,105,109,101,45,109,105,108,108,105,115,101,99,111,110,100,115,32,97,50,55,51,51,50,55,51,54,41,0,0,0};
static C_char C_TLS li285[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li286[] C_aligned={C_lihdr(0,0,48),40,115,99,104,101,100,117,108,101,114,45,115,112,114,111,117,116,32,97,50,55,52,49,50,55,52,52,32,97,50,55,52,48,50,55,52,53,32,97,50,55,51,57,50,55,52,54,41};
static C_char C_TLS li287[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li288[] C_aligned={C_lihdr(0,0,26),40,115,99,104,101,100,117,108,101,114,45,115,116,111,112,32,97,50,55,54,49,50,55,54,52,41,0,0};
static C_char C_TLS li289[] C_aligned={C_lihdr(0,0,19),40,102,95,49,50,55,52,57,32,97,50,55,55,50,50,55,55,54,41,0,0,0};
static C_char C_TLS li290[] C_aligned={C_lihdr(0,0,24),40,108,111,97,100,45,115,97,108,45,102,105,108,101,32,102,105,108,101,50,55,55,49,41};
static C_char C_TLS li291[] C_aligned={C_lihdr(0,0,11),40,110,101,120,116,115,116,97,114,116,41,0,0,0};
static C_char C_TLS li292[] C_aligned={C_lihdr(0,0,8),40,110,101,120,116,105,100,41};
static C_char C_TLS li293[] C_aligned={C_lihdr(0,0,14),40,100,111,50,55,57,54,32,112,50,55,57,56,41,0,0,0,0,0,0};
static C_char C_TLS li294[] C_aligned={C_lihdr(0,0,27),40,98,111,100,121,50,55,56,50,32,115,116,97,114,116,50,55,56,56,32,105,100,50,55,56,57,41,0,0,0};
static C_char C_TLS li295[] C_aligned={C_lihdr(0,0,27),40,100,101,102,45,105,100,50,55,56,53,32,37,115,116,97,114,116,50,55,56,48,50,56,48,52,41,0,0,0};
static C_char C_TLS li296[] C_aligned={C_lihdr(0,0,15),40,100,101,102,45,115,116,97,114,116,50,55,56,52,41,0,0,0,0,0,0,0};
static C_char C_TLS li297[] C_aligned={C_lihdr(0,0,28),40,115,112,114,111,117,116,32,112,114,111,99,50,55,55,56,32,46,32,97,114,103,115,50,55,55,57,41,0,0,0,0};
static C_char C_TLS li298[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li299[] C_aligned={C_lihdr(0,0,23),40,116,105,109,101,45,102,111,114,109,97,116,32,46,32,97,114,103,50,56,49,48,41,0,0,0,0,0,0,0};
static C_char C_TLS li300[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li301[] C_aligned={C_lihdr(0,0,7),40,112,97,117,115,101,41,0,0,0,0,0,0,0};
static C_char C_TLS li302[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li303[] C_aligned={C_lihdr(0,0,9),40,112,97,117,115,101,100,63,41,0};
static C_char C_TLS li304[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li305[] C_aligned={C_lihdr(0,0,6),40,99,111,110,116,41,0,0,0,0,0,0};
static C_char C_TLS li306[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,50,52,32,116,97,105,108,50,56,50,54,41,0};
static C_char C_TLS li307[] C_aligned={C_lihdr(0,0,19),40,115,116,111,112,32,46,32,112,114,111,99,105,100,50,56,50,51,41,0,0,0};
static C_char C_TLS li308[] C_aligned={C_lihdr(0,0,3),46,0,0,0,0,0};
static C_char C_TLS li309[] C_aligned={C_lihdr(0,0,6),40,104,117,115,104,41,0,0,0,0,0,0};
static C_char C_TLS li310[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,53,54,32,100,101,99,108,50,56,53,56,41,0};
static C_char C_TLS li311[] C_aligned={C_lihdr(0,0,17),40,100,111,50,56,52,48,32,116,97,105,108,50,56,52,50,41,0};
static C_char C_TLS li312[] C_aligned={C_lihdr(0,0,46),40,97,49,51,53,52,54,32,98,105,110,100,105,110,103,115,50,56,51,49,32,116,101,114,109,105,110,97,116,101,50,56,51,50,32,46,32,98,111,100,121,50,56,51,51,41,0,0,0,0,0,0};
static C_char C_TLS li313[] C_aligned={C_lihdr(0,0,17),40,97,49,51,53,53,50,32,97,114,103,115,50,49,56,52,41,0};
static C_char C_TLS li314[] C_aligned={C_lihdr(0,0,16),40,97,49,51,54,57,52,32,115,121,109,49,52,57,55,41};
static C_char C_TLS li315[] C_aligned={C_lihdr(0,0,16),40,97,49,51,54,57,55,32,115,121,109,49,52,57,53,41};
static C_char C_TLS li316[] C_aligned={C_lihdr(0,0,24),40,97,49,51,55,50,54,32,118,97,108,49,52,57,51,32,115,121,109,49,52,57,52,41};
static C_char C_TLS li317[] C_aligned={C_lihdr(0,0,17),40,97,49,51,55,52,48,32,97,114,103,115,49,52,57,50,41,0};
static C_char C_TLS li318[] C_aligned={C_lihdr(0,0,26),40,97,49,51,55,53,52,32,97,114,103,115,49,51,48,49,32,101,114,114,102,49,51,48,50,41,0,0};
static C_char C_TLS li319[] C_aligned={C_lihdr(0,0,35),40,97,49,51,55,54,56,32,117,110,105,116,49,51,48,51,32,105,110,102,111,49,51,48,52,32,101,114,114,102,49,51,48,53,41,0,0,0};
static C_char C_TLS li320[] C_aligned={C_lihdr(0,0,26),40,97,49,51,56,55,52,32,97,114,103,115,49,50,53,48,32,101,114,114,102,49,50,53,49,41,0,0};
static C_char C_TLS li321[] C_aligned={C_lihdr(0,0,17),40,100,111,49,50,54,50,32,114,101,115,116,49,50,54,52,41,0};
static C_char C_TLS li322[] C_aligned={C_lihdr(0,0,26),40,100,111,49,50,56,56,32,97,114,103,115,49,50,57,48,32,116,97,105,108,49,50,57,49,41,0,0};
static C_char C_TLS li323[] C_aligned={C_lihdr(0,0,35),40,97,49,51,57,49,51,32,117,110,105,116,49,50,53,53,32,105,110,102,111,49,50,53,54,32,101,114,114,102,49,50,53,55,41,0,0,0};
static C_char C_TLS li324[] C_aligned={C_lihdr(0,0,26),40,97,49,52,51,51,49,32,97,114,103,115,49,50,52,51,32,101,114,114,102,49,50,52,52,41,0,0};
static C_char C_TLS li325[] C_aligned={C_lihdr(0,0,26),40,97,49,52,52,55,54,32,97,114,103,115,49,50,50,57,32,101,114,114,102,49,50,51,48,41,0,0};
static C_char C_TLS li326[] C_aligned={C_lihdr(0,0,17),40,100,111,49,50,48,54,32,116,97,105,108,49,50,48,56,41,0};
static C_char C_TLS li327[] C_aligned={C_lihdr(0,0,17),40,100,111,49,50,48,49,32,116,97,105,108,49,50,48,51,41,0};
static C_char C_TLS li328[] C_aligned={C_lihdr(0,0,20),40,100,111,49,49,57,48,32,99,108,97,117,115,101,115,49,49,57,50,41,0,0,0,0};
static C_char C_TLS li329[] C_aligned={C_lihdr(0,0,17),40,100,111,49,49,56,55,32,116,97,105,108,49,49,56,57,41,0};
static C_char C_TLS li330[] C_aligned={C_lihdr(0,0,35),40,97,49,52,53,50,50,32,117,110,105,116,49,50,51,57,32,105,110,102,111,49,50,52,48,32,101,114,114,102,49,50,52,49,41,0,0,0};
static C_char C_TLS li331[] C_aligned={C_lihdr(0,0,26),40,97,49,52,57,55,54,32,97,114,103,115,49,49,48,51,32,101,114,114,102,49,49,48,52,41,0,0};
static C_char C_TLS li332[] C_aligned={C_lihdr(0,0,35),40,97,49,53,48,52,52,32,117,110,105,116,49,49,49,53,32,105,110,102,111,49,49,49,54,32,101,114,114,102,49,49,49,55,41,0,0,0};
static C_char C_TLS li333[] C_aligned={C_lihdr(0,0,26),40,97,49,53,49,55,51,32,97,114,103,115,49,48,57,49,32,101,114,114,102,49,48,57,50,41,0,0};
static C_char C_TLS li334[] C_aligned={C_lihdr(0,0,35),40,97,49,53,49,57,57,32,117,110,105,116,49,48,57,54,32,105,110,102,111,49,48,57,55,32,101,114,114,102,49,48,57,56,41,0,0,0};
static C_char C_TLS li335[] C_aligned={C_lihdr(0,0,26),40,97,49,53,50,56,55,32,97,114,103,115,49,48,54,57,32,101,114,114,102,49,48,55,48,41,0,0};
static C_char C_TLS li336[] C_aligned={C_lihdr(0,0,17),40,100,111,49,48,55,55,32,105,116,101,114,49,48,55,57,41,0};
static C_char C_TLS li337[] C_aligned={C_lihdr(0,0,35),40,97,49,53,51,51,48,32,117,110,105,116,49,48,55,49,32,105,110,102,111,49,48,55,50,32,101,114,114,102,49,48,55,51,41,0,0,0};
static C_char C_TLS li338[] C_aligned={C_lihdr(0,0,26),40,97,49,53,53,54,55,32,97,114,103,115,49,48,54,54,32,101,114,114,102,49,48,54,55,41,0,0};
static C_char C_TLS li339[] C_aligned={C_lihdr(0,0,26),40,97,49,53,54,53,51,32,97,114,103,115,49,48,53,56,32,101,114,114,102,49,48,53,57,41,0,0};
static C_char C_TLS li340[] C_aligned={C_lihdr(0,0,14),40,97,49,53,55,48,53,32,101,49,48,54,52,41,0,0,0,0,0,0};
static C_char C_TLS li341[] C_aligned={C_lihdr(0,0,35),40,97,49,53,54,57,54,32,117,110,105,116,49,48,54,48,32,105,110,102,111,49,48,54,49,32,101,114,114,102,49,48,54,50,41,0,0,0};
static C_char C_TLS li342[] C_aligned={C_lihdr(0,0,26),40,97,49,53,55,53,53,32,97,114,103,115,49,48,53,49,32,101,114,114,102,49,48,53,50,41,0,0};
static C_char C_TLS li343[] C_aligned={C_lihdr(0,0,14),40,97,49,53,55,57,54,32,101,49,48,53,54,41,0,0,0,0,0,0};
static C_char C_TLS li344[] C_aligned={C_lihdr(0,0,35),40,97,49,53,55,57,48,32,117,110,105,116,49,48,53,51,32,105,110,102,111,49,48,53,52,32,101,114,114,102,49,48,53,53,41,0,0,0};
static C_char C_TLS li345[] C_aligned={C_lihdr(0,0,35),40,97,49,53,56,53,48,32,117,110,105,116,49,48,52,52,32,105,110,102,111,49,48,52,53,32,101,114,114,102,49,48,52,54,41,0,0,0};
static C_char C_TLS li346[] C_aligned={C_lihdr(0,0,35),40,97,49,53,57,49,49,32,117,110,105,116,49,48,51,56,32,105,110,102,111,49,48,51,57,32,101,114,114,102,49,48,52,48,41,0,0,0};
static C_char C_TLS li347[] C_aligned={C_lihdr(0,0,26),40,97,49,53,57,54,53,32,97,114,103,115,49,48,51,50,32,101,114,114,102,49,48,51,51,41,0,0};
static C_char C_TLS li348[] C_aligned={C_lihdr(0,0,35),40,97,49,53,57,57,53,32,117,110,105,116,49,48,51,52,32,105,110,102,111,49,48,51,53,32,101,114,114,102,49,48,51,54,41,0,0,0};
static C_char C_TLS li349[] C_aligned={C_lihdr(0,0,26),40,97,49,54,50,49,52,32,97,114,103,115,49,48,50,53,32,101,114,114,102,49,48,50,54,41,0,0};
static C_char C_TLS li350[] C_aligned={C_lihdr(0,0,26),40,97,49,54,50,52,48,32,97,114,103,115,49,48,49,50,32,101,114,114,102,49,48,49,51,41,0,0};
static C_char C_TLS li351[] C_aligned={C_lihdr(0,0,27),40,97,49,54,51,50,49,32,115,116,114,49,48,50,50,32,46,32,97,114,103,115,49,48,50,51,41,0,0,0};
static C_char C_TLS li352[] C_aligned={C_lihdr(0,0,35),40,97,49,54,51,48,49,32,117,110,105,116,49,48,49,55,32,105,110,102,111,49,48,49,56,32,101,114,114,102,49,48,49,57,41,0,0,0};
static C_char C_TLS li353[] C_aligned={C_lihdr(0,0,26),40,97,49,54,52,51,57,32,97,114,103,115,49,48,48,53,32,101,114,114,102,49,48,48,54,41,0,0};
static C_char C_TLS li354[] C_aligned={C_lihdr(0,0,35),40,97,49,54,52,54,49,32,117,110,105,116,49,48,48,55,32,105,110,102,111,49,48,48,56,32,101,114,114,102,49,48,48,57,41,0,0,0};
static C_char C_TLS li355[] C_aligned={C_lihdr(0,0,24),40,97,49,54,53,49,52,32,97,114,103,115,57,57,49,32,101,114,114,102,57,57,50,41};
static C_char C_TLS li356[] C_aligned={C_lihdr(0,0,16),40,100,111,57,57,56,32,97,114,103,115,49,48,48,48,41};
static C_char C_TLS li357[] C_aligned={C_lihdr(0,0,32),40,97,49,54,53,51,54,32,117,110,105,116,57,57,51,32,105,110,102,111,57,57,52,32,101,114,114,102,57,57,53,41};
static C_char C_TLS li358[] C_aligned={C_lihdr(0,0,24),40,97,49,54,54,54,56,32,97,114,103,115,57,56,52,32,101,114,114,102,57,56,53,41};
static C_char C_TLS li359[] C_aligned={C_lihdr(0,0,32),40,97,49,54,54,57,52,32,117,110,105,116,57,56,54,32,105,110,102,111,57,56,55,32,101,114,114,102,57,56,56,41};
static C_char C_TLS li360[] C_aligned={C_lihdr(0,0,24),40,97,49,54,56,48,52,32,97,114,103,115,57,56,48,32,101,114,114,102,57,56,49,41};
static C_char C_TLS li361[] C_aligned={C_lihdr(0,0,24),40,97,49,54,57,54,48,32,97,114,103,115,57,52,51,32,101,114,114,102,57,52,52,41};
static C_char C_TLS li362[] C_aligned={C_lihdr(0,0,32),40,97,49,54,57,55,56,32,117,110,105,116,57,52,53,32,105,110,102,111,57,52,54,32,101,114,114,102,57,52,55,41};
static C_char C_TLS li363[] C_aligned={C_lihdr(0,0,24),40,97,49,55,48,51,49,32,97,114,103,115,57,51,55,32,101,114,114,102,57,51,56,41};
static C_char C_TLS li364[] C_aligned={C_lihdr(0,0,24),40,97,49,55,49,56,51,32,97,114,103,115,57,51,52,32,101,114,114,102,57,51,53,41};
static C_char C_TLS li365[] C_aligned={C_lihdr(0,0,24),40,97,49,55,51,50,50,32,97,114,103,115,57,51,49,32,101,114,114,102,57,51,50,41};
static C_char C_TLS li366[] C_aligned={C_lihdr(0,0,24),40,97,49,55,52,52,50,32,97,114,103,115,57,49,48,32,101,114,114,102,57,49,49,41};
static C_char C_TLS li367[] C_aligned={C_lihdr(0,0,32),40,97,49,55,52,55,51,32,117,110,105,116,57,49,51,32,105,110,102,111,57,49,52,32,101,114,114,102,57,49,53,41};
static C_char C_TLS li368[] C_aligned={C_lihdr(0,0,24),40,97,49,55,53,54,53,32,97,114,103,115,57,48,52,32,101,114,114,102,57,48,53,41};
static C_char C_TLS li369[] C_aligned={C_lihdr(0,0,32),40,97,49,55,53,56,51,32,117,110,105,116,57,48,54,32,105,110,102,111,57,48,55,32,101,114,114,102,57,48,56,41};
static C_char C_TLS li370[] C_aligned={C_lihdr(0,0,32),40,97,49,55,54,53,55,32,117,110,105,116,56,57,51,32,105,110,102,111,56,57,52,32,101,114,114,102,56,57,53,41};
static C_char C_TLS li371[] C_aligned={C_lihdr(0,0,24),40,97,49,55,55,53,51,32,97,114,103,115,56,56,49,32,101,114,114,102,56,56,50,41};
static C_char C_TLS li372[] C_aligned={C_lihdr(0,0,32),40,97,49,55,55,54,51,32,117,110,105,116,56,56,51,32,105,110,102,111,56,56,52,32,101,114,114,102,56,56,53,41};
static C_char C_TLS li373[] C_aligned={C_lihdr(0,0,18),40,97,49,55,57,51,57,32,117,53,51,49,32,112,53,51,50,41,0,0};
static C_char C_TLS li374[] C_aligned={C_lihdr(0,0,18),40,97,49,55,57,54,53,32,101,53,48,51,32,112,53,48,52,41,0,0};
static C_char C_TLS li375[] C_aligned={C_lihdr(0,0,11),40,112,112,97,116,32,112,52,54,54,41,0,0,0};
static C_char C_TLS li376[] C_aligned={C_lihdr(0,0,32),40,97,49,55,57,55,57,32,116,121,112,52,54,50,32,112,97,116,52,54,51,32,46,32,97,114,103,115,52,54,52,41};
static C_char C_TLS li377[] C_aligned={C_lihdr(0,0,18),40,97,49,56,48,56,50,32,114,52,53,57,32,112,52,54,48,41,0,0};
static C_char C_TLS li378[] C_aligned={C_lihdr(0,0,18),40,97,49,56,48,57,50,32,116,52,49,48,32,112,52,49,49,41,0,0};
static C_char C_TLS li379[] C_aligned={C_lihdr(0,0,24),40,97,49,56,49,48,54,32,109,101,115,115,53,48,32,46,32,100,97,116,97,53,49,41};
static C_char C_TLS li380[] C_aligned={C_lihdr(0,0,20),40,97,49,56,49,49,50,32,102,117,110,99,48,32,105,110,102,111,49,41,0,0,0,0};
static C_char C_TLS li381[] C_aligned={C_lihdr(0,0,10),40,116,111,112,108,101,118,101,108,41,0,0};


/* from k12752 */
static C_word C_fcall stub2773(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2773(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
load_sal_file(t0);
return C_r;}

/* from k12737 in hush in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
C_noret_decl(stub2767)
static void C_ccall stub2767(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub2767(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_hush();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k12731 */
C_noret_decl(stub2762)
static void C_ccall stub2762(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub2762(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_stop(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k12715 in cont in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
C_noret_decl(stub2757)
static void C_ccall stub2757(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub2757(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_cont();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k12706 in pause in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
C_noret_decl(stub2753)
static void C_ccall stub2753(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub2753(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_pause();
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k12697 in paused? in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
C_noret_decl(stub2749)
static void C_ccall stub2749(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub2749(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_paused());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k12691 */
C_noret_decl(stub2742)
static void C_ccall stub2742(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_noret;
static void C_ccall stub2742(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_sprout(t0,t1,t2);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k12671 in scheduler-set-time-milliseconds in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
C_noret_decl(stub2734)
static void C_ccall stub2734(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0) C_noret;
static void C_ccall stub2734(C_word C_c,C_word C_self,C_word C_k,C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_truep(C_a0);
int C_level=C_save_callback_continuation(&C_a,C_k);
scheduler_set_time_milliseconds(t0);
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from k12662 in time-format in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
C_noret_decl(stub2729)
static void C_ccall stub2729(C_word C_c,C_word C_self,C_word C_k,C_word C_buf) C_noret;
static void C_ccall stub2729(C_word C_c,C_word C_self,C_word C_k,C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int C_level=C_save_callback_continuation(&C_a,C_k);
C_r=C_mk_bool(scheduler_is_time_milliseconds());
C_k=C_restore_callback_continuation2(C_level);
C_kontinue(C_k,C_r);}

/* from current-time-seconds in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub2726(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub2726(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( (Time::getMillisecondCounterHiRes() / 1000.0) );
C_ret:
#undef return

return C_r;}

/* from current-time-milliseconds in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
#define return(x) C_cblock C_r = (C_flonum(&C_a,(x))); goto C_ret; C_cblockend
static C_word C_fcall stub2723(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub2723(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
 C_return( Time::getMillisecondCounterHiRes());
C_ret:
#undef return

return C_r;}

/* from k12643 in print-error in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static C_word C_fcall stub2718(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2718(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_error(t0);
return C_r;}

/* from k12629 in print-message in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static C_word C_fcall stub2712(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2712(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
print_message(t0);
return C_r;}

/* from f_12614 in cs:clear in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static C_word C_fcall stub2704(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub2704(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
cs_clear_score();
return C_r;}

/* from k12580 */
static C_word C_fcall stub2697(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub2697(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from k12523 */
static C_word C_fcall stub2686(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub2686(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_word t2=(C_word )(C_a2);
cs_send_score_event(t0,t1,t2);
return C_r;}

/* from f_12459 in mp:inhook in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static C_word C_fcall stub2635(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2635(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from f_12454 in mp:inhook in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static C_word C_fcall stub2626(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2626(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_word t0=(C_word )(C_a0);
set_input_hook(t0);
return C_r;}

/* from k12398 */
static C_word C_fcall stub2619(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2619(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mp_message(t0);
return C_r;}

/* from k12386 */
static C_word C_fcall stub2610(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2610(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k12358 */
static C_word C_fcall stub2595(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2595(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k12330 */
static C_word C_fcall stub2580(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2580(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k12302 */
static C_word C_fcall stub2565(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2565(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k12274 */
static C_word C_fcall stub2549(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2549(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k12246 */
static C_word C_fcall stub2533(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2533(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k12218 */
static C_word C_fcall stub2517(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2517(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_data(t0,t1,t2,t3,t4);
return C_r;}

/* from k12190 */
static C_word C_fcall stub2502(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2502(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k12162 */
static C_word C_fcall stub2485(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2485(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
double t0=(double )C_c_double(C_a0);
double t1=(double )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
mp_note(t0,t1,t2,t3,t4);
return C_r;}

/* from k12131 */
static C_word C_fcall stub2467(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub2467(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k12108 */
static C_word C_fcall stub2456(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub2456(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k12086 */
static C_word C_fcall stub2445(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub2445(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k12066 */
static C_word C_fcall stub2435(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub2435(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k12031 */
static C_word C_fcall stub2422(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub2422(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k12015 */
static C_word C_fcall stub2414(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub2414(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k11987 */
static C_word C_fcall stub2401(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub2401(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k11964 */
static C_word C_fcall stub2390(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub2390(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k11945 */
static C_word C_fcall stub2379(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub2379(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
int t2=(int )C_unfix(C_a2);
mm_set_data(t0,t1,t2);
return C_r;}

/* from k11922 */
static C_word C_fcall stub2368(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub2368(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)mm_data(t0,t1));
return C_r;}

/* from k11903 */
static C_word C_fcall stub2358(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub2358(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
mm_set_chan(t0,t1);
return C_r;}

/* from k11884 */
static C_word C_fcall stub2349(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2349(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_fix((C_word)mm_chan(t0));
return C_r;}

/* from k11869 */
static C_word C_fcall stub2340(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub2340(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
double t1=(double )C_c_double(C_a1);
mm_set_time(t0,t1);
return C_r;}

/* from k11850 */
static C_word C_fcall stub2330(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2330(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_flonum(&C_a,mm_time(t0));
return C_r;}

/* from k11835 */
static C_word C_fcall stub2322(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub2322(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_mk_bool(mm_is_type(t0,t1));
return C_r;}

/* from k11816 */
static C_word C_fcall stub2312(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2312(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
C_r=C_mpointer_or_false(&C_a,(void*)mm_copy(t0));
return C_r;}

/* from k11801 */
static C_word C_fcall stub2304(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub2304(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
MidiMessage *t0=(MidiMessage *)C_c_pointer_or_null(C_a0);
mm_free(t0);
return C_r;}

/* from k11765 */
static C_word C_fcall stub2294(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2294(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k11734 */
static C_word C_fcall stub2281(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2281(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k11703 */
static C_word C_fcall stub2268(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2268(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from k11672 */
static C_word C_fcall stub2255(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4) C_regparm;
C_regparm static C_word C_fcall stub2255(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
double t1=(double )C_c_double(C_a1);
int t2=(int )C_unfix(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
C_r=C_mpointer_or_false(&C_a,(void*)mm_make(t0,t1,t2,t3,t4));
return C_r;}

/* from tb:ranbrown */
static C_word C_fcall stub220(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub220(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranbrown());
return C_r;}

/* from tb:ranpink */
static C_word C_fcall stub217(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub217(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranpink());
return C_r;}

/* from k3673 */
static C_word C_fcall stub214(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub214(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::ranpoisson(t0));
return C_r;}

/* from tb:rancauchy */
static C_word C_fcall stub210(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub210(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::rancauchy());
return C_r;}

/* from k3663 */
static C_word C_fcall stub206(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub206(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::rangamma(t0));
return C_r;}

/* from k3656 */
static C_word C_fcall stub200(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub200(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ranbeta(t0,t1));
return C_r;}

/* from k3645 */
static C_word C_fcall stub194(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub194(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ranexp(t0));
return C_r;}

/* from k3638 */
static C_word C_fcall stub188(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub188(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::rangauss(t0,t1));
return C_r;}

/* from tb:ranmiddle */
static C_word C_fcall stub183(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub183(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranmiddle());
return C_r;}

/* from tb:ranhigh */
static C_word C_fcall stub180(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub180(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranhigh());
return C_r;}

/* from tb:ranlow */
static C_word C_fcall stub177(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub177(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_flonum(&C_a,Toolbox::ranlow());
return C_r;}

/* from k3618 */
static C_word C_fcall stub172(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub172(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::ran(t0,t1));
return C_r;}

/* from k3607 */
static C_word C_fcall stub166(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub166(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_fix((C_word)Toolbox::ran(t0,t1));
return C_r;}

/* from k3596 */
static C_word C_fcall stub160(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub160(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::ran(t0));
return C_r;}

/* from k3589 */
static C_word C_fcall stub156(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub156(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_fix((C_word)Toolbox::ran(t0));
return C_r;}

/* from tb:ran-set! */
static C_word C_fcall stub152(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub152(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_s64 t0=(C_s64 )C_num_to_int64(C_a0);
Toolbox::ranstate_set(t0);
return C_r;}

/* from k3579 */
static C_word C_fcall stub147(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub147(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::hertz_to_keynum(t0));
return C_r;}

/* from k3572 */
static C_word C_fcall stub143(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub143(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::keynum_to_pc(t0));
return C_r;}

/* from k3565 */
static C_word C_fcall stub138(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub138(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_flonum(&C_a,Toolbox::keynum_to_hertz(t0));
return C_r;}

/* from k3558 */
static C_word C_fcall stub134(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub134(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::scaler_to_cents(t0));
return C_r;}

/* from k3551 */
static C_word C_fcall stub129(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub129(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
int t0=(int )C_unfix(C_a0);
C_r=C_flonum(&C_a,Toolbox::cents_to_scaler(t0));
return C_r;}

/* from k3544 */
static C_word C_fcall stub122(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2) C_regparm;
C_regparm static C_word C_fcall stub122(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
C_r=C_flonum(&C_a,Toolbox::rhythm_to_seconds(t0,t1,t2));
return C_r;}

/* from k3529 */
static C_word C_fcall stub114(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub114(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
C_r=C_flonum(&C_a,Toolbox::quantize(t0,t1));
return C_r;}

/* from k3518 */
static C_word C_fcall stub107(C_word C_buf,C_word C_a0,C_word C_a1) C_regparm;
C_regparm static C_word C_fcall stub107(C_word C_buf,C_word C_a0,C_word C_a1){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
int t1=(int )C_unfix(C_a1);
C_r=C_flonum(&C_a,Toolbox::decimals(t0,t1));
return C_r;}

/* from k3507 */
static C_word C_fcall stub102(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub102(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
C_r=C_fix((C_word)Toolbox::float_to_fixnum(t0));
return C_r;}

/* from k3500 */
static C_word C_fcall stub93(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub93(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
int t3=(int )C_unfix(C_a3);
int t4=(int )C_unfix(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_fix((C_word)Toolbox::discrete(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k3473 */
static C_word C_fcall stub78(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5) C_regparm;
C_regparm static C_word C_fcall stub78(C_word C_buf,C_word C_a0,C_word C_a1,C_word C_a2,C_word C_a3,C_word C_a4,C_word C_a5){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
float t0=(float )C_c_double(C_a0);
float t1=(float )C_c_double(C_a1);
float t2=(float )C_c_double(C_a2);
float t3=(float )C_c_double(C_a3);
float t4=(float )C_c_double(C_a4);
float t5=(float )C_c_double(C_a5);
C_r=C_flonum(&C_a,Toolbox::rescale(t0,t1,t2,t3,t4,t5));
return C_r;}

/* from k3433 */
static C_word C_fcall stub67(C_word C_buf,C_word C_a0) C_regparm;
C_regparm static C_word C_fcall stub67(C_word C_buf,C_word C_a0){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
char * t0=(char * )C_string_or_null(C_a0);
set_current_directory(t0);
return C_r;}

/* from f_3415 in cwd in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static C_word C_fcall stub62(C_word C_buf) C_regparm;
C_regparm static C_word C_fcall stub62(C_word C_buf){
C_word C_r=C_SCHEME_UNDEFINED,*C_a=(C_word*)C_buf;
C_r=C_mpointer(&C_a,(void*)get_current_directory());
return C_r;}

C_noret_decl(C_grace_toplevel)
C_externexport void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2913)
static void C_ccall f_2913(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2916)
static void C_ccall f_2916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2919)
static void C_ccall f_2919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2922)
static void C_ccall f_2922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2926)
static void C_ccall f_2926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18113)
static void C_ccall f_18113(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18160)
static void C_ccall f_18160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18150)
static void C_ccall f_18150(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18117)
static void C_ccall f_18117(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2929)
static void C_ccall f_2929(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18107)
static void C_ccall f_18107(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_18107)
static void C_ccall f_18107r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_3222)
static void C_ccall f_3222(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18093)
static void C_ccall f_18093(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18101)
static void C_ccall f_18101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18105)
static void C_ccall f_18105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4496)
static void C_ccall f_4496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4547)
static void C_ccall f_4547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18083)
static void C_ccall f_18083(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_18091)
static void C_ccall f_18091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4652)
static void C_ccall f_4652(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17980)
static void C_ccall f_17980(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_17980)
static void C_ccall f_17980r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_18043)
static void C_ccall f_18043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18047)
static void C_ccall f_18047(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18061)
static void C_fcall f_18061(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17983)
static void C_fcall f_17983(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_18003)
static void C_ccall f_18003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_18007)
static void C_ccall f_18007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4655)
static void C_ccall f_4655(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17966)
static void C_ccall f_17966(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17974)
static void C_ccall f_17974(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17978)
static void C_ccall f_17978(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4848)
static void C_ccall f_4848(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17940)
static void C_ccall f_17940(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17944)
static void C_ccall f_17944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17950)
static void C_ccall f_17950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17961)
static void C_ccall f_17961(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17957)
static void C_ccall f_17957(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4917)
static void C_ccall f_4917(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17918)
static void C_ccall f_17918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6162)
static void C_ccall f_6162(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17898)
static void C_ccall f_17898(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6165)
static void C_ccall f_6165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17858)
static void C_ccall f_17858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6168)
static void C_ccall f_6168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17764)
static void C_ccall f_17764(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17768)
static void C_ccall f_17768(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17771)
static void C_ccall f_17771(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17789)
static void C_ccall f_17789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17792)
static void C_ccall f_17792(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17823)
static void C_ccall f_17823(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17795)
static void C_fcall f_17795(C_word t0,C_word t1) C_noret;
C_noret_decl(f_17801)
static void C_ccall f_17801(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17754)
static void C_ccall f_17754(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17748)
static void C_ccall f_17748(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6171)
static void C_ccall f_6171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17656)
static void C_ccall f_17656(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17658)
static void C_ccall f_17658(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17662)
static void C_ccall f_17662(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17665)
static void C_ccall f_17665(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17668)
static void C_ccall f_17668(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17708)
static void C_ccall f_17708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17700)
static void C_ccall f_17700(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17671)
static void C_ccall f_17671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17674)
static void C_ccall f_17674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17677)
static void C_ccall f_17677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17648)
static void C_ccall f_17648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6174)
static void C_ccall f_6174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17620)
static void C_ccall f_17620(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6177)
static void C_ccall f_6177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17584)
static void C_ccall f_17584(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17596)
static void C_ccall f_17596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17592)
static void C_ccall f_17592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17566)
static void C_ccall f_17566(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17560)
static void C_ccall f_17560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6180)
static void C_ccall f_6180(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17474)
static void C_ccall f_17474(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_17478)
static void C_ccall f_17478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17481)
static void C_ccall f_17481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17484)
static void C_ccall f_17484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17497)
static void C_ccall f_17497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17443)
static void C_ccall f_17443(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17447)
static void C_ccall f_17447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17462)
static void C_ccall f_17462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17437)
static void C_ccall f_17437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6183)
static void C_ccall f_6183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17323)
static void C_ccall f_17323(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17339)
static void C_ccall f_17339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17350)
static void C_ccall f_17350(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17317)
static void C_ccall f_17317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6239)
static void C_ccall f_6239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17184)
static void C_ccall f_17184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17207)
static void C_ccall f_17207(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17204)
static void C_ccall f_17204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17178)
static void C_ccall f_17178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6242)
static void C_ccall f_6242(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17032)
static void C_ccall f_17032(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_17050)
static void C_ccall f_17050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17059)
static void C_ccall f_17059(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17026)
static void C_ccall f_17026(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6245)
static void C_ccall f_6245(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16979)
static void C_ccall f_16979(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16983)
static void C_ccall f_16983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16986)
static void C_ccall f_16986(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_17002)
static void C_ccall f_17002(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16961)
static void C_ccall f_16961(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16955)
static void C_ccall f_16955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6248)
static void C_ccall f_6248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16879)
static void C_ccall f_16879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6387)
static void C_ccall f_6387(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16805)
static void C_ccall f_16805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16812)
static void C_ccall f_16812(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16799)
static void C_ccall f_16799(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6390)
static void C_ccall f_6390(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16695)
static void C_ccall f_16695(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16703)
static void C_ccall f_16703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16669)
static void C_ccall f_16669(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16686)
static void C_ccall f_16686(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16677)
static void C_fcall f_16677(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16663)
static void C_ccall f_16663(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6393)
static void C_ccall f_6393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16619)
static void C_ccall f_16619(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6396)
static void C_ccall f_6396(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16537)
static void C_ccall f_16537(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16548)
static void C_ccall f_16548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16550)
static void C_fcall f_16550(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_16579)
static void C_ccall f_16579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16515)
static void C_ccall f_16515(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16531)
static void C_ccall f_16531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16509)
static void C_ccall f_16509(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6399)
static void C_ccall f_6399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16462)
static void C_ccall f_16462(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16466)
static void C_ccall f_16466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16473)
static void C_ccall f_16473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16440)
static void C_ccall f_16440(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16456)
static void C_ccall f_16456(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16434)
static void C_ccall f_16434(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6402)
static void C_ccall f_6402(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16302)
static void C_ccall f_16302(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_16342)
static void C_ccall f_16342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16306)
static void C_ccall f_16306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16322)
static void C_ccall f_16322(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_16322)
static void C_ccall f_16322r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_16334)
static void C_ccall f_16334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16338)
static void C_ccall f_16338(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16330)
static void C_ccall f_16330(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16241)
static void C_ccall f_16241(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16288)
static void C_ccall f_16288(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16248)
static void C_fcall f_16248(C_word t0,C_word t1) C_noret;
C_noret_decl(f_16259)
static void C_ccall f_16259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16235)
static void C_ccall f_16235(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6405)
static void C_ccall f_6405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16215)
static void C_ccall f_16215(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_16209)
static void C_ccall f_16209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6408)
static void C_ccall f_6408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16189)
static void C_ccall f_16189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16193)
static void C_ccall f_16193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16181)
static void C_ccall f_16181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6411)
static void C_ccall f_6411(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16161)
static void C_ccall f_16161(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16165)
static void C_ccall f_16165(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16153)
static void C_ccall f_16153(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6414)
static void C_ccall f_6414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16133)
static void C_ccall f_16133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16137)
static void C_ccall f_16137(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16125)
static void C_ccall f_16125(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6417)
static void C_ccall f_6417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16105)
static void C_ccall f_16105(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16109)
static void C_ccall f_16109(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_16097)
static void C_ccall f_16097(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6420)
static void C_ccall f_6420(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15996)
static void C_ccall f_15996(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15966)
static void C_ccall f_15966(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15990)
static void C_ccall f_15990(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15960)
static void C_ccall f_15960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6423)
static void C_ccall f_6423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15910)
static void C_ccall f_15910(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15912)
static void C_ccall f_15912(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15916)
static void C_ccall f_15916(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15944)
static void C_ccall f_15944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15936)
static void C_ccall f_15936(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15932)
static void C_ccall f_15932(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15919)
static void C_ccall f_15919(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15902)
static void C_ccall f_15902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6426)
static void C_ccall f_6426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15849)
static void C_ccall f_15849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15851)
static void C_ccall f_15851(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15855)
static void C_ccall f_15855(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15886)
static void C_ccall f_15886(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15878)
static void C_ccall f_15878(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15874)
static void C_ccall f_15874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15858)
static void C_ccall f_15858(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15861)
static void C_ccall f_15861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15841)
static void C_ccall f_15841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6429)
static void C_ccall f_6429(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15791)
static void C_ccall f_15791(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15805)
static void C_ccall f_15805(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15797)
static void C_ccall f_15797(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15756)
static void C_ccall f_15756(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15789)
static void C_ccall f_15789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15750)
static void C_ccall f_15750(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6432)
static void C_ccall f_6432(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15697)
static void C_ccall f_15697(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15701)
static void C_ccall f_15701(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15714)
static void C_ccall f_15714(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15706)
static void C_ccall f_15706(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15654)
static void C_ccall f_15654(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15687)
static void C_ccall f_15687(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15648)
static void C_ccall f_15648(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6435)
static void C_ccall f_6435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15568)
static void C_ccall f_15568(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15562)
static void C_ccall f_15562(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6438)
static void C_ccall f_6438(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15331)
static void C_ccall f_15331(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15335)
static void C_ccall f_15335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15343)
static void C_fcall f_15343(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_15366)
static void C_ccall f_15366(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15369)
static void C_ccall f_15369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15372)
static void C_ccall f_15372(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15375)
static void C_ccall f_15375(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15435)
static void C_ccall f_15435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15442)
static void C_ccall f_15442(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15452)
static void C_ccall f_15452(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15462)
static void C_ccall f_15462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15476)
static void C_ccall f_15476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15486)
static void C_ccall f_15486(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15496)
static void C_ccall f_15496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15506)
static void C_ccall f_15506(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15378)
static void C_fcall f_15378(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15402)
static void C_fcall f_15402(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15381)
static void C_fcall f_15381(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15288)
static void C_ccall f_15288(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15321)
static void C_ccall f_15321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15282)
static void C_ccall f_15282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6441)
static void C_ccall f_6441(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15200)
static void C_ccall f_15200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15204)
static void C_ccall f_15204(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15210)
static void C_ccall f_15210(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15230)
static void C_ccall f_15230(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15174)
static void C_ccall f_15174(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_15184)
static void C_fcall f_15184(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15168)
static void C_ccall f_15168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6444)
static void C_ccall f_6444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15045)
static void C_ccall f_15045(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_15049)
static void C_ccall f_15049(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14977)
static void C_ccall f_14977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14996)
static void C_ccall f_14996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15031)
static void C_ccall f_15031(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15002)
static void C_fcall f_15002(C_word t0,C_word t1) C_noret;
C_noret_decl(f_15006)
static void C_ccall f_15006(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15020)
static void C_ccall f_15020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_15009)
static void C_fcall f_15009(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14990)
static void C_fcall f_14990(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14971)
static void C_ccall f_14971(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6447)
static void C_ccall f_6447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14699)
static void C_ccall f_14699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6970)
static void C_ccall f_6970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14651)
static void C_ccall f_14651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14643)
static void C_ccall f_14643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6973)
static void C_ccall f_6973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14523)
static void C_ccall f_14523(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6979)
static void C_ccall f_6979(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7454)
static void C_ccall f_7454(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7488)
static void C_ccall f_7488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7480)
static void C_ccall f_7480(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7476)
static void C_ccall f_7476(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7461)
static void C_ccall f_7461(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7465)
static void C_ccall f_7465(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7458)
static void C_ccall f_7458(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6997)
static void C_fcall f_6997(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7447)
static void C_ccall f_7447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7443)
static void C_ccall f_7443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7004)
static void C_fcall f_7004(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7318)
static void C_fcall f_7318(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7339)
static void C_ccall f_7339(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7341)
static void C_fcall f_7341(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7355)
static void C_ccall f_7355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7408)
static void C_ccall f_7408(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7358)
static void C_fcall f_7358(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7393)
static void C_ccall f_7393(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7361)
static void C_fcall f_7361(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7374)
static void C_ccall f_7374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7386)
static void C_ccall f_7386(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7378)
static void C_ccall f_7378(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7364)
static void C_fcall f_7364(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7328)
static void C_ccall f_7328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7007)
static void C_ccall f_7007(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7282)
static void C_fcall f_7282(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7308)
static void C_ccall f_7308(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7293)
static void C_ccall f_7293(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7010)
static void C_ccall f_7010(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7014)
static void C_ccall f_7014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7226)
static void C_fcall f_7226(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7236)
static void C_ccall f_7236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7239)
static void C_ccall f_7239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7260)
static void C_ccall f_7260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7242)
static void C_fcall f_7242(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7246)
static void C_ccall f_7246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7017)
static void C_ccall f_7017(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7020)
static void C_fcall f_7020(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7189)
static void C_ccall f_7189(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7197)
static void C_ccall f_7197(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7193)
static void C_ccall f_7193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7023)
static void C_fcall f_7023(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7051)
static void C_ccall f_7051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7054)
static void C_ccall f_7054(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7057)
static void C_ccall f_7057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7060)
static void C_ccall f_7060(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7063)
static void C_ccall f_7063(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7122)
static void C_ccall f_7122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14477)
static void C_ccall f_14477(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14493)
static void C_ccall f_14493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14496)
static void C_ccall f_14496(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14499)
static void C_fcall f_14499(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14502)
static void C_fcall f_14502(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14513)
static void C_ccall f_14513(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14471)
static void C_ccall f_14471(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7495)
static void C_ccall f_7495(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14332)
static void C_ccall f_14332(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14371)
static void C_ccall f_14371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14345)
static void C_fcall f_14345(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14326)
static void C_ccall f_14326(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7498)
static void C_ccall f_7498(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13914)
static void C_ccall f_13914(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13918)
static void C_ccall f_13918(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13930)
static void C_ccall f_13930(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13988)
static void C_ccall f_13988(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13991)
static void C_ccall f_13991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13994)
static void C_ccall f_13994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14206)
static void C_ccall f_14206(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14144)
static void C_ccall f_14144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14178)
static void C_ccall f_14178(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14153)
static void C_fcall f_14153(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14164)
static void C_ccall f_14164(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14160)
static void C_ccall f_14160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14003)
static void C_fcall f_14003(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14081)
static void C_ccall f_14081(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14122)
static void C_ccall f_14122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14126)
static void C_ccall f_14126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14130)
static void C_ccall f_14130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14085)
static void C_ccall f_14085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14089)
static void C_ccall f_14089(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14116)
static void C_ccall f_14116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14092)
static void C_fcall f_14092(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14006)
static void C_fcall f_14006(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14078)
static void C_ccall f_14078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14020)
static void C_ccall f_14020(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14022)
static void C_fcall f_14022(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_14070)
static void C_ccall f_14070(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14041)
static void C_ccall f_14041(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14058)
static void C_ccall f_14058(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14044)
static void C_fcall f_14044(C_word t0,C_word t1) C_noret;
C_noret_decl(f_14037)
static void C_ccall f_14037(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_14009)
static void C_ccall f_14009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13939)
static void C_fcall f_13939(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13949)
static void C_ccall f_13949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13955)
static void C_ccall f_13955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13927)
static void C_ccall f_13927(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13875)
static void C_ccall f_13875(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13892)
static void C_ccall f_13892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13908)
static void C_ccall f_13908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13886)
static void C_fcall f_13886(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13869)
static void C_ccall f_13869(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7501)
static void C_ccall f_7501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13793)
static void C_ccall f_13793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7504)
static void C_ccall f_7504(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13769)
static void C_ccall f_13769(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_13781)
static void C_ccall f_13781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13777)
static void C_ccall f_13777(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13755)
static void C_ccall f_13755(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_13763)
static void C_ccall f_13763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13749)
static void C_ccall f_13749(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7507)
static void C_ccall f_7507(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13741)
static void C_ccall f_13741(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11297)
static void C_ccall f_11297(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11300)
static void C_ccall f_11300(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11466)
static void C_ccall f_11466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11462)
static void C_ccall f_11462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11452)
static void C_fcall f_11452(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11307)
static void C_ccall f_11307(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11311)
static void C_ccall f_11311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11314)
static void C_fcall f_11314(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11325)
static void C_ccall f_11325(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11333)
static void C_ccall f_11333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11405)
static void C_ccall f_11405(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11413)
static void C_ccall f_11413(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11409)
static void C_ccall f_11409(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11401)
static void C_ccall f_11401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11397)
static void C_ccall f_11397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11369)
static void C_ccall f_11369(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11365)
static void C_ccall f_11365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11329)
static void C_ccall f_11329(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7944)
static void C_ccall f_7944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13727)
static void C_ccall f_13727(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_7947)
static void C_ccall f_7947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13698)
static void C_ccall f_13698(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13702)
static void C_ccall f_13702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7950)
static void C_ccall f_7950(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13695)
static void C_ccall f_13695(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7953)
static void C_ccall f_7953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13553)
static void C_ccall f_13553(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11479)
static void C_ccall f_11479(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11611)
static void C_ccall f_11611(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11482)
static void C_ccall f_11482(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11493)
static void C_ccall f_11493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11501)
static void C_ccall f_11501(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11525)
static void C_ccall f_11525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11528)
static void C_fcall f_11528(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11536)
static void C_ccall f_11536(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11544)
static void C_ccall f_11544(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11564)
static void C_ccall f_11564(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11560)
static void C_ccall f_11560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11540)
static void C_ccall f_11540(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11532)
static void C_ccall f_11532(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11521)
static void C_ccall f_11521(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11497)
static void C_ccall f_11497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11473)
static void C_ccall f_11473(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12463)
static void C_ccall f_12463(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12466)
static void C_ccall f_12466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12469)
static void C_ccall f_12469(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12472)
static void C_ccall f_12472(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12475)
static void C_ccall f_12475(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12478)
static void C_ccall f_12478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12481)
static void C_ccall f_12481(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12484)
static void C_ccall f_12484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12487)
static void C_ccall f_12487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12490)
static void C_ccall f_12490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12493)
static void C_ccall f_12493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12618)
static void C_ccall f_12618(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12621)
static void C_ccall f_12621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12624)
static void C_ccall f_12624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13547)
static void C_ccall f_13547(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_13547)
static void C_ccall f_13547r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_13101)
static void C_ccall f_13101(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13104)
static void C_ccall f_13104(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13382)
static void C_fcall f_13382(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13490)
static void C_ccall f_13490(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13402)
static void C_fcall f_13402(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13411)
static void C_fcall f_13411(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13415)
static void C_ccall f_13415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13419)
static void C_ccall f_13419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13427)
static void C_fcall f_13427(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13423)
static void C_ccall f_13423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13392)
static void C_ccall f_13392(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13107)
static void C_ccall f_13107(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13110)
static void C_ccall f_13110(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13113)
static void C_ccall f_13113(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13116)
static void C_ccall f_13116(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13119)
static void C_ccall f_13119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13376)
static void C_ccall f_13376(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13275)
static void C_fcall f_13275(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13282)
static void C_ccall f_13282(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13284)
static void C_fcall f_13284(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13356)
static void C_ccall f_13356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13308)
static void C_fcall f_13308(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13311)
static void C_ccall f_13311(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13332)
static void C_ccall f_13332(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13298)
static void C_ccall f_13298(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13122)
static void C_ccall f_13122(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13264)
static void C_ccall f_13264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13252)
static void C_ccall f_13252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13248)
static void C_ccall f_13248(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13129)
static void C_fcall f_13129(C_word t0,C_word t1) C_noret;
C_noret_decl(f_13086)
static void C_ccall f_13086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13545)
static void C_ccall f_13545(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13076)
static void C_ccall f_13076(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12739)
static void C_ccall f_12739(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13080)
static void C_ccall f_13080(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13018)
static void C_ccall f_13018(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_13018)
static void C_ccall f_13018r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_13036)
static void C_fcall f_13036(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_13046)
static void C_ccall f_13046(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13022)
static void C_ccall f_13022(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13009)
static void C_ccall f_13009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12717)
static void C_ccall f_12717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13013)
static void C_ccall f_13013(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_13003)
static void C_ccall f_13003(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12699)
static void C_ccall f_12699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12994)
static void C_ccall f_12994(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12708)
static void C_ccall f_12708(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12998)
static void C_ccall f_12998(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12931)
static void C_ccall f_12931(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_12931)
static void C_ccall f_12931r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_12956)
static void C_fcall f_12956(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12664)
static void C_ccall f_12664(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12944)
static void C_ccall f_12944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12763)
static void C_ccall f_12763(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_12763)
static void C_ccall f_12763r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_12882)
static void C_fcall f_12882(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12877)
static void C_fcall f_12877(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12765)
static void C_fcall f_12765(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12872)
static void C_ccall f_12872(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12876)
static void C_ccall f_12876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12868)
static void C_ccall f_12868(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12836)
static void C_fcall f_12836(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12861)
static void C_ccall f_12861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12865)
static void C_ccall f_12865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12846)
static void C_ccall f_12846(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12825)
static void C_ccall f_12825(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12795)
static void C_fcall f_12795(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12767)
static void C_fcall f_12767(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12744)
static void C_ccall f_12744(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12749)
static void C_ccall f_12749(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12754)
static void C_ccall f_12754(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12722)
static void C_fcall f_12722(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12726)
static void C_ccall f_12726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12678)
static void C_fcall f_12678(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12682)
static void C_ccall f_12682(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12669)
static void C_fcall f_12669(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12673)
static void C_ccall f_12673(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12657)
static void C_ccall f_12657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12654)
static void C_ccall f_12654(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12640)
static void C_ccall f_12640(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12645)
static void C_ccall f_12645(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12626)
static void C_ccall f_12626(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12631)
static void C_ccall f_12631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12609)
static void C_ccall f_12609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12614)
static void C_ccall f_12614(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12552)
static void C_ccall f_12552(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_12552)
static void C_ccall f_12552r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_12585)
static void C_fcall f_12585(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12565)
static void C_fcall f_12565(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12573)
static void C_ccall f_12573(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12556)
static void C_ccall f_12556(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12495)
static void C_ccall f_12495(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_12495)
static void C_ccall f_12495r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_12528)
static void C_fcall f_12528(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12508)
static void C_fcall f_12508(C_word t0,C_word t1) C_noret;
C_noret_decl(f_12516)
static void C_ccall f_12516(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12499)
static void C_ccall f_12499(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12405)
static void C_ccall f_12405(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12459)
static void C_ccall f_12459(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12454)
static void C_ccall f_12454(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12417)
static void C_ccall f_12417(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12423)
static void C_ccall f_12423(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12449)
static void C_ccall f_12449(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12453)
static void C_ccall f_12453(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12429)
static void C_ccall f_12429(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12447)
static void C_ccall f_12447(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12444)
static void C_ccall f_12444(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12440)
static void C_ccall f_12440(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12433)
static void C_ccall f_12433(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12390)
static void C_ccall f_12390(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12395)
static void C_ccall f_12395(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12362)
static void C_ccall f_12362(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12367)
static void C_ccall f_12367(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12334)
static void C_ccall f_12334(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12339)
static void C_ccall f_12339(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12306)
static void C_ccall f_12306(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12311)
static void C_ccall f_12311(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12278)
static void C_ccall f_12278(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_12283)
static void C_ccall f_12283(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12250)
static void C_ccall f_12250(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_12255)
static void C_ccall f_12255(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12222)
static void C_ccall f_12222(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_12227)
static void C_ccall f_12227(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12194)
static void C_ccall f_12194(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12199)
static void C_ccall f_12199(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12166)
static void C_ccall f_12166(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12171)
static void C_ccall f_12171(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12138)
static void C_ccall f_12138(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12143)
static void C_ccall f_12143(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_12115)
static void C_ccall f_12115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12120)
static void C_ccall f_12120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12119)
static void C_ccall f_12119(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12096)
static void C_ccall f_12096(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12101)
static void C_ccall f_12101(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12041)
static void C_ccall f_12041(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12048)
static void C_ccall f_12048(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12051)
static void C_ccall f_12051(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12075)
static void C_ccall f_12075(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12055)
static void C_ccall f_12055(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_12045)
static void C_ccall f_12045(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11994)
static void C_ccall f_11994(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_12001)
static void C_ccall f_12001(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12004)
static void C_ccall f_12004(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_12024)
static void C_ccall f_12024(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_12008)
static void C_ccall f_12008(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11971)
static void C_ccall f_11971(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11976)
static void C_ccall f_11976(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11975)
static void C_ccall f_11975(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11952)
static void C_ccall f_11952(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11957)
static void C_ccall f_11957(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11929)
static void C_ccall f_11929(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11934)
static void C_ccall f_11934(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_11933)
static void C_ccall f_11933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11910)
static void C_ccall f_11910(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11915)
static void C_ccall f_11915(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11891)
static void C_ccall f_11891(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11896)
static void C_ccall f_11896(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11895)
static void C_ccall f_11895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11876)
static void C_ccall f_11876(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11881)
static void C_ccall f_11881(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11857)
static void C_ccall f_11857(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11862)
static void C_ccall f_11862(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11861)
static void C_ccall f_11861(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11842)
static void C_ccall f_11842(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11847)
static void C_ccall f_11847(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11823)
static void C_ccall f_11823(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11828)
static void C_ccall f_11828(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11808)
static void C_ccall f_11808(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11813)
static void C_ccall f_11813(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11790)
static void C_ccall f_11790(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11798)
static void C_ccall f_11798(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11794)
static void C_ccall f_11794(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11624)
static void C_ccall f_11624(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_11624)
static void C_ccall f_11624r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_11787)
static void C_ccall f_11787(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11628)
static void C_ccall f_11628(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11784)
static void C_ccall f_11784(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11631)
static void C_ccall f_11631(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11781)
static void C_ccall f_11781(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11634)
static void C_ccall f_11634(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11778)
static void C_ccall f_11778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11637)
static void C_ccall f_11637(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11775)
static void C_ccall f_11775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11640)
static void C_ccall f_11640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11772)
static void C_ccall f_11772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11643)
static void C_ccall f_11643(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11649)
static void C_ccall f_11649(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11742)
static void C_ccall f_11742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11746)
static void C_ccall f_11746(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_11715)
static void C_ccall f_11715(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_11684)
static void C_ccall f_11684(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_11653)
static void C_ccall f_11653(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_11279)
static void C_fcall f_11279(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11119)
static void C_fcall f_11119(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11154)
static void C_fcall f_11154(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_11164)
static void C_fcall f_11164(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11168)
static void C_ccall f_11168(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11171)
static void C_ccall f_11171(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11232)
static void C_ccall f_11232(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11223)
static void C_ccall f_11223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11174)
static void C_ccall f_11174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11193)
static void C_ccall f_11193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11200)
static void C_ccall f_11200(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11177)
static void C_ccall f_11177(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11183)
static void C_ccall f_11183(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11152)
static void C_ccall f_11152(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11127)
static void C_fcall f_11127(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_11126)
static void C_ccall f_11126(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11287)
static void C_fcall f_11287(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10865)
static void C_ccall f_10865(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10887)
static void C_ccall f_10887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10902)
static void C_ccall f_10902(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10905)
static void C_fcall f_10905(C_word t0,C_word t1) C_noret;
C_noret_decl(f_11081)
static void C_ccall f_11081(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_11075)
static void C_ccall f_11075(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10908)
static void C_ccall f_10908(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11057)
static void C_ccall f_11057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10911)
static void C_fcall f_10911(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10914)
static void C_ccall f_10914(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11050)
static void C_ccall f_11050(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11038)
static void C_ccall f_11038(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10934)
static void C_fcall f_10934(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10941)
static void C_ccall f_10941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11011)
static void C_ccall f_11011(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10997)
static void C_ccall f_10997(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_11005)
static void C_ccall f_11005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10944)
static void C_ccall f_10944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10983)
static void C_ccall f_10983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10947)
static void C_fcall f_10947(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10976)
static void C_ccall f_10976(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10953)
static void C_ccall f_10953(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10956)
static void C_ccall f_10956(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10960)
static void C_ccall f_10960(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10921)
static void C_fcall f_10921(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10924)
static void C_ccall f_10924(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10734)
static void C_fcall f_10734(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10743)
static void C_fcall f_10743(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10691)
static void C_ccall f_10691(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10697)
static void C_fcall f_10697(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10760)
static void C_ccall f_10760(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10846)
static void C_ccall f_10846(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_10833)
static void C_ccall f_10833(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10841)
static void C_ccall f_10841(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10763)
static void C_ccall f_10763(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10767)
static void C_ccall f_10767(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10810)
static void C_ccall f_10810(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10772)
static void C_ccall f_10772(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10738)
static void C_ccall f_10738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10633)
static void C_ccall f_10633(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10640)
static void C_ccall f_10640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10671)
static void C_ccall f_10671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10667)
static void C_ccall f_10667(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10659)
static void C_ccall f_10659(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10542)
static void C_ccall f_10542(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10549)
static void C_ccall f_10549(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10617)
static void C_ccall f_10617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10560)
static void C_fcall f_10560(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10587)
static void C_ccall f_10587(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10571)
static void C_ccall f_10571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10476)
static void C_ccall f_10476(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_10487)
static void C_ccall f_10487(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10490)
static void C_fcall f_10490(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10497)
static void C_ccall f_10497(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10470)
static void C_ccall f_10470(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9924)
static void C_ccall f_9924(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9955)
static void C_ccall f_9955(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10419)
static void C_ccall f_10419(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10425)
static void C_ccall f_10425(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9966)
static void C_ccall f_9966(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9851)
static void C_fcall f_9851(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9876)
static void C_ccall f_9876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9811)
static void C_fcall f_9811(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9824)
static void C_fcall f_9824(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9865)
static void C_ccall f_9865(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9970)
static void C_ccall f_9970(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10407)
static void C_ccall f_10407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10403)
static void C_fcall f_10403(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10399)
static void C_ccall f_10399(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9973)
static void C_ccall f_9973(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10193)
static void C_fcall f_10193(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10302)
static void C_ccall f_10302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10367)
static void C_ccall f_10367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10309)
static void C_fcall f_10309(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10313)
static void C_ccall f_10313(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10317)
static void C_ccall f_10317(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10359)
static void C_ccall f_10359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10355)
static void C_ccall f_10355(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10333)
static void C_ccall f_10333(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10196)
static void C_fcall f_10196(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10199)
static void C_fcall f_10199(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10098)
static void C_ccall f_10098(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10181)
static void C_ccall f_10181(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10148)
static void C_ccall f_10148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10174)
static void C_ccall f_10174(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10156)
static void C_ccall f_10156(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10104)
static void C_fcall f_10104(C_word t0,C_word t1) C_noret;
C_noret_decl(f_10144)
static void C_ccall f_10144(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10086)
static void C_ccall f_10086(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10057)
static void C_ccall f_10057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10079)
static void C_ccall f_10079(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10065)
static void C_ccall f_10065(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_10019)
static void C_fcall f_10019(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9976)
static void C_fcall f_9976(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9987)
static void C_ccall f_9987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9991)
static void C_ccall f_9991(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9995)
static void C_ccall f_9995(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9999)
static void C_ccall f_9999(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9983)
static void C_ccall f_9983(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9943)
static void C_fcall f_9943(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9938)
static void C_fcall f_9938(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9933)
static void C_fcall f_9933(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9765)
static void C_ccall f_9765(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9776)
static void C_ccall f_9776(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9791)
static void C_ccall f_9791(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9727)
static void C_ccall f_9727(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9738)
static void C_ccall f_9738(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9753)
static void C_ccall f_9753(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9660)
static void C_ccall f_9660(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9680)
static void C_fcall f_9680(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9690)
static void C_ccall f_9690(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9703)
static void C_ccall f_9703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9671)
static void C_ccall f_9671(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9678)
static void C_ccall f_9678(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9467)
static void C_ccall f_9467(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9527)
static void C_fcall f_9527(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_9537)
static void C_ccall f_9537(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9651)
static void C_ccall f_9651(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9616)
static void C_ccall f_9616(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9608)
static void C_ccall f_9608(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9579)
static void C_ccall f_9579(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9557)
static void C_ccall f_9557(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9560)
static void C_ccall f_9560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9548)
static void C_ccall f_9548(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9474)
static void C_ccall f_9474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9525)
static void C_ccall f_9525(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9517)
static void C_ccall f_9517(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9477)
static void C_ccall f_9477(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9488)
static void C_ccall f_9488(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9492)
static void C_ccall f_9492(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9484)
static void C_ccall f_9484(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9325)
static void C_ccall f_9325(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_9373)
static void C_fcall f_9373(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9383)
static void C_ccall f_9383(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9394)
static void C_ccall f_9394(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9431)
static void C_ccall f_9431(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9406)
static void C_ccall f_9406(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9397)
static void C_ccall f_9397(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9335)
static void C_ccall f_9335(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9371)
static void C_ccall f_9371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9342)
static void C_ccall f_9342(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8974)
static void C_ccall f_8974(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8981)
static void C_ccall f_8981(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9215)
static void C_fcall f_9215(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_9225)
static void C_ccall f_9225(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9236)
static void C_ccall f_9236(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9248)
static void C_fcall f_9248(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9251)
static void C_ccall f_9251(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9239)
static void C_ccall f_9239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8987)
static void C_ccall f_8987(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9213)
static void C_ccall f_9213(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9209)
static void C_ccall f_9209(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9155)
static void C_fcall f_9155(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9120)
static void C_fcall f_9120(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9136)
static void C_fcall f_9136(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9091)
static void C_fcall f_9091(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9015)
static void C_ccall f_9015(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9018)
static void C_ccall f_9018(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9082)
static void C_ccall f_9082(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9078)
static void C_ccall f_9078(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8998)
static void C_fcall f_8998(C_word t0,C_word t1) C_noret;
C_noret_decl(f_9009)
static void C_ccall f_9009(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_9005)
static void C_ccall f_9005(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8927)
static void C_ccall f_8927(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8960)
static void C_ccall f_8960(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8942)
static void C_ccall f_8942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8954)
static void C_ccall f_8954(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8545)
static void C_ccall f_8545(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8754)
static void C_fcall f_8754(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8764)
static void C_ccall f_8764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8775)
static void C_ccall f_8775(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8895)
static void C_ccall f_8895(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8874)
static void C_ccall f_8874(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8853)
static void C_ccall f_8853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8832)
static void C_ccall f_8832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8811)
static void C_ccall f_8811(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8790)
static void C_ccall f_8790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8778)
static void C_ccall f_8778(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8555)
static void C_ccall f_8555(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8558)
static void C_fcall f_8558(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8721)
static void C_fcall f_8721(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8561)
static void C_fcall f_8561(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8712)
static void C_ccall f_8712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8692)
static void C_ccall f_8692(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8564)
static void C_fcall f_8564(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8657)
static void C_ccall f_8657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8674)
static void C_ccall f_8674(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8567)
static void C_fcall f_8567(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8606)
static void C_ccall f_8606(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8640)
static void C_ccall f_8640(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8624)
static void C_ccall f_8624(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8609)
static void C_fcall f_8609(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8574)
static void C_fcall f_8574(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8585)
static void C_ccall f_8585(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8589)
static void C_ccall f_8589(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8581)
static void C_ccall f_8581(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8463)
static void C_ccall f_8463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_8467)
static void C_ccall f_8467(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8485)
static void C_ccall f_8485(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8303)
static void C_fcall f_8303(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8311)
static void C_fcall f_8311(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_8321)
static void C_ccall f_8321(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8359)
static void C_ccall f_8359(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8362)
static void C_ccall f_8362(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8365)
static void C_ccall f_8365(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8440)
static void C_fcall f_8440(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8450)
static void C_ccall f_8450(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8368)
static void C_ccall f_8368(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8371)
static void C_ccall f_8371(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8374)
static void C_ccall f_8374(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8394)
static void C_fcall f_8394(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8404)
static void C_ccall f_8404(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8407)
static void C_ccall f_8407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8410)
static void C_ccall f_8410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8377)
static void C_ccall f_8377(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8380)
static void C_ccall f_8380(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8297)
static void C_fcall f_8297(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8291)
static void C_fcall f_8291(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8285)
static void C_fcall f_8285(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8214)
static void C_fcall f_8214(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8255)
static void C_ccall f_8255(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8259)
static void C_ccall f_8259(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8263)
static void C_ccall f_8263(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8267)
static void C_ccall f_8267(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8271)
static void C_ccall f_8271(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8275)
static void C_ccall f_8275(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8279)
static void C_ccall f_8279(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8283)
static void C_ccall f_8283(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8216)
static void C_fcall f_8216(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8222)
static void C_fcall f_8222(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8244)
static void C_ccall f_8244(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8233)
static void C_ccall f_8233(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8063)
static void C_fcall f_8063(C_word t0,C_word t1) C_noret;
C_noret_decl(f_8078)
static void C_fcall f_8078(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8091)
static void C_ccall f_8091(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_8051)
static void C_ccall f_8051(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8039)
static void C_ccall f_8039(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8027)
static void C_ccall f_8027(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8021)
static void C_fcall f_8021(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8015)
static void C_ccall f_8015(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_8003)
static void C_ccall f_8003(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7991)
static void C_ccall f_7991(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7979)
static void C_ccall f_7979(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7967)
static void C_ccall f_7967(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7961)
static void C_fcall f_7961(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7925)
static void C_ccall f_7925(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7919)
static void C_ccall f_7919(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7872)
static void C_ccall f_7872(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7876)
static void C_ccall f_7876(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7892)
static void C_ccall f_7892(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7901)
static void C_ccall f_7901(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7879)
static void C_ccall f_7879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7863)
static void C_ccall f_7863(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7867)
static void C_ccall f_7867(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7684)
static void C_ccall f_7684(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_7684)
static void C_ccall f_7684r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_7837)
static void C_fcall f_7837(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7850)
static void C_ccall f_7850(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7832)
static void C_ccall f_7832(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7687)
static void C_fcall f_7687(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7829)
static void C_ccall f_7829(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7813)
static void C_ccall f_7813(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7806)
static void C_ccall f_7806(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7802)
static void C_ccall f_7802(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7715)
static void C_ccall f_7715(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7723)
static void C_fcall f_7723(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7733)
static void C_ccall f_7733(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7736)
static void C_ccall f_7736(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7718)
static void C_ccall f_7718(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7513)
static void C_ccall f_7513(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_7519)
static void C_ccall f_7519(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7522)
static void C_fcall f_7522(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5322)
static void C_ccall f_5322(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5335)
static void C_ccall f_5335(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5342)
static void C_fcall f_5342(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5349)
static void C_ccall f_5349(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5328)
static void C_ccall f_5328(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7526)
static void C_ccall f_7526(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7560)
static void C_ccall f_7560(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7653)
static void C_fcall f_7653(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7663)
static void C_fcall f_7663(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7566)
static void C_ccall f_7566(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7623)
static void C_fcall f_7623(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_7633)
static void C_fcall f_7633(C_word t0,C_word t1) C_noret;
C_noret_decl(f_7574)
static void C_ccall f_7574(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7588)
static void C_ccall f_7588(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7592)
static void C_ccall f_7592(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7596)
static void C_ccall f_7596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7600)
static void C_ccall f_7600(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7607)
static void C_ccall f_7607(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7584)
static void C_ccall f_7584(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7577)
static void C_ccall f_7577(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_7529)
static void C_ccall f_7529(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6449)
static void C_ccall f_6449(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_6462)
static void C_ccall f_6462(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6512)
static void C_ccall f_6512(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6609)
static void C_ccall f_6609(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6677)
static void C_ccall f_6677(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6934)
static void C_ccall f_6934(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6684)
static void C_fcall f_6684(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6922)
static void C_ccall f_6922(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6873)
static void C_ccall f_6873(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6879)
static void C_ccall f_6879(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6903)
static void C_ccall f_6903(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6899)
static void C_ccall f_6899(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6887)
static void C_ccall f_6887(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6687)
static void C_fcall f_6687(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6849)
static void C_ccall f_6849(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6853)
static void C_ccall f_6853(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6690)
static void C_fcall f_6690(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6826)
static void C_ccall f_6826(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6830)
static void C_ccall f_6830(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6693)
static void C_fcall f_6693(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6803)
static void C_ccall f_6803(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6807)
static void C_ccall f_6807(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6696)
static void C_fcall f_6696(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6728)
static void C_ccall f_6728(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6746)
static void C_ccall f_6746(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6764)
static void C_ccall f_6764(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6782)
static void C_ccall f_6782(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6699)
static void C_fcall f_6699(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6703)
static void C_ccall f_6703(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6613)
static void C_ccall f_6613(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6617)
static void C_ccall f_6617(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6621)
static void C_ccall f_6621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6516)
static void C_ccall f_6516(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6520)
static void C_ccall f_6520(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6524)
static void C_ccall f_6524(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6543)
static void C_ccall f_6543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6547)
static void C_ccall f_6547(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6527)
static void C_fcall f_6527(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6531)
static void C_ccall f_6531(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6466)
static void C_ccall f_6466(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6470)
static void C_ccall f_6470(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6474)
static void C_ccall f_6474(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6456)
static void C_fcall f_6456(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6271)
static void C_fcall f_6271(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6283)
static void C_fcall f_6283(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6302)
static void C_ccall f_6302(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6320)
static void C_fcall f_6320(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_6352)
static void C_ccall f_6352(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6355)
static void C_fcall f_6355(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6348)
static void C_ccall f_6348(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6334)
static void C_ccall f_6334(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6305)
static void C_ccall f_6305(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6250)
static void C_fcall f_6250(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6257)
static void C_ccall f_6257(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6260)
static void C_ccall f_6260(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6266)
static void C_ccall f_6266(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6185)
static void C_fcall f_6185(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6194)
static void C_fcall f_6194(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6217)
static void C_ccall f_6217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_6207)
static void C_fcall f_6207(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6141)
static void C_fcall f_6141(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_6129)
static void C_fcall f_6129(C_word t0,C_word t1) C_noret;
C_noret_decl(f_6027)
static void C_fcall f_6027(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5979)
static void C_fcall f_5979(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5360)
static void C_fcall f_5360(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_5364)
static void C_ccall f_5364(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5367)
static void C_ccall f_5367(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5793)
static void C_ccall f_5793(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5789)
static void C_ccall f_5789(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5785)
static void C_ccall f_5785(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5370)
static void C_fcall f_5370(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5493)
static void C_ccall f_5493(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4726)
static void C_ccall f_4726(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5499)
static void C_fcall f_5499(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4742)
static void C_ccall f_4742(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5587)
static void C_fcall f_5587(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5657)
static void C_ccall f_5657(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4758)
static void C_ccall f_4758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5660)
static void C_fcall f_5660(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4790)
static void C_ccall f_4790(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5738)
static void C_fcall f_5738(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5764)
static void C_ccall f_5764(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5758)
static void C_ccall f_5758(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5747)
static void C_ccall f_5747(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5689)
static void C_fcall f_5689(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5699)
static void C_ccall f_5699(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5725)
static void C_ccall f_5725(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5719)
static void C_ccall f_5719(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5702)
static void C_ccall f_5702(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5712)
static void C_ccall f_5712(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5705)
static void C_fcall f_5705(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5666)
static void C_ccall f_5666(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5675)
static void C_ccall f_5675(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5669)
static void C_fcall f_5669(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5593)
static void C_ccall f_5593(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5611)
static void C_fcall f_5611(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5644)
static void C_ccall f_5644(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5630)
static void C_ccall f_5630(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5638)
static void C_ccall f_5638(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5621)
static void C_ccall f_5621(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5596)
static void C_ccall f_5596(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5508)
static void C_ccall f_5508(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5530)
static void C_fcall f_5530(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5577)
static void C_ccall f_5577(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5563)
static void C_ccall f_5563(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5571)
static void C_ccall f_5571(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5543)
static void C_ccall f_5543(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5546)
static void C_fcall f_5546(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5511)
static void C_ccall f_5511(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5528)
static void C_ccall f_5528(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5514)
static void C_fcall f_5514(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5385)
static void C_ccall f_5385(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5443)
static void C_ccall f_5443(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5446)
static void C_ccall f_5446(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5467)
static void C_ccall f_5467(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5478)
static void C_ccall f_5478(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5457)
static void C_ccall f_5457(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5391)
static void C_ccall f_5391(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5401)
static void C_ccall f_5401(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5437)
static void C_ccall f_5437(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5407)
static void C_ccall f_5407(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5422)
static void C_ccall f_5422(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5426)
static void C_ccall f_5426(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5430)
static void C_ccall f_5430(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5414)
static void C_ccall f_5414(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5256)
static void C_fcall f_5256(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5258)
static void C_ccall f_5258(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_5306)
static void C_ccall f_5306(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5262)
static void C_ccall f_5262(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5265)
static void C_fcall f_5265(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5270)
static void C_fcall f_5270(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_5291)
static void C_ccall f_5291(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5248)
static void C_fcall f_5248(C_word t0,C_word t1) C_noret;
C_noret_decl(f_5250)
static void C_ccall f_5250(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_5040)
static void C_fcall f_5040(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_5057)
static void C_ccall f_5057(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5061)
static void C_ccall f_5061(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5007)
static void C_fcall f_5007(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_5014)
static void C_ccall f_5014(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4958)
static void C_ccall f_4958(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4965)
static void C_ccall f_4965(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5023)
static void C_ccall f_5023(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5246)
static void C_ccall f_5246(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5223)
static void C_ccall f_5223(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5239)
static void C_ccall f_5239(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5085)
static void C_ccall f_5085(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5088)
static void C_ccall f_5088(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5112)
static void C_ccall f_5112(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5169)
static void C_ccall f_5169(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5175)
static void C_ccall f_5175(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5184)
static void C_ccall f_5184(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5193)
static void C_ccall f_5193(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5202)
static void C_ccall f_5202(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5211)
static void C_ccall f_5211(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5163)
static void C_ccall f_5163(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5118)
static void C_ccall f_5118(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5124)
static void C_ccall f_5124(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5130)
static void C_ccall f_5130(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5136)
static void C_ccall f_5136(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5142)
static void C_ccall f_5142(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_5148)
static void C_ccall f_5148(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4989)
static void C_fcall f_4989(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_4996)
static void C_ccall f_4996(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4979)
static void C_fcall f_4979(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_4967)
static void C_fcall f_4967(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_4935)
static void C_fcall f_4935(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_4942)
static void C_ccall f_4942(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4949)
static void C_ccall f_4949(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4919)
static void C_fcall f_4919(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4926)
static void C_ccall f_4926(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4933)
static void C_ccall f_4933(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4907)
static void C_fcall f_4907(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4889)
static void C_fcall f_4889(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4871)
static void C_fcall f_4871(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4856)
static void C_fcall f_4856(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4850)
static void C_fcall f_4850(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_4838)
static void C_fcall f_4838(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4820)
static void C_fcall f_4820(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4799)
static void C_fcall f_4799(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_4767)
static void C_fcall f_4767(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4774)
static void C_ccall f_4774(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4709)
static void C_fcall f_4709(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_4717)
static void C_ccall f_4717(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4699)
static void C_fcall f_4699(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4707)
static void C_ccall f_4707(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4693)
static void C_fcall f_4693(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4681)
static void C_fcall f_4681(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4657)
static void C_fcall f_4657(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_4570)
static void C_fcall f_4570(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4549)
static void C_fcall f_4549(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_4539)
static void C_fcall f_4539(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4527)
static void C_fcall f_4527(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4498)
static void C_ccall f_4498(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_4486)
static void C_fcall f_4486(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4468)
static void C_fcall f_4468(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4450)
static void C_fcall f_4450(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4429)
static void C_ccall f_4429(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_4423)
static void C_ccall f_4423(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4417)
static void C_ccall f_4417(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4398)
static void C_ccall f_4398(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_4398)
static void C_ccall f_4398r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_4379)
static void C_ccall f_4379(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_4379)
static void C_ccall f_4379r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_4373)
static void C_ccall f_4373(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4333)
static void C_ccall f_4333(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_4333)
static void C_ccall f_4333r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_4314)
static void C_ccall f_4314(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_4314)
static void C_ccall f_4314r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_4270)
static void C_ccall f_4270(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_4270)
static void C_ccall f_4270r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_4264)
static void C_ccall f_4264(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4258)
static void C_ccall f_4258(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4252)
static void C_ccall f_4252(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4246)
static void C_ccall f_4246(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_4246)
static void C_ccall f_4246r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_4223)
static void C_ccall f_4223(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_4240)
static void C_ccall f_4240(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4165)
static void C_ccall f_4165(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_4165)
static void C_ccall f_4165r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_4217)
static void C_ccall f_4217(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4201)
static void C_ccall f_4201(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4182)
static void C_ccall f_4182(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4159)
static void C_ccall f_4159(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_4071)
static void C_ccall f_4071(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_4071)
static void C_ccall f_4071r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_4117)
static void C_fcall f_4117(C_word t0,C_word t1) C_noret;
C_noret_decl(f_4065)
static void C_ccall f_4065(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_4006)
static void C_ccall f_4006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_4006)
static void C_ccall f_4006r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_4019)
static void C_fcall f_4019(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_4055)
static void C_ccall f_4055(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_4000)
static void C_ccall f_4000(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_4000)
static void C_ccall f_4000r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_3905)
static void C_ccall f_3905(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...) C_noret;
C_noret_decl(f_3905)
static void C_ccall f_3905r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t5) C_noret;
C_noret_decl(f_3909)
static void C_ccall f_3909(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3912)
static void C_ccall f_3912(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3924)
static void C_fcall f_3924(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3946)
static void C_ccall f_3946(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3899)
static void C_ccall f_3899(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3893)
static void C_ccall f_3893(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3887)
static void C_ccall f_3887(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3881)
static void C_ccall f_3881(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3875)
static void C_ccall f_3875(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3815)
static void C_ccall f_3815(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_3815)
static void C_ccall f_3815r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_3827)
static void C_fcall f_3827(C_word t0,C_word t1) C_noret;
C_noret_decl(f_3822)
static void C_fcall f_3822(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3817)
static void C_fcall f_3817(C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_3796)
static void C_ccall f_3796(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_3796)
static void C_ccall f_3796r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_3790)
static void C_ccall f_3790(C_word c,C_word t0,C_word t1,C_word t2,C_word t3) C_noret;
C_noret_decl(f_3784)
static void C_ccall f_3784(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3702)
static void C_ccall f_3702(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...) C_noret;
C_noret_decl(f_3702)
static void C_ccall f_3702r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t7) C_noret;
C_noret_decl(f_3716)
static void C_ccall f_3716(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3683)
static void C_ccall f_3683(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...) C_noret;
C_noret_decl(f_3683)
static void C_ccall f_3683r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t8) C_noret;
C_noret_decl(f_3670)
static void C_fcall f_3670(C_word t0,C_word t1) C_noret;
C_noret_decl(f_3660)
static void C_fcall f_3660(C_word t0,C_word t1) C_noret;
C_noret_decl(f_3649)
static void C_fcall f_3649(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3642)
static void C_fcall f_3642(C_word t0,C_word t1) C_noret;
C_noret_decl(f_3631)
static void C_fcall f_3631(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3593)
static void C_fcall f_3593(C_word t0,C_word t1) C_noret;
C_noret_decl(f_3586)
static void C_fcall f_3586(C_word t0,C_word t1) C_noret;
C_noret_decl(f_3511)
static void C_fcall f_3511(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3477)
static void C_fcall f_3477(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_3450)
static void C_fcall f_3450(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6) C_noret;
C_noret_decl(f_3421)
static void C_ccall f_3421(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_3421)
static void C_ccall f_3421r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_3430)
static void C_ccall f_3430(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3435)
static void C_ccall f_3435(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3410)
static void C_ccall f_3410(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3415)
static void C_ccall f_3415(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3370)
static void C_ccall f_3370(C_word c,C_word t0,C_word t1,...) C_noret;
C_noret_decl(f_3370)
static void C_ccall f_3370r(C_word t0,C_word t1,C_word t3) C_noret;
C_noret_decl(f_3400)
static void C_ccall f_3400(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3322)
static void C_ccall f_3322(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3356)
static void C_ccall f_3356(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3302)
static void C_ccall f_3302(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3282)
static void C_ccall f_3282(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3268)
static void C_ccall f_3268(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3258)
static void C_ccall f_3258(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3248)
static void C_ccall f_3248(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3238)
static void C_ccall f_3238(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3228)
static void C_ccall f_3228(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_2931)
static void C_ccall f_2931(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4) C_noret;
C_noret_decl(f_2941)
static void C_ccall f_2941(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3192)
static void C_ccall f_3192(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2944)
static void C_ccall f_2944(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2947)
static void C_ccall f_2947(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2962)
static void C_fcall f_2962(C_word t0,C_word t1) C_noret;
C_noret_decl(f_2972)
static void C_ccall f_2972(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_2974)
static void C_fcall f_2974(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5) C_noret;
C_noret_decl(f_3033)
static void C_ccall f_3033(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3043)
static void C_ccall f_3043(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3160)
static void C_ccall f_3160(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3148)
static void C_ccall f_3148(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3146)
static void C_ccall f_3146(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3133)
static void C_ccall f_3133(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3087)
static void C_ccall f_3087(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3114)
static void C_ccall f_3114(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3093)
static void C_ccall f_3093(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3027)
static void C_fcall f_3027(C_word t0,C_word t1) C_noret;
C_noret_decl(f_2986)
static void C_fcall f_2986(C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_2999)
static void C_fcall f_2999(C_word t0,C_word t1) C_noret;
C_noret_decl(f_3209)
static void C_ccall f_3209(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3200)
static void C_ccall f_3200(C_word c,C_word t0,C_word t1,C_word t2) C_noret;
C_noret_decl(f_3208)
static void C_ccall f_3208(C_word c,C_word t0,C_word t1) C_noret;
C_noret_decl(f_3211)
static void C_ccall f_3211(C_word c,C_word t0,C_word t1,C_word t2,...) C_noret;
C_noret_decl(f_3211)
static void C_ccall f_3211r(C_word t0,C_word t1,C_word t2,C_word t4) C_noret;
C_noret_decl(f_3219)
static void C_ccall f_3219(C_word c,C_word t0,C_word t1) C_noret;

C_noret_decl(trf_18061)
static void C_fcall trf_18061(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_18061(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_18061(t0,t1);}

C_noret_decl(trf_17983)
static void C_fcall trf_17983(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17983(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_17983(t0,t1,t2);}

C_noret_decl(trf_17795)
static void C_fcall trf_17795(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_17795(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_17795(t0,t1);}

C_noret_decl(trf_16677)
static void C_fcall trf_16677(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16677(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16677(t0,t1);}

C_noret_decl(trf_16550)
static void C_fcall trf_16550(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16550(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_16550(t0,t1,t2);}

C_noret_decl(trf_16248)
static void C_fcall trf_16248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_16248(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_16248(t0,t1);}

C_noret_decl(trf_15343)
static void C_fcall trf_15343(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15343(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_15343(t0,t1,t2);}

C_noret_decl(trf_15378)
static void C_fcall trf_15378(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15378(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15378(t0,t1);}

C_noret_decl(trf_15402)
static void C_fcall trf_15402(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15402(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15402(t0,t1);}

C_noret_decl(trf_15381)
static void C_fcall trf_15381(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15381(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15381(t0,t1);}

C_noret_decl(trf_15184)
static void C_fcall trf_15184(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15184(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15184(t0,t1);}

C_noret_decl(trf_15002)
static void C_fcall trf_15002(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15002(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15002(t0,t1);}

C_noret_decl(trf_15009)
static void C_fcall trf_15009(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_15009(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_15009(t0,t1);}

C_noret_decl(trf_14990)
static void C_fcall trf_14990(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14990(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14990(t0,t1);}

C_noret_decl(trf_6997)
static void C_fcall trf_6997(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6997(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6997(t0,t1);}

C_noret_decl(trf_7004)
static void C_fcall trf_7004(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7004(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7004(t0,t1);}

C_noret_decl(trf_7318)
static void C_fcall trf_7318(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7318(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7318(t0,t1,t2);}

C_noret_decl(trf_7341)
static void C_fcall trf_7341(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7341(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7341(t0,t1,t2);}

C_noret_decl(trf_7358)
static void C_fcall trf_7358(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7358(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7358(t0,t1);}

C_noret_decl(trf_7361)
static void C_fcall trf_7361(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7361(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7361(t0,t1);}

C_noret_decl(trf_7364)
static void C_fcall trf_7364(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7364(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7364(t0,t1);}

C_noret_decl(trf_7282)
static void C_fcall trf_7282(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7282(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7282(t0,t1,t2);}

C_noret_decl(trf_7226)
static void C_fcall trf_7226(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7226(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7226(t0,t1,t2);}

C_noret_decl(trf_7242)
static void C_fcall trf_7242(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7242(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7242(t0,t1);}

C_noret_decl(trf_7020)
static void C_fcall trf_7020(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7020(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7020(t0,t1);}

C_noret_decl(trf_7023)
static void C_fcall trf_7023(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7023(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7023(t0,t1);}

C_noret_decl(trf_14499)
static void C_fcall trf_14499(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14499(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14499(t0,t1);}

C_noret_decl(trf_14502)
static void C_fcall trf_14502(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14502(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14502(t0,t1);}

C_noret_decl(trf_14345)
static void C_fcall trf_14345(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14345(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14345(t0,t1);}

C_noret_decl(trf_14153)
static void C_fcall trf_14153(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14153(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14153(t0,t1);}

C_noret_decl(trf_14003)
static void C_fcall trf_14003(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14003(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14003(t0,t1);}

C_noret_decl(trf_14092)
static void C_fcall trf_14092(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14092(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14092(t0,t1);}

C_noret_decl(trf_14006)
static void C_fcall trf_14006(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14006(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14006(t0,t1);}

C_noret_decl(trf_14022)
static void C_fcall trf_14022(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14022(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_14022(t0,t1,t2,t3);}

C_noret_decl(trf_14044)
static void C_fcall trf_14044(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_14044(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_14044(t0,t1);}

C_noret_decl(trf_13939)
static void C_fcall trf_13939(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13939(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13939(t0,t1,t2);}

C_noret_decl(trf_13886)
static void C_fcall trf_13886(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13886(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13886(t0,t1);}

C_noret_decl(trf_11452)
static void C_fcall trf_11452(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11452(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11452(t0,t1);}

C_noret_decl(trf_11314)
static void C_fcall trf_11314(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11314(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11314(t0,t1);}

C_noret_decl(trf_11528)
static void C_fcall trf_11528(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11528(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11528(t0,t1);}

C_noret_decl(trf_13382)
static void C_fcall trf_13382(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13382(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13382(t0,t1,t2);}

C_noret_decl(trf_13402)
static void C_fcall trf_13402(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13402(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13402(t0,t1);}

C_noret_decl(trf_13411)
static void C_fcall trf_13411(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13411(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13411(t0,t1);}

C_noret_decl(trf_13427)
static void C_fcall trf_13427(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13427(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13427(t0,t1);}

C_noret_decl(trf_13275)
static void C_fcall trf_13275(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13275(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13275(t0,t1);}

C_noret_decl(trf_13284)
static void C_fcall trf_13284(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13284(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13284(t0,t1,t2);}

C_noret_decl(trf_13308)
static void C_fcall trf_13308(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13308(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13308(t0,t1);}

C_noret_decl(trf_13129)
static void C_fcall trf_13129(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13129(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_13129(t0,t1);}

C_noret_decl(trf_13036)
static void C_fcall trf_13036(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_13036(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_13036(t0,t1,t2);}

C_noret_decl(trf_12956)
static void C_fcall trf_12956(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12956(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12956(t0,t1);}

C_noret_decl(trf_12882)
static void C_fcall trf_12882(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12882(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12882(t0,t1);}

C_noret_decl(trf_12877)
static void C_fcall trf_12877(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12877(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12877(t0,t1,t2);}

C_noret_decl(trf_12765)
static void C_fcall trf_12765(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12765(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12765(t0,t1,t2,t3);}

C_noret_decl(trf_12836)
static void C_fcall trf_12836(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12836(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_12836(t0,t1,t2);}

C_noret_decl(trf_12795)
static void C_fcall trf_12795(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12795(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12795(t0,t1);}

C_noret_decl(trf_12767)
static void C_fcall trf_12767(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12767(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12767(t0,t1);}

C_noret_decl(trf_12722)
static void C_fcall trf_12722(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12722(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12722(t0,t1);}

C_noret_decl(trf_12678)
static void C_fcall trf_12678(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12678(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_12678(t0,t1,t2,t3);}

C_noret_decl(trf_12669)
static void C_fcall trf_12669(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12669(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12669(t0,t1);}

C_noret_decl(trf_12585)
static void C_fcall trf_12585(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12585(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12585(t0,t1);}

C_noret_decl(trf_12565)
static void C_fcall trf_12565(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12565(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12565(t0,t1);}

C_noret_decl(trf_12528)
static void C_fcall trf_12528(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12528(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12528(t0,t1);}

C_noret_decl(trf_12508)
static void C_fcall trf_12508(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_12508(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_12508(t0,t1);}

C_noret_decl(trf_11279)
static void C_fcall trf_11279(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11279(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_11279(t0,t1,t2,t3);}

C_noret_decl(trf_11119)
static void C_fcall trf_11119(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11119(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11119(t0,t1);}

C_noret_decl(trf_11154)
static void C_fcall trf_11154(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11154(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_11154(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_11164)
static void C_fcall trf_11164(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11164(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11164(t0,t1);}

C_noret_decl(trf_11127)
static void C_fcall trf_11127(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11127(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_11127(t0,t1,t2);}

C_noret_decl(trf_11287)
static void C_fcall trf_11287(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_11287(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_11287(t0,t1);}

C_noret_decl(trf_10905)
static void C_fcall trf_10905(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10905(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10905(t0,t1);}

C_noret_decl(trf_10911)
static void C_fcall trf_10911(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10911(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10911(t0,t1);}

C_noret_decl(trf_10934)
static void C_fcall trf_10934(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10934(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10934(t0,t1);}

C_noret_decl(trf_10947)
static void C_fcall trf_10947(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10947(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10947(t0,t1);}

C_noret_decl(trf_10921)
static void C_fcall trf_10921(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10921(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10921(t0,t1);}

C_noret_decl(trf_10734)
static void C_fcall trf_10734(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10734(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_10734(t0,t1,t2,t3);}

C_noret_decl(trf_10743)
static void C_fcall trf_10743(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10743(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_10743(t0,t1,t2,t3,t4);}

C_noret_decl(trf_10697)
static void C_fcall trf_10697(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10697(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10697(t0,t1);}

C_noret_decl(trf_10560)
static void C_fcall trf_10560(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10560(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10560(t0,t1);}

C_noret_decl(trf_10490)
static void C_fcall trf_10490(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10490(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10490(t0,t1);}

C_noret_decl(trf_9851)
static void C_fcall trf_9851(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9851(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9851(t0,t1,t2);}

C_noret_decl(trf_9811)
static void C_fcall trf_9811(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9811(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9811(t0,t1,t2);}

C_noret_decl(trf_9824)
static void C_fcall trf_9824(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9824(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9824(t0,t1);}

C_noret_decl(trf_10403)
static void C_fcall trf_10403(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10403(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10403(t0,t1);}

C_noret_decl(trf_10193)
static void C_fcall trf_10193(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10193(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10193(t0,t1);}

C_noret_decl(trf_10309)
static void C_fcall trf_10309(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10309(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10309(t0,t1);}

C_noret_decl(trf_10196)
static void C_fcall trf_10196(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10196(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10196(t0,t1);}

C_noret_decl(trf_10199)
static void C_fcall trf_10199(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10199(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10199(t0,t1);}

C_noret_decl(trf_10104)
static void C_fcall trf_10104(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10104(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10104(t0,t1);}

C_noret_decl(trf_10019)
static void C_fcall trf_10019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_10019(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_10019(t0,t1);}

C_noret_decl(trf_9976)
static void C_fcall trf_9976(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9976(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9976(t0,t1);}

C_noret_decl(trf_9943)
static void C_fcall trf_9943(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9943(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9943(t0,t1);}

C_noret_decl(trf_9938)
static void C_fcall trf_9938(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9938(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9938(t0,t1);}

C_noret_decl(trf_9933)
static void C_fcall trf_9933(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9933(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_9933(t0,t1,t2,t3,t4);}

C_noret_decl(trf_9680)
static void C_fcall trf_9680(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9680(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9680(t0,t1);}

C_noret_decl(trf_9527)
static void C_fcall trf_9527(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9527(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_9527(t0,t1,t2,t3);}

C_noret_decl(trf_9373)
static void C_fcall trf_9373(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9373(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9373(t0,t1,t2);}

C_noret_decl(trf_9215)
static void C_fcall trf_9215(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9215(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_9215(t0,t1,t2);}

C_noret_decl(trf_9248)
static void C_fcall trf_9248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9248(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9248(t0,t1);}

C_noret_decl(trf_9155)
static void C_fcall trf_9155(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9155(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9155(t0,t1);}

C_noret_decl(trf_9120)
static void C_fcall trf_9120(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9120(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9120(t0,t1);}

C_noret_decl(trf_9136)
static void C_fcall trf_9136(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9136(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9136(t0,t1);}

C_noret_decl(trf_9091)
static void C_fcall trf_9091(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_9091(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_9091(t0,t1);}

C_noret_decl(trf_8998)
static void C_fcall trf_8998(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8998(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8998(t0,t1);}

C_noret_decl(trf_8754)
static void C_fcall trf_8754(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8754(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8754(t0,t1,t2);}

C_noret_decl(trf_8558)
static void C_fcall trf_8558(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8558(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8558(t0,t1);}

C_noret_decl(trf_8721)
static void C_fcall trf_8721(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8721(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8721(t0,t1);}

C_noret_decl(trf_8561)
static void C_fcall trf_8561(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8561(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8561(t0,t1);}

C_noret_decl(trf_8564)
static void C_fcall trf_8564(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8564(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8564(t0,t1);}

C_noret_decl(trf_8567)
static void C_fcall trf_8567(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8567(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8567(t0,t1);}

C_noret_decl(trf_8609)
static void C_fcall trf_8609(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8609(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8609(t0,t1);}

C_noret_decl(trf_8574)
static void C_fcall trf_8574(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8574(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8574(t0,t1);}

C_noret_decl(trf_8303)
static void C_fcall trf_8303(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8303(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8303(t0,t1,t2,t3);}

C_noret_decl(trf_8311)
static void C_fcall trf_8311(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8311(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_8311(t0,t1,t2,t3);}

C_noret_decl(trf_8440)
static void C_fcall trf_8440(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8440(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8440(t0,t1,t2);}

C_noret_decl(trf_8394)
static void C_fcall trf_8394(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8394(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8394(t0,t1,t2);}

C_noret_decl(trf_8297)
static void C_fcall trf_8297(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8297(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8297(t0,t1,t2);}

C_noret_decl(trf_8291)
static void C_fcall trf_8291(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8291(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8291(t0,t1);}

C_noret_decl(trf_8285)
static void C_fcall trf_8285(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8285(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8285(t0,t1,t2);}

C_noret_decl(trf_8214)
static void C_fcall trf_8214(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8214(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8214(t0,t1,t2);}

C_noret_decl(trf_8216)
static void C_fcall trf_8216(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8216(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8216(t0,t1,t2);}

C_noret_decl(trf_8222)
static void C_fcall trf_8222(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8222(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8222(t0,t1,t2);}

C_noret_decl(trf_8063)
static void C_fcall trf_8063(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8063(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_8063(t0,t1);}

C_noret_decl(trf_8078)
static void C_fcall trf_8078(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8078(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8078(t0,t1,t2);}

C_noret_decl(trf_8021)
static void C_fcall trf_8021(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_8021(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_8021(t0,t1,t2);}

C_noret_decl(trf_7961)
static void C_fcall trf_7961(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7961(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7961(t0,t1,t2);}

C_noret_decl(trf_7837)
static void C_fcall trf_7837(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7837(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7837(t0,t1,t2);}

C_noret_decl(trf_7687)
static void C_fcall trf_7687(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7687(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7687(t0,t1,t2);}

C_noret_decl(trf_7723)
static void C_fcall trf_7723(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7723(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7723(t0,t1,t2);}

C_noret_decl(trf_7522)
static void C_fcall trf_7522(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7522(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7522(t0,t1);}

C_noret_decl(trf_5342)
static void C_fcall trf_5342(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5342(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5342(t0,t1);}

C_noret_decl(trf_7653)
static void C_fcall trf_7653(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7653(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7653(t0,t1,t2);}

C_noret_decl(trf_7663)
static void C_fcall trf_7663(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7663(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7663(t0,t1);}

C_noret_decl(trf_7623)
static void C_fcall trf_7623(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7623(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_7623(t0,t1,t2);}

C_noret_decl(trf_7633)
static void C_fcall trf_7633(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_7633(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_7633(t0,t1);}

C_noret_decl(trf_6684)
static void C_fcall trf_6684(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6684(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6684(t0,t1);}

C_noret_decl(trf_6687)
static void C_fcall trf_6687(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6687(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6687(t0,t1);}

C_noret_decl(trf_6690)
static void C_fcall trf_6690(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6690(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6690(t0,t1);}

C_noret_decl(trf_6693)
static void C_fcall trf_6693(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6693(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6693(t0,t1);}

C_noret_decl(trf_6696)
static void C_fcall trf_6696(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6696(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6696(t0,t1);}

C_noret_decl(trf_6699)
static void C_fcall trf_6699(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6699(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6699(t0,t1);}

C_noret_decl(trf_6527)
static void C_fcall trf_6527(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6527(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6527(t0,t1);}

C_noret_decl(trf_6456)
static void C_fcall trf_6456(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6456(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6456(t0,t1);}

C_noret_decl(trf_6271)
static void C_fcall trf_6271(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6271(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6271(t0,t1);}

C_noret_decl(trf_6283)
static void C_fcall trf_6283(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6283(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6283(t0,t1);}

C_noret_decl(trf_6320)
static void C_fcall trf_6320(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6320(void *dummy){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
f_6320(t0,t1,t2,t3,t4);}

C_noret_decl(trf_6355)
static void C_fcall trf_6355(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6355(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6355(t0,t1);}

C_noret_decl(trf_6250)
static void C_fcall trf_6250(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6250(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6250(t0,t1);}

C_noret_decl(trf_6185)
static void C_fcall trf_6185(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6185(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6185(t0,t1,t2);}

C_noret_decl(trf_6194)
static void C_fcall trf_6194(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6194(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6194(t0,t1,t2);}

C_noret_decl(trf_6207)
static void C_fcall trf_6207(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6207(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6207(t0,t1);}

C_noret_decl(trf_6141)
static void C_fcall trf_6141(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6141(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_6141(t0,t1,t2);}

C_noret_decl(trf_6129)
static void C_fcall trf_6129(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6129(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6129(t0,t1);}

C_noret_decl(trf_6027)
static void C_fcall trf_6027(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_6027(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_6027(t0,t1);}

C_noret_decl(trf_5979)
static void C_fcall trf_5979(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5979(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5979(t0,t1);}

C_noret_decl(trf_5360)
static void C_fcall trf_5360(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5360(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_5360(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_5370)
static void C_fcall trf_5370(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5370(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5370(t0,t1);}

C_noret_decl(trf_5499)
static void C_fcall trf_5499(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5499(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5499(t0,t1);}

C_noret_decl(trf_5587)
static void C_fcall trf_5587(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5587(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5587(t0,t1);}

C_noret_decl(trf_5660)
static void C_fcall trf_5660(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5660(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5660(t0,t1);}

C_noret_decl(trf_5738)
static void C_fcall trf_5738(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5738(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5738(t0,t1);}

C_noret_decl(trf_5689)
static void C_fcall trf_5689(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5689(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5689(t0,t1);}

C_noret_decl(trf_5705)
static void C_fcall trf_5705(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5705(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5705(t0,t1);}

C_noret_decl(trf_5669)
static void C_fcall trf_5669(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5669(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5669(t0,t1);}

C_noret_decl(trf_5611)
static void C_fcall trf_5611(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5611(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_5611(t0,t1,t2);}

C_noret_decl(trf_5530)
static void C_fcall trf_5530(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5530(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_5530(t0,t1,t2);}

C_noret_decl(trf_5546)
static void C_fcall trf_5546(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5546(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5546(t0,t1);}

C_noret_decl(trf_5514)
static void C_fcall trf_5514(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5514(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5514(t0,t1);}

C_noret_decl(trf_5256)
static void C_fcall trf_5256(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5256(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5256(t0,t1);}

C_noret_decl(trf_5265)
static void C_fcall trf_5265(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5265(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5265(t0,t1);}

C_noret_decl(trf_5270)
static void C_fcall trf_5270(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5270(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_5270(t0,t1,t2);}

C_noret_decl(trf_5248)
static void C_fcall trf_5248(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5248(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_5248(t0,t1);}

C_noret_decl(trf_5040)
static void C_fcall trf_5040(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5040(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_5040(t0,t1,t2,t3);}

C_noret_decl(trf_5007)
static void C_fcall trf_5007(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_5007(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_5007(t0,t1,t2,t3);}

C_noret_decl(trf_4989)
static void C_fcall trf_4989(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4989(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_4989(t0,t1,t2,t3);}

C_noret_decl(trf_4979)
static void C_fcall trf_4979(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4979(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_4979(t0,t1,t2,t3);}

C_noret_decl(trf_4967)
static void C_fcall trf_4967(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4967(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_4967(t0,t1,t2);}

C_noret_decl(trf_4935)
static void C_fcall trf_4935(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4935(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_4935(t0,t1,t2);}

C_noret_decl(trf_4919)
static void C_fcall trf_4919(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4919(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4919(t0,t1);}

C_noret_decl(trf_4907)
static void C_fcall trf_4907(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4907(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4907(t0,t1);}

C_noret_decl(trf_4889)
static void C_fcall trf_4889(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4889(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4889(t0,t1);}

C_noret_decl(trf_4871)
static void C_fcall trf_4871(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4871(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4871(t0,t1);}

C_noret_decl(trf_4856)
static void C_fcall trf_4856(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4856(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4856(t0,t1);}

C_noret_decl(trf_4850)
static void C_fcall trf_4850(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4850(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_4850(t0,t1,t2,t3);}

C_noret_decl(trf_4838)
static void C_fcall trf_4838(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4838(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4838(t0,t1);}

C_noret_decl(trf_4820)
static void C_fcall trf_4820(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4820(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4820(t0,t1);}

C_noret_decl(trf_4799)
static void C_fcall trf_4799(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4799(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_4799(t0,t1,t2);}

C_noret_decl(trf_4767)
static void C_fcall trf_4767(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4767(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4767(t0,t1);}

C_noret_decl(trf_4709)
static void C_fcall trf_4709(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4709(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_4709(t0,t1,t2);}

C_noret_decl(trf_4699)
static void C_fcall trf_4699(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4699(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4699(t0,t1);}

C_noret_decl(trf_4693)
static void C_fcall trf_4693(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4693(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4693(t0,t1);}

C_noret_decl(trf_4681)
static void C_fcall trf_4681(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4681(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4681(t0,t1);}

C_noret_decl(trf_4657)
static void C_fcall trf_4657(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4657(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_4657(t0,t1,t2);}

C_noret_decl(trf_4570)
static void C_fcall trf_4570(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4570(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4570(t0,t1);}

C_noret_decl(trf_4549)
static void C_fcall trf_4549(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4549(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_4549(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_4539)
static void C_fcall trf_4539(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4539(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4539(t0,t1);}

C_noret_decl(trf_4527)
static void C_fcall trf_4527(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4527(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4527(t0,t1);}

C_noret_decl(trf_4486)
static void C_fcall trf_4486(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4486(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4486(t0,t1);}

C_noret_decl(trf_4468)
static void C_fcall trf_4468(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4468(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4468(t0,t1);}

C_noret_decl(trf_4450)
static void C_fcall trf_4450(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4450(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4450(t0,t1);}

C_noret_decl(trf_4117)
static void C_fcall trf_4117(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4117(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_4117(t0,t1);}

C_noret_decl(trf_4019)
static void C_fcall trf_4019(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_4019(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_4019(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_3924)
static void C_fcall trf_3924(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3924(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_3924(t0,t1,t2);}

C_noret_decl(trf_3827)
static void C_fcall trf_3827(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3827(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_3827(t0,t1);}

C_noret_decl(trf_3822)
static void C_fcall trf_3822(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3822(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_3822(t0,t1,t2);}

C_noret_decl(trf_3817)
static void C_fcall trf_3817(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3817(void *dummy){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
f_3817(t0,t1,t2,t3);}

C_noret_decl(trf_3670)
static void C_fcall trf_3670(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3670(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_3670(t0,t1);}

C_noret_decl(trf_3660)
static void C_fcall trf_3660(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3660(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_3660(t0,t1);}

C_noret_decl(trf_3649)
static void C_fcall trf_3649(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3649(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_3649(t0,t1,t2);}

C_noret_decl(trf_3642)
static void C_fcall trf_3642(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3642(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_3642(t0,t1);}

C_noret_decl(trf_3631)
static void C_fcall trf_3631(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3631(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_3631(t0,t1,t2);}

C_noret_decl(trf_3593)
static void C_fcall trf_3593(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3593(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_3593(t0,t1);}

C_noret_decl(trf_3586)
static void C_fcall trf_3586(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3586(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_3586(t0,t1);}

C_noret_decl(trf_3511)
static void C_fcall trf_3511(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3511(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_3511(t0,t1,t2);}

C_noret_decl(trf_3477)
static void C_fcall trf_3477(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3477(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_3477(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_3450)
static void C_fcall trf_3450(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3450(void *dummy){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
f_3450(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(trf_2962)
static void C_fcall trf_2962(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_2962(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_2962(t0,t1);}

C_noret_decl(trf_2974)
static void C_fcall trf_2974(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_2974(void *dummy){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
f_2974(t0,t1,t2,t3,t4,t5);}

C_noret_decl(trf_3027)
static void C_fcall trf_3027(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_3027(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_3027(t0,t1);}

C_noret_decl(trf_2986)
static void C_fcall trf_2986(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_2986(void *dummy){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
f_2986(t0,t1,t2);}

C_noret_decl(trf_2999)
static void C_fcall trf_2999(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall trf_2999(void *dummy){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
f_2999(t0,t1);}

C_noret_decl(tr6)
static void C_fcall tr6(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6(C_proc6 k){
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
(k)(6,t0,t1,t2,t3,t4,t5);}

C_noret_decl(tr7)
static void C_fcall tr7(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7(C_proc7 k){
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
(k)(7,t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr3)
static void C_fcall tr3(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3(C_proc3 k){
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
(k)(3,t0,t1,t2);}

C_noret_decl(tr5)
static void C_fcall tr5(C_proc5 k) C_regparm C_noret;
C_regparm static void C_fcall tr5(C_proc5 k){
C_word t4=C_pick(0);
C_word t3=C_pick(1);
C_word t2=C_pick(2);
C_word t1=C_pick(3);
C_word t0=C_pick(4);
C_adjust_stack(-5);
(k)(5,t0,t1,t2,t3,t4);}

C_noret_decl(tr4)
static void C_fcall tr4(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4(C_proc4 k){
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
(k)(4,t0,t1,t2,t3);}

C_noret_decl(tr2)
static void C_fcall tr2(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2(C_proc2 k){
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
(k)(2,t0,t1);}

C_noret_decl(tr6r)
static void C_fcall tr6r(C_proc6 k) C_regparm C_noret;
C_regparm static void C_fcall tr6r(C_proc6 k){
int n;
C_word *a,t6;
C_word t5=C_pick(0);
C_word t4=C_pick(1);
C_word t3=C_pick(2);
C_word t2=C_pick(3);
C_word t1=C_pick(4);
C_word t0=C_pick(5);
C_adjust_stack(-6);
n=C_rest_count(0);
a=C_alloc(n*3);
t6=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6);}

C_noret_decl(tr2r)
static void C_fcall tr2r(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2r(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n*3);
t2=C_restore_rest(a,n);
(k)(t0,t1,t2);}

C_noret_decl(tr4r)
static void C_fcall tr4r(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4r(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n*3);
t4=C_restore_rest(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr3r)
static void C_fcall tr3r(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3r(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n*3);
t3=C_restore_rest(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr7rv)
static void C_fcall tr7rv(C_proc7 k) C_regparm C_noret;
C_regparm static void C_fcall tr7rv(C_proc7 k){
int n;
C_word *a,t7;
C_word t6=C_pick(0);
C_word t5=C_pick(1);
C_word t4=C_pick(2);
C_word t3=C_pick(3);
C_word t2=C_pick(4);
C_word t1=C_pick(5);
C_word t0=C_pick(6);
C_adjust_stack(-7);
n=C_rest_count(0);
a=C_alloc(n+1);
t7=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3,t4,t5,t6,t7);}

C_noret_decl(tr3rv)
static void C_fcall tr3rv(C_proc3 k) C_regparm C_noret;
C_regparm static void C_fcall tr3rv(C_proc3 k){
int n;
C_word *a,t3;
C_word t2=C_pick(0);
C_word t1=C_pick(1);
C_word t0=C_pick(2);
C_adjust_stack(-3);
n=C_rest_count(0);
a=C_alloc(n+1);
t3=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3);}

C_noret_decl(tr4rv)
static void C_fcall tr4rv(C_proc4 k) C_regparm C_noret;
C_regparm static void C_fcall tr4rv(C_proc4 k){
int n;
C_word *a,t4;
C_word t3=C_pick(0);
C_word t2=C_pick(1);
C_word t1=C_pick(2);
C_word t0=C_pick(3);
C_adjust_stack(-4);
n=C_rest_count(0);
a=C_alloc(n+1);
t4=C_restore_rest_vector(a,n);
(k)(t0,t1,t2,t3,t4);}

C_noret_decl(tr2rv)
static void C_fcall tr2rv(C_proc2 k) C_regparm C_noret;
C_regparm static void C_fcall tr2rv(C_proc2 k){
int n;
C_word *a,t2;
C_word t1=C_pick(0);
C_word t0=C_pick(1);
C_adjust_stack(-2);
n=C_rest_count(0);
a=C_alloc(n+1);
t2=C_restore_rest_vector(a,n);
(k)(t0,t1,t2);}

/* toplevel */
static C_TLS int toplevel_initialized=0;
C_noret_decl(toplevel_trampoline)
static void C_fcall toplevel_trampoline(void *dummy) C_regparm C_noret;
C_regparm static void C_fcall toplevel_trampoline(void *dummy){
C_grace_toplevel(2,C_SCHEME_UNDEFINED,C_restore);}

void C_ccall C_grace_toplevel(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(toplevel_initialized) C_kontinue(t1,C_SCHEME_UNDEFINED);
else C_toplevel_entry(C_text("grace_toplevel"));
C_check_nursery_minimum(3);
if(!C_demand(3)){
C_save(t1);
C_reclaim((void*)toplevel_trampoline,NULL);}
toplevel_initialized=1;
if(!C_demand_2(4156)){
C_save(t1);
C_rereclaim2(4156*sizeof(C_word), 1);
t1=C_restore;}
a=C_alloc(3);
C_initialize_lf(lf,660);
lf[1]=C_decode_literal(C_heaptop,"\376B\000\000\033too many optional arguments");
lf[2]=C_h_intern(&lf[2],10,"*messages*");
lf[3]=C_h_intern(&lf[3],11,"expand-send");
lf[4]=C_h_intern(&lf[4],5,"error");
lf[5]=C_h_intern(&lf[5],7,"sprintf");
lf[6]=C_decode_literal(C_heaptop,"\376B\000\000\003~A:");
lf[7]=C_h_intern(&lf[7],15,"keyword->string");
lf[8]=C_decode_literal(C_heaptop,"\376B\000\000\031~S duplicate keyword \047~S\047");
lf[9]=C_decode_literal(C_heaptop,"\376B\000\000!~S missing value for keyword \047~A\047");
lf[10]=C_decode_literal(C_heaptop,"\376B\000\000/~S invalid keyword \047~A\047~%Available keywords: ~A");
lf[11]=C_h_intern(&lf[11],7,"\003sysmap");
lf[12]=C_decode_literal(C_heaptop,"\376B\000\000 ~S expected keyword but got \047~S\047");
lf[13]=C_h_intern(&lf[13],8,"keyword\077");
lf[14]=C_decode_literal(C_heaptop,"\376B\000\000#~S expected ~A arguments but got ~A");
lf[15]=C_h_intern(&lf[15],6,"append");
lf[16]=C_h_intern(&lf[16],5,"&rest");
lf[17]=C_decode_literal(C_heaptop,"\376B\000\000\030~S is an invalid message");
lf[18]=C_h_intern(&lf[18],14,"hash-table-ref");
lf[19]=C_h_intern(&lf[19],14,"symbol->string");
lf[20]=C_h_intern(&lf[20],5,"first");
lf[21]=C_h_intern(&lf[21],3,"car");
lf[22]=C_h_intern(&lf[22],6,"second");
lf[23]=C_h_intern(&lf[23],4,"cadr");
lf[24]=C_h_intern(&lf[24],5,"third");
lf[25]=C_h_intern(&lf[25],5,"caddr");
lf[26]=C_h_intern(&lf[26],6,"fourth");
lf[27]=C_h_intern(&lf[27],6,"cadddr");
lf[28]=C_h_intern(&lf[28],5,"fifth");
lf[29]=C_h_intern(&lf[29],5,"sixth");
lf[30]=C_h_intern(&lf[30],7,"seventh");
lf[31]=C_h_intern(&lf[31],6,"eighth");
lf[32]=C_h_intern(&lf[32],5,"ninth");
lf[33]=C_h_intern(&lf[33],5,"tenth");
lf[34]=C_h_intern(&lf[34],4,"last");
lf[35]=C_h_intern(&lf[35],7,"butlast");
lf[36]=C_h_intern(&lf[36],5,"list*");
lf[37]=C_decode_literal(C_heaptop,"\376B\000\000&>>> Error: too few arguments to list*.");
lf[38]=C_h_intern(&lf[38],3,"cwd");
lf[39]=C_h_intern(&lf[39],17,"\003syspeek-c-string");
lf[40]=C_h_intern(&lf[40],5,"chdir");
lf[41]=C_decode_literal(C_heaptop,"\376B\000\000\002~/");
lf[42]=C_h_intern(&lf[42],17,"\003sysmake-c-string");
lf[53]=C_h_intern(&lf[53],7,"rescale");
lf[54]=C_h_intern(&lf[54],8,"discrete");
lf[55]=C_h_intern(&lf[55],3,"int");
lf[56]=C_h_intern(&lf[56],8,"quantize");
lf[57]=C_h_intern(&lf[57],8,"decimals");
lf[58]=C_h_intern(&lf[58],15,"rhythm->seconds");
lf[59]=C_decode_literal(C_heaptop,"\376U0.25\000");
lf[60]=C_decode_literal(C_heaptop,"\376U60.0\000");
lf[61]=C_h_intern(&lf[61],9,"\003syserror");
lf[62]=C_h_intern(&lf[62],13,"cents->scaler");
lf[63]=C_h_intern(&lf[63],13,"scaler->cents");
lf[64]=C_h_intern(&lf[64],13,"keynum->hertz");
lf[65]=C_h_intern(&lf[65],10,"keynum->pc");
lf[66]=C_h_intern(&lf[66],13,"hertz->keynum");
lf[67]=C_h_intern(&lf[67],7,"interpl");
lf[68]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[69]=C_h_intern(&lf[69],3,"err");
lf[70]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[71]=C_decode_literal(C_heaptop,"\376B\000\000\033not an x y coordinate list:");
lf[72]=C_h_intern(&lf[72],6,"interp");
lf[73]=C_h_intern(&lf[73],5,"steps");
lf[74]=C_h_intern(&lf[74],6,"modulo");
lf[75]=C_h_intern(&lf[75],8,"ran-set!");
lf[76]=C_h_intern(&lf[76],3,"ran");
lf[77]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[78]=C_h_intern(&lf[78],7,"between");
lf[79]=C_h_intern(&lf[79],4,"odds");
lf[80]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[81]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[82]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[83]=C_h_intern(&lf[83],5,"pickl");
lf[84]=C_decode_literal(C_heaptop,"\376B\000\000\035cannot pick from empty list: ");
lf[85]=C_h_intern(&lf[85],4,"pick");
lf[86]=C_h_intern(&lf[86],6,"ranlow");
lf[87]=C_h_intern(&lf[87],7,"ranhigh");
lf[88]=C_h_intern(&lf[88],9,"ranmiddle");
lf[89]=C_h_intern(&lf[89],7,"ranbeta");
lf[90]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[91]=C_decode_literal(C_heaptop,"\376U0.5\000");
lf[92]=C_h_intern(&lf[92],6,"ranexp");
lf[93]=C_h_intern(&lf[93],8,"rangauss");
lf[94]=C_h_intern(&lf[94],9,"rancauchy");
lf[95]=C_h_intern(&lf[95],10,"ranpoisson");
lf[96]=C_h_intern(&lf[96],3,"arg");
lf[97]=C_h_intern(&lf[97],8,"rangamma");
lf[98]=C_h_intern(&lf[98],8,"ranbrown");
lf[99]=C_h_intern(&lf[99],7,"ranpink");
lf[101]=C_h_intern(&lf[101],5,"token");
lf[106]=C_h_intern(&lf[106],1,"t");
lf[111]=C_h_intern(&lf[111],4,"rule");
lf[114]=C_h_intern(&lf[114],22,"hash-table-ref/default");
lf[120]=C_h_intern(&lf[120],1,"*");
lf[122]=C_h_intern(&lf[122],11,"parse-error");
lf[126]=C_h_intern(&lf[126],10,"parse-unit");
lf[138]=C_decode_literal(C_heaptop,"\376B\000\000\014no info for ");
lf[140]=C_h_intern(&lf[140],14,"string->symbol");
lf[141]=C_h_intern(&lf[141],4,"expt");
lf[142]=C_h_intern(&lf[142],5,"equal");
lf[143]=C_h_intern(&lf[143],3,"and");
lf[144]=C_h_intern(&lf[144],2,"or");
lf[145]=C_h_intern(&lf[145],3,"not");
lf[146]=C_h_intern(&lf[146],15,"string->keyword");
lf[147]=C_decode_literal(C_heaptop,"\376B\000\0005emit-token-unit: dont know how to emit slotref token ");
lf[148]=C_decode_literal(C_heaptop,"\376B\000\000\047emit-token-unit: dont know how to emit ");
lf[151]=C_decode_literal(C_heaptop,"\376B\000\000\033emit: dont know how to emit");
lf[157]=C_decode_literal(C_heaptop,"\376B\000\000\035Not a token type or rule type");
lf[158]=C_h_intern(&lf[158],7,"reverse");
lf[159]=C_decode_literal(C_heaptop,"\376B\000\000\047Pattern opr not one of and, or, *, +, @");
lf[160]=C_h_intern(&lf[160],1,"@");
lf[161]=C_h_intern(&lf[161],1,"+");
lf[162]=C_decode_literal(C_heaptop,"\376B\000\000\047Not a pattern value or pattern operator");
lf[163]=C_h_intern(&lf[163],3,"max");
lf[164]=C_h_intern(&lf[164],6,"printf");
lf[165]=C_decode_literal(C_heaptop,"\376B\000\000!~%parse[~A]: pattern=~S tokens=~S");
lf[170]=C_h_intern(&lf[170],4,"set!");
lf[171]=C_h_intern(&lf[171],2,">=");
lf[172]=C_h_intern(&lf[172],6,"gensym");
lf[173]=C_decode_literal(C_heaptop,"\376B\000\000\004stop");
lf[174]=C_decode_literal(C_heaptop,"\376B\000\000\004temp");
lf[175]=C_h_intern(&lf[175],5,"begin");
lf[176]=C_h_intern(&lf[176],2,"if");
lf[177]=C_decode_literal(C_heaptop,"\376B\000\000\004bool");
lf[178]=C_h_intern(&lf[178],3,"cdr");
lf[179]=C_h_intern(&lf[179],5,"null\077");
lf[180]=C_decode_literal(C_heaptop,"\376B\000\000\004tail");
lf[181]=C_h_intern(&lf[181],1,">");
lf[182]=C_h_intern(&lf[182],2,"<=");
lf[183]=C_h_intern(&lf[183],1,"-");
lf[184]=C_h_intern(&lf[184],1,"<");
lf[185]=C_decode_literal(C_heaptop,"\376B\000\000\004goal");
lf[186]=C_decode_literal(C_heaptop,"\376B\000\000\004from");
lf[187]=C_decode_literal(C_heaptop,"\376B\000\000\004step");
lf[191]=C_h_intern(&lf[191],3,"sal");
lf[192]=C_h_intern(&lf[192],11,"print-error");
lf[193]=C_h_intern(&lf[193],13,"string-append");
lf[194]=C_decode_literal(C_heaptop,"\376B\000\000\013>>> Error: ");
lf[195]=C_h_intern(&lf[195],11,"make-string");
lf[196]=C_h_intern(&lf[196],9,"substring");
lf[197]=C_h_intern(&lf[197],2,"pp");
lf[198]=C_h_intern(&lf[198],4,"eval");
lf[199]=C_h_intern(&lf[199],7,"\000syntax");
lf[200]=C_h_intern(&lf[200],7,"\000scheme");
lf[201]=C_decode_literal(C_heaptop,"\376B\000\000\023Illegal statement: ");
lf[202]=C_h_intern(&lf[202],7,"call/cc");
lf[203]=C_h_intern(&lf[203],9,"sal:print");
lf[204]=C_h_intern(&lf[204],13,"print-message");
lf[205]=C_decode_literal(C_heaptop,"\376B\000\000\002{}");
lf[206]=C_decode_literal(C_heaptop,"\376B\000\000\001}");
lf[207]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[208]=C_decode_literal(C_heaptop,"\376B\000\000\001{");
lf[209]=C_decode_literal(C_heaptop,"\376B\000\000\002#t");
lf[210]=C_decode_literal(C_heaptop,"\376B\000\000\002~S");
lf[211]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[212]=C_decode_literal(C_heaptop,"\376B\000\000\001\012");
lf[213]=C_h_intern(&lf[213],9,"sal:chdir");
lf[214]=C_h_intern(&lf[214],8,"sal:load");
lf[215]=C_h_intern(&lf[215],13,"load-sal-file");
lf[216]=C_h_intern(&lf[216],4,"load");
lf[217]=C_h_intern(&lf[217],15,"\003syssubstring=\077");
lf[218]=C_decode_literal(C_heaptop,"\376B\000\000\004.sal");
lf[219]=C_decode_literal(C_heaptop,"\376B\000\000\021>>> Error: file \042");
lf[220]=C_decode_literal(C_heaptop,"\376B\000\000\020\042does not exist\012");
lf[221]=C_h_intern(&lf[221],12,"file-exists\077");
lf[222]=C_h_intern(&lf[222],8,"sal:open");
lf[223]=C_decode_literal(C_heaptop,"\376B\000\000)>>> Error: open command not implemented.\012");
lf[224]=C_h_intern(&lf[224],10,"sal:output");
lf[225]=C_decode_literal(C_heaptop,"\376B\000\000+>>> Error: output command not implemented.\012");
lf[237]=C_h_intern(&lf[237],8,"operator");
lf[238]=C_h_intern(&lf[238],8,"bindings");
lf[239]=C_h_intern(&lf[239],10,"collectors");
lf[240]=C_h_intern(&lf[240],9,"initially");
lf[241]=C_h_intern(&lf[241],9,"end-tests");
lf[242]=C_h_intern(&lf[242],7,"looping");
lf[243]=C_h_intern(&lf[243],8,"stepping");
lf[244]=C_h_intern(&lf[244],7,"finally");
lf[245]=C_h_intern(&lf[245],9,"returning");
lf[251]=C_decode_literal(C_heaptop,"\376B\000\000\023illegal loop syntax");
lf[252]=C_h_intern(&lf[252],7,"newline");
lf[253]=C_h_intern(&lf[253],7,"display");
lf[254]=C_decode_literal(C_heaptop,"\376B\000\000\002()");
lf[255]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[256]=C_decode_literal(C_heaptop,"\376B\000\000\001 ");
lf[257]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[258]=C_decode_literal(C_heaptop,"\376B\000\000\020clause context: ");
lf[259]=C_decode_literal(C_heaptop,"\376B\000\000\014LOOP ERROR: ");
lf[261]=C_decode_literal(C_heaptop,"\376B\000\000*Variable expected but source code ran out.");
lf[262]=C_decode_literal(C_heaptop,"\376B\000\000.\047for\047 clause expected but source code ran out.");
lf[263]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[264]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[265]=C_decode_literal(C_heaptop,"\376B\000\000\031 is not valid with \047for\047.");
lf[266]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[267]=C_decode_literal(C_heaptop,"\376B\000\000\034\047 where a variable expected.");
lf[269]=C_h_intern(&lf[269],3,"for");
lf[270]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[271]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[272]=C_h_intern(&lf[272],8,"downfrom");
lf[273]=C_h_intern(&lf[273],5,"above");
lf[274]=C_h_intern(&lf[274],5,"below");
lf[275]=C_h_intern(&lf[275],6,"downto");
lf[276]=C_h_intern(&lf[276],4,"from");
lf[277]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[278]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[279]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[280]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[281]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[282]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[283]=C_h_intern(&lf[283],2,"to");
lf[284]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[285]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[286]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[287]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[288]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[289]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[290]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[291]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[292]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[293]=C_h_intern(&lf[293],2,"by");
lf[294]=C_decode_literal(C_heaptop,"\376B\000\000\025Found duplicate \047by\047.");
lf[295]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[296]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[297]=C_decode_literal(C_heaptop,"\376B\000\000,Expected expression but source code ran out.");
lf[299]=C_decode_literal(C_heaptop,"\376B\000\0001\047repeat\047 clause expected but source code ran out.");
lf[300]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[302]=C_h_intern(&lf[302],6,"across");
lf[303]=C_h_intern(&lf[303],13,"vector-length");
lf[304]=C_h_intern(&lf[304],10,"vector-ref");
lf[305]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[306]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[307]=C_h_intern(&lf[307],4,"over");
lf[308]=C_h_intern(&lf[308],4,"eod\077");
lf[309]=C_h_intern(&lf[309],4,"next");
lf[310]=C_h_intern(&lf[310],2,"in");
lf[311]=C_h_intern(&lf[311],5,"quote");
lf[312]=C_decode_literal(C_heaptop,"\376B\000\000\014Extraneous \047");
lf[313]=C_decode_literal(C_heaptop,"\376B\000\000\010\047 when \047");
lf[314]=C_decode_literal(C_heaptop,"\376B\000\000\014\047 in effect.");
lf[315]=C_decode_literal(C_heaptop,"\376B\000\000\017Duplicate \047by\047.");
lf[316]=C_decode_literal(C_heaptop,"\376B\000\000\036\047by\047 is invalid with \047across\047.");
lf[317]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[318]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[319]=C_h_intern(&lf[319],2,"on");
lf[320]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[321]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[323]=C_h_intern(&lf[323],1,"=");
lf[324]=C_decode_literal(C_heaptop,"\376B\000\000\016Duplicate \047=\047.");
lf[325]=C_h_intern(&lf[325],4,"then");
lf[326]=C_decode_literal(C_heaptop,"\376B\000\000\021Duplicate \047then\047.");
lf[327]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[328]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 is not valid with \047for\047.");
lf[329]=C_decode_literal(C_heaptop,"\376B\000\000,Expression expected but source code ran out.");
lf[331]=C_h_intern(&lf[331],4,"with");
lf[332]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[333]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[334]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[335]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[336]=C_decode_literal(C_heaptop,"\376B\000\000\027\047 where \047and\047 expected.");
lf[337]=C_decode_literal(C_heaptop,"\376B\000\000\020Duplicate \047and\047.");
lf[338]=C_decode_literal(C_heaptop,"\376B\000\000\021Extraneous \047and\047.");
lf[339]=C_decode_literal(C_heaptop,"\376B\000\000\037Found \047=\047 where \047and\047 expected.");
lf[340]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[341]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where variable expected.");
lf[342]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[343]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 where \047=\047 or \047and\047 expected.");
lf[345]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[346]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[348]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[349]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[351]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[352]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[354]=C_h_intern(&lf[354],3,"sum");
lf[355]=C_h_intern(&lf[355],5,"count");
lf[356]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[357]=C_h_intern(&lf[357],8,"minimize");
lf[358]=C_h_intern(&lf[358],8,"maximize");
lf[359]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[360]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[361]=C_h_intern(&lf[361],4,"list");
lf[362]=C_h_intern(&lf[362],8,"set-cdr!");
lf[363]=C_h_intern(&lf[363],9,"last-pair");
lf[364]=C_h_intern(&lf[364],7,"collect");
lf[365]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\003\000\000\002\376\377\006\000\376\377\016");
lf[366]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[367]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[368]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[369]=C_h_intern(&lf[369],5,"nconc");
lf[370]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[371]=C_decode_literal(C_heaptop,"\376B\000\000\007\047 and \047");
lf[372]=C_decode_literal(C_heaptop,"\376B\000\000 \047 are incompatible accumulators.");
lf[373]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007collect\376\003\000\000\002\376\001\000\000\006append\376\003\000\000\002\376\001\000\000\005nconc\376\377\016");
lf[374]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[375]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010minimize\376\003\000\000\002\376\001\000\000\010maximize\376\377\016");
lf[376]=C_h_intern(&lf[376],4,"into");
lf[377]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[378]=C_decode_literal(C_heaptop,"\376B\000\000!\047 where \047into\047 variable expected.");
lf[379]=C_decode_literal(C_heaptop,"\376B\000\000\030Missing \047into\047 variable.");
lf[380]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[381]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[383]=C_h_intern(&lf[383],6,"return");
lf[385]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[386]=C_h_intern(&lf[386],5,"until");
lf[387]=C_h_intern(&lf[387],5,"while");
lf[388]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[389]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[391]=C_h_intern(&lf[391],7,"thereis");
lf[392]=C_h_intern(&lf[392],6,"always");
lf[393]=C_h_intern(&lf[393],5,"never");
lf[394]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[395]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[397]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[398]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[400]=C_decode_literal(C_heaptop,"\376B\000\000\025Missing \047and\047 clause.");
lf[401]=C_h_intern(&lf[401],4,"else");
lf[402]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[403]=C_decode_literal(C_heaptop,"\376B\000\000\036\047 is not conditional operator.");
lf[404]=C_h_intern(&lf[404],4,"task");
lf[405]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007thereis\376\003\000\000\002\376\001\000\000\005never\376\003\000\000\002\376\001\000\000\006always\376\377\016");
lf[407]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004else\376\377\016");
lf[408]=C_decode_literal(C_heaptop,"\376B\000\000\026Missing \047else\047 clause.");
lf[409]=C_h_intern(&lf[409],6,"unless");
lf[410]=C_decode_literal(C_heaptop,"\376B\000\000\033Missing conditional clause.");
lf[411]=C_decode_literal(C_heaptop,"\376B\000\000\011Missing \047");
lf[412]=C_decode_literal(C_heaptop,"\376B\000\000\015\047 expression.");
lf[414]=C_h_intern(&lf[414],2,"do");
lf[415]=C_decode_literal(C_heaptop,"\376B\000\000\001\047");
lf[416]=C_decode_literal(C_heaptop,"\376B\000\000\030\047 clause cannot follow \047");
lf[417]=C_decode_literal(C_heaptop,"\376B\000\000\002\047.");
lf[418]=C_h_intern(&lf[418],4,"iter");
lf[419]=C_decode_literal(C_heaptop,"\376B\000\000\007Found \047");
lf[420]=C_decode_literal(C_heaptop,"\376B\000\000\032\047 where operator expected.");
lf[421]=C_h_intern(&lf[421],6,"repeat");
lf[422]=C_h_intern(&lf[422],2,"as");
lf[423]=C_h_intern(&lf[423],4,"when");
lf[425]=C_h_intern(&lf[425],6,"mm:off");
lf[426]=C_h_intern(&lf[426],5,"mm:on");
lf[427]=C_h_intern(&lf[427],8,"mm:touch");
lf[428]=C_h_intern(&lf[428],7,"mm:ctrl");
lf[429]=C_h_intern(&lf[429],7,"mm:prog");
lf[430]=C_h_intern(&lf[430],8,"mm:press");
lf[431]=C_h_intern(&lf[431],7,"mm:bend");
lf[432]=C_h_intern(&lf[432],7,"mm:make");
lf[433]=C_decode_literal(C_heaptop,"\376B\000\000\031Unknown MidiMessage type:");
lf[434]=C_h_intern(&lf[434],15,"\003sysget-keyword");
lf[435]=C_h_intern(&lf[435],4,"\000val");
lf[436]=C_h_intern(&lf[436],4,"\000num");
lf[437]=C_h_intern(&lf[437],4,"\000vel");
lf[438]=C_h_intern(&lf[438],4,"\000key");
lf[439]=C_h_intern(&lf[439],5,"\000chan");
lf[440]=C_h_intern(&lf[440],5,"\000time");
lf[441]=C_h_intern(&lf[441],7,"mm:free");
lf[442]=C_h_intern(&lf[442],7,"mm:copy");
lf[443]=C_h_intern(&lf[443],8,"mm:type\077");
lf[444]=C_h_intern(&lf[444],7,"mm:time");
lf[445]=C_h_intern(&lf[445],12,"mm:time-set!");
lf[446]=C_h_intern(&lf[446],7,"mm:chan");
lf[447]=C_h_intern(&lf[447],12,"mm:chan-set!");
lf[448]=C_h_intern(&lf[448],6,"mm:key");
lf[449]=C_h_intern(&lf[449],11,"mm:key-set!");
lf[450]=C_h_intern(&lf[450],6,"mm:vel");
lf[451]=C_h_intern(&lf[451],11,"mm:vel-set!");
lf[452]=C_h_intern(&lf[452],6,"mm:val");
lf[453]=C_h_intern(&lf[453],11,"mm:val-set!");
lf[454]=C_h_intern(&lf[454],1,"k");
lf[455]=C_h_intern(&lf[455],6,"mm:num");
lf[456]=C_h_intern(&lf[456],11,"mm:num-set!");
lf[457]=C_h_intern(&lf[457],7,"mp:note");
lf[458]=C_h_intern(&lf[458],7,"mp:midi");
lf[459]=C_h_intern(&lf[459],6,"mp:off");
lf[460]=C_h_intern(&lf[460],5,"mp:on");
lf[461]=C_h_intern(&lf[461],8,"mp:touch");
lf[462]=C_h_intern(&lf[462],7,"mp:ctrl");
lf[463]=C_h_intern(&lf[463],7,"mp:prog");
lf[464]=C_h_intern(&lf[464],8,"mp:press");
lf[465]=C_h_intern(&lf[465],7,"mp:bend");
lf[466]=C_h_intern(&lf[466],5,"mp:mm");
lf[467]=C_h_intern(&lf[467],9,"mp:inhook");
lf[468]=C_decode_literal(C_heaptop,"\376B\000\000*>>> Error: ~A~%    Aborting MIDI inhook.~%");
lf[469]=C_h_intern(&lf[469],27,"condition-property-accessor");
lf[470]=C_h_intern(&lf[470],3,"exn");
lf[471]=C_h_intern(&lf[471],7,"message");
lf[472]=C_h_intern(&lf[472],22,"with-exception-handler");
lf[473]=C_h_intern(&lf[473],30,"call-with-current-continuation");
lf[474]=C_h_intern(&lf[474],4,"cs:i");
lf[475]=C_h_intern(&lf[475],4,"cs:f");
lf[476]=C_h_intern(&lf[476],8,"cs:clear");
lf[477]=C_h_intern(&lf[477],25,"current-time-milliseconds");
lf[478]=C_h_intern(&lf[478],20,"current-time-seconds");
lf[480]=C_h_intern(&lf[480],6,"\003sysgc");
lf[483]=C_h_intern(&lf[483],6,"sprout");
lf[484]=C_h_intern(&lf[484],3,"now");
lf[485]=C_h_intern(&lf[485],11,"time-format");
lf[486]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[487]=C_decode_literal(C_heaptop,"\376U1.0\000");
lf[488]=C_h_intern(&lf[488],1,"m");
lf[489]=C_decode_literal(C_heaptop,"\376B\000\000\021not a time-format");
lf[490]=C_h_intern(&lf[490],1,"s");
lf[491]=C_h_intern(&lf[491],5,"pause");
lf[492]=C_h_intern(&lf[492],7,"paused\077");
lf[493]=C_h_intern(&lf[493],4,"cont");
lf[494]=C_h_intern(&lf[494],4,"stop");
lf[495]=C_decode_literal(C_heaptop,"\376B\000\000\021Not an integer id");
lf[496]=C_h_intern(&lf[496],4,"hush");
lf[497]=C_h_intern(&lf[497],14,"return-to-host");
lf[498]=C_h_intern(&lf[498],4,"cond");
lf[499]=C_h_intern(&lf[499],6,"lambda");
lf[500]=C_h_intern(&lf[500],7,"elapsed");
lf[501]=C_h_intern(&lf[501],1,"x");
lf[502]=C_h_intern(&lf[502],4,"wait");
lf[503]=C_h_intern(&lf[503],4,"let*");
lf[504]=C_decode_literal(C_heaptop,"\376B\000\0000>>> Error: ~A~%    Aborting process at time ~S~%");
lf[505]=C_h_intern(&lf[505],10,"\003sysappend");
lf[506]=C_h_intern(&lf[506],6,"safety");
lf[507]=C_h_intern(&lf[507],4,"cdar");
lf[508]=C_decode_literal(C_heaptop,"\376B\000\000\023unknown declaration");
lf[509]=C_h_intern(&lf[509],4,"caar");
lf[510]=C_decode_literal(C_heaptop,"\376B\000\000\037declaration not list (decl val)");
lf[511]=C_h_intern(&lf[511],7,"declare");
lf[512]=C_h_intern(&lf[512],5,"\000null");
lf[513]=C_decode_literal(C_heaptop,"\376B\000\000)binding clause not list (var init [step])");
lf[514]=C_decode_literal(C_heaptop,"\376B\000\000$go stopping clause missing test form");
lf[515]=C_decode_literal(C_heaptop,"\376B\000\000\035go stopping clause not a list");
lf[516]=C_decode_literal(C_heaptop,"\376B\000\000\026go bindings not a list");
lf[517]=C_h_intern(&lf[517],18,"\003sysregister-macro");
lf[518]=C_h_intern(&lf[518],2,"go");
lf[519]=C_h_intern(&lf[519],15,"hash-table-set!");
lf[520]=C_decode_literal(C_heaptop,"\376B\000\000\010cs:clear");
lf[521]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010cs:clear\376\377\016");
lf[522]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:f");
lf[523]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:f\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[524]=C_decode_literal(C_heaptop,"\376B\000\000\004cs:i");
lf[525]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004cs:i\376\003\000\000\002\376\001\000\000\005&rest\376\377\016");
lf[526]=C_decode_literal(C_heaptop,"\376B\000\000\011mp:inhook");
lf[527]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\011mp:inhook\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000func\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[528]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:mm");
lf[529]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:mm\376\003\000\000\002\376\003\000\000\002\376\001\000\000\003\000mm\376\003\000\000\002\376\377\006\000\376\377\016\376\377\016");
lf[530]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:bend");
lf[531]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:bend\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000 \000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[532]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:press");
lf[533]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:press\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[534]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:prog");
lf[535]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:prog\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[536]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:ctrl");
lf[537]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:ctrl\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000num\376\003\000\000\002\376\377\001\000"
"\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[538]=C_decode_literal(C_heaptop,"\376B\000\000\010mp:touch");
lf[539]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\010mp:touch\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001"
"\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000val\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[540]=C_decode_literal(C_heaptop,"\376B\000\000\005mp:on");
lf[541]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\005mp:on\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000"
"<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000vel\376\003\000\000\002\376\377\001\000\000\000@\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[542]=C_decode_literal(C_heaptop,"\376B\000\000\006mp:off");
lf[543]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006mp:off\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000"
"\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[544]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:midi");
lf[545]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:midi\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[546]=C_decode_literal(C_heaptop,"\376B\000\000\007mp:note");
lf[547]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\007mp:note\376\003\000\000\002\376\003\000\000\002\376\001\000\000\005\000time\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000dur\376\003\000\000\002\376U0."
"5\000\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000key\376\003\000\000\002\376\377\001\000\000\000<\376\377\016\376\003\000\000\002\376\003\000\000\002\376\001\000\000\004\000amp\376\003\000\000\002\376U0.5\000\376\377\016\376\003\000\000\002\376\003\000"
"\000\002\376\001\000\000\005\000chan\376\003\000\000\002\376\377\001\000\000\000\000\376\377\016\376\377\016");
lf[548]=C_h_intern(&lf[548],3,"let");
lf[549]=C_h_intern(&lf[549],5,":loop");
lf[550]=C_h_intern(&lf[550],7,"tagbody");
lf[551]=C_h_intern(&lf[551],5,"block");
lf[552]=C_h_intern(&lf[552],3,"nil");
lf[553]=C_h_intern(&lf[553],20,"\003sysregister-macro-2");
lf[554]=C_h_intern(&lf[554],8,"function");
lf[555]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[556]=C_h_intern(&lf[556],3,"pop");
lf[557]=C_h_intern(&lf[557],4,"cons");
lf[558]=C_h_intern(&lf[558],4,"push");
lf[559]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\002go\376\003\000\000\002\376\377\006\001\376\377\016");
lf[560]=C_h_intern(&lf[560],4,"loop");
lf[561]=C_decode_literal(C_heaptop,"\376B\000\000\001v");
lf[562]=C_decode_literal(C_heaptop,"\376B\000\000\030SalStatementSequenceRule");
lf[563]=C_decode_literal(C_heaptop,"\376B\000\000\020SalStatementRule");
lf[564]=C_h_intern(&lf[564],6,"define");
lf[565]=C_decode_literal(C_heaptop,"\376B\000\000\017Variable: ~A = ");
lf[566]=C_decode_literal(C_heaptop,"\376B\000\000\002)\012");
lf[567]=C_decode_literal(C_heaptop,"\376B\000\000\002, ");
lf[568]=C_decode_literal(C_heaptop,"\376B\000\000\002 (");
lf[569]=C_decode_literal(C_heaptop,"\376B\000\000\012Function: ");
lf[570]=C_h_intern(&lf[570],7,"\000return");
lf[571]=C_h_intern(&lf[571],9,"\000function");
lf[572]=C_decode_literal(C_heaptop,"\376B\000\000\011Process: ");
lf[573]=C_h_intern(&lf[573],8,"\000process");
lf[574]=C_decode_literal(C_heaptop,"\376B\000\000\003...");
lf[575]=C_decode_literal(C_heaptop,"\376B\000\000\026SalDefineStatementRule");
lf[576]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunDeclRule");
lf[577]=C_decode_literal(C_heaptop,"\376B\000\000/>>> Error: ~A~%    process aborted at time ~S~%");
lf[578]=C_decode_literal(C_heaptop,"\376B\000\000\005abort");
lf[579]=C_decode_literal(C_heaptop,"\376B\000\000\005error");
lf[580]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[581]=C_decode_literal(C_heaptop,"\376B\000\000\004wait");
lf[582]=C_decode_literal(C_heaptop,"\376B\000\000\004time");
lf[583]=C_h_intern(&lf[583],5,"\000loop");
lf[584]=C_h_intern(&lf[584],4,"\000run");
lf[585]=C_decode_literal(C_heaptop,"\376B\000\000\035run statement outside process");
lf[586]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoopStatementRule");
lf[587]=C_decode_literal(C_heaptop,"\376B\000\000\022SalTerminationRule");
lf[588]=C_decode_literal(C_heaptop,"\376B\000\000\017SalSteppingRule");
lf[589]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[590]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[591]=C_decode_literal(C_heaptop,"\376B\000\000\022SalConditionalRule");
lf[592]=C_decode_literal(C_heaptop,"\376B\000\000\014SalBlockRule");
lf[593]=C_h_intern(&lf[593],9,"list-tail");
lf[594]=C_h_intern(&lf[594],8,"set-car!");
lf[595]=C_h_intern(&lf[595],8,"list-ref");
lf[596]=C_h_intern(&lf[596],3,"min");
lf[597]=C_decode_literal(C_heaptop,"\376B\000\000\021SalAssignmentRule");
lf[598]=C_decode_literal(C_heaptop,"\376B\000\000\015SalAssignRule");
lf[599]=C_h_intern(&lf[599],9,"\000bindings");
lf[600]=C_decode_literal(C_heaptop,"\376B\000\000\017SalBindingsRule");
lf[601]=C_decode_literal(C_heaptop,"\376B\000\000\002#f");
lf[602]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBindRule");
lf[603]=C_decode_literal(C_heaptop,"\376B\000\000!return statement outside function");
lf[604]=C_decode_literal(C_heaptop,"\376B\000\000\025SalFunctionReturnRule");
lf[605]=C_decode_literal(C_heaptop,"\376B\000\000 wait statement outside run block");
lf[606]=C_decode_literal(C_heaptop,"\376B\000\000\022SalProcessWaitRule");
lf[607]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\006fix-me\376\003\000\000\002\376\001\000\000\004plot\376\377\016");
lf[608]=C_decode_literal(C_heaptop,"\376B\000\000\024SalPlotStatementRule");
lf[609]=C_decode_literal(C_heaptop,"\376B\000\000\026SalOutputStatementRule");
lf[610]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSystemStatementRule");
lf[611]=C_h_intern(&lf[611],10,"sal:system");
lf[612]=C_decode_literal(C_heaptop,"\376B\000\000\025SalChdirStatementRule");
lf[613]=C_decode_literal(C_heaptop,"\376B\000\000\024SalLoadStatementRule");
lf[614]=C_decode_literal(C_heaptop,"\376B\000\000\024SalExecStatementRule");
lf[615]=C_decode_literal(C_heaptop,"\376B\000\000\024SalSendStatementRule");
lf[616]=C_decode_literal(C_heaptop,"\376B\000\000\026SalSproutStatementRule");
lf[617]=C_decode_literal(C_heaptop,"\376B\000\000\025SalPrintStatementRule");
lf[618]=C_decode_literal(C_heaptop,"\376B\000\000\014SalSexprRule");
lf[619]=C_decode_literal(C_heaptop,"\376B\000\000\013SalTermRule");
lf[620]=C_decode_literal(C_heaptop,"\376B\000\000\014SalMexprRule");
lf[621]=C_decode_literal(C_heaptop,"\376B\000\000\011SalOpRule");
lf[622]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFuncallRule");
lf[623]=C_decode_literal(C_heaptop,"\376B\000\000\016SalFunargsRule");
lf[624]=C_decode_literal(C_heaptop,"\376B\000\000\014SalKargsRule");
lf[625]=C_decode_literal(C_heaptop,"\376B\000\000\014SalPargsRule");
lf[626]=C_decode_literal(C_heaptop,"\376B\000\000\015SalIfExprRule");
lf[627]=C_decode_literal(C_heaptop,"\376B\000\000\013SalArefRule");
lf[628]=C_decode_literal(C_heaptop,"\376B\000\000\012SalEltRule");
lf[629]=C_h_intern(&lf[629],7,"unquote");
lf[630]=C_h_intern(&lf[630],16,"unquote-splicing");
lf[631]=C_h_intern(&lf[631],5,"\000list");
lf[632]=C_h_intern(&lf[632],8,"\000unquote");
lf[633]=C_decode_literal(C_heaptop,"\376B\000\000\023#$ outside of list.");
lf[634]=C_decode_literal(C_heaptop,"\376B\000\000\023#^ outside of list.");
lf[635]=C_decode_literal(C_heaptop,"\376B\000\000\016SalUnquoteRule");
lf[636]=C_h_intern(&lf[636],10,"quasiquote");
lf[637]=C_decode_literal(C_heaptop,"\376B\000\000\013SalListRule");
lf[638]=C_decode_literal(C_heaptop,"\376B\000\000\013SalAtomRule");
lf[639]=C_decode_literal(C_heaptop,"\376B\000\000\013SalBoolRule");
lf[640]=C_decode_literal(C_heaptop,"\376B\000\000\015SalNumberRule");
lf[641]=C_h_intern(&lf[641],7,"fprintf");
lf[642]=C_decode_literal(C_heaptop,"\376B\000\000\007#<u ~A>");
lf[643]=C_decode_literal(C_heaptop,"\376B\000\000\010#<u x~X>");
lf[644]=C_h_intern(&lf[644],27,"\003sysregister-record-printer");
lf[645]=C_decode_literal(C_heaptop,"\376B\000\000\030#<parse-error ~S (@ ~S)>");
lf[646]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\004list\376\377\016");
lf[647]=C_decode_literal(C_heaptop,"\376\003\000\000\002\376\001\000\000\001+\376\003\000\000\002\376\001\000\000\001*\376\003\000\000\002\376\001\000\000\001@\376\003\000\000\002\376\001\000\000\003and\376\003\000\000\002\376\001\000\000\002or\376\377\016");
lf[648]=C_h_intern(&lf[648],6,"ruleid");
lf[649]=C_h_intern(&lf[649],9,"make-rule");
lf[650]=C_h_intern(&lf[650],7,"*rules*");
lf[651]=C_h_intern(&lf[651],7,"defrule");
lf[652]=C_decode_literal(C_heaptop,"\376B\000\000\007#<r ~A>");
lf[653]=C_h_intern(&lf[653],15,"make-hash-table");
lf[654]=C_h_intern(&lf[654],3,"eq\077");
lf[655]=C_decode_literal(C_heaptop,"\376B\000\000\013#<t x~X ~S>");
lf[656]=C_h_intern(&lf[656],4,"send");
lf[657]=C_decode_literal(C_heaptop,"\376B\000\0003message function not string, symbol or list of both");
lf[658]=C_h_intern(&lf[658],19,"define-send-message");
lf[659]=C_h_intern(&lf[659],6,"equal\077");
C_register_lf2(lf,660,create_ptable());
t2=C_mutate(&lf[0],lf[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_2913,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_library_toplevel(2,C_SCHEME_UNDEFINED,t3);}

/* k2911 */
static void C_ccall f_2913(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2913,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_2916,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_eval_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k2914 in k2911 */
static void C_ccall f_2916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2916,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_2919,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k2917 in k2914 in k2911 */
static void C_ccall f_2919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2919,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_2922,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_extras_toplevel(2,C_SCHEME_UNDEFINED,t2);}

/* k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_2922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2922,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_2926,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 162  make-hash-table");
t3=C_retrieve(lf[653]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,*((C_word*)lf[659]+1));}

/* k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_2926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2926,2,t0,t1);}
t2=C_mutate((C_word*)lf[2]+1,t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_2929,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18113,a[2]=((C_word)li380),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 164  ##sys#register-macro");
t5=C_retrieve(lf[517]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[658],t4);}

/* a18112 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_18113(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[18],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18113,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18117,a[2]=t6,a[3]=t1,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t4)[1]))){
t8=(C_word)C_i_car(((C_word*)t4)[1]);
t9=C_set_block_item(t6,0,t8);
t10=(C_word)C_i_cadr(((C_word*)t4)[1]);
t11=C_set_block_item(t4,0,t10);
t12=t7;
f_18117(2,t12,t11);}
else{
if(C_truep((C_word)C_i_stringp(((C_word*)t4)[1]))){
t8=C_set_block_item(t6,0,((C_word*)t4)[1]);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18150,a[2]=t7,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 171  string->symbol");
t10=*((C_word*)lf[140]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)t4)[1]);}
else{
if(C_truep((C_word)C_i_symbolp(((C_word*)t4)[1]))){
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18160,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 173  symbol->string");
t9=*((C_word*)lf[19]+1);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,((C_word*)t4)[1]);}
else{
C_trace("ChickenBridge.scm: 175  error");
t8=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[657]);}}}}

/* k18158 in a18112 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_18160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18117(2,t3,t2);}

/* k18148 in a18112 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_18150(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_18117(2,t3,t2);}

/* k18115 in a18112 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_18117(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18117,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,2,lf[311],t2);
t4=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,4,lf[519],lf[2],((C_word*)((C_word*)t0)[2])[1],t3));}

/* k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_2929(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2929,2,t0,t1);}
t2=C_mutate((C_word*)lf[3]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_2931,a[2]=((C_word)li7),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3222,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18107,a[2]=((C_word)li379),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 260  ##sys#register-macro");
t5=C_retrieve(lf[517]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,lf[656],t4);}

/* a18106 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_18107(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_18107r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_18107r(t0,t1,t2,t3);}}

static void C_ccall f_18107r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 261  expand-send");
t4=C_retrieve(lf[3]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t1,t2,t3,C_SCHEME_FALSE);}

/* k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3222(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3222,2,t0,t1);}
t2=C_mutate((C_word*)lf[20]+1,*((C_word*)lf[21]+1));
t3=C_mutate((C_word*)lf[22]+1,*((C_word*)lf[23]+1));
t4=C_mutate((C_word*)lf[24]+1,*((C_word*)lf[25]+1));
t5=C_mutate((C_word*)lf[26]+1,*((C_word*)lf[27]+1));
t6=C_mutate((C_word*)lf[28]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3228,a[2]=((C_word)li8),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[29]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3238,a[2]=((C_word)li9),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[30]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3248,a[2]=((C_word)li10),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[31]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3258,a[2]=((C_word)li11),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[32]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3268,a[2]=((C_word)li12),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[33]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3282,a[2]=((C_word)li13),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[34]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3302,a[2]=((C_word)li14),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[35]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3322,a[2]=((C_word)li15),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[36]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3370,a[2]=((C_word)li16),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[38]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3410,a[2]=((C_word)li18),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[40]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3421,a[2]=((C_word)li20),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[43],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3450,a[2]=((C_word)li21),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[44],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3477,a[2]=((C_word)li22),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[45],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3511,a[2]=((C_word)li23),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[46],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3586,a[2]=((C_word)li24),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[47],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3593,a[2]=((C_word)li25),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[48],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3631,a[2]=((C_word)li26),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[49],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3642,a[2]=((C_word)li27),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[50],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3649,a[2]=((C_word)li28),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[51],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3660,a[2]=((C_word)li29),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[52],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3670,a[2]=((C_word)li30),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[53]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3683,a[2]=((C_word)li31),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[54]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3702,a[2]=((C_word)li32),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[55]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3784,a[2]=((C_word)li33),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[56]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3790,a[2]=((C_word)li34),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[57]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3796,a[2]=((C_word)li35),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[58]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3815,a[2]=((C_word)li39),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[62]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3875,a[2]=((C_word)li40),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[63]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3881,a[2]=((C_word)li41),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[64]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3887,a[2]=((C_word)li42),tmp=(C_word)a,a+=3,tmp));
t36=C_mutate((C_word*)lf[65]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3893,a[2]=((C_word)li43),tmp=(C_word)a,a+=3,tmp));
t37=C_mutate((C_word*)lf[66]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3899,a[2]=((C_word)li44),tmp=(C_word)a,a+=3,tmp));
t38=C_mutate((C_word*)lf[67]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3905,a[2]=((C_word)li46),tmp=(C_word)a,a+=3,tmp));
t39=C_mutate((C_word*)lf[72]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4000,a[2]=((C_word)li47),tmp=(C_word)a,a+=3,tmp));
t40=C_mutate((C_word*)lf[73]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4006,a[2]=((C_word)li49),tmp=(C_word)a,a+=3,tmp));
t41=C_mutate((C_word*)lf[75]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4065,a[2]=((C_word)li50),tmp=(C_word)a,a+=3,tmp));
t42=C_mutate((C_word*)lf[76]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4071,a[2]=((C_word)li51),tmp=(C_word)a,a+=3,tmp));
t43=C_mutate((C_word*)lf[78]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4159,a[2]=((C_word)li52),tmp=(C_word)a,a+=3,tmp));
t44=C_mutate((C_word*)lf[79]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4165,a[2]=((C_word)li53),tmp=(C_word)a,a+=3,tmp));
t45=C_mutate((C_word*)lf[83]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4223,a[2]=((C_word)li54),tmp=(C_word)a,a+=3,tmp));
t46=C_mutate((C_word*)lf[85]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4246,a[2]=((C_word)li55),tmp=(C_word)a,a+=3,tmp));
t47=C_mutate((C_word*)lf[86]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4252,a[2]=((C_word)li56),tmp=(C_word)a,a+=3,tmp));
t48=C_mutate((C_word*)lf[87]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4258,a[2]=((C_word)li57),tmp=(C_word)a,a+=3,tmp));
t49=C_mutate((C_word*)lf[88]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4264,a[2]=((C_word)li58),tmp=(C_word)a,a+=3,tmp));
t50=C_mutate((C_word*)lf[89]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4270,a[2]=((C_word)li59),tmp=(C_word)a,a+=3,tmp));
t51=C_mutate((C_word*)lf[92]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4314,a[2]=((C_word)li60),tmp=(C_word)a,a+=3,tmp));
t52=C_mutate((C_word*)lf[93]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4333,a[2]=((C_word)li61),tmp=(C_word)a,a+=3,tmp));
t53=C_mutate((C_word*)lf[94]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4373,a[2]=((C_word)li62),tmp=(C_word)a,a+=3,tmp));
t54=C_mutate((C_word*)lf[95]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4379,a[2]=((C_word)li63),tmp=(C_word)a,a+=3,tmp));
t55=C_mutate((C_word*)lf[97]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4398,a[2]=((C_word)li64),tmp=(C_word)a,a+=3,tmp));
t56=C_mutate((C_word*)lf[98]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4417,a[2]=((C_word)li65),tmp=(C_word)a,a+=3,tmp));
t57=C_mutate((C_word*)lf[99]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4423,a[2]=((C_word)li66),tmp=(C_word)a,a+=3,tmp));
t58=C_mutate(&lf[100],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4429,a[2]=((C_word)li67),tmp=(C_word)a,a+=3,tmp));
t59=C_mutate(&lf[102],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4450,a[2]=((C_word)li68),tmp=(C_word)a,a+=3,tmp));
t60=C_mutate(&lf[103],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4468,a[2]=((C_word)li69),tmp=(C_word)a,a+=3,tmp));
t61=C_mutate(&lf[104],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4486,a[2]=((C_word)li70),tmp=(C_word)a,a+=3,tmp));
t62=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4496,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t63=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18093,a[2]=((C_word)li378),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  ##sys#register-record-printer");
t64=C_retrieve(lf[644]);
((C_proc4)C_retrieve_proc(t64))(4,t64,t62,lf[101],t63);}

/* a18092 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_18093(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18093,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18101,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  token-type");
f_4450(t4,t2);}

/* k18099 in a18092 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_18101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18101,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18105,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  token-string");
f_4468(t2,((C_word*)t0)[2]);}

/* k18103 in k18099 in a18092 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_18105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  fprintf");
t2=C_retrieve(lf[641]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[655],((C_word*)t0)[2],t1);}

/* k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4496,2,t0,t1);}
t2=C_mutate(&lf[105],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4498,a[2]=((C_word)li71),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[107],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4527,a[2]=((C_word)li72),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[108],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4539,a[2]=((C_word)li73),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4547,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-hash-table");
t6=C_retrieve(lf[653]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,*((C_word*)lf[654]+1));}

/* k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4547,2,t0,t1);}
t2=C_mutate(&lf[109],t1);
t3=C_mutate(&lf[110],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4549,a[2]=((C_word)li74),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[112],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4570,a[2]=((C_word)li75),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4652,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_18083,a[2]=((C_word)li377),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  ##sys#register-record-printer");
t7=C_retrieve(lf[644]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t5,lf[111],t6);}

/* a18082 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_18083(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_18083,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18091,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  rule-name");
f_4570(t4,t2);}

/* k18089 in a18082 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_18091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  fprintf");
t2=C_retrieve(lf[641]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[652],t1);}

/* k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4652(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4652,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4655,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17980,a[2]=((C_word)li376),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  ##sys#register-macro");
t4=C_retrieve(lf[517]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[651],t3);}

/* a17979 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17980(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+22)){
C_save_and_reclaim((void*)tr4r,(void*)f_17980r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_17980r(t0,t1,t2,t3,t4);}}

static void C_ccall f_17980r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(22);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17983,a[2]=t6,a[3]=((C_word)li375),tmp=(C_word)a,a+=4,tmp));
t8=(C_word)C_a_i_list(&a,2,lf[648],t2);
t9=(C_word)C_a_i_list(&a,1,t8);
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_18043,a[2]=t3,a[3]=t6,a[4]=t9,a[5]=t1,a[6]=t4,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  symbol->string");
t11=*((C_word*)lf[19]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k18041 in a17979 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_18043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18043,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_18047,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  ppat");
t3=((C_word*)((C_word*)t0)[3])[1];
f_17983(t3,t2,((C_word*)t0)[2]);}

/* k18045 in k18041 in a17979 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_18047(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18047,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)t0)[5]);
t3=(C_truep(t2)?C_SCHEME_FALSE:(C_word)C_i_car(((C_word*)t0)[5]));
t4=(C_word)C_i_nullp(((C_word*)t0)[5]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_18061,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t1,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t4)){
t6=t5;
f_18061(t6,t4);}
else{
t6=(C_word)C_i_cdr(((C_word*)t0)[5]);
t7=t5;
f_18061(t7,(C_word)C_i_nullp(t6));}}

/* k18059 in k18045 in k18041 in a17979 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_18061(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_18061,NULL,2,t0,t1);}
t2=(C_truep(t1)?C_SCHEME_FALSE:(C_word)C_i_cadr(((C_word*)t0)[7]));
t3=(C_word)C_a_i_list(&a,6,lf[649],((C_word*)t0)[6],lf[648],((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_list(&a,4,lf[519],lf[650],lf[648],t3);
t5=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_list(&a,3,lf[548],((C_word*)t0)[2],t4));}

/* ppat in a17979 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_17983(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
loop:
a=C_alloc(11);
C_check_for_interrupt;
if(!C_stack_probe(a)){
C_save_and_reclaim((void*)trf_17983,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,lf[646]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_18003,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  ppat");
t7=t3;
t8=t4;
t1=t7;
t2=t8;
goto loop;}
else{
t3=(C_word)C_i_member(t2,lf[647]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_a_i_list(&a,2,lf[311],t2):t2));}}}

/* k18001 in ppat in a17979 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_18003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18003,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_18007,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 264  ppat");
t4=((C_word*)((C_word*)t0)[2])[1];
f_17983(t4,t2,t3);}

/* k18005 in k18001 in ppat in a17979 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_18007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_18007,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,3,lf[557],((C_word*)t0)[2],t1));}

/* k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4655(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4655,2,t0,t1);}
t2=C_mutate(&lf[113],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4657,a[2]=((C_word)li76),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[115],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4681,a[2]=((C_word)li77),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[116],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4693,a[2]=((C_word)li78),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[117],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4699,a[2]=((C_word)li79),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[118],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4709,a[2]=((C_word)li80),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[119],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4767,a[2]=((C_word)li81),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[121],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4799,a[2]=((C_word)li82),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[123],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4820,a[2]=((C_word)li83),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[124],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4838,a[2]=((C_word)li84),tmp=(C_word)a,a+=3,tmp));
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4848,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17966,a[2]=((C_word)li374),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  ##sys#register-record-printer");
t13=C_retrieve(lf[644]);
((C_proc4)C_retrieve_proc(t13))(4,t13,t11,lf[122],t12);}

/* a17965 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17966(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17966,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17974,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-error-string");
f_4820(t4,t2);}

/* k17972 in a17965 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17974(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17974,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17978,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-error-position");
f_4838(t2,((C_word*)t0)[2]);}

/* k17976 in k17972 in a17965 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17978(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  fprintf");
t2=C_retrieve(lf[641]);
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[645],((C_word*)t0)[2],t1);}

/* k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4848(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4848,2,t0,t1);}
t2=C_mutate(&lf[125],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4850,a[2]=((C_word)li85),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[127],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4856,a[2]=((C_word)li86),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[128],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4871,a[2]=((C_word)li87),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[129],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4889,a[2]=((C_word)li88),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[130],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4907,a[2]=((C_word)li89),tmp=(C_word)a,a+=3,tmp));
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4917,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17940,a[2]=((C_word)li373),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  ##sys#register-record-printer");
t9=C_retrieve(lf[644]);
((C_proc4)C_retrieve_proc(t9))(4,t9,t7,lf[126],t8);}

/* a17939 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17940(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17940,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17944,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-type");
f_4871(t4,t2);}

/* k17942 in a17939 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17950,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  SalRuleType?");
f_6129(t2,t1);}

/* k17948 in k17942 in a17939 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17950,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17957,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17961,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  get-rule");
f_4657(t3,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 264  fprintf");
t2=C_retrieve(lf[641]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],lf[643],((C_word*)t0)[2]);}}

/* k17959 in k17948 in k17942 in a17939 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17961(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  rule-name");
f_4570(((C_word*)t0)[2],t1);}

/* k17955 in k17948 in k17942 in a17939 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17957(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  fprintf");
t2=C_retrieve(lf[641]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)t0)[2],lf[642],t1);}

/* k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4917(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[60],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4917,2,t0,t1);}
t2=C_mutate(&lf[131],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4919,a[2]=((C_word)li90),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[133],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4935,a[2]=((C_word)li91),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[135],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4967,a[2]=((C_word)li92),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[136],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4979,a[2]=((C_word)li93),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[137],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4989,a[2]=((C_word)li94),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[139],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5007,a[2]=((C_word)li95),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[150],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5040,a[2]=((C_word)li96),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[153],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5248,a[2]=((C_word)li98),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[154],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5256,a[2]=((C_word)li101),tmp=(C_word)a,a+=3,tmp));
t11=lf[155]=C_SCHEME_FALSE;;
t12=C_mutate(&lf[156],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5360,a[2]=((C_word)li115),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[132],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5979,a[2]=((C_word)li116),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[149],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6027,a[2]=((C_word)li117),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[152],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6129,a[2]=((C_word)li118),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[134],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6141,a[2]=((C_word)li119),tmp=(C_word)a,a+=3,tmp));
t17=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6162,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17918,a[2]=t17,tmp=(C_word)a,a+=3,tmp);
t19=(C_word)C_a_i_cons(&a,2,C_fix(3072),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(3328),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(2816),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[144],t21);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t18,lf[640],C_fix(25856),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k17916 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(25856),t1);}

/* k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6162(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6162,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6165,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17898,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[144],t5);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[639],C_fix(26112),t6,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k17896 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17898(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(26112),t1);}

/* k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6165,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6168,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17858,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(4608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(4352),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(3840),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(3072),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(3328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(2816),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[144],t10);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[638],C_fix(26368),t11,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k17856 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(26368),t1);}

/* k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6168,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6171,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17748,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26880),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[120],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1280),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,t5,t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(1024),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[143],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17754,a[2]=((C_word)li371),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17764,a[2]=((C_word)li372),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[637],C_fix(26624),t9,t10,t11);}

/* a17763 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17764(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17764,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17768,a[2]=t2,a[3]=t4,a[4]=t3,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  get-emit-info");
f_4967(t5,lf[631],t3);}

/* k17766 in a17763 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17768(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17768,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17771,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t2,((C_word*)t0)[2]);}

/* k17769 in k17766 in a17763 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17771(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17771,2,t0,t1);}
t2=((C_word*)t0)[5];
if(C_truep(t2)){
C_trace("ChickenBridge.scm: 264  emit");
f_5007(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nullp(t1))){
t3=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,1,lf[361]));}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17789,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  add-emit-info");
f_4979(t3,lf[631],C_SCHEME_TRUE,((C_word*)t0)[3]);}}}

/* k17787 in k17769 in k17766 in a17763 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17789,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17792,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t2,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k17790 in k17787 in k17769 in k17766 in a17763 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17792(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17792,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17795,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17823,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  get-emit-info");
f_4967(t5,lf[631],((C_word*)t0)[2]);}

/* k17821 in k17790 in k17787 in k17769 in k17766 in a17763 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17823(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17823,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[632]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,2,lf[636],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17795(t5,t4);}
else{
t3=(C_word)C_a_i_list(&a,2,lf[311],((C_word*)t0)[4]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_17795(t5,t4);}}

/* k17793 in k17790 in k17787 in k17769 in k17766 in a17763 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_17795(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_17795,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17801,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  get-emit-info");
f_4967(t2,lf[599],((C_word*)t0)[2]);}

/* k17799 in k17793 in k17790 in k17787 in k17769 in k17766 in a17763 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17801(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17801,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,1,lf[361]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,3,lf[15],((C_word*)((C_word*)t0)[2])[1],t2));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* a17753 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17754(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17754,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(t1,C_fix(26624),t4,C_SCHEME_FALSE);}

/* k17746 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17748(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(26624),t1);}

/* k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6174,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17648,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(5632),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(5376),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[144],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[143],t8);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17656,a[2]=t9,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-parser");
f_5248(t10,C_fix(27648));}

/* k17654 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17656(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17656,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17658,a[2]=((C_word)li370),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(((C_word*)t0)[3],lf[635],C_fix(27648),((C_word*)t0)[2],t1,t2);}

/* a17657 in k17654 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17658(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17658,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17662,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t5,t2);}

/* k17660 in a17657 in k17654 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17662(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17662,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17665,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t2,t3,C_fix(5376));}

/* k17663 in k17660 in a17657 in k17654 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17665(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17665,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17668,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  get-emit-info");
f_4967(t2,lf[631],((C_word*)t0)[4]);}

/* k17666 in k17663 in k17660 in a17657 in k17654 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17668(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17668,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17671,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep(t1)){
t3=t2;
f_17671(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17700,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_truep(((C_word*)t0)[5])?lf[633]:lf[634]);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17708,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 264  parse-unit-position");
f_4907(t5,t6);}}

/* k17706 in k17666 in k17663 in k17660 in a17657 in k17654 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-error");
f_4799(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k17698 in k17666 in k17663 in k17660 in a17657 in k17654 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17700(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k17669 in k17666 in k17663 in k17660 in a17657 in k17654 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17674,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t2,t3,((C_word*)t0)[4],((C_word*)t0)[2]);}

/* k17672 in k17669 in k17666 in k17663 in k17660 in a17657 in k17654 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17674,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17677,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  set-emit-info!");
f_4989(t2,lf[631],lf[632],((C_word*)t0)[2]);}

/* k17675 in k17672 in k17669 in k17666 in k17663 in k17660 in a17657 in k17654 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17677,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(((C_word*)t0)[3])?(C_word)C_a_i_list(&a,2,lf[629],((C_word*)t0)[2]):(C_word)C_a_i_list(&a,2,lf[630],((C_word*)t0)[2])));}

/* k17646 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(27648),t1);}

/* k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6174,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6177,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17620,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(27648),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(26624),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26368),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[144],t7);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[628],C_fix(26880),t8,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k17618 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17620(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(26880),t1);}

/* k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6177,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6180,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17560,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(1792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(1536),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[143],t7);
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17566,a[2]=((C_word)li368),tmp=(C_word)a,a+=3,tmp);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17584,a[2]=((C_word)li369),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[627],C_fix(27136),t8,t9,t10);}

/* a17583 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17584(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17584,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17592,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17596,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t6,t2);}

/* k17594 in a17583 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5007(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17590 in a17583 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17592,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[595],t1));}

/* a17565 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17566(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17566,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(t1,C_fix(27136),t6,C_SCHEME_FALSE);}

/* k17558 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(27136),t1);}

/* k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6180(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6180,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6183,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17437,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[160],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(256),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(5120),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[143],t13);
t15=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17443,a[2]=((C_word)li366),tmp=(C_word)a,a+=3,tmp);
t16=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17474,a[2]=((C_word)li367),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[626],C_fix(27392),t14,t15,t16);}

/* a17473 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17474(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_17474,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17478,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t5,t2);}

/* k17476 in a17473 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17478,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_17481,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17479 in k17476 in a17473 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17481,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_17484,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17482 in k17479 in k17476 in a17473 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17484,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17497,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t3=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,4,lf[176],((C_word*)t0)[4],t1,C_SCHEME_FALSE));}}

/* k17495 in k17482 in k17479 in k17476 in a17473 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17497,2,t0,t1);}
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,4,lf[176],((C_word*)t0)[3],((C_word*)t0)[2],t1));}

/* a17442 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17443(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17443,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17447,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  sixth");
t5=C_retrieve(lf[29]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,t2);}

/* k17445 in a17442 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17447,2,t0,t1);}
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17462,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[3]);}

/* k17460 in k17445 in a17442 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17462,2,t0,t1);}
t2=(C_word)C_i_pairp(((C_word*)t0)[4]);
t3=(C_truep(t2)?(C_word)C_i_cadr(((C_word*)t0)[4]):C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,((C_word*)t0)[3],t1,t3);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[2],C_fix(27392),t4,C_SCHEME_FALSE);}

/* k17435 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(27392),t1);}

/* k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6183,2,t0,t1);}
t2=C_mutate(&lf[166],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6185,a[2]=((C_word)li121),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6239,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17317,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[161],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[143],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,t10,t11);
t13=(C_word)C_a_i_cons(&a,2,lf[144],t12);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17323,a[2]=((C_word)li365),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t4,lf[625],C_fix(28416),t13,t14,C_SCHEME_FALSE);}

/* a17322 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17323(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17323,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17339,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t6))){
t7=(C_word)C_i_cadr(t2);
t8=(C_word)C_i_car(t7);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t4,t8,C_fix(256));}
else{
t7=t4;
f_17339(2,t7,C_SCHEME_FALSE);}}
else{
t6=t4;
f_17339(2,t6,C_SCHEME_FALSE);}}
else{
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,1,t2));}}

/* k17337 in a17322 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17339,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17350,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6185(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]));}}

/* k17348 in k17337 in a17322 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17350(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17350,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* k17315 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(28416),t1);}

/* k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6239,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6242,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17178,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(256),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[161],t6);
t8=(C_word)C_a_i_cons(&a,2,t7,C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(29696),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(6144),t9);
t11=(C_word)C_a_i_cons(&a,2,lf[143],t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t13=(C_word)C_a_i_cons(&a,2,C_fix(6144),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[143],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t11,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[144],t16);
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17184,a[2]=((C_word)li364),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[624],C_fix(28672),t17,t18,C_SCHEME_FALSE);}

/* a17183 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17184(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17184,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17204,a[2]=t4,a[3]=t1,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17207,a[2]=t6,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(C_word)C_i_caddr(t2);
if(C_truep((C_word)C_i_pairp(t9))){
t10=(C_word)C_i_caddr(t2);
t11=(C_word)C_i_car(t10);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t7,t11,C_fix(256));}
else{
t10=t7;
f_17207(2,t10,C_SCHEME_FALSE);}}
else{
t9=t7;
f_17207(2,t9,C_SCHEME_FALSE);}}

/* k17205 in a17183 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17207(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_caddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6185(((C_word*)t0)[2],t2,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_17204(2,t2,C_SCHEME_END_OF_LIST);}}

/* k17202 in a17183 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17204,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t2));}

/* k17176 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(28672),t1);}

/* k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6242(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word ab[75],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6242,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6245,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17026,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(28416),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(512),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[143],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28672),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[143],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(28672),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(28416),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(512),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[143],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,t14,t21);
t23=(C_word)C_a_i_cons(&a,2,t10,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[144],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_17032,a[2]=((C_word)li363),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[623],C_fix(28160),t25,t26,C_SCHEME_FALSE);}

/* a17031 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17032(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_17032,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cdr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(C_word)C_i_cdr(((C_word*)t4)[1]);
t9=C_set_block_item(t4,0,t8);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17050,a[2]=t7,a[3]=t4,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t10,t7,C_fix(768));}

/* k17048 in a17031 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17050,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_17059,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t2,t3,C_fix(256));}}

/* k17057 in k17048 in a17031 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17059(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 264  append");
t3=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)t0)[2],t2);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}}

/* k17024 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17026(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(28160),t1);}

/* k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6245(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6245,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6248,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16955,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(28160),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(25088),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16961,a[2]=((C_word)li361),tmp=(C_word)a,a+=3,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16979,a[2]=((C_word)li362),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[622],C_fix(27904),t6,t7,t8);}

/* a16978 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16979(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16979,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16983,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t5,t2);}

/* k16981 in a16978 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16983,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16986,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16984 in k16981 in a16978 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16986(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16986,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_17002,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k17000 in k16984 in k16981 in a16978 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_17002(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_17002,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* a16960 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16961(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16961,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_a_i_cons(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(t1,C_fix(27904),t6,C_SCHEME_FALSE);}

/* k16953 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(27904),t1);}

/* k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6248,2,t0,t1);}
t2=C_mutate(&lf[167],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6250,a[2]=((C_word)li122),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[168],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6271,a[2]=((C_word)li125),tmp=(C_word)a,a+=3,tmp));
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6387,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16879,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(C_word)C_a_i_cons(&a,2,C_fix(8705),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(8450),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(10244),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(11268),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11012),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(9732),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(9476),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(9988),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(10756),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(8199),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(7941),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(7686),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(7430),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(7173),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(6917),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[144],t21);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t5,lf[621],C_fix(28928),t22,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k16877 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(28928),t1);}

/* k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6387(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6387,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6390,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16799,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(28928),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[120],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29440),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[143],t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16805,a[2]=((C_word)li360),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[620],C_fix(29184),t9,t10,C_SCHEME_FALSE);}

/* a16804 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16805(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16805,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16812,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_cadr(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 264  is-op?");
f_6250(t4,t7);}
else{
t6=t4;
f_16812(2,t6,C_SCHEME_FALSE);}}

/* k16810 in a16804 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16812(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16812,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=(C_word)C_a_i_cons(&a,2,t2,t3);
C_trace("ChickenBridge.scm: 264  inf->pre");
f_6271(((C_word*)t0)[2],t4);}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_car(((C_word*)t0)[3]));}}

/* k16797 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16799(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(29184),t1);}

/* k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6390(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6390,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6393,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16663,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(7173),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29440),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(8963),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[143],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(512),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[143],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(2304),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(26624),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(26368),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(27136),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(27904),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(27392),t18);
t20=(C_word)C_a_i_cons(&a,2,t13,t19);
t21=(C_word)C_a_i_cons(&a,2,t9,t20);
t22=(C_word)C_a_i_cons(&a,2,t6,t21);
t23=(C_word)C_a_i_cons(&a,2,lf[144],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16669,a[2]=((C_word)li358),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16695,a[2]=((C_word)li359),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[619],C_fix(29440),t23,t24,t25);}

/* a16694 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16695(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16695,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16703,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t5,t2);}

/* k16701 in a16694 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5007(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a16668 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16669(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16669,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16677,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(t2))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16686,a[2]=t2,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t5,t6,C_fix(512));}
else{
t5=t4;
f_16677(t5,t2);}}

/* k16684 in a16668 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16686(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_16677(t2,(C_truep(t1)?(C_word)C_i_cadr(((C_word*)t0)[2]):((C_word*)t0)[2]));}

/* k16675 in a16668 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_16677(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[2],C_fix(29440),t1,C_SCHEME_FALSE);}

/* k16661 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16663(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(29440),t1);}

/* k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6393,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6396,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16619,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(26368),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6400),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(2304),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(26624),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(27136),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(27904),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(27392),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(29184),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[144],t11);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[618],C_fix(29696),t12,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k16617 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16619(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(29696),t1);}

/* k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6396(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6396,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6399,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16509,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[120],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(15872),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[143],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16515,a[2]=((C_word)li355),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16537,a[2]=((C_word)li357),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[617],C_fix(33536),t10,t11,t12);}

/* a16536 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16537(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16537,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_a_i_list(&a,1,lf[203]);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_16548,a[2]=t1,a[3]=t4,a[4]=t3,a[5]=t7,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t8,t2);}

/* k16546 in a16536 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16548,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_16550,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word)li356),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_16550(t5,((C_word*)t0)[2],t1);}

/* do998 in k16546 in a16536 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_16550(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16550,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[6]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_16579,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k16577 in do998 in k16546 in a16536 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16579,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_16550(t7,((C_word*)t0)[2],t6);}

/* a16514 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16515(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16515,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16531,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6185(t5,t6,C_fix(256));}

/* k16529 in a16514 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16531,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[2],C_fix(33536),t2,C_SCHEME_FALSE);}

/* k16507 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16509(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(33536),t1);}

/* k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6399,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6402,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16434,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[120],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16896),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[143],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16440,a[2]=((C_word)li353),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16462,a[2]=((C_word)li354),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[616],C_fix(34560),t10,t11,t12);}

/* a16461 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16462(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16462,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16466,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t5,t2);}

/* k16464 in a16461 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16473,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t2,t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16471 in k16464 in a16461 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16473,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[483],t1));}

/* a16439 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16440(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16440,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16456,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6185(t5,t6,C_fix(256));}

/* k16454 in a16439 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16456(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16456,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[2],C_fix(34560),t2,C_SCHEME_FALSE);}

/* k16432 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16434(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(34560),t1);}

/* k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6402(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6402,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6405,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16235,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(2304),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[144],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(28416),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[143],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(28672),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(28416),t11);
t13=(C_word)C_a_i_cons(&a,2,t10,t12);
t14=(C_word)C_a_i_cons(&a,2,lf[144],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(256),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[160],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t6,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(16384),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[143],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16241,a[2]=((C_word)li350),tmp=(C_word)a,a+=3,tmp);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16302,a[2]=((C_word)li352),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[615],C_fix(34304),t21,t22,t23);}

/* a16301 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16302(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_16302,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16306,a[2]=t1,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16342,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t6,t2);}

/* k16340 in a16301 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5007(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k16304 in a16301 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16306,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_i_car(t1);
t4=(C_word)C_i_cdr(t1);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16322,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word)li351),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  expand-send");
t6=C_retrieve(lf[3]);
((C_proc5)C_retrieve_proc(t6))(5,t6,((C_word*)t0)[2],t3,t4,t5);}

/* a16321 in k16304 in a16301 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16322(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_16322r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_16322r(t0,t1,t2,t3);}}

static void C_ccall f_16322r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16330,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16334,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_apply(5,0,t5,C_retrieve(lf[5]),t2,t3);}

/* k16332 in a16321 in k16304 in a16301 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16334,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16338,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-position");
f_4907(t2,((C_word*)t0)[2]);}

/* k16336 in k16332 in a16321 in k16304 in a16301 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16338(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-error");
f_4799(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16328 in a16321 in k16304 in a16301 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16330(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* a16240 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16241(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16241,4,t0,t1,t2,t3);}
t4=(C_word)C_i_caddr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16248,a[2]=t1,a[3]=t6,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t8=((C_word*)t6)[1];
if(C_truep(t8)){
t9=(C_word)C_i_cadr(((C_word*)t6)[1]);
t10=C_set_block_item(t6,0,t9);
t11=(C_word)C_i_car(((C_word*)t6)[1]);
if(C_truep((C_word)C_i_pairp(t11))){
t12=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16288,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
t13=(C_word)C_i_car(((C_word*)t6)[1]);
t14=(C_word)C_i_caddr(((C_word*)t6)[1]);
C_trace("ChickenBridge.scm: 264  append");
t15=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t15))(4,t15,t12,t13,t14);}
else{
t12=t7;
f_16248(t12,C_SCHEME_UNDEFINED);}}
else{
t9=C_set_block_item(t6,0,C_SCHEME_END_OF_LIST);
t10=t7;
f_16248(t10,t9);}}

/* k16286 in a16240 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16288(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_16248(t3,t2);}

/* k16246 in a16240 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_16248(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_16248,NULL,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[3])[1]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16259,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 264  parse-unit-position");
f_4907(t4,t5);}

/* k16257 in k16246 in a16240 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[3],C_fix(34304),((C_word*)t0)[2],t1);}

/* k16233 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16235(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(34304),t1);}

/* k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6405,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6408,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16209,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14080),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16215,a[2]=((C_word)li349),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[614],C_fix(33792),t6,t7,C_SCHEME_FALSE);}

/* a16214 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16215(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_16215,4,t0,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t2));}

/* k16207 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(33792),t1);}

/* k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6408,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6411,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16181,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14592),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16189,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-parser");
f_5248(t7,C_fix(35072));}

/* k16187 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16189,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16193,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-emitter");
f_5256(t2,lf[214]);}

/* k16191 in k16187 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(((C_word*)t0)[4],lf[613],C_fix(35072),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16179 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(35072),t1);}

/* k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6411(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6411,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6414,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16153,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(13568),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16161,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-parser");
f_5248(t7,C_fix(35584));}

/* k16159 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16161(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16161,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16165,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-emitter");
f_5256(t2,lf[213]);}

/* k16163 in k16159 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16165(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(((C_word*)t0)[4],lf[612],C_fix(35584),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16151 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16153(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(35584),t1);}

/* k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6414,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6417,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16125,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(17152),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16133,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-parser");
f_5248(t7,C_fix(35328));}

/* k16131 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16133,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16137,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-emitter");
f_5256(t2,lf[611]);}

/* k16135 in k16131 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16137(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(((C_word*)t0)[4],lf[610],C_fix(35328),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16123 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16125(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(35328),t1);}

/* k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6417,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6420,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_16097,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18432),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_16105,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-parser");
f_5248(t7,C_fix(34816));}

/* k16103 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16105(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_16105,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_16109,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-emitter");
f_5256(t2,lf[224]);}

/* k16107 in k16103 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16109(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(((C_word*)t0)[4],lf[609],C_fix(34816),((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k16095 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_16097(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(34816),t1);}

/* k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6420(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[69],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6420,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6423,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15960,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(6144),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,t6,t7);
t9=(C_word)C_a_i_cons(&a,2,lf[144],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,C_fix(6144),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[143],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,t12,t13);
t15=(C_word)C_a_i_cons(&a,2,lf[144],t14);
t16=(C_word)C_a_i_cons(&a,2,t15,C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,C_fix(256),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[120],t17);
t19=(C_word)C_a_i_cons(&a,2,t18,C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,t9,t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(15616),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[143],t21);
t23=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15966,a[2]=((C_word)li347),tmp=(C_word)a,a+=3,tmp);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15996,a[2]=((C_word)li348),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[608],C_fix(36096),t22,t23,t24);}

/* a15995 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15996(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15996,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,lf[607]);}

/* a15965 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15966(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[5],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15966,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15990,a[2]=t1,a[3]=t4,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6185(t6,t7,C_fix(256));}

/* k15988 in a15965 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15990(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15990,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t2);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[2],C_fix(36096),t3,C_SCHEME_FALSE);}

/* k15958 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(36096),t1);}

/* k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6423,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6426,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15902,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(19712),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15910,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-parser");
f_5248(t7,C_fix(31744));}

/* k15908 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15910(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15910,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15912,a[2]=((C_word)li346),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(((C_word*)t0)[3],lf[606],C_fix(31744),((C_word*)t0)[2],t1,t2);}

/* a15911 in k15908 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15912(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15912,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15916,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t5,t2);}

/* k15914 in a15911 in k15908 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15916(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15916,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15919,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15944,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  get-emit-info");
f_4967(t3,lf[584],((C_word*)t0)[3]);}

/* k15942 in k15914 in a15911 in k15908 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15944,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_15919(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15932,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15936,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 264  parse-unit-position");
f_4907(t3,t4);}}

/* k15934 in k15942 in k15914 in a15911 in k15908 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15936(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-error");
f_4799(((C_word*)t0)[2],lf[605],t1);}

/* k15930 in k15942 in k15914 in a15911 in k15908 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15932(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k15917 in k15914 in a15911 in k15908 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15919(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5007(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15900 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(31744),t1);}

/* k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6426,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6429,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15841,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(18688),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15849,a[2]=t6,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-parser");
f_5248(t7,C_fix(31488));}

/* k15847 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15849,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15851,a[2]=((C_word)li345),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(((C_word*)t0)[3],lf[604],C_fix(31488),((C_word*)t0)[2],t1,t2);}

/* a15850 in k15847 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15851(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15851,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15855,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t5,t2);}

/* k15853 in a15850 in k15847 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15855(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15855,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15858,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15886,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  get-emit-info");
f_4967(t3,lf[571],((C_word*)t0)[3]);}

/* k15884 in k15853 in a15850 in k15847 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15886(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15886,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_15858(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15874,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15878,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 264  parse-unit-position");
f_4907(t3,t4);}}

/* k15876 in k15884 in k15853 in a15850 in k15847 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15878(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-error");
f_4799(((C_word*)t0)[2],lf[603],t1);}

/* k15872 in k15884 in k15853 in a15850 in k15847 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k15856 in k15853 in a15850 in k15847 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15858(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15858,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15861,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  set-emit-info!");
f_4989(t2,lf[571],lf[570],((C_word*)t0)[3]);}

/* k15859 in k15856 in k15853 in a15850 in k15847 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5007(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15839 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(31488),t1);}

/* k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6429(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6429,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6432,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15750,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(10756),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(25088),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[143],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,lf[144],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15756,a[2]=((C_word)li342),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15791,a[2]=((C_word)li344),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[602],C_fix(30208),t10,t11,t12);}

/* a15790 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15791(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15791,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15797,a[2]=t4,a[3]=t3,a[4]=((C_word)li343),tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15805,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t6,t2);}

/* k15803 in a15790 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15805(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[11]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a15796 in a15790 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15797(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15797,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a15755 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15756(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15756,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_pairp(t2))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_caddr(t2);
t6=(C_word)C_a_i_list(&a,2,t4,t5);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(t1,C_fix(30208),t6,C_SCHEME_FALSE);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15789,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(t4,C_fix(4608),lf[601],C_SCHEME_FALSE);}}

/* k15787 in a15755 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15789,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[2],C_fix(30208),t2,C_SCHEME_FALSE);}

/* k15748 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15750(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(30208),t1);}

/* k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6432(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6432,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6435,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15648,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[120],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(20480),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[143],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15654,a[2]=((C_word)li339),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15697,a[2]=((C_word)li341),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[600],C_fix(29952),t10,t11,t12);}

/* a15696 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15697(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15697,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15701,a[2]=t2,a[3]=t1,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  add-emit-info");
f_4979(t5,lf[599],C_SCHEME_TRUE,t3);}

/* k15699 in a15696 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15701(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15701,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15706,a[2]=((C_word*)t0)[4],a[3]=t1,a[4]=((C_word)li340),tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15714,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t3,((C_word*)t0)[2]);}

/* k15712 in k15699 in a15696 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15714(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("map");
t2=*((C_word*)lf[11]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* a15705 in k15699 in a15696 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15706(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_15706,3,t0,t1,t2);}
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t1,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a15653 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15654(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15654,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15687,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6185(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(t1,C_fix(29952),t5,C_SCHEME_FALSE);}}

/* k15685 in a15653 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15687(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15687,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[2],C_fix(29952),t2,C_SCHEME_FALSE);}

/* k15646 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15648(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(29952),t1);}

/* k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6435,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6438,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15562,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(27136),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[144],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(12800),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(12544),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(12288),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(12032),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(11776),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(11268),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(11012),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(10756),t13);
t15=(C_word)C_a_i_cons(&a,2,lf[144],t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t17=(C_word)C_a_i_cons(&a,2,t15,t16);
t18=(C_word)C_a_i_cons(&a,2,t6,t17);
t19=(C_word)C_a_i_cons(&a,2,lf[143],t18);
t20=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15568,a[2]=((C_word)li338),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[598],C_fix(30720),t19,t20,C_SCHEME_FALSE);}

/* a15567 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15568(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15568,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(t1,C_fix(30720),t2,C_SCHEME_FALSE);}

/* k15560 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15562(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(30720),t1);}

/* k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6438(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6438,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6441,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15282,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30720),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[120],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30720),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(16640),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[143],t9);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15288,a[2]=((C_word)li335),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15331,a[2]=((C_word)li337),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[597],C_fix(30464),t10,t11,t12);}

/* a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15331(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15331,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15335,a[2]=t1,a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t5,t2);}

/* k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15335,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[175]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15343,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=t4,a[6]=t2,a[7]=((C_word)li336),tmp=(C_word)a,a+=8,tmp));
t8=((C_word*)t6)[1];
f_15343(t8,((C_word*)t0)[2],t1);}

/* do1077 in k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_15343(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15343,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cddr(((C_word*)t0)[6]);
t4=(C_word)C_i_nullp(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cadr(((C_word*)t0)[6]):((C_word*)t0)[6]));}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15366,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t3,t4);}}

/* k15364 in do1077 in k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15366(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15366,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15369,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15367 in k15364 in do1077 in k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15369,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_15372,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 264  parse-unit-type");
f_4871(t2,t3);}

/* k15370 in k15367 in k15364 in do1077 in k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15372(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15372,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15375,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15373 in k15370 in k15367 in k15364 in do1077 in k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15375(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15375,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15378,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15435,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t4,a[5]=t1,a[6]=t3,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t5,((C_word*)t0)[2],C_fix(10756));}

/* k15433 in k15373 in k15370 in k15367 in k15364 in do1077 in k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15435,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)t0)[5]);
t3=((C_word*)t0)[4];
f_15378(t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15442,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(11776));}}

/* k15440 in k15433 in k15373 in k15370 in k15367 in k15364 in do1077 in k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15442(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15442,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[161],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_15378(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15452,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(12032));}}

/* k15450 in k15440 in k15433 in k15373 in k15370 in k15367 in k15364 in do1077 in k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15452(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15452,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[120],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_15378(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15462,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(12288));}}

/* k15460 in k15450 in k15440 in k15433 in k15373 in k15370 in k15367 in k15364 in do1077 in k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15462,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[361],((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,lf[15],((C_word*)t0)[5],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[3];
f_15378(t5,t4);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15476,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(12544));}}

/* k15474 in k15460 in k15450 in k15440 in k15433 in k15373 in k15370 in k15367 in k15364 in do1077 in k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15476,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[557],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_15378(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15486,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(12800));}}

/* k15484 in k15474 in k15460 in k15450 in k15440 in k15433 in k15373 in k15370 in k15367 in k15364 in do1077 in k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15486(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15486,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[15],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_15378(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15496,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(11012));}}

/* k15494 in k15484 in k15474 in k15460 in k15450 in k15440 in k15433 in k15373 in k15370 in k15367 in k15364 in do1077 in k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15496,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[596],((C_word*)t0)[6],((C_word*)t0)[5]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=((C_word*)t0)[3];
f_15378(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15506,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(11268));}}

/* k15504 in k15494 in k15484 in k15474 in k15460 in k15450 in k15440 in k15433 in k15373 in k15370 in k15367 in k15364 in do1077 in k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15506(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15506,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[163],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15378(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_15378(t2,C_SCHEME_UNDEFINED);}}

/* k15376 in k15373 in k15370 in k15367 in k15364 in do1077 in k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_15378(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15378,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_15381,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15402,a[2]=t2,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t4=(C_word)C_i_car(((C_word*)t0)[2]);
t5=t3;
f_15402(t5,(C_word)C_eqp(t4,lf[595]));}
else{
t4=t3;
f_15402(t4,C_SCHEME_FALSE);}}

/* k15400 in k15376 in k15373 in k15370 in k15367 in k15364 in do1077 in k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_15402(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15402,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)t0)[4]);
t3=(C_word)C_i_caddr(((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[593],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[594],t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_15381(t7,t6);}
else{
t2=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_15381(t4,t3);}}

/* k15379 in k15376 in k15373 in k15370 in k15367 in k15364 in do1077 in k15333 in a15330 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_15381(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15381,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=(C_word)C_i_cdr(((C_word*)t0)[4]);
t7=((C_word*)((C_word*)t0)[3])[1];
f_15343(t7,((C_word*)t0)[2],t6);}

/* a15287 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15288(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15288,4,t0,t1,t2,t3);}
if(C_truep((C_word)C_i_caddr(t2))){
t4=(C_word)C_i_cadr(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15321,a[2]=t1,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_caddr(t2);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6185(t5,t6,C_fix(256));}
else{
t4=(C_word)C_i_cadr(t2);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(t1,C_fix(30464),t5,C_SCHEME_FALSE);}}

/* k15319 in a15287 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15321,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[2],C_fix(30464),t2,C_SCHEME_FALSE);}

/* k15280 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(30464),t1);}

/* k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6441(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[39],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6441,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6444,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15168,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[160],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,lf[120],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,t7,t8);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(13328),t10);
t12=(C_word)C_a_i_cons(&a,2,lf[143],t11);
t13=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15174,a[2]=((C_word)li333),tmp=(C_word)a,a+=3,tmp);
t14=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15200,a[2]=((C_word)li334),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[592],C_fix(32000),t12,t13,t14);}

/* a15199 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15200(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15200,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15204,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t5,t2);}

/* k15202 in a15199 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15204(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15204,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_15210,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(t1);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k15208 in k15202 in a15199 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15210(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15210,2,t0,t1);}
if(C_truep(((C_word*)t0)[5])){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15230,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t2,((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[175],t1));}}

/* k15228 in k15208 in k15202 in a15199 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15230(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15230,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[503],t2));}

/* a15173 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15174(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_15174,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cadr(t2);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_caddr(t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15184,a[2]=t1,a[3]=t7,a[4]=t6,tmp=(C_word)a,a+=5,tmp);
t9=((C_word*)t6)[1];
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)t6)[1]);
t11=C_set_block_item(t6,0,t10);
t12=t8;
f_15184(t12,t11);}
else{
t10=t8;
f_15184(t10,C_SCHEME_FALSE);}}

/* k15182 in a15173 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_15184(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15184,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[2],C_fix(32000),t2,C_SCHEME_FALSE);}

/* k15166 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(32000),t1);}

/* k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6444,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6447,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14971,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[160],t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t7=(C_word)C_a_i_cons(&a,2,C_fix(17920),t6);
t8=(C_word)C_a_i_cons(&a,2,lf[160],t7);
t9=(C_word)C_a_i_cons(&a,2,t8,C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,t5,t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(18944),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(14336),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[143],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(29696),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(19968),t16);
t18=(C_word)C_a_i_cons(&a,2,lf[143],t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t20=(C_word)C_a_i_cons(&a,2,C_fix(29696),t19);
t21=(C_word)C_a_i_cons(&a,2,C_fix(19200),t20);
t22=(C_word)C_a_i_cons(&a,2,lf[143],t21);
t23=(C_word)C_a_i_cons(&a,2,t22,C_SCHEME_END_OF_LIST);
t24=(C_word)C_a_i_cons(&a,2,t18,t23);
t25=(C_word)C_a_i_cons(&a,2,t14,t24);
t26=(C_word)C_a_i_cons(&a,2,lf[144],t25);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14977,a[2]=((C_word)li331),tmp=(C_word)a,a+=3,tmp);
t28=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_15045,a[2]=((C_word)li332),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[591],C_fix(32256),t26,t27,t28);}

/* a15044 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15045(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_15045,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_15049,a[2]=t4,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t5,t2);}

/* k15047 in a15044 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15049(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5007(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* a14976 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14977(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14977,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14990,a[2]=t7,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14996,a[2]=t8,a[3]=t7,a[4]=t5,a[5]=t4,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t9,t4,C_fix(14336));}

/* k14994 in a14976 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14996,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_15002,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t6,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t4,tmp=(C_word)a,a+=10,tmp);
t10=((C_word*)t4)[1];
if(C_truep(t10)){
t11=(C_word)C_i_car(((C_word*)t4)[1]);
t12=C_set_block_item(t6,0,t11);
t13=t9;
f_15002(t13,t12);}
else{
t11=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15031,a[2]=t9,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(t11,C_fix(4608),lf[590],C_SCHEME_FALSE);}}
else{
t2=(C_word)C_i_caddr(((C_word*)t0)[6]);
t3=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_14990(t5,t4);}}

/* k15029 in k14994 in a14976 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15031(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15002(t3,t2);}

/* k15000 in k14994 in a14976 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_15002(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15002,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_15006,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k15004 in k15000 in k14994 in a14976 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15006(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_15006,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_15009,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t4)){
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=t3;
f_15009(t7,t6);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_15020,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(t5,C_fix(4608),lf[589],C_SCHEME_FALSE);}}

/* k15018 in k15004 in k15000 in k14994 in a14976 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_15020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_15009(t3,t2);}

/* k15007 in k15004 in k15000 in k14994 in a14976 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_15009(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_15009,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14990(t4,t3);}

/* k14988 in a14976 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_14990(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[3],C_fix(32256),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k14969 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14971(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(32256),t1);}

/* k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word ab[174],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6447,2,t0,t1);}
t2=C_mutate(&lf[169],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6449,a[2]=((C_word)li126),tmp=(C_word)a,a+=3,tmp));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6970,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14699,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t6=(C_word)C_a_i_cons(&a,2,C_fix(23296),t5);
t7=(C_word)C_a_i_cons(&a,2,lf[143],t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t9=(C_word)C_a_i_cons(&a,2,C_fix(18944),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[160],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(29696),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(10756),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(25088),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(22272),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[143],t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,C_fix(22784),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(25088),t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(22272),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[143],t20);
t22=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t23=(C_word)C_a_i_cons(&a,2,C_fix(20992),t22);
t24=(C_word)C_a_i_cons(&a,2,C_fix(23552),t23);
t25=(C_word)C_a_i_cons(&a,2,C_fix(21248),t24);
t26=(C_word)C_a_i_cons(&a,2,lf[144],t25);
t27=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t28=(C_word)C_a_i_cons(&a,2,t26,t27);
t29=(C_word)C_a_i_cons(&a,2,lf[160],t28);
t30=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t31=(C_word)C_a_i_cons(&a,2,C_fix(21504),t30);
t32=(C_word)C_a_i_cons(&a,2,lf[160],t31);
t33=(C_word)C_a_i_cons(&a,2,t32,C_SCHEME_END_OF_LIST);
t34=(C_word)C_a_i_cons(&a,2,t29,t33);
t35=(C_word)C_a_i_cons(&a,2,C_fix(29696),t34);
t36=(C_word)C_a_i_cons(&a,2,C_fix(22528),t35);
t37=(C_word)C_a_i_cons(&a,2,C_fix(25088),t36);
t38=(C_word)C_a_i_cons(&a,2,C_fix(22272),t37);
t39=(C_word)C_a_i_cons(&a,2,lf[143],t38);
t40=(C_word)C_a_i_cons(&a,2,C_fix(21760),C_SCHEME_END_OF_LIST);
t41=(C_word)C_a_i_cons(&a,2,C_fix(20992),t40);
t42=(C_word)C_a_i_cons(&a,2,C_fix(23552),t41);
t43=(C_word)C_a_i_cons(&a,2,C_fix(21248),t42);
t44=(C_word)C_a_i_cons(&a,2,lf[144],t43);
t45=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t46=(C_word)C_a_i_cons(&a,2,C_fix(21504),t45);
t47=(C_word)C_a_i_cons(&a,2,lf[160],t46);
t48=(C_word)C_a_i_cons(&a,2,t47,C_SCHEME_END_OF_LIST);
t49=(C_word)C_a_i_cons(&a,2,C_fix(29696),t48);
t50=(C_word)C_a_i_cons(&a,2,t44,t49);
t51=(C_word)C_a_i_cons(&a,2,C_fix(25088),t50);
t52=(C_word)C_a_i_cons(&a,2,C_fix(22272),t51);
t53=(C_word)C_a_i_cons(&a,2,lf[143],t52);
t54=(C_word)C_a_i_cons(&a,2,t53,C_SCHEME_END_OF_LIST);
t55=(C_word)C_a_i_cons(&a,2,t39,t54);
t56=(C_word)C_a_i_cons(&a,2,t21,t55);
t57=(C_word)C_a_i_cons(&a,2,t16,t56);
t58=(C_word)C_a_i_cons(&a,2,t7,t57);
t59=(C_word)C_a_i_cons(&a,2,lf[144],t58);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t4,lf[588],C_fix(33024),t59,C_retrieve2(lf[169],"sal-parse-stepping"),C_SCHEME_FALSE);}

/* k14697 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(33024),t1);}

/* k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6970,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6973,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14643,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(20224),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29696),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(19456),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[143],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t6,t10);
t12=(C_word)C_a_i_cons(&a,2,lf[144],t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14651,a[2]=t12,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  simple-unit-parser");
f_5248(t13,C_fix(33280));}

/* k14649 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(((C_word*)t0)[3],lf[587],C_fix(33280),((C_word*)t0)[2],t1,C_SCHEME_FALSE);}

/* k14641 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(33280),t1);}

/* k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word ab[78],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6973,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7495,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14471,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(16144),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(14864),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[144],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(29952),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,lf[160],t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(33024),C_SCHEME_END_OF_LIST);
t10=(C_word)C_a_i_cons(&a,2,lf[120],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(33280),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,lf[120],t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t14=(C_word)C_a_i_cons(&a,2,lf[161],t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,C_fix(22016),t15);
t17=(C_word)C_a_i_cons(&a,2,lf[160],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(18193),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,t14,t19);
t21=(C_word)C_a_i_cons(&a,2,t12,t20);
t22=(C_word)C_a_i_cons(&a,2,t10,t21);
t23=(C_word)C_a_i_cons(&a,2,t8,t22);
t24=(C_word)C_a_i_cons(&a,2,t6,t23);
t25=(C_word)C_a_i_cons(&a,2,lf[143],t24);
t26=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14477,a[2]=((C_word)li325),tmp=(C_word)a,a+=3,tmp);
t27=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14523,a[2]=((C_word)li330),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[586],C_fix(32512),t25,t26,t27);}

/* a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14523(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_14523,5,t0,t1,t2,t3,t4);}
t5=t3;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6979,a[2]=t4,a[3]=t6,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t7,t2);}

/* k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6979(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6979,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_END_OF_LIST;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_END_OF_LIST;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_6997,a[2]=t11,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=t15,a[8]=t13,a[9]=t5,a[10]=t9,a[11]=t3,tmp=(C_word)a,a+=12,tmp);
t17=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7454,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=t5,a[5]=t16,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
t18=(C_word)C_i_car(((C_word*)t3)[1]);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t17,t18,C_fix(14864));}

/* k7452 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7454(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7454,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7458,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  add-emit-info");
f_4979(t2,lf[583],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7461,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7488,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  get-emit-info");
f_4967(t3,lf[573],((C_word*)((C_word*)t0)[6])[1]);}}

/* k7486 in k7452 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7488,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_7461(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7476,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7480,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 264  parse-unit-position");
f_4907(t3,t4);}}

/* k7478 in k7486 in k7452 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7480(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-error");
f_4799(((C_word*)t0)[2],lf[585],t1);}

/* k7474 in k7486 in k7452 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7476(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  errf");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7459 in k7452 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7461(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7461,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7465,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  add-emit-info");
f_4979(t2,lf[584],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[4])[1]);}

/* k7463 in k7459 in k7452 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7465(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[4])+1,t1);
t3=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[2];
f_6997(t4,t3);}

/* k7456 in k7452 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7458(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_6997(t3,t2);}

/* k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6997(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6997,NULL,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_7004,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[11],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7443,a[2]=t4,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7447,a[2]=((C_word*)t0)[5],a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t6,t7,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}
else{
t5=t4;
f_7004(t5,C_SCHEME_UNDEFINED);}}

/* k7445 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  append");
t2=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k7441 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_7004(t3,t2);}

/* k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7004(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7004,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_7007,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7318,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[6],a[6]=t5,a[7]=((C_word)li329),tmp=(C_word)a,a+=8,tmp));
t7=((C_word*)t5)[1];
f_7318(t7,t2,t3);}

/* do1187 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7318(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7318,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7328,a[2]=t1,a[3]=((C_word*)t0)[6],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7339,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t4,t5);}}

/* k7337 in do1187 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7339(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7339,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7341,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word)li328),tmp=(C_word)a,a+=8,tmp));
t5=((C_word*)t3)[1];
f_7341(t5,((C_word*)t0)[2],t1);}

/* do1190 in k7337 in do1187 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7341(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7341,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7355,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=((C_word*)t0)[4],a[6]=t1,a[7]=((C_word*)t0)[5],a[8]=t2,a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
t5=(C_word)C_i_car(t3);
t6=(C_word)C_i_cadr(t3);
t7=(C_word)C_a_i_list(&a,2,t5,t6);
t8=(C_word)C_a_i_list(&a,1,t7);
C_trace("ChickenBridge.scm: 264  append");
t9=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t9))(4,t9,t4,((C_word*)((C_word*)t0)[6])[1],t8);}}

/* k7353 in do1190 in k7337 in do1187 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7355,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7358,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
if(C_truep((C_word)C_i_caddr(((C_word*)t0)[4]))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7408,a[2]=t3,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_caddr(((C_word*)t0)[4]);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 264  append");
t7=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t4,((C_word*)((C_word*)t0)[2])[1],t6);}
else{
t4=t3;
f_7358(t4,C_SCHEME_UNDEFINED);}}

/* k7406 in k7353 in do1190 in k7337 in do1187 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7408(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_7358(t3,t2);}

/* k7356 in k7353 in do1190 in k7337 in do1187 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7358(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7358,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7361,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_cadddr(((C_word*)t0)[3]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7393,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("ChickenBridge.scm: 264  append");
t6=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,((C_word*)((C_word*)t0)[2])[1],t5);}
else{
t3=t2;
f_7361(t3,C_SCHEME_UNDEFINED);}}

/* k7391 in k7356 in k7353 in do1190 in k7337 in do1187 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7393(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_7361(t3,t2);}

/* k7359 in k7356 in k7353 in do1190 in k7337 in do1187 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7361(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7361,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7364,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7374,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k7372 in k7359 in k7356 in k7353 in do1190 in k7337 in do1187 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7374,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7378,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7386,a[2]=((C_word*)t0)[4],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_7364(t2,C_SCHEME_UNDEFINED);}}

/* k7384 in k7372 in k7359 in k7356 in k7353 in do1190 in k7337 in do1187 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7386(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7386,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 264  append");
t3=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k7376 in k7372 in k7359 in k7356 in k7353 in do1190 in k7337 in do1187 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7378(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_7364(t3,t2);}

/* k7362 in k7359 in k7356 in k7353 in do1190 in k7337 in do1187 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7364(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7341(t3,((C_word*)t0)[2],t2);}

/* k7326 in do1187 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7318(t3,((C_word*)t0)[2],t2);}

/* k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7007(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7007,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_7010,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_i_cadddr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7282,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t5,a[5]=((C_word*)t0)[11],a[6]=((C_word)li327),tmp=(C_word)a,a+=7,tmp));
t7=((C_word*)t5)[1];
f_7282(t7,t2,t3);}

/* do1201 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7282(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7282,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7293,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7308,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t4,t5,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k7306 in do1201 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7308(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7308,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 264  append");
t3=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k7291 in do1201 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7293(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_7282(t4,((C_word*)t0)[2],t3);}

/* k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7010(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7010,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7014,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 264  append");
t3=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)((C_word*)t0)[11])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7014,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7017,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[2])[1]);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7226,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word)li326),tmp=(C_word)a,a+=7,tmp));
t8=((C_word*)t6)[1];
f_7226(t8,t3,t4);}

/* do1206 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7226(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7226,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7236,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=t2,a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t3,t4);}}

/* k7234 in do1206 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7236,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7239,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t2,t3,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k7237 in k7234 in do1206 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7239,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7242,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7260,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t5,t6,C_fix(20224));}

/* k7258 in k7237 in k7234 in do1206 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7260,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,2,lf[145],((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_7242(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_7242(t2,C_SCHEME_UNDEFINED);}}

/* k7240 in k7237 in k7234 in do1206 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7242(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7242,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7246,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 264  append");
t4=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[6])[1],t3);}

/* k7244 in k7240 in k7237 in k7234 in do1206 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_7226(t4,((C_word*)t0)[2],t3);}

/* k7015 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7017(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7017,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7020,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[9])[1]))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_7020(t6,t5);}
else{
t4=(C_word)C_a_i_cons(&a,2,lf[144],((C_word*)((C_word*)t0)[9])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=t2;
f_7020(t6,t5);}}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_SCHEME_FALSE);
t4=t2;
f_7020(t4,t3);}}

/* k7018 in k7015 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7020(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7020,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7023,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7189,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k7187 in k7018 in k7015 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7189(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7189,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7193,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7197,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[5];
f_7023(t3,t2);}}

/* k7195 in k7187 in k7018 in k7015 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7197(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5007(((C_word*)t0)[4],t1,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k7191 in k7187 in k7018 in k7015 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_7023(t3,t2);}

/* k7021 in k7018 in k7015 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7023(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[31],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7023,NULL,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7051,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[582]);}
else{
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[2])[1]);
t5=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t4);
t6=(C_word)C_a_i_cons(&a,2,lf[414],t5);
t7=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,3,lf[503],((C_word*)((C_word*)t0)[3])[1],t6));}}

/* k7049 in k7021 in k7018 in k7015 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7051,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7054,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t3=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[581]);}

/* k7052 in k7049 in k7021 in k7018 in k7015 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7054(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7054,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_7057,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t3=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[580]);}

/* k7055 in k7052 in k7049 in k7021 in k7018 in k7015 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7057,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_7060,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t3=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[579]);}

/* k7058 in k7055 in k7052 in k7049 in k7021 in k7018 in k7015 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7060(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7060,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_7063,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t3=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[578]);}

/* k7061 in k7058 in k7055 in k7052 in k7049 in k7021 in k7018 in k7015 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7063(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word ab[150],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7063,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[9],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[499],C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,2,lf[500],t4);
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[8]);
t7=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[9],((C_word*)t0)[8]);
t8=(C_word)C_a_i_list(&a,3,lf[499],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[502],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,1,t1);
t12=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,2,lf[311],lf[470]);
t14=(C_word)C_a_i_list(&a,2,lf[311],lf[471]);
t15=(C_word)C_a_i_list(&a,3,lf[469],t13,t14);
t16=(C_word)C_a_i_list(&a,2,t15,((C_word*)t0)[7]);
t17=(C_word)C_a_i_list(&a,4,lf[5],lf[577],t16,((C_word*)t0)[10]);
t18=(C_word)C_a_i_list(&a,2,lf[192],t17);
t19=(C_word)C_a_i_list(&a,2,t1,C_fix(-2));
t20=(C_word)C_a_i_list(&a,4,lf[499],t12,t18,t19);
t21=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_fix(-1));
t22=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_7122,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=t10,a[6]=t11,a[7]=t20,a[8]=t21,tmp=(C_word)a,a+=9,tmp);
t23=(C_word)C_a_i_list(&a,1,((C_word*)t0)[9]);
C_trace("##sys#append");
t24=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t24+1)))(4,t24,t22,((C_word*)((C_word*)t0)[2])[1],t23);}

/* k7120 in k7061 in k7058 in k7055 in k7052 in k7049 in k7021 in k7018 in k7015 in k7012 in k7008 in k7005 in k7002 in k6995 in k6977 in a14522 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7122,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[401],t1);
t3=(C_word)C_a_i_list(&a,3,lf[498],((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_list(&a,3,lf[499],C_SCHEME_END_OF_LIST,t3);
t5=(C_word)C_a_i_list(&a,3,lf[472],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,3,lf[499],((C_word*)t0)[6],t5);
t7=(C_word)C_a_i_list(&a,2,lf[473],t6);
t8=(C_word)C_a_i_list(&a,3,lf[503],((C_word*)t0)[5],t7);
t9=(C_word)C_a_i_list(&a,3,lf[499],((C_word*)t0)[4],t8);
t10=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,(C_word)C_a_i_list(&a,3,lf[503],((C_word*)((C_word*)t0)[2])[1],t9));}

/* a14476 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14477(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14477,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(C_word)C_i_cadddr(t2);
t10=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14493,a[2]=t2,a[3]=t1,a[4]=t9,a[5]=t8,a[6]=t7,a[7]=t4,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t11=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}

/* k14491 in a14476 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14496,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  sixth");
t3=C_retrieve(lf[29]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k14494 in k14491 in a14476 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14496(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14496,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14499,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,t5);
t7=t4;
f_14499(t7,t6);}
else{
t5=t4;
f_14499(t5,C_SCHEME_UNDEFINED);}}

/* k14497 in k14494 in k14491 in a14476 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_14499(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14499,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14502,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[3])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=t2;
f_14502(t5,t4);}
else{
t3=t2;
f_14502(t3,C_SCHEME_UNDEFINED);}}

/* k14500 in k14497 in k14494 in k14491 in a14476 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_14502(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14502,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,6,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14513,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-position");
f_4907(t3,((C_word*)t0)[8]);}

/* k14511 in k14500 in k14497 in k14494 in k14491 in a14476 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14513(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[3],C_fix(32512),((C_word*)t0)[2],t1);}

/* k14469 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14471(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(32512),t1);}

/* k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7495(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7495,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7498,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14326,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(512),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[143],t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(25088),C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(256),t7);
t9=(C_word)C_a_i_cons(&a,2,lf[120],t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(768),C_SCHEME_END_OF_LIST);
t11=(C_word)C_a_i_cons(&a,2,t9,t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(25088),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(512),t12);
t14=(C_word)C_a_i_cons(&a,2,lf[143],t13);
t15=(C_word)C_a_i_cons(&a,2,t14,C_SCHEME_END_OF_LIST);
t16=(C_word)C_a_i_cons(&a,2,t6,t15);
t17=(C_word)C_a_i_cons(&a,2,lf[144],t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t19=(C_word)C_a_i_cons(&a,2,t17,t18);
t20=(C_word)C_a_i_cons(&a,2,C_fix(25088),t19);
t21=(C_word)C_a_i_cons(&a,2,lf[143],t20);
t22=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14332,a[2]=((C_word)li324),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[576],C_fix(37632),t21,t22,C_SCHEME_FALSE);}

/* a14331 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14332(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[13],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_14332,4,t0,t1,t2,t3);}
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
t6=t5;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_caddr(t2);
t9=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14345,a[2]=t1,a[3]=t8,a[4]=t7,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t10=(C_word)C_i_length(((C_word*)t7)[1]);
if(C_truep((C_word)C_i_nequalp(t10,C_fix(2)))){
t11=C_set_block_item(t7,0,C_SCHEME_END_OF_LIST);
t12=t9;
f_14345(t12,t11);}
else{
t11=(C_word)C_i_cadr(((C_word*)t7)[1]);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14371,a[2]=t9,a[3]=t7,a[4]=t11,tmp=(C_word)a,a+=5,tmp);
t13=(C_word)C_i_caddr(((C_word*)t7)[1]);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6185(t12,t13,C_fix(256));}}

/* k14369 in a14331 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14371,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_14345(t4,t3);}

/* k14343 in a14331 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_14345(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14345,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[2],C_fix(37632),t2,C_SCHEME_FALSE);}

/* k14324 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14326(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(37632),t1);}

/* k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7498(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7498,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7501,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13869,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(30208),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(256),t4);
t6=(C_word)C_a_i_cons(&a,2,lf[120],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,C_SCHEME_END_OF_LIST);
t8=(C_word)C_a_i_cons(&a,2,C_fix(30208),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(24576),t8);
t10=(C_word)C_a_i_cons(&a,2,lf[143],t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t12=(C_word)C_a_i_cons(&a,2,C_fix(24064),t11);
t13=(C_word)C_a_i_cons(&a,2,lf[143],t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(37632),C_SCHEME_END_OF_LIST);
t15=(C_word)C_a_i_cons(&a,2,C_fix(24320),t14);
t16=(C_word)C_a_i_cons(&a,2,lf[143],t15);
t17=(C_word)C_a_i_cons(&a,2,t16,C_SCHEME_END_OF_LIST);
t18=(C_word)C_a_i_cons(&a,2,t13,t17);
t19=(C_word)C_a_i_cons(&a,2,t10,t18);
t20=(C_word)C_a_i_cons(&a,2,lf[144],t19);
t21=(C_word)C_a_i_cons(&a,2,t20,C_SCHEME_END_OF_LIST);
t22=(C_word)C_a_i_cons(&a,2,C_fix(13824),t21);
t23=(C_word)C_a_i_cons(&a,2,lf[143],t22);
t24=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13875,a[2]=((C_word)li320),tmp=(C_word)a,a+=3,tmp);
t25=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13914,a[2]=((C_word)li323),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[575],C_fix(36352),t23,t24,t25);}

/* a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13914(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_13914,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13918,a[2]=t4,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t6,t2);}

/* k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13918(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13918,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,lf[175]);
t4=t3;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13927,a[2]=t3,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13930,a[2]=t2,a[3]=t3,a[4]=t6,a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[3],a[7]=t5,a[8]=t1,tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t7,t2,C_fix(24576));}

/* k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13930(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13930,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)t0)[8]);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13939,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=t4,a[5]=((C_word*)t0)[7],a[6]=((C_word)li321),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_13939(t6,((C_word*)t0)[4],t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13988,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[8]);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t2,t3);}}

/* k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13988(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13988,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13991,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t3=(C_word)C_i_car(t1);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13994,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t1,tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[7]);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t2,t3,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]);}

/* k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_14206,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 264  append");
t3=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,t1,C_SCHEME_END_OF_LIST);}

/* k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14206(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14206,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[9],t1);
t3=(C_word)C_i_caddr(((C_word*)t0)[8]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_14003,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t3,a[5]=t2,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[5],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[7],a[11]=t7,a[12]=t5,tmp=(C_word)a,a+=13,tmp);
t9=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t9))){
t10=t8;
f_14003(t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_length(t2);
t11=(C_word)C_a_i_minus(&a,2,t10,C_fix(2));
t12=(C_word)C_i_list_tail(t2,t11);
t13=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14144,a[2]=t12,a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t14=(C_word)C_i_cadr(t12);
C_trace("ChickenBridge.scm: 264  symbol->string");
t15=*((C_word*)lf[19]+1);
((C_proc3)C_retrieve_proc(t15))(3,t15,t13,t14);}}

/* k14142 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14144,2,t0,t1);}
t2=(C_word)C_i_string_length(t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14153,a[2]=t1,a[3]=t2,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_greaterp(t2,C_fix(3)))){
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14178,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(C_word)C_a_i_minus(&a,2,t2,C_fix(3));
C_trace("ChickenBridge.scm: 264  substring");
t6=*((C_word*)lf[196]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,t1,t5);}
else{
t4=t3;
f_14153(t4,C_SCHEME_FALSE);}}

/* k14176 in k14142 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14178(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_14153(t2,(C_word)C_i_string_equal_p(t1,lf[574]));}

/* k14151 in k14142 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_14153(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14153,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14160,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_14164,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[3],C_fix(3));
C_trace("ChickenBridge.scm: 264  substring");
t5=*((C_word*)lf[196]+1);
((C_proc5)C_retrieve_proc(t5))(5,t5,t3,((C_word*)t0)[2],C_fix(0),t4);}
else{
t2=((C_word*)t0)[5];
f_14003(t2,C_SCHEME_UNDEFINED);}}

/* k14162 in k14151 in k14142 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14164(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  string->symbol");
t2=*((C_word*)lf[140]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k14158 in k14151 in k14142 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_14003(t2,(C_word)C_i_set_cdr(((C_word*)t0)[2],t1));}

/* k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_14003(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14003,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_14006,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[11],a[7]=((C_word*)t0)[12],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_14081,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t3,((C_word*)t0)[2],C_fix(24064));}

/* k14079 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14081(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14081,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14085,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  add-emit-info");
f_4979(t2,lf[571],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[9])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14122,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t2,((C_word*)t0)[2],C_fix(24320));}}

/* k14120 in k14079 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14122,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_14126,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  add-emit-info");
f_4979(t2,lf[573],C_SCHEME_TRUE,((C_word*)((C_word*)t0)[8])[1]);}
else{
t2=((C_word*)t0)[4];
f_14006(t2,C_SCHEME_UNDEFINED);}}

/* k14124 in k14120 in k14079 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14126,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14130,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k14128 in k14124 in k14120 in k14079 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14130,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[564],((C_word*)t0)[4],((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[572]);
t6=((C_word*)t0)[2];
f_14006(t6,t5);}

/* k14083 in k14079 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14085,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_14089,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[8])[1],((C_word*)t0)[2]);}

/* k14087 in k14083 in k14079 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14089(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14089,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14092,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14116,a[2]=t3,a[3]=((C_word*)t0)[6],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  get-emit-info");
f_4967(t4,lf[571],((C_word*)((C_word*)t0)[2])[1]);}

/* k14114 in k14087 in k14083 in k14079 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14116,2,t0,t1);}
t2=(C_word)C_eqp(lf[570],t1);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,1,lf[383]);
t4=(C_word)C_a_i_list(&a,3,lf[499],t3,((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[473],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_14092(t7,t6);}
else{
t3=((C_word*)t0)[2];
f_14092(t3,C_SCHEME_UNDEFINED);}}

/* k14090 in k14087 in k14083 in k14079 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_14092(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14092,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[564],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[569]);
t5=((C_word*)t0)[2];
f_14006(t5,t4);}

/* k14004 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_14006(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14006,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14009,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14020,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14078,a[2]=((C_word*)t0)[7],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  symbol->string");
t5=*((C_word*)lf[19]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)t0)[2]);}

/* k14076 in k14004 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  string-append");
t2=*((C_word*)lf[193]+1);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1,lf[568]);}

/* k14018 in k14004 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14020(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14020,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_14022,a[2]=t3,a[3]=((C_word*)t0)[4],a[4]=((C_word)li322),tmp=(C_word)a,a+=5,tmp));
t5=((C_word*)t3)[1];
f_14022(t5,((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* do1288 in k14018 in k14004 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_14022(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_14022,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14037,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  string-append");
t6=*((C_word*)lf[193]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)t4)[1],lf[566]);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14041,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14070,a[2]=t4,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t3);
C_trace("ChickenBridge.scm: 264  symbol->string");
t8=*((C_word*)lf[19]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}

/* k14068 in do1288 in k14018 in k14004 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14070(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  string-append");
t2=*((C_word*)lf[193]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k14039 in do1288 in k14018 in k14004 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14041(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14041,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_14044,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t3;
f_14044(t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_14058,a[2]=t3,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  string-append");
t6=*((C_word*)lf[193]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,((C_word*)((C_word*)t0)[5])[1],lf[567]);}}

/* k14056 in k14039 in do1288 in k14018 in k14004 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14058(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_14044(t3,t2);}

/* k14042 in k14039 in do1288 in k14018 in k14004 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_14044(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
t3=((C_word*)((C_word*)t0)[4])[1];
f_14022(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t2);}

/* k14035 in do1288 in k14018 in k14004 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14037(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14037,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[204],t1);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}

/* k14007 in k14004 in k14001 in k14204 in k13992 in k13989 in k13986 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_14009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_14009,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t3=((C_word*)t0)[3];
f_13927(2,t3,(C_word)C_i_set_cdr(((C_word*)t0)[2],t2));}

/* do1262 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_13939(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13939,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13949,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t3,t4,((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}}

/* k13947 in do1262 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13949,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13955,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  sprintf");
t4=C_retrieve(lf[5]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,lf[565],t2);}

/* k13953 in k13947 in do1262 in k13928 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13955,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[564],((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,3,lf[203],t1,((C_word*)t0)[6]);
t4=(C_word)C_a_i_list(&a,2,t2,t3);
t5=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[5])[1],t4);
t6=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[5])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[5])+1,t6);
t8=(C_word)C_i_cdr(((C_word*)t0)[4]);
t9=((C_word*)((C_word*)t0)[3])[1];
f_13939(t9,((C_word*)t0)[2],t8);}

/* k13925 in k13916 in a13913 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13927(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* a13874 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13875(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13875,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_cadr(((C_word*)t4)[1]);
t6=C_set_block_item(t4,0,t5);
t7=(C_word)C_i_car(((C_word*)t4)[1]);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13886,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13892,a[2]=t8,a[3]=t7,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t9,t7,C_fix(24576));}

/* k13890 in a13874 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13892,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[4])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13908,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t4=(C_word)C_i_caddr(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 264  remove-token-type");
f_6185(t3,t4,C_fix(256));}
else{
t2=((C_word*)t0)[2];
f_13886(t2,C_SCHEME_UNDEFINED);}}

/* k13906 in k13890 in a13874 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13908,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t5=((C_word*)t0)[2];
f_13886(t5,t4);}

/* k13884 in a13874 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_13886(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[3],C_fix(36352),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* k13867 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13869(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(36352),t1);}

/* k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[57],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7501,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7504,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13793,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(33792),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,C_fix(35584),t4);
t6=(C_word)C_a_i_cons(&a,2,C_fix(35072),t5);
t7=(C_word)C_a_i_cons(&a,2,C_fix(36096),t6);
t8=(C_word)C_a_i_cons(&a,2,C_fix(34816),t7);
t9=(C_word)C_a_i_cons(&a,2,C_fix(35328),t8);
t10=(C_word)C_a_i_cons(&a,2,C_fix(31488),t9);
t11=(C_word)C_a_i_cons(&a,2,C_fix(31744),t10);
t12=(C_word)C_a_i_cons(&a,2,C_fix(32512),t11);
t13=(C_word)C_a_i_cons(&a,2,C_fix(32256),t12);
t14=(C_word)C_a_i_cons(&a,2,C_fix(30464),t13);
t15=(C_word)C_a_i_cons(&a,2,C_fix(34304),t14);
t16=(C_word)C_a_i_cons(&a,2,C_fix(34560),t15);
t17=(C_word)C_a_i_cons(&a,2,C_fix(33536),t16);
t18=(C_word)C_a_i_cons(&a,2,C_fix(32000),t17);
t19=(C_word)C_a_i_cons(&a,2,C_fix(36352),t18);
t20=(C_word)C_a_i_cons(&a,2,lf[144],t19);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[563],C_fix(36608),t20,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* k13791 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(36608),t1);}

/* k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7504(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7504,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7507,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13749,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(C_word)C_a_i_cons(&a,2,C_fix(36608),C_SCHEME_END_OF_LIST);
t5=(C_word)C_a_i_cons(&a,2,lf[161],t4);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13755,a[2]=((C_word)li318),tmp=(C_word)a,a+=3,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13769,a[2]=((C_word)li319),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  make-rule");
f_4549(t3,lf[562],C_fix(36864),t5,t6,t7);}

/* a13768 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13769(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_13769,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13777,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13781,a[2]=t4,a[3]=t3,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t6,t2);}

/* k13779 in a13768 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5007(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k13775 in a13768 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13777(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13777,2,t0,t1);}
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,lf[175],t1));}

/* a13754 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13755(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13755,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13763,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  parse-unit-position");
f_4907(t4,t5);}

/* k13761 in a13754 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[3],C_fix(36864),((C_word*)t0)[2],t1);}

/* k13747 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13749(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  hash-table-set!");
t2=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[2],C_retrieve2(lf[109],"*rules*"),C_fix(36864),t1);}

/* k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7507(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7507,2,t0,t1);}
t2=lf[188]=C_SCHEME_FALSE;;
t3=lf[189]=C_SCHEME_FALSE;;
t4=lf[190]=C_SCHEME_FALSE;;
t5=C_mutate((C_word*)lf[191]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7513,a[2]=((C_word)li132),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate((C_word*)lf[203]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7684,a[2]=((C_word)li136),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate((C_word*)lf[213]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7863,a[2]=((C_word)li137),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate((C_word*)lf[214]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7872,a[2]=((C_word)li138),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[222]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7919,a[2]=((C_word)li139),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[224]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7925,a[2]=((C_word)li140),tmp=(C_word)a,a+=3,tmp));
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7944,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13741,a[2]=((C_word)li317),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  ##sys#register-macro-2");
t13=C_retrieve(lf[553]);
((C_proc4)C_retrieve_proc(t13))(4,t13,t11,lf[560],t12);}

/* a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13741(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13741,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11297,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[561]);}

/* k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11297(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11297,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11300,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  parse-iteration");
f_11279(t2,lf[560],((C_word*)t0)[2],C_retrieve2(lf[424],"*loop-operators*"));}

/* k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11300(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11300,2,t0,t1);}
t2=C_SCHEME_END_OF_LIST;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_assoc(lf[383],C_retrieve2(lf[424],"*loop-operators*"));
t7=(C_word)C_i_cadddr(t6);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11307,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t3,a[6]=t5,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11452,a[2]=t8,a[3]=t7,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11466,a[2]=t1,a[3]=t9,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  loop-returning");
t11=C_retrieve2(lf[235],"loop-returning");
f_8051(3,t11,t10,t1);}

/* k11464 in k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11466,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(t1))){
t2=((C_word*)t0)[3];
f_11452(t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11462,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  loop-returning");
t3=C_retrieve2(lf[235],"loop-returning");
f_8051(3,t3,t2,((C_word*)t0)[2]);}}

/* k11460 in k11464 in k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_11452(t2,(C_word)C_i_car(t1));}

/* k11450 in k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_11452(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  returnfn");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k11305 in k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11307(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11307,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11311,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  loop-end-tests");
t4=C_retrieve2(lf[230],"loop-end-tests");
f_8003(3,t4,t3,((C_word*)t0)[2]);}

/* k11309 in k11305 in k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11311,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11314,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(t1))){
t3=t2;
f_11314(t3,C_SCHEME_END_OF_LIST);}
else{
t3=(C_word)C_i_cdr(t1);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(t1):(C_word)C_a_i_cons(&a,2,lf[144],t1));
t6=(C_word)C_a_i_list(&a,4,lf[176],t5,lf[559],C_SCHEME_FALSE);
t7=t2;
f_11314(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k11312 in k11309 in k11305 in k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_11314(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11314,NULL,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11325,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  loop-bindings");
t4=C_retrieve2(lf[227],"loop-bindings");
f_7967(3,t4,t3,((C_word*)t0)[2]);}

/* k11323 in k11312 in k11309 in k11305 in k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11325(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11325,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11329,a[2]=((C_word*)t0)[6],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11333,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  loop-initially");
t4=C_retrieve2(lf[229],"loop-initially");
f_7991(3,t4,t3,((C_word*)t0)[3]);}

/* k11331 in k11323 in k11312 in k11309 in k11305 in k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11333,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,lf[383]);
t3=(C_word)C_a_i_list(&a,1,lf[518]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11397,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=t2,a[7]=t3,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11401,a[2]=((C_word*)t0)[2],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11405,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[6],a[4]=t5,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  loop-looping");
t7=C_retrieve2(lf[231],"loop-looping");
f_8015(3,t7,t6,((C_word*)t0)[3]);}

/* k11403 in k11331 in k11323 in k11312 in k11309 in k11305 in k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11405(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11405,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11409,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11413,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  loop-stepping");
t4=C_retrieve2(lf[233],"loop-stepping");
f_8027(3,t4,t3,((C_word*)t0)[2]);}

/* k11411 in k11403 in k11331 in k11323 in k11312 in k11309 in k11305 in k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11413(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11413,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
C_trace("ChickenBridge.scm: 265  ##sys#append");
t4=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[2],t1,t3);}

/* k11407 in k11403 in k11331 in k11323 in k11312 in k11309 in k11305 in k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11409(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  ##sys#append");
t2=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k11399 in k11331 in k11323 in k11312 in k11309 in k11305 in k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  ##sys#append");
t2=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k11395 in k11331 in k11323 in k11312 in k11309 in k11305 in k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11397,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,C_SCHEME_END_OF_LIST,t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[8],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[548],t3);
t5=(C_word)C_a_i_list(&a,3,lf[499],((C_word*)t0)[7],t4);
t6=(C_word)C_a_i_list(&a,2,lf[473],t5);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11365,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t6,tmp=(C_word)a,a+=6,tmp);
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11369,a[2]=t7,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  loop-finally");
t9=C_retrieve2(lf[234],"loop-finally");
f_8039(3,t9,t8,((C_word*)t0)[2]);}

/* k11367 in k11395 in k11331 in k11323 in k11312 in k11309 in k11305 in k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11369(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11369,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 265  ##sys#append");
t3=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k11363 in k11395 in k11331 in k11323 in k11312 in k11309 in k11305 in k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11365,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,lf[499],t3);
t5=(C_word)C_a_i_list(&a,2,lf[473],t4);
t6=(C_word)C_a_i_list(&a,1,t5);
C_trace("ChickenBridge.scm: 265  ##sys#append");
t7=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t7+1)))(4,t7,((C_word*)t0)[3],((C_word*)t0)[2],t6);}

/* k11327 in k11323 in k11312 in k11309 in k11305 in k11298 in k11295 in a13740 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11329(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11329,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[548],t2));}

/* k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7947,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13727,a[2]=((C_word)li316),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  ##sys#register-macro");
t4=C_retrieve(lf[517]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[558],t3);}

/* a13726 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13727(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[27],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_13727,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,3,lf[557],t2,t3);
t5=(C_word)C_a_i_list(&a,3,lf[170],t3,t4);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,3,lf[175],t5,t3));}

/* k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7947,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7950,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13698,a[2]=((C_word)li315),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  ##sys#register-macro");
t4=C_retrieve(lf[517]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[556],t3);}

/* a13697 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13698(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13698,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13702,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[555]);}

/* k13700 in a13697 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13702,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[21],((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,2,t1,t2);
t4=(C_word)C_a_i_list(&a,1,t3);
t5=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)t0)[3]);
t6=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[3],t5);
t7=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_list(&a,4,lf[548],t4,t6,t1));}

/* k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7950(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7950,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7953,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13695,a[2]=((C_word)li314),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  ##sys#register-macro");
t4=C_retrieve(lf[517]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[554],t3);}

/* a13694 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13695(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13695,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word t38;
C_word t39;
C_word t40;
C_word t41;
C_word t42;
C_word t43;
C_word t44;
C_word t45;
C_word t46;
C_word t47;
C_word t48;
C_word t49;
C_word t50;
C_word t51;
C_word t52;
C_word t53;
C_word t54;
C_word t55;
C_word t56;
C_word t57;
C_word t58;
C_word t59;
C_word t60;
C_word t61;
C_word t62;
C_word t63;
C_word t64;
C_word t65;
C_word t66;
C_word t67;
C_word t68;
C_word t69;
C_word t70;
C_word t71;
C_word t72;
C_word t73;
C_word ab[492],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7953,2,t0,t1);}
t2=C_mutate(&lf[226],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7961,a[2]=((C_word)li141),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate(&lf[227],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7967,a[2]=((C_word)li142),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate(&lf[228],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7979,a[2]=((C_word)li143),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate(&lf[229],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7991,a[2]=((C_word)li144),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[230],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8003,a[2]=((C_word)li145),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[231],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8015,a[2]=((C_word)li146),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[232],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8021,a[2]=((C_word)li147),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate(&lf[233],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8027,a[2]=((C_word)li148),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate(&lf[234],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8039,a[2]=((C_word)li149),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate(&lf[235],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8051,a[2]=((C_word)li150),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate(&lf[236],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8063,a[2]=((C_word)li152),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate(&lf[246],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8214,a[2]=((C_word)li155),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate(&lf[247],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8285,a[2]=((C_word)li156),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate(&lf[248],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8291,a[2]=((C_word)li157),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate(&lf[249],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8297,a[2]=((C_word)li158),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate(&lf[250],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8303,a[2]=((C_word)li162),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate(&lf[260],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8463,a[2]=((C_word)li163),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate(&lf[268],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8545,a[2]=((C_word)li165),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate(&lf[298],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8927,a[2]=((C_word)li168),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate(&lf[301],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8974,a[2]=((C_word)li170),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate(&lf[322],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9325,a[2]=((C_word)li172),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate(&lf[330],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9467,a[2]=((C_word)li174),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate(&lf[344],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9660,a[2]=((C_word)li176),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate(&lf[347],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9727,a[2]=((C_word)li177),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate(&lf[350],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9765,a[2]=((C_word)li178),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate(&lf[353],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9924,a[2]=((C_word)li184),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate(&lf[382],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10470,a[2]=((C_word)li185),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate(&lf[384],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10476,a[2]=((C_word)li186),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate(&lf[390],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10542,a[2]=((C_word)li187),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate(&lf[396],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10633,a[2]=((C_word)li188),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate(&lf[399],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10734,a[2]=((C_word)li192),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate(&lf[406],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10865,a[2]=((C_word)li197),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate(&lf[413],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11279,a[2]=((C_word)li202),tmp=(C_word)a,a+=3,tmp));
t35=(C_word)C_a_i_list(&a,3,lf[331],C_retrieve2(lf[330],"parse-with"),C_SCHEME_FALSE);
t36=(C_word)C_a_i_list(&a,3,lf[240],C_retrieve2(lf[350],"parse-initially"),C_SCHEME_FALSE);
t37=(C_word)C_a_i_list(&a,3,lf[421],C_retrieve2(lf[298],"parse-repeat"),lf[418]);
t38=(C_word)C_a_i_list(&a,2,lf[276],C_retrieve2(lf[268],"parse-numerical-for"));
t39=(C_word)C_a_i_list(&a,2,lf[272],C_retrieve2(lf[268],"parse-numerical-for"));
t40=(C_word)C_a_i_list(&a,2,lf[274],C_retrieve2(lf[268],"parse-numerical-for"));
t41=(C_word)C_a_i_list(&a,2,lf[283],C_retrieve2(lf[268],"parse-numerical-for"));
t42=(C_word)C_a_i_list(&a,2,lf[273],C_retrieve2(lf[268],"parse-numerical-for"));
t43=(C_word)C_a_i_list(&a,2,lf[275],C_retrieve2(lf[268],"parse-numerical-for"));
t44=(C_word)C_a_i_list(&a,2,lf[310],C_retrieve2(lf[301],"parse-sequence-iteration"));
t45=(C_word)C_a_i_list(&a,2,lf[319],C_retrieve2(lf[301],"parse-sequence-iteration"));
t46=(C_word)C_a_i_list(&a,2,lf[302],C_retrieve2(lf[301],"parse-sequence-iteration"));
t47=(C_word)C_a_i_list(&a,2,lf[323],C_retrieve2(lf[322],"parse-general-iteration"));
t48=(C_word)C_a_i_list(&a,2,lf[307],C_retrieve2(lf[301],"parse-sequence-iteration"));
t49=(C_word)C_a_i_list(&a,14,lf[269],C_retrieve2(lf[260],"parse-for"),lf[418],t38,t39,t40,t41,t42,t43,t44,t45,t46,t47,t48);
t50=(C_word)C_a_i_list(&a,3,lf[422],C_retrieve2(lf[260],"parse-for"),lf[418]);
t51=(C_word)C_a_i_list(&a,3,lf[414],C_retrieve2(lf[344],"parse-do"),lf[404]);
t52=(C_word)C_a_i_list(&a,3,lf[364],C_retrieve2(lf[353],"parse-accumulation"),lf[404]);
t53=(C_word)C_a_i_list(&a,3,lf[15],C_retrieve2(lf[353],"parse-accumulation"),lf[404]);
t54=(C_word)C_a_i_list(&a,3,lf[369],C_retrieve2(lf[353],"parse-accumulation"),lf[404]);
t55=(C_word)C_a_i_list(&a,3,lf[354],C_retrieve2(lf[353],"parse-accumulation"),lf[404]);
t56=(C_word)C_a_i_list(&a,3,lf[355],C_retrieve2(lf[353],"parse-accumulation"),lf[404]);
t57=(C_word)C_a_i_list(&a,3,lf[357],C_retrieve2(lf[353],"parse-accumulation"),lf[404]);
t58=(C_word)C_a_i_list(&a,3,lf[358],C_retrieve2(lf[353],"parse-accumulation"),lf[404]);
t59=(C_word)C_a_i_list(&a,4,lf[391],C_retrieve2(lf[390],"parse-thereis"),lf[404],C_retrieve2(lf[382],"loop-return"));
t60=(C_word)C_a_i_list(&a,4,lf[392],C_retrieve2(lf[390],"parse-thereis"),lf[404],C_retrieve2(lf[382],"loop-return"));
t61=(C_word)C_a_i_list(&a,4,lf[393],C_retrieve2(lf[390],"parse-thereis"),lf[404],C_retrieve2(lf[382],"loop-return"));
t62=(C_word)C_a_i_list(&a,4,lf[383],C_retrieve2(lf[396],"parse-return"),lf[404],C_retrieve2(lf[382],"loop-return"));
t63=(C_word)C_a_i_list(&a,3,lf[387],C_retrieve2(lf[384],"parse-while-until"),C_SCHEME_FALSE);
t64=(C_word)C_a_i_list(&a,3,lf[386],C_retrieve2(lf[384],"parse-while-until"),C_SCHEME_FALSE);
t65=(C_word)C_a_i_list(&a,3,lf[423],C_retrieve2(lf[406],"parse-conditional"),lf[404]);
t66=(C_word)C_a_i_list(&a,3,lf[409],C_retrieve2(lf[406],"parse-conditional"),lf[404]);
t67=(C_word)C_a_i_list(&a,3,lf[176],C_retrieve2(lf[406],"parse-conditional"),lf[404]);
t68=(C_word)C_a_i_list(&a,3,lf[244],C_retrieve2(lf[347],"parse-finally"),C_SCHEME_FALSE);
t69=(C_word)C_a_i_list(&a,23,t35,t36,t37,t49,t50,t51,t52,t53,t54,t55,t56,t57,t58,t59,t60,t61,t62,t63,t64,t65,t66,t67,t68);
t70=C_mutate(&lf[424],t69);
t71=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11473,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t72=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13553,a[2]=((C_word)li313),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  ##sys#register-macro-2");
t73=C_retrieve(lf[553]);
((C_proc4)C_retrieve_proc(t73))(4,t73,t71,lf[418],t72);}

/* a13552 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13553(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_13553,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11479,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  parse-iteration");
f_11279(t3,lf[418],t2,C_retrieve2(lf[424],"*loop-operators*"));}

/* k11477 in a13552 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11479(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11479,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11482,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_assoc(lf[383],C_retrieve2(lf[424],"*loop-operators*"));
t4=(C_word)C_i_cadddr(t3);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11611,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  loop-returning");
t6=C_retrieve2(lf[235],"loop-returning");
f_8051(3,t6,t5,t1);}

/* k11609 in k11477 in a13552 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11611(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11611,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=(C_word)C_a_i_list(&a,1,t2);
C_apply(4,0,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k11480 in k11477 in a13552 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11482(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11482,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11493,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  loop-bindings");
t3=C_retrieve2(lf[227],"loop-bindings");
f_7967(3,t3,t2,((C_word*)t0)[2]);}

/* k11491 in k11480 in k11477 in a13552 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11493,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11497,a[2]=((C_word*)t0)[4],a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11501,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  loop-initially");
t4=C_retrieve2(lf[229],"loop-initially");
f_7991(3,t4,t3,((C_word*)t0)[2]);}

/* k11499 in k11491 in k11480 in k11477 in a13552 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11501(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11501,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11521,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11525,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  loop-end-tests");
t4=C_retrieve2(lf[230],"loop-end-tests");
f_8003(3,t4,t3,((C_word*)t0)[2]);}

/* k11523 in k11499 in k11491 in k11480 in k11477 in a13552 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11525,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11528,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cdr(t1);
t4=(C_truep(t3)?(C_word)C_a_i_cons(&a,2,lf[144],t1):(C_word)C_i_car(t1));
t5=(C_word)C_a_i_list(&a,2,lf[518],lf[106]);
t6=(C_word)C_a_i_list(&a,3,lf[176],t4,t5);
t7=t2;
f_11528(t7,(C_word)C_a_i_list(&a,1,t6));}
else{
t3=t2;
f_11528(t3,C_SCHEME_END_OF_LIST);}}

/* k11526 in k11523 in k11499 in k11491 in k11480 in k11477 in a13552 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_11528(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11528,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11532,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11536,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  loop-looping");
t4=C_retrieve2(lf[231],"loop-looping");
f_8015(3,t4,t3,((C_word*)t0)[2]);}

/* k11534 in k11526 in k11523 in k11499 in k11491 in k11480 in k11477 in a13552 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11536(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11536,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11540,a[2]=t1,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11544,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  loop-stepping");
t4=C_retrieve2(lf[233],"loop-stepping");
f_8027(3,t4,t3,((C_word*)t0)[2]);}

/* k11542 in k11534 in k11526 in k11523 in k11499 in k11491 in k11480 in k11477 in a13552 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11544(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11544,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[518],lf[549]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11560,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11564,a[2]=t3,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  loop-finally");
t5=C_retrieve2(lf[234],"loop-finally");
f_8039(3,t5,t4,((C_word*)t0)[2]);}

/* k11562 in k11542 in k11534 in k11526 in k11523 in k11499 in k11491 in k11480 in k11477 in a13552 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11564(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11564,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("##sys#append");
t3=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,((C_word*)t0)[2],t1,t2);}

/* k11558 in k11542 in k11534 in k11526 in k11523 in k11499 in k11491 in k11480 in k11477 in a13552 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11560,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[106],t1);
t3=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[4],t2);
C_trace("##sys#append");
t4=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,((C_word*)t0)[3],((C_word*)t0)[2],t3);}

/* k11538 in k11534 in k11526 in k11523 in k11499 in k11491 in k11480 in k11477 in a13552 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11540(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k11530 in k11526 in k11523 in k11499 in k11491 in k11480 in k11477 in a13552 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11532(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("##sys#append");
t2=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k11519 in k11499 in k11491 in k11480 in k11477 in a13552 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11521(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11521,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[549],t1);
t3=(C_word)C_a_i_cons(&a,2,lf[550],t2);
t4=(C_word)C_a_i_list(&a,3,lf[551],lf[552],t3);
t5=(C_word)C_a_i_list(&a,1,t4);
C_trace("##sys#append");
t6=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,((C_word*)t0)[3],((C_word*)t0)[2],t5);}

/* k11495 in k11491 in k11480 in k11477 in a13552 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11497,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[3],t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,lf[548],t2));}

/* k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11473(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word t36;
C_word t37;
C_word ab[84],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11473,2,t0,t1);}
t2=C_set_block_item(lf[425],0,C_fix(8));
t3=C_set_block_item(lf[426],0,C_fix(9));
t4=C_set_block_item(lf[427],0,C_fix(10));
t5=C_set_block_item(lf[428],0,C_fix(11));
t6=C_set_block_item(lf[429],0,C_fix(12));
t7=C_set_block_item(lf[430],0,C_fix(13));
t8=C_set_block_item(lf[431],0,C_fix(14));
t9=C_mutate((C_word*)lf[432]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11624,a[2]=((C_word)li213),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[441]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11790,a[2]=((C_word)li215),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[442]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11808,a[2]=((C_word)li217),tmp=(C_word)a,a+=3,tmp));
t12=C_mutate((C_word*)lf[443]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11823,a[2]=((C_word)li219),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[444]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11842,a[2]=((C_word)li221),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[445]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11857,a[2]=((C_word)li223),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[446]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11876,a[2]=((C_word)li225),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[447]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11891,a[2]=((C_word)li227),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[448]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11910,a[2]=((C_word)li229),tmp=(C_word)a,a+=3,tmp));
t18=C_mutate((C_word*)lf[449]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11929,a[2]=((C_word)li231),tmp=(C_word)a,a+=3,tmp));
t19=C_mutate((C_word*)lf[450]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11952,a[2]=((C_word)li233),tmp=(C_word)a,a+=3,tmp));
t20=C_mutate((C_word*)lf[451]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11971,a[2]=((C_word)li235),tmp=(C_word)a,a+=3,tmp));
t21=C_mutate((C_word*)lf[452]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11994,a[2]=((C_word)li238),tmp=(C_word)a,a+=3,tmp));
t22=C_mutate((C_word*)lf[453]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12041,a[2]=((C_word)li241),tmp=(C_word)a,a+=3,tmp));
t23=C_mutate((C_word*)lf[455]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12096,a[2]=((C_word)li243),tmp=(C_word)a,a+=3,tmp));
t24=C_mutate((C_word*)lf[456]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12115,a[2]=((C_word)li245),tmp=(C_word)a,a+=3,tmp));
t25=C_mutate((C_word*)lf[457]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12138,a[2]=((C_word)li247),tmp=(C_word)a,a+=3,tmp));
t26=C_mutate((C_word*)lf[458]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12166,a[2]=((C_word)li249),tmp=(C_word)a,a+=3,tmp));
t27=C_mutate((C_word*)lf[459]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12194,a[2]=((C_word)li251),tmp=(C_word)a,a+=3,tmp));
t28=C_mutate((C_word*)lf[460]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12222,a[2]=((C_word)li253),tmp=(C_word)a,a+=3,tmp));
t29=C_mutate((C_word*)lf[461]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12250,a[2]=((C_word)li255),tmp=(C_word)a,a+=3,tmp));
t30=C_mutate((C_word*)lf[462]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12278,a[2]=((C_word)li257),tmp=(C_word)a,a+=3,tmp));
t31=C_mutate((C_word*)lf[463]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12306,a[2]=((C_word)li259),tmp=(C_word)a,a+=3,tmp));
t32=C_mutate((C_word*)lf[464]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12334,a[2]=((C_word)li261),tmp=(C_word)a,a+=3,tmp));
t33=C_mutate((C_word*)lf[465]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12362,a[2]=((C_word)li263),tmp=(C_word)a,a+=3,tmp));
t34=C_mutate((C_word*)lf[466]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12390,a[2]=((C_word)li265),tmp=(C_word)a,a+=3,tmp));
t35=C_mutate((C_word*)lf[467]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12405,a[2]=((C_word)li272),tmp=(C_word)a,a+=3,tmp));
t36=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12463,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t37=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t37))(5,t37,t36,*((C_word*)lf[2]+1),lf[546],lf[547]);}

/* k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12463(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12463,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12466,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[544],lf[545]);}

/* k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12466,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12469,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[542],lf[543]);}

/* k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12469(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12469,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12472,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[540],lf[541]);}

/* k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12472(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12472,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12475,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[538],lf[539]);}

/* k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12475(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12475,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12478,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[536],lf[537]);}

/* k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12478,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12481,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[534],lf[535]);}

/* k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12481(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12481,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12484,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[532],lf[533]);}

/* k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12484,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12487,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[530],lf[531]);}

/* k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12487,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12490,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[528],lf[529]);}

/* k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12490,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12493,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[526],lf[527]);}

/* k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12493,2,t0,t1);}
t2=C_mutate((C_word*)lf[474]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12495,a[2]=((C_word)li274),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[475]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12552,a[2]=((C_word)li276),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[476]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12609,a[2]=((C_word)li278),tmp=(C_word)a,a+=3,tmp));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12618,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 267  hash-table-set!");
t6=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t5,*((C_word*)lf[2]+1),lf[524],lf[525]);}

/* k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12618(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12618,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12621,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 267  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[522],lf[523]);}

/* k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12621,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12624,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 267  hash-table-set!");
t3=C_retrieve(lf[519]);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,*((C_word*)lf[2]+1),lf[520],lf[521]);}

/* k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12624,2,t0,t1);}
t2=C_mutate((C_word*)lf[204]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12626,a[2]=((C_word)li279),tmp=(C_word)a,a+=3,tmp));
t3=C_mutate((C_word*)lf[192]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12640,a[2]=((C_word)li280),tmp=(C_word)a,a+=3,tmp));
t4=C_mutate((C_word*)lf[477]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12654,a[2]=((C_word)li281),tmp=(C_word)a,a+=3,tmp));
t5=C_mutate((C_word*)lf[478]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12657,a[2]=((C_word)li282),tmp=(C_word)a,a+=3,tmp));
t6=C_mutate(&lf[479],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12669,a[2]=((C_word)li284),tmp=(C_word)a,a+=3,tmp));
t7=C_mutate(&lf[481],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12678,a[2]=((C_word)li286),tmp=(C_word)a,a+=3,tmp));
t8=C_mutate(&lf[482],(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12722,a[2]=((C_word)li288),tmp=(C_word)a,a+=3,tmp));
t9=C_mutate((C_word*)lf[215]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12744,a[2]=((C_word)li290),tmp=(C_word)a,a+=3,tmp));
t10=C_mutate((C_word*)lf[483]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12763,a[2]=((C_word)li297),tmp=(C_word)a,a+=3,tmp));
t11=C_mutate((C_word*)lf[484]+1,C_retrieve(lf[478]));
t12=C_mutate((C_word*)lf[485]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12931,a[2]=((C_word)li299),tmp=(C_word)a,a+=3,tmp));
t13=C_mutate((C_word*)lf[491]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12994,a[2]=((C_word)li301),tmp=(C_word)a,a+=3,tmp));
t14=C_mutate((C_word*)lf[492]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13003,a[2]=((C_word)li303),tmp=(C_word)a,a+=3,tmp));
t15=C_mutate((C_word*)lf[493]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13009,a[2]=((C_word)li305),tmp=(C_word)a,a+=3,tmp));
t16=C_mutate((C_word*)lf[494]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13018,a[2]=((C_word)li307),tmp=(C_word)a,a+=3,tmp));
t17=C_mutate((C_word*)lf[496]+1,(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13076,a[2]=((C_word)li309),tmp=(C_word)a,a+=3,tmp));
t18=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13086,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
t19=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13547,a[2]=((C_word)li312),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 407  ##sys#register-macro");
t20=C_retrieve(lf[517]);
((C_proc4)C_retrieve_proc(t20))(4,t20,t18,lf[518],t19);}

/* a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13547(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+17)){
C_save_and_reclaim((void*)tr4r,(void*)f_13547r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest(a,C_rest_count(0));
f_13547r(t0,t1,t2,t3,t4);}}

static void C_ccall f_13547r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a=C_alloc(17);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13101,a[2]=t2,a[3]=t12,a[4]=t6,a[5]=t10,a[6]=t1,a[7]=t8,a[8]=t3,tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_listp(t2))){
t14=t13;
f_13101(2,t14,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 416  error");
t14=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t14))(4,t14,t13,lf[516],t2);}}

/* k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13101(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13101,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13104,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)t0)[8]))){
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[8]))){
C_trace("ChickenBridge.scm: 420  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[514]);}
else{
t3=t2;
f_13104(2,t3,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 418  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,lf[515],((C_word*)t0)[8]);}}

/* k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13104(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13104,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13107,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13382,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[7],a[5]=t4,a[6]=((C_word)li311),tmp=(C_word)a,a+=7,tmp));
t6=((C_word*)t4)[1];
f_13382(t6,t2,((C_word*)t0)[2]);}

/* do2840 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_13382(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13382,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13392,a[2]=t1,a[3]=((C_word*)t0)[5],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13402,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13490,a[2]=t4,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_car(t2);
t8=(C_word)C_i_length(t7);
C_trace("ChickenBridge.scm: 424  <");
C_lessp(5,0,t6,C_fix(0),t8,C_fix(4));}
else{
t6=t4;
f_13402(t6,C_SCHEME_FALSE);}}}

/* k13488 in do2840 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13490(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_car(t2);
t4=((C_word*)t0)[2];
f_13402(t4,(C_word)C_i_symbolp(t3));}
else{
t2=((C_word*)t0)[2];
f_13402(t2,C_SCHEME_FALSE);}}

/* k13400 in do2840 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_13402(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13402,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[6]);
t3=(C_word)C_i_car(t2);
t4=(C_word)C_i_car(((C_word*)t0)[6]);
t5=(C_word)C_i_cadr(t4);
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13411,a[2]=t5,a[3]=t3,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t7=(C_word)C_i_car(((C_word*)t0)[6]);
t8=(C_word)C_i_cddr(t7);
if(C_truep((C_word)C_i_nullp(t8))){
t9=t6;
f_13411(t9,lf[512]);}
else{
t9=(C_word)C_i_car(((C_word*)t0)[6]);
t10=t6;
f_13411(t10,(C_word)C_i_caddr(t9));}}
else{
t2=(C_word)C_i_car(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 437  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],lf[513],t2);}}

/* k13409 in k13400 in do2840 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_13411(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13411,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13415,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 432  append");
t4=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[7])[1],t3);}

/* k13413 in k13409 in k13400 in do2840 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13415,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_13419,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 433  append");
t5=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k13417 in k13413 in k13409 in k13400 in do2840 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13419,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13423,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13427,a[2]=((C_word*)t0)[5],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[3],lf[512]);
if(C_truep(t5)){
t6=t4;
f_13427(t6,C_SCHEME_END_OF_LIST);}
else{
t6=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[2],((C_word*)t0)[3]);
t7=t4;
f_13427(t7,(C_word)C_a_i_list(&a,1,t6));}}

/* k13425 in k13417 in k13413 in k13409 in k13400 in do2840 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_13427(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 434  append");
t2=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k13421 in k13417 in k13413 in k13409 in k13400 in do2840 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_13392(2,t3,t2);}

/* k13390 in do2840 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13392(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13382(t3,((C_word*)t0)[2],t2);}

/* k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13107(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13107,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13110,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 439  gensym");
t3=C_retrieve(lf[172]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13110(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13110,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_13113,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 440  gensym");
t3=C_retrieve(lf[172]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13113(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13113,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_13116,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 441  gensym");
t3=C_retrieve(lf[172]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k13114 in k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13116(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13116,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_13119,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 442  gensym");
t3=C_retrieve(lf[172]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k13117 in k13114 in k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13119,2,t0,t1);}
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_13122,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],a[11]=((C_word*)t0)[9],a[12]=t5,a[13]=((C_word*)t0)[10],tmp=(C_word)a,a+=14,tmp);
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13275,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[3])[1]))){
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
if(C_truep((C_word)C_i_pairp(t8))){
t9=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13376,a[2]=t7,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 448  caar");
t10=*((C_word*)lf[509]+1);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,((C_word*)((C_word*)t0)[3])[1]);}
else{
t9=t7;
f_13275(t9,C_SCHEME_FALSE);}}
else{
t8=t7;
f_13275(t8,C_SCHEME_FALSE);}}

/* k13374 in k13117 in k13114 in k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13376(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13275(t2,(C_word)C_eqp(t1,lf[511]));}

/* k13273 in k13117 in k13114 in k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_13275(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13275,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13282,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 449  cdar");
t3=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)t0)[2];
f_13122(2,t2,C_SCHEME_UNDEFINED);}}

/* k13280 in k13273 in k13117 in k13114 in k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13282(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13282,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_13284,a[2]=((C_word*)t0)[3],a[3]=t3,a[4]=((C_word*)t0)[4],a[5]=((C_word)li310),tmp=(C_word)a,a+=6,tmp));
t5=((C_word*)t3)[1];
f_13284(t5,((C_word*)t0)[2],t1);}

/* do2856 in k13280 in k13273 in k13117 in k13114 in k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_13284(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13284,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13298,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13308,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_pairp(t5))){
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13356,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 453  cdar");
t7=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,t2);}
else{
t6=t4;
f_13308(t6,C_SCHEME_FALSE);}}}

/* k13354 in do2856 in k13280 in k13273 in k13117 in k13114 in k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
f_13308(t2,(C_word)C_i_pairp(t1));}

/* k13306 in do2856 in k13280 in k13273 in k13117 in k13114 in k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_13308(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13308,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13311,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 454  caar");
t3=*((C_word*)lf[509]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 460  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[4],lf[510],t2);}}

/* k13309 in k13306 in do2856 in k13280 in k13273 in k13117 in k13114 in k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13311(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13311,2,t0,t1);}
t2=(C_word)C_eqp(t1,lf[506]);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13332,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 456  cdar");
t4=*((C_word*)lf[507]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}
else{
t3=(C_word)C_i_car(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 459  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[4],lf[508],t3);}}

/* k13330 in k13309 in k13306 in do2856 in k13280 in k13273 in k13117 in k13114 in k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13332(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep((C_word)C_i_car(t1))){
t2=((C_word*)t0)[3];
f_13298(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_FALSE);
t3=((C_word*)t0)[3];
f_13298(2,t3,t2);}}

/* k13296 in do2856 in k13280 in k13273 in k13117 in k13114 in k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13298(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13284(t3,((C_word*)t0)[2],t2);}

/* k13120 in k13117 in k13114 in k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13122(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13122,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)t0)[13]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_13264,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t2,tmp=(C_word)a,a+=14,tmp);
t4=(C_word)C_i_cdr(((C_word*)t0)[13]);
t5=(C_word)C_a_i_list(&a,1,C_fix(-1));
C_trace("ChickenBridge.scm: 411  ##sys#append");
t6=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t3,t4,t5);}

/* k13262 in k13120 in k13117 in k13114 in k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13264,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,((C_word*)t0)[13],t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_13248,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=t2,tmp=(C_word)a,a+=12,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13252,a[2]=((C_word*)t0)[3],a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)t0)[10]);
C_trace("ChickenBridge.scm: 411  ##sys#append");
t6=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t6+1)))(4,t6,t4,((C_word*)((C_word*)t0)[2])[1],t5);}

/* k13250 in k13262 in k13120 in k13117 in k13114 in k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 411  ##sys#append");
t2=*((C_word*)lf[505]+1);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k13246 in k13262 in k13120 in k13117 in k13114 in k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13248(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word ab[122],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13248,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[401],t1);
t3=(C_word)C_a_i_list(&a,3,lf[498],((C_word*)t0)[11],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[10])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_13129,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[4])[1])){
t6=(C_word)C_a_i_list(&a,1,((C_word*)t0)[3]);
t7=(C_word)C_a_i_list(&a,1,((C_word*)t0)[2]);
t8=(C_word)C_a_i_list(&a,2,lf[311],lf[470]);
t9=(C_word)C_a_i_list(&a,2,lf[311],lf[471]);
t10=(C_word)C_a_i_list(&a,3,lf[469],t8,t9);
t11=(C_word)C_a_i_list(&a,2,t10,((C_word*)t0)[2]);
t12=(C_word)C_a_i_list(&a,4,lf[5],lf[504],t11,((C_word*)t0)[9]);
t13=(C_word)C_a_i_list(&a,2,lf[192],t12);
t14=(C_word)C_a_i_list(&a,2,((C_word*)t0)[3],C_fix(-2));
t15=(C_word)C_a_i_list(&a,4,lf[499],t7,t13,t14);
t16=(C_word)C_a_i_list(&a,3,lf[499],C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[10])[1]);
t17=(C_word)C_a_i_list(&a,3,lf[472],t15,t16);
t18=(C_word)C_a_i_list(&a,3,lf[499],t6,t17);
t19=(C_word)C_a_i_list(&a,2,lf[473],t18);
t20=C_mutate(((C_word *)((C_word*)t0)[10])+1,t19);
t21=t5;
f_13129(t21,t20);}
else{
t6=t5;
f_13129(t6,C_SCHEME_UNDEFINED);}}

/* k13127 in k13246 in k13262 in k13120 in k13117 in k13114 in k13111 in k13108 in k13105 in k13102 in k13099 in a13546 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_13129(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[90],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13129,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)t0)[7]);
t3=(C_word)C_a_i_list(&a,2,((C_word*)t0)[6],C_fix(0));
t4=(C_word)C_a_i_list(&a,3,lf[499],C_SCHEME_END_OF_LIST,((C_word*)t0)[7]);
t5=(C_word)C_a_i_list(&a,2,lf[500],t4);
t6=(C_word)C_a_i_list(&a,1,lf[501]);
t7=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[6],lf[501]);
t8=(C_word)C_a_i_list(&a,3,lf[499],t6,t7);
t9=(C_word)C_a_i_list(&a,2,lf[502],t8);
t10=(C_word)C_a_i_list(&a,3,t3,t5,t9);
t11=(C_word)C_a_i_list(&a,3,lf[503],t10,((C_word*)((C_word*)t0)[5])[1]);
t12=(C_word)C_a_i_list(&a,3,lf[499],t2,t11);
t13=(C_word)C_a_i_list(&a,3,lf[499],((C_word*)((C_word*)t0)[4])[1],t12);
t14=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[2])[1]));}

/* k13084 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13086,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13545,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 505  return-to-host");
t3=C_retrieve(lf[497]);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k13543 in k13084 in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13545(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}

/* hush in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13076(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13076,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13080,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12739,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[480]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k12737 in hush in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12739(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12739,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub2767,a[2]=((C_word)li308),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k13078 in hush in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13080(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 401  values");
C_values(2,0,((C_word*)t0)[2]);}

/* stop in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13018(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+9)){
C_save_and_reclaim((void*)tr2r,(void*)f_13018r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_13018r(t0,t1,t2);}}

static void C_ccall f_13018r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(9);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13022,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 391  scheduler-stop");
f_12722(t3,C_fix(-1));}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_13036,a[2]=t5,a[3]=((C_word)li306),tmp=(C_word)a,a+=4,tmp));
t7=((C_word*)t5)[1];
f_13036(t7,t3,t2);}}

/* do2824 in stop in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_13036(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_13036,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_13046,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 395  scheduler-stop");
f_12722(t3,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 396  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t3,lf[495],t5);}}}

/* k13044 in do2824 in stop in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13046(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_13036(t3,((C_word*)t0)[2],t2);}

/* k13020 in stop in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13022(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 397  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cont in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13009,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_13013,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12717,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[480]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k12715 in cont in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12717,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub2757,a[2]=((C_word)li304),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k13011 in cont in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13013(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 387  values");
C_values(2,0,((C_word*)t0)[2]);}

/* paused? in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_13003(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_13003,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12699,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t3=C_retrieve(lf[480]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,C_SCHEME_FALSE);}

/* k12697 in paused? in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12699,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub2749,a[2]=((C_word)li302),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* pause in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12994(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12994,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12998,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12708,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[480]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k12706 in pause in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12708(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12708,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub2753,a[2]=((C_word)li300),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k12996 in pause in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12998(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 380  values");
C_values(2,0,((C_word*)t0)[2]);}

/* time-format in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12931(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+11)){
C_save_and_reclaim((void*)tr2rv,(void*)f_12931r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_12931r(t0,t1,t2);}}

static void C_ccall f_12931r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(11);
if(C_truep((C_word)C_vemptyp(t2))){
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12944,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12664,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#gc");
t5=C_retrieve(lf[480]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,C_SCHEME_FALSE);}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
t4=(C_word)C_i_eqvp(t3,lf[487]);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12956,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t4)){
t6=t5;
f_12956(t6,t4);}
else{
t6=(C_word)C_eqp(t3,C_fix(1));
t7=t5;
f_12956(t7,(C_truep(t6)?t6:(C_word)C_eqp(t3,lf[490])));}}}

/* k12954 in time-format in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_12956(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(C_truep(t1)){
t2=C_mutate((C_word*)lf[484]+1,C_retrieve(lf[478]));
C_trace("ChickenBridge.scm: 369  scheduler-set-time-milliseconds");
f_12669(((C_word*)t0)[4],C_SCHEME_FALSE);}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],C_fix(1000));
t3=(C_truep(t2)?t2:(C_word)C_eqp(((C_word*)t0)[3],lf[488]));
if(C_truep(t3)){
t4=C_mutate((C_word*)lf[484]+1,C_retrieve(lf[477]));
C_trace("ChickenBridge.scm: 373  scheduler-set-time-milliseconds");
f_12669(((C_word*)t0)[4],C_SCHEME_TRUE);}
else{
t4=(C_word)C_i_vector_ref(((C_word*)t0)[2],C_fix(0));
C_trace("ChickenBridge.scm: 376  error");
t5=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,((C_word*)t0)[4],lf[489],t4);}}}

/* k12662 in time-format in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12664(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12664,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub2729,a[2]=((C_word)li298),tmp=(C_word)a,a+=3,tmp);
((C_proc3)C_retrieve_proc(t3))(3,t3,((C_word*)t0)[2],t2);}

/* k12942 in time-format in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_fix(1000):lf[486]));}

/* sprout in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12763(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_12763r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_12763r(t0,t1,t2,t3);}}

static void C_ccall f_12763r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12765,a[2]=t2,a[3]=((C_word)li294),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12877,a[2]=t4,a[3]=((C_word)li295),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12882,a[2]=t5,a[3]=((C_word)li296),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-start27842805");
t7=t6;
f_12882(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-id27852803");
t9=t5;
f_12877(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body27822787");
t11=t4;
f_12765(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[61]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[0],t10);}}}}

/* def-start2784 in sprout in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_12882(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12882,NULL,2,t0,t1);}
C_trace("def-id27852803");
t2=((C_word*)t0)[2];
f_12877(t2,t1,C_fix(0));}

/* def-id2785 in sprout in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_12877(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12877,NULL,3,t0,t1,t2);}
C_trace("body27822787");
t3=((C_word*)t0)[2];
f_12765(t3,t1,t2,C_fix(-1));}

/* body2782 in sprout in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_12765(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12765,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12767,a[2]=t4,a[3]=((C_word)li291),tmp=(C_word)a,a+=4,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12795,a[2]=t5,a[3]=((C_word)li292),tmp=(C_word)a,a+=4,tmp);
t8=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12825,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t0)[2]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_12836,a[2]=t6,a[3]=t7,a[4]=t10,a[5]=((C_word*)t0)[2],a[6]=((C_word)li293),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_12836(t12,t8,((C_word*)t0)[2]);}
else{
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12868,a[2]=((C_word*)t0)[2],a[3]=t8,tmp=(C_word)a,a+=4,tmp);
t10=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12872,a[2]=t7,a[3]=((C_word*)t0)[2],a[4]=t9,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 353  nextstart");
t11=t6;
f_12767(t11,t10);}}

/* k12870 in body2782 in sprout in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12872(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12872,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12876,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 353  nextid");
t3=((C_word*)t0)[2];
f_12795(t3,t2);}

/* k12874 in k12870 in body2782 in sprout in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 353  scheduler-sprout");
f_12678(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12866 in body2782 in sprout in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12868(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_12825(2,t2,((C_word*)t0)[2]);}

/* do2796 in body2782 in sprout in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_12836(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12836,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12846,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12861,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 351  nextstart");
t6=((C_word*)t0)[2];
f_12767(t6,t5);}}

/* k12859 in do2796 in body2782 in sprout in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12861,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12865,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 351  nextid");
t3=((C_word*)t0)[2];
f_12795(t3,t2);}

/* k12863 in k12859 in do2796 in body2782 in sprout in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 351  scheduler-sprout");
f_12678(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k12844 in do2796 in body2782 in sprout in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12846(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_12836(t3,((C_word*)t0)[2],t2);}

/* k12823 in body2782 in sprout in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12825(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 357  values");
C_values(2,0,((C_word*)t0)[2]);}

/* nextid in body2782 in sprout in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_12795(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12795,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* nextstart in body2782 in sprout in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_12767(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12767,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_pairp(((C_word*)((C_word*)t0)[2])[1]))){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]):(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]));
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,t2);}
else{
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* load-sal-file in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12744(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12744,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12749,a[2]=((C_word)li289),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_12749 in load-sal-file in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12749(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12749,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12754,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[42]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_12754(2,t4,C_SCHEME_FALSE);}}

/* k12752 */
static void C_ccall f_12754(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub2773(C_SCHEME_UNDEFINED,t1));}

/* scheduler-stop in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_12722(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12722,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12726,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[480]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k12724 in scheduler-stop in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12726,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[3]);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub2762,a[2]=((C_word)li287),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[2],t2,t3);}

/* scheduler-sprout in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_12678(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12678,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_12682,a[2]=t2,a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("##sys#gc");
t6=C_retrieve(lf[480]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,C_SCHEME_FALSE);}

/* k12680 in scheduler-sprout in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12682(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12682,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(C_word)C_i_foreign_flonum_argumentp(((C_word*)t0)[5]);
t4=(C_word)C_i_foreign_fixnum_argumentp(((C_word*)t0)[4]);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub2742,a[2]=((C_word)li285),tmp=(C_word)a,a+=3,tmp);
((C_proc6)C_retrieve_proc(t5))(6,t5,((C_word*)t0)[3],t2,((C_word*)t0)[2],t3,t4);}

/* scheduler-set-time-milliseconds in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_12669(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12669,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12673,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("##sys#gc");
t4=C_retrieve(lf[480]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,C_SCHEME_FALSE);}

/* k12671 in scheduler-set-time-milliseconds in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12673(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12673,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(6));
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)stub2734,a[2]=((C_word)li283),tmp=(C_word)a,a+=3,tmp);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[3],t2,((C_word*)t0)[2]);}

/* current-time-seconds in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12657,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub2726(t2));}

/* current-time-milliseconds in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12654(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12654,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub2723(t2));}

/* print-error in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12640(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12640,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12645,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[42]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_12645(2,t4,C_SCHEME_FALSE);}}

/* k12643 in print-error in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12645(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub2718(C_SCHEME_UNDEFINED,t1));}

/* print-message in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12626(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12626,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12631,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[42]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_12631(2,t4,C_SCHEME_FALSE);}}

/* k12629 in print-message in k12622 in k12619 in k12616 in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub2712(C_SCHEME_UNDEFINED,t1));}

/* cs:clear in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12609,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12614,a[2]=((C_word)li277),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_12614 in cs:clear in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12614(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12614,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub2704(C_SCHEME_UNDEFINED));}

/* cs:f in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12552(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_12552r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_12552r(t0,t1,t2);}}

static void C_ccall f_12552r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12556,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_12556(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12565,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12585,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_12585(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_12585(t8,C_SCHEME_FALSE);}}}

/* k12583 in cs:f in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_12585(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_12565(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_12565(t2,C_SCHEME_UNDEFINED);}}

/* k12563 in cs:f in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_12565(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12565,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12573,a[2]=((C_word)li275),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(2),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_12573 in k12563 in cs:f in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12573(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12573,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub2697(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k12554 in cs:f in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12556(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 267  values");
C_values(2,0,((C_word*)t0)[2]);}

/* cs:i in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12495(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+13)){
C_save_and_reclaim((void*)tr2r,(void*)f_12495r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_12495r(t0,t1,t2);}}

static void C_ccall f_12495r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word *a=C_alloc(13);
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12499,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t3)[1]))){
t5=t4;
f_12499(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12508,a[2]=t4,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12528,a[2]=t5,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(((C_word*)t3)[1]);
t9=t6;
f_12528(t9,(C_word)C_i_pairp(t8));}
else{
t8=t6;
f_12528(t8,C_SCHEME_FALSE);}}}

/* k12526 in cs:i in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_12528(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_12508(t4,t3);}
else{
t2=((C_word*)t0)[2];
f_12508(t2,C_SCHEME_UNDEFINED);}}

/* k12506 in cs:i in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_12508(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_12508,NULL,2,t0,t1);}
t2=(C_word)C_i_length(((C_word*)((C_word*)t0)[3])[1]);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12516,a[2]=((C_word)li273),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t3+1)))(5,t3,((C_word*)t0)[2],C_fix(1),t2,((C_word*)((C_word*)t0)[3])[1]);}

/* f_12516 in k12506 in cs:i in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12516(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12516,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub2686(C_SCHEME_UNDEFINED,t5,t6,t4));}

/* k12497 in cs:i in k12491 in k12488 in k12485 in k12482 in k12479 in k12476 in k12473 in k12470 in k12467 in k12464 in k12461 in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12499(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 267  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mp:inhook in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12405(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12405,3,t0,t1,t2);}
if(C_truep((C_word)C_i_closurep(t2))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12417,a[2]=t2,a[3]=((C_word)li269),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12454,a[2]=((C_word)li270),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t1,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12459,a[2]=((C_word)li271),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,C_SCHEME_FALSE);}}

/* f_12459 in mp:inhook in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12459(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12459,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub2635(C_SCHEME_UNDEFINED,t2));}

/* f_12454 in mp:inhook in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12454(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12454,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub2626(C_SCHEME_UNDEFINED,t2));}

/* a12416 in mp:inhook in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12417(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12417,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12423,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word)li268),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 266  call-with-current-continuation");
t4=*((C_word*)lf[473]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* a12422 in a12416 in mp:inhook in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12423(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12423,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12429,a[2]=t2,a[3]=((C_word)li266),tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12449,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word)li267),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 266  with-exception-handler");
t5=C_retrieve(lf[472]);
((C_proc4)C_retrieve_proc(t5))(4,t5,t1,t3,t4);}

/* a12448 in a12422 in a12416 in mp:inhook in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12449(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12449,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12453,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 266  %hook");
t3=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}

/* k12451 in a12448 in a12422 in a12416 in mp:inhook in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12453(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* a12428 in a12422 in a12416 in mp:inhook in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12429(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12429,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12433,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12440,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12444,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12447,a[2]=t2,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 266  condition-property-accessor");
t7=C_retrieve(lf[469]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[470],lf[471]);}

/* k12445 in a12428 in a12422 in a12416 in mp:inhook in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12447(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=t1;
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k12442 in a12428 in a12422 in a12416 in mp:inhook in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12444(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 266  sprintf");
t2=C_retrieve(lf[5]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[468],t1);}

/* k12438 in a12428 in a12422 in a12416 in mp:inhook in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12440(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 266  print-error");
t2=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k12431 in a12428 in a12422 in a12416 in mp:inhook in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12433(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 266  %cont");
t2=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],C_fix(-1));}

/* mp:mm in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12390(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12390,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12395,a[2]=((C_word)li264),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_12395 in mp:mm in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12395(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12395,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub2619(C_SCHEME_UNDEFINED,t3));}

/* mp:bend in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12362(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12362,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12367,a[2]=((C_word)li262),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_retrieve(lf[431]),t2,t4,t3,C_fix(0));}

/* f_12367 in mp:bend in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12367(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12367,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2610(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:press in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12334(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12334,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12339,a[2]=((C_word)li260),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_retrieve(lf[430]),t2,t4,t3,C_fix(0));}

/* f_12339 in mp:press in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12339(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12339,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2595(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:prog in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12306(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12306,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12311,a[2]=((C_word)li258),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_retrieve(lf[429]),t2,t4,t3,C_fix(0));}

/* f_12311 in mp:prog in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12311(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12311,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2580(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:ctrl in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12278(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_12278,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12283,a[2]=((C_word)li256),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_retrieve(lf[428]),t2,t5,t3,t4);}

/* f_12283 in mp:ctrl in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12283(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12283,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2565(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:touch in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12250(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_12250,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12255,a[2]=((C_word)li254),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_retrieve(lf[427]),t2,t5,t3,t4);}

/* f_12255 in mp:touch in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12255(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12255,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2549(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:on in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12222(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[3],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_12222,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12227,a[2]=((C_word)li252),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t1,C_retrieve(lf[426]),t2,t5,t3,t4);}

/* f_12227 in mp:on in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12227(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12227,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2533(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:off in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12194(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[3],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12194,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12199,a[2]=((C_word)li250),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t5+1)))(7,t5,t1,C_retrieve(lf[425]),t2,t4,t3,C_fix(0));}

/* f_12199 in mp:off in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12199(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12199,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_fixnum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2517(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:midi in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12166(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12166,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12171,a[2]=((C_word)li248),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_12171 in mp:midi in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12171(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12171,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2502(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mp:note in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12138(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[3],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12138,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12143,a[2]=((C_word)li246),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t7+1)))(7,t7,t1,t2,t3,t4,t5,t6);}

/* f_12143 in mp:note in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12143(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word *a;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_12143,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=(C_word)C_i_foreign_flonum_argumentp(t4);
t10=(C_word)C_i_foreign_flonum_argumentp(t5);
t11=(C_word)C_i_foreign_flonum_argumentp(t6);
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,(C_word)stub2485(C_SCHEME_UNDEFINED,t7,t8,t9,t10,t11));}

/* mm:num-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12115(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12115,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12119,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12120,a[2]=((C_word)li244),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_12120 in mm:num-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12120(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12120,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub2467(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k12117 in mm:num-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12119(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:num in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12096(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_12096,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12101,a[2]=((C_word)li242),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_12101 in mm:num in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12101(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12101,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub2456(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:val-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12041(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12041,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12045,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12048,a[2]=t3,a[3]=t2,a[4]=t4,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 266  mm:type?");
t6=C_retrieve(lf[443]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t2,C_retrieve(lf[428]));}

/* k12046 in mm:val-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12048(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12048,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_12051,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t1)){
t3=t2;
f_12051(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 266  mm:type?");
t3=C_retrieve(lf[443]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],C_retrieve(lf[427]));}}

/* k12049 in k12046 in mm:val-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12051(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12051,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12055,a[2]=((C_word)li239),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(2),((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12075,a[2]=((C_word)li240),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t2+1)))(5,t2,((C_word*)t0)[4],((C_word*)t0)[3],C_fix(1),C_retrieve(lf[454]));}}

/* f_12075 in k12049 in k12046 in mm:val-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12075(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12075,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub2445(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* f_12055 in k12049 in k12046 in mm:val-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12055(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_12055,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub2435(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k12043 in mm:val-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12045(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:val in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11994(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11994,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12001,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 266  mm:type?");
t4=C_retrieve(lf[443]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,t2,C_retrieve(lf[428]));}

/* k11999 in mm:val in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12001(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12001,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_12004,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
if(C_truep(t1)){
t3=t2;
f_12004(2,t3,t1);}
else{
C_trace("ChickenBridge.scm: 266  mm:type?");
t3=C_retrieve(lf[443]);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[2],C_retrieve(lf[427]));}}

/* k12002 in k11999 in mm:val in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12004(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_12004,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12008,a[2]=((C_word)li236),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(2));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_12024,a[2]=((C_word)li237),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t2+1)))(4,t2,((C_word*)t0)[3],((C_word*)t0)[2],C_fix(1));}}

/* f_12024 in k12002 in k11999 in mm:val in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12024(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12024,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub2422(C_SCHEME_UNDEFINED,t4,t5));}

/* f_12008 in k12002 in k11999 in mm:val in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_12008(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_12008,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub2414(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:vel-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11971(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11971,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11975,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11976,a[2]=((C_word)li234),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(2),t3);}

/* f_11976 in mm:vel-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11976(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11976,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub2401(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k11973 in mm:vel-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11975(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:vel in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11952(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11952,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11957,a[2]=((C_word)li232),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(2));}

/* f_11957 in mm:vel in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11957(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11957,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub2390(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:key-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11929(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11929,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11933,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11934,a[2]=((C_word)li230),tmp=(C_word)a,a+=3,tmp);
((C_proc5)(void*)(*((C_word*)t5+1)))(5,t5,t4,t2,C_fix(1),t3);}

/* f_11934 in mm:key-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11934(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_11934,5,t0,t1,t2,t3,t4);}
t5=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=(C_word)C_i_foreign_fixnum_argumentp(t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub2379(C_SCHEME_UNDEFINED,t5,t6,t7));}

/* k11931 in mm:key-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:key in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11910(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11910,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11915,a[2]=((C_word)li228),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,t2,C_fix(1));}

/* f_11915 in mm:key in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11915(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11915,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub2368(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:chan-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11891(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11891,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11895,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11896,a[2]=((C_word)li226),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_11896 in mm:chan-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11896(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11896,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub2358(C_SCHEME_UNDEFINED,t4,t5));}

/* k11893 in mm:chan-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:chan in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11876(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11876,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11881,a[2]=((C_word)li224),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_11881 in mm:chan in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11881(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11881,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub2349(C_SCHEME_UNDEFINED,t3));}

/* mm:time-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11857(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11857,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11861,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11862,a[2]=((C_word)li222),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t4,t2,t3);}

/* f_11862 in mm:time-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11862(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11862,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_flonum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub2340(C_SCHEME_UNDEFINED,t4,t5));}

/* k11859 in mm:time-set! in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11861(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[2]);}

/* mm:time in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11842(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11842,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11847,a[2]=((C_word)li220),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_11847 in mm:time in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11847(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11847,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub2330(t3,t4));}

/* mm:type? in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11823(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[3],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11823,4,t0,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11828,a[2]=((C_word)li218),tmp=(C_word)a,a+=3,tmp);
((C_proc4)(void*)(*((C_word*)t4+1)))(4,t4,t1,t2,t3);}

/* f_11828 in mm:type? in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11828(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11828,4,t0,t1,t2,t3);}
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=(C_word)C_i_foreign_fixnum_argumentp(t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)stub2322(C_SCHEME_UNDEFINED,t4,t5));}

/* mm:copy in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11808(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11808,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11813,a[2]=((C_word)li216),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t3+1)))(3,t3,t1,t2);}

/* f_11813 in mm:copy in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11813(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11813,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t4=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub2312(t3,t4));}

/* mm:free in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11790(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11790,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11794,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11798,a[2]=((C_word)li214),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t4+1)))(3,t4,t3,t2);}

/* f_11798 in mm:free in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11798(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_11798,3,t0,t1,t2);}
t3=(C_truep(t2)?(C_word)C_i_foreign_pointer_argumentp(t2):C_SCHEME_FALSE);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub2304(C_SCHEME_UNDEFINED,t3));}

/* k11792 in mm:free in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11794(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 266  values");
C_values(2,0,((C_word*)t0)[2]);}

/* mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11624(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+8)){
C_save_and_reclaim((void*)tr3r,(void*)f_11624r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_11624r(t0,t1,t2,t3);}}

static void C_ccall f_11624r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a=C_alloc(8);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11628,a[2]=t3,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11787,a[2]=((C_word)li212),tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#get-keyword");
t6=C_retrieve(lf[434]);
((C_proc5)C_retrieve_proc(t6))(5,t6,t4,lf[440],t3,t5);}

/* a11786 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11787(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11787,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11628(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11628,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11631,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11784,a[2]=((C_word)li211),tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#get-keyword");
t4=C_retrieve(lf[434]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,lf[439],((C_word*)t0)[2],t3);}

/* a11783 in k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11784(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11784,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* k11629 in k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11631(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11631,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11634,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11781,a[2]=((C_word)li210),tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#get-keyword");
t4=C_retrieve(lf[434]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,lf[438],((C_word*)t0)[2],t3);}

/* a11780 in k11629 in k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11781(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11781,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(60));}

/* k11632 in k11629 in k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11634(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11634,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11637,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11778,a[2]=((C_word)li209),tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#get-keyword");
t4=C_retrieve(lf[434]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,lf[437],((C_word*)t0)[2],t3);}

/* a11777 in k11632 in k11629 in k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11778,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(64));}

/* k11635 in k11632 in k11629 in k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11637(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11637,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11640,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11775,a[2]=((C_word)li208),tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#get-keyword");
t4=C_retrieve(lf[434]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,lf[436],((C_word*)t0)[2],t3);}

/* a11774 in k11635 in k11632 in k11629 in k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11775,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* k11638 in k11635 in k11632 in k11629 in k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11640,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11643,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11772,a[2]=((C_word)li207),tmp=(C_word)a,a+=3,tmp);
C_trace("##sys#get-keyword");
t4=C_retrieve(lf[434]);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,lf[435],((C_word*)t0)[2],t3);}

/* a11771 in k11638 in k11635 in k11632 in k11629 in k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11772,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_fix(0));}

/* k11641 in k11638 in k11635 in k11632 in k11629 in k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11643(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11643,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_11649,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 266  <=");
C_less_or_equal_p(5,0,t2,C_retrieve(lf[425]),((C_word*)t0)[7],C_retrieve(lf[426]));}

/* k11647 in k11641 in k11638 in k11635 in k11632 in k11629 in k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11649(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11649,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11653,a[2]=((C_word)li203),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[8],C_retrieve(lf[428])))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11684,a[2]=((C_word)li204),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
if(C_truep((C_word)C_i_nequalp(((C_word*)t0)[8],C_retrieve(lf[427])))){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11715,a[2]=((C_word)li205),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[9],((C_word*)t0)[8],((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11742,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 266  <=");
C_less_or_equal_p(5,0,t2,C_retrieve(lf[429]),((C_word*)t0)[8],C_retrieve(lf[431]));}}}}

/* k11740 in k11647 in k11641 in k11638 in k11635 in k11632 in k11629 in k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11742,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11746,a[2]=((C_word)li206),tmp=(C_word)a,a+=3,tmp);
((C_proc7)(void*)(*((C_word*)t2+1)))(7,t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],C_fix(0));}
else{
C_trace("ChickenBridge.scm: 266  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[433],((C_word*)t0)[5]);}}

/* f_11746 in k11740 in k11647 in k11641 in k11638 in k11635 in k11632 in k11629 in k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11746(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_11746,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub2294(t7,t8,t9,t10,t11,t12));}

/* f_11715 in k11647 in k11641 in k11638 in k11635 in k11632 in k11629 in k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11715(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_11715,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub2281(t7,t8,t9,t10,t11,t12));}

/* f_11684 in k11647 in k11641 in k11638 in k11635 in k11632 in k11629 in k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11684(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_11684,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub2268(t7,t8,t9,t10,t11,t12));}

/* f_11653 in k11647 in k11641 in k11638 in k11635 in k11632 in k11629 in k11626 in mm:make in k11471 in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11653(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
if(c!=7) C_bad_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr7,(void*)f_11653,7,t0,t1,t2,t3,t4,t5,t6);}
t7=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
t8=(C_word)C_i_foreign_fixnum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_fixnum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=t1;
((C_proc2)(void*)(*((C_word*)t13+1)))(2,t13,(C_word)stub2255(t7,t8,t9,t10,t11,t12));}

/* parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_11279(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11279,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11287,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)t7)[1]);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11119,a[2]=t4,a[3]=t7,a[4]=t5,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t8)){
t10=t9;
f_11119(t10,t8);}
else{
t10=(C_word)C_i_car(((C_word*)t7)[1]);
t11=(C_word)C_i_symbolp(t10);
t12=t9;
f_11119(t12,(C_word)C_i_not(t11));}}

/* k11117 in parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_11119(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11119,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11126,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8063(t2,(C_word)C_a_i_list(&a,4,lf[237],lf[414],lf[242],((C_word*)((C_word*)t0)[3])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11127,a[2]=((C_word)li198),tmp=(C_word)a,a+=3,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11152,a[2]=t6,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11154,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t9,a[5]=t6,a[6]=t4,a[7]=((C_word*)t0)[3],a[8]=((C_word)li201),tmp=(C_word)a,a+=9,tmp));
t11=((C_word*)t9)[1];
f_11154(t11,t7,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);}}

/* do2149 in k11117 in parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_11154(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11154,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11164,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t9,a[5]=t7,a[6]=t1,a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[5],a[9]=t8,a[10]=((C_word*)t0)[7],a[11]=((C_word*)t0)[6],a[12]=t6,tmp=(C_word)a,a+=13,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t12=(C_word)C_eqp(t11,lf[143]);
if(C_truep(t12)){
t13=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t14=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[7])+1,t14);
t16=t10;
f_11164(t16,t13);}
else{
t13=t10;
f_11164(t13,C_SCHEME_UNDEFINED);}}}

/* k11162 in do2149 in k11117 in parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_11164(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11164,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11168,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8285(t2,t3,((C_word*)t0)[3]);}

/* k11166 in k11162 in do2149 in k11117 in parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11168(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11168,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11171,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t4=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t4)){
t5=t3;
f_11171(2,t5,C_SCHEME_UNDEFINED);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t3,((C_word*)t0)[3],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,3,lf[419],t5,lf[420]));}}

/* k11169 in k11166 in k11162 in do2149 in k11117 in parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11171(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11171,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_11174,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],tmp=(C_word)a,a+=13,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11223,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[6],a[6]=((C_word)li199),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11232,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[5],a[4]=((C_word)li200),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a11231 in k11169 in k11166 in k11162 in do2149 in k11117 in parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11232(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11232,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a11222 in k11169 in k11166 in k11162 in do2149 in k11117 in parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11223,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)t0)[2]);}

/* k11172 in k11169 in k11166 in k11162 in do2149 in k11117 in parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11174,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11177,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_11193,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=t2,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 265  op-type?");
f_11127(t3,((C_word*)((C_word*)t0)[6])[1],lf[404]);}

/* k11191 in k11172 in k11169 in k11166 in k11162 in do2149 in k11117 in parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11193,2,t0,t1);}
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=((C_word*)t0)[5];
f_11177(2,t3,t2);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_11200,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  op-type?");
f_11127(t2,((C_word*)((C_word*)t0)[6])[1],lf[418]);}}

/* k11198 in k11191 in k11172 in k11169 in k11166 in k11162 in do2149 in k11117 in parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11200(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11200,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t2=((C_word*)t0)[5];
f_11177(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(((C_word*)t0)[5],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],(C_word)C_a_i_list(&a,5,lf[415],t2,lf[416],t3,lf[417]));}}
else{
t2=((C_word*)t0)[5];
f_11177(2,t2,C_SCHEME_UNDEFINED);}}

/* k11175 in k11172 in k11169 in k11166 in k11162 in do2149 in k11117 in parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11177(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11177,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_11183,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 265  append");
t6=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,((C_word*)((C_word*)t0)[7])[1],t5);}

/* k11181 in k11175 in k11172 in k11169 in k11166 in k11162 in do2149 in k11117 in parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11183(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=((C_word*)((C_word*)t0)[7])[1];
f_11154(t3,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k11150 in k11117 in parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11152(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
f_11287(t2,((C_word*)((C_word*)t0)[2])[1]);}

/* op-type? in k11117 in parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_11127(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_11127,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(C_word)C_i_caddr(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_eqp(t5,t3));}}

/* k11124 in k11117 in parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11126(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11126,2,t0,t1);}
t2=((C_word*)t0)[2];
f_11287(t2,(C_word)C_a_i_list(&a,1,t1));}

/* k11285 in parse-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_11287(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  gather-clauses");
f_8214(((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10865(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[34],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10865,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_a_i_cons(&a,2,lf[407],t4);
t7=((C_word*)t5)[1];
t8=(C_word)C_i_car(((C_word*)t5)[1]);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_END_OF_LIST;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10887,a[2]=t8,a[3]=t7,a[4]=t3,a[5]=t6,a[6]=t16,a[7]=t14,a[8]=t1,a[9]=t10,a[10]=t12,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
t18=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t18))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t17,t6,t7,(C_word)C_a_i_list(&a,3,lf[411],t8,lf[412]));}
else{
t19=t17;
f_10887(2,t19,C_SCHEME_UNDEFINED);}}

/* k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10887,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[11])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[10])+1,t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10902,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t8,((C_word*)t0)[5],((C_word*)((C_word*)t0)[11])[1],(C_word)C_a_i_list(&a,1,lf[410]));}
else{
t9=t8;
f_10902(2,t9,C_SCHEME_UNDEFINED);}}

/* k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10902(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10902,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10905,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[409]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[145],((C_word*)((C_word*)t0)[11])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t4);
t6=t2;
f_10905(t6,t5);}
else{
t4=t2;
f_10905(t4,C_SCHEME_UNDEFINED);}}

/* k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10905(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10905,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10908,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_11075,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word)li195),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11081,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word)li196),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a11080 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11081(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11081,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a11074 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11075(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11075,2,t0,t1);}
C_trace("ChickenBridge.scm: 265  parse-then-else-dependents");
f_10734(t1,((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10908(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10908,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10911,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=t2;
f_10911(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_11057,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  gather-clauses");
f_8214(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[7])[1]);}}

/* k11055 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10911(t3,t2);}

/* k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10911(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10911,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_10914,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 265  loop-operator-set!");
f_7961(t2,((C_word*)((C_word*)t0)[7])[1],lf[176]);}

/* k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10914(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10914,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_11038,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_11050,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  loop-looping");
t4=C_retrieve2(lf[231],"loop-looping");
f_8015(3,t4,t3,((C_word*)((C_word*)t0)[7])[1]);}

/* k11048 in k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11050(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11050,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[175],t1);
C_trace("ChickenBridge.scm: 265  append");
t3=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,((C_word*)t0)[2],t2,C_SCHEME_END_OF_LIST);}

/* k11036 in k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11038(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_11038,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,4,lf[176],((C_word*)((C_word*)t0)[10])[1],t1,C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10921,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10934,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[6])[1]))){
t6=t5;
f_10934(t6,C_SCHEME_FALSE);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t7=t5;
f_10934(t7,(C_word)C_eqp(t6,lf[401]));}}

/* k10932 in k11036 in k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10934(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10934,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10941,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t4,((C_word*)t0)[4],((C_word*)t0)[2],(C_word)C_a_i_list(&a,1,lf[408]));}
else{
t5=t4;
f_10941(2,t5,C_SCHEME_UNDEFINED);}}
else{
t2=((C_word*)t0)[6];
f_10921(t2,C_SCHEME_UNDEFINED);}}

/* k10939 in k10932 in k11036 in k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10941,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10944,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10997,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word)li193),tmp=(C_word)a,a+=7,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11011,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word)li194),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a11010 in k10939 in k10932 in k11036 in k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11011(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_11011,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a10996 in k10939 in k10932 in k11036 in k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10997(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10997,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_11005,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 265  append");
t4=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)t0)[2],t3);}

/* k11003 in a10996 in k10939 in k10932 in k11036 in k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_11005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  parse-then-else-dependents");
f_10734(((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k10942 in k10939 in k10932 in k11036 in k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10947,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=t2;
f_10947(t6,t5);}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10983,a[2]=t2,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  gather-clauses");
f_8214(t4,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10981 in k10942 in k10939 in k10932 in k11036 in k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10947(t3,t2);}

/* k10945 in k10942 in k10939 in k10932 in k11036 in k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10947(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10947,NULL,2,t0,t1);}
t2=(C_word)C_i_cdddr(((C_word*)((C_word*)t0)[5])[1]);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10976,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t2,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  loop-looping");
t4=C_retrieve2(lf[231],"loop-looping");
f_8015(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k10974 in k10945 in k10942 in k10939 in k10932 in k11036 in k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10976(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10976,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,lf[175],t1);
t3=(C_word)C_i_set_car(((C_word*)t0)[5],t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10953,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  loop-looping-set!");
f_8021(t4,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_END_OF_LIST);}

/* k10951 in k10974 in k10945 in k10942 in k10939 in k10932 in k11036 in k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10953(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10953,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10956,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  loop-looping-set!");
f_8021(t2,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_END_OF_LIST);}

/* k10954 in k10951 in k10974 in k10945 in k10942 in k10939 in k10932 in k11036 in k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10956(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10956,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10960,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 265  gather-clauses");
f_8214(t2,lf[176],t3);}

/* k10958 in k10954 in k10951 in k10974 in k10945 in k10942 in k10939 in k10932 in k11036 in k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10960(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10921(t3,t2);}

/* k10919 in k11036 in k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10921(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10921,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10924,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[2])[1]);
C_trace("ChickenBridge.scm: 265  loop-looping-set!");
f_8021(t2,((C_word*)((C_word*)t0)[4])[1],t3);}

/* k10922 in k10919 in k11036 in k10912 in k10909 in k10906 in k10903 in k10900 in k10885 in parse-conditional in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10924(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-then-else-dependents in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10734(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10734,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10738,a[2]=t5,a[3]=t11,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10743,a[2]=t3,a[3]=t14,a[4]=t7,a[5]=t11,a[6]=t4,a[7]=t9,a[8]=t5,a[9]=((C_word)li191),tmp=(C_word)a,a+=10,tmp));
t16=((C_word*)t14)[1];
f_10743(t16,t12,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);}

/* do2082 in parse-then-else-dependents in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10743(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10743,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t9=(C_truep(t8)?t8:((C_word*)((C_word*)t0)[7])[1]);
if(C_truep(t9)){
t10=t1;
((C_proc2)(void*)(*((C_word*)t10+1)))(2,t10,C_SCHEME_UNDEFINED);}
else{
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t11=((C_word*)t0)[6];
t12=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10691,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[6],a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t7,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[4],a[11]=((C_word*)t0)[5],a[12]=t5,tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8285(t12,t10,t11);}}

/* k10689 in do2082 in parse-then-else-dependents in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10691(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10691,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10697,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_cddr(t1);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_10697(t4,C_SCHEME_FALSE);}
else{
t4=(C_word)C_i_caddr(t1);
t5=(C_word)C_eqp(t4,lf[404]);
if(C_truep(t5)){
t6=(C_word)C_i_car(t1);
t7=(C_word)C_i_member(t6,lf[405]);
t8=t2;
f_10697(t8,(C_word)C_i_not(t7));}
else{
t6=t2;
f_10697(t6,C_SCHEME_FALSE);}}}
else{
t3=t2;
f_10697(t3,C_SCHEME_FALSE);}}

/* k10695 in k10689 in do2082 in parse-then-else-dependents in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10697(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10697,NULL,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)t0)[13]:C_SCHEME_FALSE);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10760,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],tmp=(C_word)a,a+=13,tmp);
t5=((C_word*)((C_word*)t0)[12])[1];
if(C_truep(t5)){
t6=t4;
f_10760(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t4,((C_word*)t0)[4],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,3,lf[402],t6,lf[403]));}}

/* k10758 in k10695 in k10689 in do2082 in parse-then-else-dependents in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10760(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10760,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10763,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],tmp=(C_word)a,a+=12,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10833,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[6],a[7]=((C_word)li189),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10846,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[5],a[4]=((C_word)li190),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}

/* a10845 in k10758 in k10695 in k10689 in do2082 in parse-then-else-dependents in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10846(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_10846,4,t0,t1,t2,t3);}
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,t5);}

/* a10832 in k10758 in k10695 in k10689 in do2082 in parse-then-else-dependents in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10833(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10833,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10841,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  append");
t3=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k10839 in a10832 in k10758 in k10695 in k10689 in do2082 in parse-then-else-dependents in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10841(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=t2;
((C_proc5)C_retrieve_proc(t3))(5,t3,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],t1,((C_word*)t0)[2]);}

/* k10761 in k10758 in k10695 in k10689 in do2082 in parse-then-else-dependents in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10763(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10763,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10767,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 265  append");
t4=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,((C_word*)((C_word*)t0)[11])[1],t3);}

/* k10765 in k10761 in k10758 in k10695 in k10689 in do2082 in parse-then-else-dependents in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10767(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10767,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[10])+1,((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10772,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t6=t5;
f_10772(2,t6,C_SCHEME_UNDEFINED);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t7=(C_word)C_eqp(t6,lf[143]);
if(C_truep(t7)){
t8=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[9])+1,t8);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[10])[1],(C_word)C_a_i_list(&a,1,lf[400]));}
else{
t10=t5;
f_10772(2,t10,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t9=(C_word)C_eqp(t8,lf[401]);
if(C_truep(t9)){
t10=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t11=t5;
f_10772(2,t11,t10);}
else{
t10=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10810,a[2]=t5,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8285(t10,t11,((C_word*)t0)[3]);}}}}

/* k10808 in k10765 in k10761 in k10758 in k10695 in k10689 in do2082 in parse-then-else-dependents in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10810(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[2];
f_10772(2,t3,t2);}
else{
t2=((C_word*)t0)[2];
f_10772(2,t2,C_SCHEME_UNDEFINED);}}

/* k10770 in k10765 in k10761 in k10758 in k10695 in k10689 in do2082 in parse-then-else-dependents in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10772(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_10743(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k10736 in parse-then-else-dependents in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* parse-return in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10633(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[23],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10633,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10640,a[2]=t4,a[3]=t6,a[4]=t1,a[5]=t10,a[6]=t8,a[7]=t5,tmp=(C_word)a,a+=8,tmp);
t12=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t12))){
t13=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[397],t13,lf[398]));}
else{
t13=t11;
f_10640(2,t13,C_SCHEME_UNDEFINED);}}

/* k10638 in parse-return in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10640,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10671,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8285(t6,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10669 in k10638 in parse-return in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10671,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10659,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_10667,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  func");
t6=((C_word*)((C_word*)t0)[5])[1];
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)((C_word*)t0)[2])[1]);}

/* k10665 in k10669 in k10638 in parse-return in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10667(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10667,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8063(((C_word*)t0)[2],(C_word)C_a_i_list(&a,4,lf[237],lf[383],lf[242],t2));}

/* k10657 in k10669 in k10638 in parse-return in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10659(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-thereis in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10542(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[26],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10542,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10549,a[2]=t4,a[3]=t6,a[4]=t10,a[5]=t1,a[6]=t12,a[7]=t8,a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t14=(C_word)C_i_cdr(((C_word*)t5)[1]);
if(C_truep((C_word)C_i_nullp(t14))){
t15=(C_word)C_i_car(((C_word*)t5)[1]);
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t13,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[394],t15,lf[395]));}
else{
t15=t13;
f_10549(2,t15,C_SCHEME_UNDEFINED);}}

/* k10547 in parse-thereis in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10549(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10549,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10617,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8285(t4,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k10615 in k10547 in parse-thereis in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10617,2,t0,t1);}
t2=(C_word)C_i_cadddr(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10560,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_eqp(((C_word*)t0)[2],lf[391]);
if(C_truep(t5)){
t6=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t7=t4;
f_10560(t7,t6);}
else{
t6=(C_word)C_eqp(((C_word*)t0)[2],lf[392]);
if(C_truep(t6)){
t7=(C_word)C_a_i_list(&a,2,lf[145],((C_word*)((C_word*)t0)[4])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t10=t4;
f_10560(t10,t9);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[2],lf[393]);
if(C_truep(t7)){
t8=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t9=t4;
f_10560(t9,t8);}
else{
t8=t4;
f_10560(t8,C_SCHEME_UNDEFINED);}}}}

/* k10558 in k10615 in k10547 in parse-thereis in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10560(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10560,NULL,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10571,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_10587,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t6=(C_word)C_i_not(((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 265  func");
t7=((C_word*)((C_word*)t0)[2])[1];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}

/* k10585 in k10558 in k10615 in k10547 in parse-thereis in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10587(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[33],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10587,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,lf[176],((C_word*)((C_word*)t0)[4])[1],t1);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8063(((C_word*)t0)[2],(C_word)C_a_i_list(&a,6,lf[237],lf[391],lf[242],t3,lf[245],t4));}

/* k10569 in k10558 in k10615 in k10547 in parse-thereis in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-while-until in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10476(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_10476,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10487,a[2]=t7,a[3]=t11,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t12,t4,t6,(C_word)C_a_i_list(&a,3,lf[388],t7,lf[389]));}
else{
t13=t12;
f_10487(2,t13,C_SCHEME_UNDEFINED);}}

/* k10485 in parse-while-until in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10487(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10487,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10490,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[2],lf[386]);
if(C_truep(t3)){
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t8=t2;
f_10490(t8,t7);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[2],lf[387]);
if(C_truep(t4)){
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[145],t5);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=t2;
f_10490(t10,t9);}
else{
t5=t2;
f_10490(t5,C_SCHEME_UNDEFINED);}}}

/* k10488 in k10485 in parse-while-until in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10490(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10490,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10497,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,3,lf[176],((C_word*)((C_word*)t0)[3])[1],lf[385]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8063(t2,(C_word)C_a_i_list(&a,4,lf[237],((C_word*)t0)[2],lf[242],t4));}

/* k10495 in k10488 in k10485 in parse-while-until in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10497(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* loop-return in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10470(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_10470,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_list(&a,2,lf[383],t2));}

/* parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9924(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word ab[55],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9924,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9933,a[2]=((C_word)li179),tmp=(C_word)a,a+=3,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9938,a[2]=((C_word)li180),tmp=(C_word)a,a+=3,tmp);
t12=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_9943,a[2]=((C_word)li181),tmp=(C_word)a,a+=3,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_END_OF_LIST;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_END_OF_LIST;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_END_OF_LIST;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=C_SCHEME_END_OF_LIST;
t28=(*a=C_VECTOR_TYPE|1,a[1]=t27,tmp=(C_word)a,a+=2,tmp);
t29=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_9955,a[2]=t3,a[3]=t11,a[4]=t6,a[5]=t4,a[6]=t12,a[7]=t10,a[8]=t20,a[9]=t24,a[10]=t26,a[11]=t22,a[12]=t28,a[13]=t7,a[14]=t18,a[15]=t1,a[16]=t16,a[17]=t14,a[18]=t5,tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t29,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[380],t7,lf[381]));}
else{
t30=t29;
f_9955(2,t30,C_SCHEME_UNDEFINED);}}

/* k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9955(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[29],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9955,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[18])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[17])+1,t2);
t6=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_9966,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[17],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],a[12]=((C_word*)t0)[11],a[13]=((C_word*)t0)[12],a[14]=((C_word*)t0)[13],a[15]=((C_word*)t0)[14],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[15],a[18]=((C_word*)t0)[16],tmp=(C_word)a,a+=19,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[18])[1]))){
t7=t6;
f_9966(2,t7,C_SCHEME_UNDEFINED);}
else{
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[18])[1]);
t8=(C_word)C_eqp(t7,lf[376]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10419,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t6,a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t10=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[18])[1]);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t9,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[379]));}
else{
t11=t9;
f_10419(2,t11,C_SCHEME_UNDEFINED);}}
else{
t9=t6;
f_9966(2,t9,C_SCHEME_UNDEFINED);}}}

/* k10417 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10419(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10419,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10425,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 265  loop-variable?");
f_8291(t2,t3);}

/* k10423 in k10417 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10425(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10425,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cddr(((C_word*)((C_word*)t0)[6])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=((C_word*)t0)[4];
f_9966(2,t6,t5);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[377],t2,lf[378]));}}

/* k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9966(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[28],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9966,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_9970,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[16],a[16]=((C_word*)t0)[17],a[17]=((C_word*)t0)[18],tmp=(C_word)a,a+=18,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
t4=((C_word*)t0)[2];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9851,a[2]=t3,a[3]=t7,a[4]=t5,a[5]=((C_word)li183),tmp=(C_word)a,a+=6,tmp));
t9=((C_word*)t7)[1];
f_9851(t9,t2,C_SCHEME_FALSE);}

/* do1904 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_9851(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9851,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9865,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9876,a[2]=t6,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 265  loop-collectors");
t9=C_retrieve2(lf[228],"loop-collectors");
f_7979(3,t9,t7,t8);}}

/* k9874 in do1904 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9876,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9811,a[2]=((C_word*)t0)[3],a[3]=t5,a[4]=t3,a[5]=((C_word)li182),tmp=(C_word)a,a+=6,tmp));
t7=((C_word*)t5)[1];
f_9811(t7,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* do1896 in k9874 in do1904 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_9811(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9811,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t5=(C_truep(t4)?t4:((C_word*)t3)[1]);
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,((C_word*)t3)[1]);}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9824,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t7=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_i_car(t7);
t9=(C_word)C_eqp(((C_word*)t0)[2],t8);
if(C_truep(t9)){
t10=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t11=C_set_block_item(t3,0,t10);
t12=t6;
f_9824(t12,t11);}
else{
t10=t6;
f_9824(t10,C_SCHEME_UNDEFINED);}}}

/* k9822 in do1896 in k9874 in do1904 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_9824(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=((C_word*)((C_word*)t0)[4])[1];
f_9811(t4,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9863 in do1904 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9865(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_9851(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9970(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9970,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[17])+1,t1);
t3=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_9973,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[17],a[12]=((C_word*)t0)[14],a[13]=((C_word*)t0)[15],a[14]=((C_word*)t0)[16],tmp=(C_word)a,a+=15,tmp);
t4=((C_word*)((C_word*)t0)[17])[1];
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_10403,a[2]=((C_word*)t0)[17],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t3,tmp=(C_word)a,a+=8,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10407,a[2]=t5,a[3]=((C_word*)t0)[13],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  collector-type");
f_9938(t6,((C_word*)((C_word*)t0)[17])[1]);}
else{
t5=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t6=t3;
f_9973(2,t6,t5);}}

/* k10405 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a;
t2=lf[373];
t3=lf[374];
t4=lf[375];
t5=(C_word)C_eqp(((C_word*)t0)[3],t1);
if(C_truep(t5)){
t6=((C_word*)t0)[2];
f_10403(t6,t5);}
else{
t6=(C_word)C_i_member(((C_word*)t0)[3],t2);
t7=(C_truep(t6)?(C_word)C_i_member(t1,t2):C_SCHEME_FALSE);
if(C_truep(t7)){
t8=((C_word*)t0)[2];
f_10403(t8,t7);}
else{
t8=(C_word)C_i_member(((C_word*)t0)[3],t3);
t9=(C_truep(t8)?(C_word)C_i_member(t1,t3):C_SCHEME_FALSE);
if(C_truep(t9)){
t10=((C_word*)t0)[2];
f_10403(t10,t9);}
else{
t10=(C_word)C_i_member(((C_word*)t0)[3],t4);
t11=((C_word*)t0)[2];
f_10403(t11,(C_truep(t10)?(C_word)C_i_member(t1,t4):C_SCHEME_FALSE));}}}}

/* k10401 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10403(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10403,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[7];
f_9973(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10399,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  collector-type");
f_9938(t2,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10397 in k10401 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10399(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10399,2,t0,t1);}
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,5,lf[370],t1,lf[371],((C_word*)t0)[2],lf[372]));}

/* k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9973(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[61],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9973,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9976,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[14],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[10],lf[354]);
t4=(C_truep(t3)?t3:(C_word)C_eqp(((C_word*)t0)[10],lf[355]));
if(C_truep(t4)){
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10019,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=t6,a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
t8=((C_word*)((C_word*)t0)[4])[1];
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10057,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=t7,a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[6],a[9]=t6,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t8)){
t10=t9;
f_10057(2,t10,t8);}
else{
C_trace("ChickenBridge.scm: 265  gensym");
t10=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t10))(3,t10,t9,lf[356]);}}
else{
t8=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10086,a[2]=t7,a[3]=t6,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  collector-acc");
f_9943(t8,((C_word*)((C_word*)t0)[11])[1]);}}
else{
t5=(C_word)C_eqp(((C_word*)t0)[10],lf[357]);
t6=(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)t0)[10],lf[358]));
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_10098,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[12],a[8]=t2,a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[5],a[11]=((C_word*)t0)[6],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t8=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[360]);}
else{
t7=(C_word)C_eqp(((C_word*)t0)[10],lf[15]);
t8=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_10193,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[12],a[9]=((C_word*)t0)[5],a[10]=((C_word*)t0)[10],a[11]=t2,a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[4],tmp=(C_word)a,a+=14,tmp);
if(C_truep(t7)){
t9=t8;
f_10193(t9,t7);}
else{
t9=(C_word)C_eqp(((C_word*)t0)[10],lf[364]);
t10=t8;
f_10193(t10,(C_truep(t9)?t9:(C_word)C_eqp(((C_word*)t0)[10],lf[369])));}}}}

/* k10191 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10193(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10193,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10196,a[2]=t5,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=t3,a[8]=((C_word*)t0)[13],tmp=(C_word)a,a+=9,tmp);
t7=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10309,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=t5,tmp=(C_word)a,a+=12,tmp);
if(C_truep(((C_word*)((C_word*)t0)[13])[1])){
t9=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10367,a[2]=t8,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t9,((C_word*)((C_word*)t0)[13])[1],lf[368]);}
else{
t9=t8;
f_10309(t9,C_SCHEME_UNDEFINED);}}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10302,a[2]=t6,a[3]=t3,a[4]=((C_word*)t0)[5],a[5]=t5,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  collector-acc");
f_9943(t8,((C_word*)((C_word*)t0)[5])[1]);}}
else{
t2=((C_word*)t0)[11];
f_9976(t2,C_SCHEME_UNDEFINED);}}

/* k10300 in k10191 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_word)C_i_cadddr(t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_10196(t6,t5);}

/* k10365 in k10191 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10367,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_10309(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k10307 in k10191 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10309(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10309,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10313,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t3=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[367]);}

/* k10311 in k10307 in k10191 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10313(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10313,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10317,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[366]);}

/* k10315 in k10311 in k10307 in k10191 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10317(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10317,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[11])+1,t1);
t3=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10359,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t3,((C_word*)((C_word*)t0)[11])[1],lf[365]);}

/* k10357 in k10315 in k10311 in k10307 in k10191 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10359,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_10355,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t4,((C_word*)((C_word*)t0)[10])[1],C_SCHEME_FALSE);}

/* k10353 in k10357 in k10315 in k10311 in k10307 in k10191 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10355(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10355,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10333,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  make-collector");
f_9933(t7,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[10])[1],((C_word*)((C_word*)t0)[9])[1]);}

/* k10331 in k10353 in k10357 in k10315 in k10311 in k10307 in k10191 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10333(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10333,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_10196(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_10196(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10194 in k10191 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10196(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word ab[114],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10196,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_10199,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)t0)[4],lf[15]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,1,lf[361]);
t5=(C_word)C_a_i_list(&a,3,lf[15],((C_word*)((C_word*)t0)[3])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[362],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[363],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_10199(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t4=(C_word)C_eqp(((C_word*)t0)[4],lf[364]);
if(C_truep(t4)){
t5=(C_word)C_a_i_list(&a,2,lf[361],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_list(&a,3,lf[362],((C_word*)((C_word*)t0)[2])[1],t5);
t7=(C_word)C_a_i_cons(&a,2,t6,((C_word*)((C_word*)t0)[6])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[6])+1,t7);
t9=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)((C_word*)t0)[2])[1]);
t10=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[2])[1],t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[6])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[6])+1,t11);
t13=t2;
f_10199(t13,((C_word*)((C_word*)t0)[6])[1]);}
else{
t5=(C_word)C_a_i_list(&a,3,lf[362],((C_word*)((C_word*)t0)[2])[1],((C_word*)((C_word*)t0)[3])[1]);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[6])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[6])+1,t6);
t8=(C_word)C_a_i_list(&a,2,lf[363],((C_word*)((C_word*)t0)[2])[1]);
t9=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[2])[1],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t2;
f_10199(t12,((C_word*)((C_word*)t0)[6])[1]);}}}

/* k10197 in k10194 in k10191 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10199(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10199,NULL,2,t0,t1);}
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t2=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[5])[1],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_9976(t6,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=((C_word*)t0)[2];
f_9976(t2,C_SCHEME_UNDEFINED);}}

/* k10096 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10098(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10098,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[12],lf[357]);
t3=(C_truep(t2)?lf[184]:lf[181]);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10104,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=t3,a[5]=t5,a[6]=((C_word*)t0)[10],a[7]=t1,a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t7=((C_word*)((C_word*)t0)[6])[1];
t8=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10148,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t6,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[11],a[9]=t5,tmp=(C_word)a,a+=10,tmp);
if(C_truep(t7)){
t9=t8;
f_10148(2,t9,t7);}
else{
C_trace("ChickenBridge.scm: 265  gensym");
t9=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t9))(3,t9,t8,lf[359]);}}
else{
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_10181,a[2]=t6,a[3]=t5,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  collector-acc");
f_9943(t7,((C_word*)((C_word*)t0)[5])[1]);}}

/* k10179 in k10096 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10181(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10104(t3,t2);}

/* k10146 in k10096 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10148,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10174,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t3,((C_word*)((C_word*)t0)[9])[1],C_SCHEME_FALSE);}

/* k10172 in k10146 in k10096 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10174(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10174,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10156,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  make-collector");
f_9933(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k10154 in k10172 in k10146 in k10096 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10156(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10156,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_10104(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[144],((C_word*)((C_word*)t0)[3])[1],C_fix(0));
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_10104(t7,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10102 in k10096 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10104(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10104,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_10144,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t2,((C_word*)t0)[7],C_SCHEME_FALSE);}

/* k10142 in k10102 in k10096 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10144(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10144,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,2,lf[145],((C_word*)((C_word*)t0)[5])[1]);
t6=(C_word)C_a_i_list(&a,3,((C_word*)t0)[4],((C_word*)t0)[7],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,3,lf[144],t5,t6);
t8=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[176],t7,t8);
t10=(C_word)C_a_i_list(&a,3,lf[175],t4,t9);
t11=(C_word)C_a_i_cons(&a,2,t10,((C_word*)((C_word*)t0)[3])[1]);
t12=C_mutate(((C_word *)((C_word*)t0)[3])+1,t11);
t13=((C_word*)t0)[2];
f_9976(t13,((C_word*)((C_word*)t0)[3])[1]);}

/* k10084 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10086(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_10019(t3,t2);}

/* k10055 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10057,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_10079,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t3,((C_word*)((C_word*)t0)[9])[1],C_fix(0));}

/* k10077 in k10055 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10079(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10079,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[9])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[9])+1,t2);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_10065,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  make-collector");
f_9933(t4,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE);}

/* k10063 in k10077 in k10055 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_10065(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_10065,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=((C_word*)t0)[4];
f_10019(t4,C_SCHEME_UNDEFINED);}
else{
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t6=((C_word*)t0)[4];
f_10019(t6,((C_word*)((C_word*)t0)[2])[1]);}}

/* k10017 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_10019(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[51],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_10019,NULL,2,t0,t1);}
t2=(C_word)C_eqp(((C_word*)t0)[6],lf[354]);
if(C_truep(t2)){
t3=(C_word)C_a_i_list(&a,3,lf[161],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9976(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t3=(C_word)C_a_i_list(&a,3,lf[161],((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[5])[1],t3);
t5=(C_word)C_a_i_list(&a,3,lf[176],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[3])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[3])+1,t6);
t8=((C_word*)t0)[2];
f_9976(t8,((C_word*)((C_word*)t0)[3])[1]);}}

/* k9974 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_9976(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9976,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9983,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9987,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t4=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k9985 in k9974 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9987,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9991,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t3=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k9989 in k9985 in k9974 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9991(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9991,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9995,a[2]=((C_word*)t0)[3],a[3]=t1,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t3=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k9993 in k9989 in k9985 in k9974 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9995(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9995,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9999,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t3=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k9997 in k9993 in k9989 in k9985 in k9974 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9999(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[45],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9999,2,t0,t1);}
t2=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[7])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8063(((C_word*)t0)[6],(C_word)C_a_i_list(&a,14,lf[237],((C_word*)t0)[5],lf[238],((C_word*)t0)[4],lf[240],((C_word*)t0)[3],lf[242],((C_word*)t0)[2],lf[245],t1,lf[239],t2,lf[241],C_SCHEME_END_OF_LIST));}

/* k9981 in k9974 in k9971 in k9968 in k9964 in k9953 in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9983(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* collector-acc in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_9943(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9943,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_caddr(t2));}

/* collector-type in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_9938(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9938,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cadr(t2));}

/* make-collector in parse-accumulation in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_9933(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9933,NULL,5,t1,t2,t3,t4,t5);}
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,4,t2,t3,t4,t5));}

/* parse-initially in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9765(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9765,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9776,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[351],t6,lf[352]));}
else{
t12=t11;
f_9776(2,t12,C_SCHEME_UNDEFINED);}}

/* k9774 in parse-initially in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9776(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9776,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9791,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8063(t6,(C_word)C_a_i_list(&a,4,lf[237],((C_word*)t0)[2],lf[240],t7));}

/* k9789 in k9774 in parse-initially in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9791(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-finally in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9727(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[19],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9727,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_car(((C_word*)t5)[1]);
t7=(C_word)C_i_cdr(((C_word*)t5)[1]);
t8=C_set_block_item(t5,0,t7);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9738,a[2]=t6,a[3]=t1,a[4]=t10,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t5)[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t11,t4,((C_word*)t5)[1],(C_word)C_a_i_list(&a,3,lf[348],t6,lf[349]));}
else{
t12=t11;
f_9738(2,t12,C_SCHEME_UNDEFINED);}}

/* k9736 in parse-finally in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9738(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9738,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9753,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8063(t6,(C_word)C_a_i_list(&a,4,lf[237],((C_word*)t0)[2],lf[244],t7));}

/* k9751 in k9736 in parse-finally in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9753(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-do in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9660(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[21],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9660,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t5)[1];
t7=(C_word)C_i_car(((C_word*)t5)[1]);
t8=(C_word)C_i_cdr(((C_word*)t5)[1]);
t9=C_set_block_item(t5,0,t8);
t10=C_SCHEME_END_OF_LIST;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9671,a[2]=t11,a[3]=t7,a[4]=t5,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9680,a[2]=t14,a[3]=t7,a[4]=t6,a[5]=t4,a[6]=t11,a[7]=t5,a[8]=((C_word)li175),tmp=(C_word)a,a+=9,tmp));
t16=((C_word*)t14)[1];
f_9680(t16,t12);}

/* do1853 in parse-do in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_9680(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9680,NULL,2,t0,t1);}
t2=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_9690,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t1,a[8]=((C_word*)t0)[6],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t2)){
t4=t3;
f_9690(2,t4,t2);}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8285(t3,t4,((C_word*)t0)[5]);}}

/* k9688 in do1853 in parse-do in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9690(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9690,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[345],((C_word*)t0)[4],lf[346]));}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9703,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t3=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[8])[1]);}}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[8])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)((C_word*)t0)[2])[1];
f_9680(t7,((C_word*)t0)[7]);}}

/* k9701 in k9688 in do1853 in parse-do in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* k9669 in parse-do in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9671(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9671,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9678,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8063(t2,(C_word)C_a_i_list(&a,4,lf[237],((C_word*)t0)[3],lf[242],((C_word*)((C_word*)t0)[2])[1]));}

/* k9676 in k9669 in parse-do in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9678(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9467(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[37],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9467,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cdr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_FALSE;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9474,a[2]=t12,a[3]=t10,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t16,a[8]=t18,a[9]=t8,a[10]=t1,tmp=(C_word)a,a+=11,tmp);
t20=C_SCHEME_UNDEFINED;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_set_block_item(t21,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9527,a[2]=t18,a[3]=t16,a[4]=t5,a[5]=t4,a[6]=t14,a[7]=t12,a[8]=t10,a[9]=t21,a[10]=t8,a[11]=((C_word)li173),tmp=(C_word)a,a+=12,tmp));
t23=((C_word*)t21)[1];
f_9527(t23,t19,C_SCHEME_TRUE,C_SCHEME_FALSE);}

/* do1809 in parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_9527(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9527,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t7=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9537,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t4,a[10]=((C_word*)t0)[9],a[11]=t5,a[12]=((C_word*)t0)[10],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t6)){
t8=t7;
f_9537(2,t8,t6);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8285(t7,t8,((C_word*)t0)[5]);}}

/* k9535 in do1809 in parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9537(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9537,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[12])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9548,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[13],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9651,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t6,a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 265  loop-variable?");
f_8291(t7,((C_word*)((C_word*)t0)[11])[1]);}}

/* k9649 in k9535 in do1809 in parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9651(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[64],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9651,2,t0,t1);}
t2=(C_truep(t1)?((C_word*)((C_word*)t0)[12])[1]:C_SCHEME_FALSE);
if(C_truep(t2)){
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9557,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[335],((C_word*)((C_word*)t0)[10])[1],lf[336]));}
else{
t4=t3;
f_9557(2,t4,C_SCHEME_UNDEFINED);}}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[143]);
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9579,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[11],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[8])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[337]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[11])[1])){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9608,a[2]=t4,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9616,a[2]=t4,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t5,((C_word*)((C_word*)t0)[11])[1],C_SCHEME_FALSE);}}
else{
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t4,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[338]));}}}
else{
t4=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[323]);
if(C_truep(t4)){
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[339]));}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t9=((C_word*)t0)[7];
f_9548(2,t9,t8);}}
else{
if(C_truep(((C_word*)((C_word*)t0)[12])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[340],((C_word*)((C_word*)t0)[10])[1],lf[341]));}
else{
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(((C_word*)t0)[7],((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[342],((C_word*)((C_word*)t0)[10])[1],lf[343]));}}}}}

/* k9614 in k9649 in k9535 in do1809 in parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9616(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9616,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9579(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k9606 in k9649 in k9535 in do1809 in parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9608(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9608,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9579(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9577 in k9649 in k9535 in do1809 in parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9579(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_TRUE);
t6=((C_word*)t0)[2];
f_9548(2,t6,t5);}

/* k9555 in k9649 in k9535 in do1809 in parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9557(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9557,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9560,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t2,((C_word*)t0)[3],((C_word*)t0)[2],(C_word)C_a_i_list(&a,3,lf[333],((C_word*)((C_word*)t0)[8])[1],lf[334]));}
else{
t3=t2;
f_9560(2,t3,C_SCHEME_UNDEFINED);}}

/* k9558 in k9555 in k9649 in k9535 in do1809 in parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t5=C_set_block_item(((C_word*)t0)[3],0,C_SCHEME_FALSE);
t6=((C_word*)t0)[2];
f_9548(2,t6,t5);}

/* k9546 in k9535 in do1809 in parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9548(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[5])[1];
f_9527(t2,((C_word*)t0)[4],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k9472 in parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9474,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9477,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word*)t0)[10],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[332]));}
else{
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9517,a[2]=t2,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9525,a[2]=t2,a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t3,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE);}}
else{
t3=t2;
f_9477(2,t3,C_SCHEME_UNDEFINED);}}}

/* k9523 in k9472 in parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9525(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9525,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_9477(2,t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k9515 in k9472 in parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9517(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9517,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9477(2,t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9475 in k9472 in parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9477(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9477,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9484,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9488,a[2]=((C_word*)t0)[3],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t4=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k9486 in k9475 in k9472 in parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9488(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9488,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9492,a[2]=t1,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t3=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k9490 in k9486 in k9475 in k9472 in parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9492(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9492,2,t0,t1);}
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8063(((C_word*)t0)[3],(C_word)C_a_i_list(&a,6,lf[237],lf[331],lf[238],((C_word*)t0)[2],lf[240],t1));}

/* k9482 in k9475 in k9472 in parse-with in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9484(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-general-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9325(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word ab[32],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_9325,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(C_word)C_i_cddr(t2);
t8=t7;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9335,a[2]=t6,a[3]=t17,a[4]=t15,a[5]=t11,a[6]=t9,a[7]=t1,tmp=(C_word)a,a+=8,tmp);
t19=C_SCHEME_UNDEFINED;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_set_block_item(t20,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9373,a[2]=t17,a[3]=t11,a[4]=t5,a[5]=t4,a[6]=t13,a[7]=t15,a[8]=t6,a[9]=t20,a[10]=t9,a[11]=((C_word)li171),tmp=(C_word)a,a+=12,tmp));
t22=((C_word*)t20)[1];
f_9373(t22,t18,C_SCHEME_FALSE);}

/* do1771 in parse-general-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_9373(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9373,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9383,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_9383(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8285(t5,t6,((C_word*)t0)[5]);}}

/* k9381 in do1771 in parse-general-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9383(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9383,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9394,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[329]));}
else{
t7=t6;
f_9394(2,t7,C_SCHEME_UNDEFINED);}}}

/* k9392 in k9381 in do1771 in parse-general-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9394(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9394,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9397,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[323]);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9406,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t5,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[324]));}
else{
t6=t5;
f_9406(2,t6,C_SCHEME_UNDEFINED);}}
else{
t5=(C_word)C_eqp(t2,lf[325]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9431,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[3],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t6,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[326]));}
else{
t7=t6;
f_9431(2,t7,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t3,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[327],((C_word*)((C_word*)t0)[12])[1],lf[328]));}}}

/* k9429 in k9392 in k9381 in do1771 in parse-general-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9431(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9431,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,((C_word*)((C_word*)t0)[8])[1]);
t3=C_set_block_item(((C_word*)t0)[8],0,C_SCHEME_FALSE);
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[7])+1,t5);
t7=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[6],t4);
t8=C_mutate(((C_word *)((C_word*)t0)[5])+1,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t10=((C_word*)t0)[2];
f_9397(2,t10,t9);}

/* k9404 in k9392 in k9381 in do1771 in parse-general-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9406(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9406,2,t0,t1);}
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[6],t2);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t8=((C_word*)t0)[2];
f_9397(2,t8,t7);}

/* k9395 in k9392 in k9381 in do1771 in parse-general-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9397(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_9373(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k9333 in parse-general-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9335(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9335,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9342,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9371,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t3,((C_word*)t0)[2],C_SCHEME_FALSE);}

/* k9369 in k9333 in parse-general-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[42],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9371,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[5])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]):C_SCHEME_END_OF_LIST);
t4=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
t5=(C_truep(((C_word*)((C_word*)t0)[3])[1])?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8063(((C_word*)t0)[2],(C_word)C_a_i_list(&a,10,lf[237],lf[269],lf[238],t2,lf[240],t3,lf[242],t4,lf[243],t5));}

/* k9340 in k9333 in parse-general-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9342(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8974(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[7],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_8974,5,t0,t1,t2,t3,t4);}
t5=t2;
t6=(C_word)C_i_cadr(t2);
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8981,a[2]=t5,a[3]=t4,a[4]=t6,a[5]=t1,a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t8=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t7,lf[321]);}

/* k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8981(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word ab[44],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8981,2,t0,t1);}
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_END_OF_LIST;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_FALSE;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_END_OF_LIST;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_END_OF_LIST;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_8987,a[2]=t8,a[3]=t14,a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=t20,a[7]=t18,a[8]=t12,a[9]=t10,a[10]=t16,a[11]=t4,a[12]=((C_word*)t0)[5],a[13]=t6,tmp=(C_word)a,a+=14,tmp);
t22=C_SCHEME_UNDEFINED;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_set_block_item(t23,0,(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9215,a[2]=t14,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=t8,a[6]=t20,a[7]=t23,a[8]=t4,a[9]=((C_word)li169),tmp=(C_word)a,a+=10,tmp));
t25=((C_word*)t23)[1];
f_9215(t25,t21,C_SCHEME_FALSE);}

/* do1704 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_9215(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9215,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[8])[1]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9225,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=t3,a[9]=((C_word*)t0)[8],a[10]=t1,tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_9225(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8285(t5,t6,((C_word*)t0)[4]);}}

/* k9223 in do1704 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9225(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9225,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[10];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[9])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[9])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[9])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t6=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9236,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[7],a[10]=((C_word*)t0)[8],tmp=(C_word)a,a+=11,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t6,((C_word*)t0)[4],((C_word*)t0)[3],(C_word)C_a_i_list(&a,1,lf[320]));}
else{
t7=t6;
f_9236(2,t7,C_SCHEME_UNDEFINED);}}}

/* k9234 in k9223 in do1704 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9236(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9236,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[10])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9239,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[310]);
t5=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9248,a[2]=((C_word*)t0)[2],a[3]=t2,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=t3,a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[7],tmp=(C_word)a,a+=11,tmp);
if(C_truep(t4)){
t6=t5;
f_9248(t6,t4);}
else{
t6=(C_word)C_eqp(t2,lf[319]);
if(C_truep(t6)){
t7=t5;
f_9248(t7,t6);}
else{
t7=(C_word)C_eqp(t2,lf[302]);
t8=t5;
f_9248(t8,(C_truep(t7)?t7:(C_word)C_eqp(t2,lf[307])));}}}

/* k9246 in k9234 in k9223 in do1704 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_9248(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[37],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9248,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9251,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[10])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t2,((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,5,lf[312],((C_word*)((C_word*)t0)[9])[1],lf[313],((C_word*)((C_word*)t0)[10])[1],lf[314]));}
else{
t3=t2;
f_9251(2,t3,C_SCHEME_UNDEFINED);}}
else{
t2=(C_word)C_eqp(((C_word*)t0)[3],lf[293]);
if(C_truep(t2)){
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[315]));}
else{
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[10])[1],lf[302]);
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,1,lf[316]));}
else{
t4=(C_word)C_i_car(((C_word*)((C_word*)t0)[8])[1]);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[8])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[8])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=((C_word*)t0)[6];
f_9239(2,t8,t7);}}}
else{
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)t0)[4],(C_word)C_a_i_list(&a,3,lf[317],((C_word*)((C_word*)t0)[9])[1],lf[318]));}}}

/* k9249 in k9246 in k9234 in k9223 in do1704 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9251(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_9239(2,t7,t6);}

/* k9237 in k9234 in k9223 in do1704 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_9215(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k8985 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8987(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8987,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_9213,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t2,((C_word*)t0)[4],C_SCHEME_FALSE);}

/* k9211 in k8985 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9213(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9213,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[13])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[13])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_9209,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[13],tmp=(C_word)a,a+=13,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t4,((C_word*)t0)[5],((C_word*)((C_word*)t0)[2])[1]);}

/* k9207 in k9211 in k8985 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9209(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word ab[92],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9209,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[12])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[12])+1,t2);
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8998,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[302]);
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_9015,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[4],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t7=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[306]);}
else{
t6=(C_word)C_eqp(((C_word*)((C_word*)t0)[5])[1],lf[307]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_9091,a[2]=t4,a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(C_word)C_a_i_list(&a,3,lf[309],((C_word*)t0)[4],((C_word*)((C_word*)t0)[2])[1]);
t9=t7;
f_9091(t9,(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[3],t8));}
else{
t8=(C_word)C_a_i_list(&a,2,lf[309],((C_word*)t0)[4]);
t9=t7;
f_9091(t9,(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[3],t8));}}
else{
t7=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_9120,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[5],a[4]=t4,a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9155,a[2]=t7,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[2],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_listp(((C_word*)((C_word*)t0)[2])[1]))){
t9=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t10=t8;
f_9155(t10,(C_word)C_eqp(t9,lf[311]));}
else{
t9=t8;
f_9155(t9,C_SCHEME_FALSE);}}
else{
t8=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)t0)[4]);
t9=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[4],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=t7;
f_9120(t12,((C_word*)((C_word*)t0)[6])[1]);}}}}

/* k9153 in k9207 in k9211 in k8985 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_9155(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9155,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_a_i_list(&a,2,t2,((C_word*)t0)[4]);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[4],t3);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_9120(t7,((C_word*)((C_word*)t0)[3])[1]);}
else{
t2=(C_word)C_a_i_list(&a,2,((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[4],t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_9120(t6,((C_word*)((C_word*)t0)[3])[1]);}}

/* k9118 in k9207 in k9211 in k8985 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_9120(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[30],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9120,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_9136,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[310]);
if(C_truep(t3)){
t4=(C_word)C_a_i_list(&a,2,lf[21],((C_word*)t0)[6]);
t5=t2;
f_9136(t5,(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[2],t4));}
else{
t4=t2;
f_9136(t4,(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[2],((C_word*)t0)[6]));}}

/* k9134 in k9118 in k9207 in k9211 in k8985 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_9136(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9136,NULL,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[179],((C_word*)t0)[4]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8998(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k9089 in k9207 in k9211 in k8985 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_9091(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_9091,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,2,lf[308],((C_word*)t0)[4]);
t3=(C_word)C_a_i_list(&a,3,lf[175],t1,t2);
t4=(C_word)C_a_i_cons(&a,2,t3,((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_8998(t6,((C_word*)((C_word*)t0)[3])[1]);}

/* k9013 in k9207 in k9211 in k8985 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9015(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9015,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_9018,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t1,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t3=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[305]);}

/* k9016 in k9013 in k9207 in k9211 in k8985 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9018(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9018,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9082,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=t1,a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t2,((C_word*)t0)[7],C_fix(0));}

/* k9080 in k9016 in k9013 in k9207 in k9211 in k8985 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9082(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9082,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_9078,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t4,((C_word*)t0)[9],C_SCHEME_FALSE);}

/* k9076 in k9080 in k9016 in k9013 in k9207 in k9211 in k8985 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9078(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word ab[81],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9078,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[11])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[11])+1,t2);
t4=(C_word)C_a_i_list(&a,2,lf[303],((C_word*)t0)[10]);
t5=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[9],t4);
t6=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[8])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[8])+1,t6);
t8=(C_word)C_a_i_list(&a,3,lf[161],C_fix(1),((C_word*)t0)[7]);
t9=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[7],t8);
t10=(C_word)C_a_i_cons(&a,2,t9,((C_word*)((C_word*)t0)[6])[1]);
t11=C_mutate(((C_word *)((C_word*)t0)[6])+1,t10);
t12=(C_word)C_a_i_list(&a,3,lf[304],((C_word*)t0)[10],((C_word*)t0)[7]);
t13=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[5],t12);
t14=(C_word)C_a_i_cons(&a,2,t13,((C_word*)((C_word*)t0)[4])[1]);
t15=C_mutate(((C_word *)((C_word*)t0)[4])+1,t14);
t16=(C_word)C_a_i_list(&a,3,lf[184],((C_word*)t0)[7],((C_word*)t0)[9]);
t17=(C_word)C_a_i_list(&a,2,lf[145],t16);
t18=(C_word)C_a_i_cons(&a,2,t17,((C_word*)((C_word*)t0)[3])[1]);
t19=C_mutate(((C_word *)((C_word*)t0)[3])+1,t18);
t20=((C_word*)t0)[2];
f_8998(t20,((C_word*)((C_word*)t0)[3])[1]);}

/* k8996 in k9207 in k9211 in k8985 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8998(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8998,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_9005,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_9009,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=t2,tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t4=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k9007 in k8996 in k9207 in k9211 in k8985 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9009(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_9009,2,t0,t1);}
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8063(((C_word*)t0)[6],(C_word)C_a_i_list(&a,12,lf[237],lf[269],lf[238],t1,lf[241],((C_word*)((C_word*)t0)[5])[1],lf[240],((C_word*)((C_word*)t0)[4])[1],lf[242],((C_word*)((C_word*)t0)[3])[1],lf[243],((C_word*)((C_word*)t0)[2])[1]));}

/* k9003 in k8996 in k9207 in k9211 in k8985 in k8979 in parse-sequence-iteration in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_9005(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-repeat in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8927(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[13],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_8927,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t1,t4,t2,(C_word)C_a_i_list(&a,1,lf[299]));}
else{
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8942,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=((C_word)li166),tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8960,a[2]=t2,a[3]=((C_word)li167),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  call-with-values");
C_call_with_values(4,0,t1,t6,t7);}}

/* a8959 in parse-repeat in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8960(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_8960,4,t0,t1,t2,t3);}
t4=(C_word)C_i_cddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,t1,t2,t4);}

/* a8941 in parse-repeat in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8942,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8954,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t3=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[300]);}

/* k8952 in a8941 in parse-repeat in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8954(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8954,2,t0,t1);}
t2=(C_word)C_i_cadr(((C_word*)t0)[5]);
t3=(C_word)C_a_i_list(&a,4,lf[269],t1,lf[274],t2);
C_trace("ChickenBridge.scm: 265  parse-numerical-for");
t4=C_retrieve2(lf[268],"parse-numerical-for");
f_8545(5,t4,((C_word*)t0)[4],t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8545(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word ab[48],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_8545,5,t0,t1,t2,t3,t4);}
t5=(C_word)C_i_cadr(t2);
t6=(C_word)C_i_cddr(t2);
t7=t6;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_END_OF_LIST;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_SCHEME_END_OF_LIST;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_SCHEME_FALSE;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_SCHEME_FALSE;
t16=(*a=C_VECTOR_TYPE|1,a[1]=t15,tmp=(C_word)a,a+=2,tmp);
t17=C_SCHEME_FALSE;
t18=(*a=C_VECTOR_TYPE|1,a[1]=t17,tmp=(C_word)a,a+=2,tmp);
t19=C_SCHEME_FALSE;
t20=(*a=C_VECTOR_TYPE|1,a[1]=t19,tmp=(C_word)a,a+=2,tmp);
t21=C_SCHEME_FALSE;
t22=(*a=C_VECTOR_TYPE|1,a[1]=t21,tmp=(C_word)a,a+=2,tmp);
t23=C_SCHEME_FALSE;
t24=(*a=C_VECTOR_TYPE|1,a[1]=t23,tmp=(C_word)a,a+=2,tmp);
t25=C_SCHEME_FALSE;
t26=(*a=C_VECTOR_TYPE|1,a[1]=t25,tmp=(C_word)a,a+=2,tmp);
t27=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_8555,a[2]=t18,a[3]=t16,a[4]=t14,a[5]=t24,a[6]=t10,a[7]=t12,a[8]=t20,a[9]=t8,a[10]=t1,a[11]=t22,a[12]=t5,a[13]=t26,tmp=(C_word)a,a+=14,tmp);
t28=C_SCHEME_UNDEFINED;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_set_block_item(t29,0,(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_8754,a[2]=t22,a[3]=t18,a[4]=t20,a[5]=t2,a[6]=t4,a[7]=t14,a[8]=t16,a[9]=t29,a[10]=t8,a[11]=((C_word)li164),tmp=(C_word)a,a+=12,tmp));
t31=((C_word*)t29)[1];
f_8754(t31,t27,C_SCHEME_FALSE);}

/* do1605 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8754(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8754,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[10])[1]);
t5=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_8764,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=t3,a[11]=((C_word*)t0)[10],a[12]=t1,tmp=(C_word)a,a+=13,tmp);
if(C_truep(t4)){
t6=t5;
f_8764(2,t6,t4);}
else{
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[10])[1]);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8285(t5,t6,((C_word*)t0)[6]);}}

/* k8762 in do1605 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8764,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[12];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_UNDEFINED);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[11])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[10])+1,t2);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_8775,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[9],a[12]=((C_word*)t0)[10],tmp=(C_word)a,a+=13,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[297]));}
else{
t7=t6;
f_8775(2,t7,C_SCHEME_UNDEFINED);}}}

/* k8773 in k8762 in do1605 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8775(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word ab[132],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8775,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[12])[1];
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8778,a[2]=((C_word*)t0)[12],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,lf[276]);
t5=(C_truep(t4)?t4:(C_word)C_eqp(t2,lf[272]));
if(C_truep(t5)){
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8790,a[2]=t3,a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[9],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t6,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[277],((C_word*)((C_word*)t0)[12])[1],lf[278],((C_word*)((C_word*)t0)[9])[1],lf[279]));}
else{
t7=t6;
f_8790(2,t7,C_SCHEME_UNDEFINED);}}
else{
t6=(C_word)C_eqp(t2,lf[274]);
if(C_truep(t6)){
t7=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8811,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t7,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[280],((C_word*)((C_word*)t0)[12])[1],lf[281],((C_word*)((C_word*)t0)[3])[1],lf[282]));}
else{
t8=t7;
f_8811(2,t8,C_SCHEME_UNDEFINED);}}
else{
t7=(C_word)C_eqp(t2,lf[283]);
if(C_truep(t7)){
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8832,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t8,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[284],((C_word*)((C_word*)t0)[12])[1],lf[285],((C_word*)((C_word*)t0)[3])[1],lf[286]));}
else{
t9=t8;
f_8832(2,t9,C_SCHEME_UNDEFINED);}}
else{
t8=(C_word)C_eqp(t2,lf[273]);
if(C_truep(t8)){
t9=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8853,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t9,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[287],((C_word*)((C_word*)t0)[12])[1],lf[288],((C_word*)((C_word*)t0)[3])[1],lf[289]));}
else{
t10=t9;
f_8853(2,t10,C_SCHEME_UNDEFINED);}}
else{
t9=(C_word)C_eqp(t2,lf[275]);
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8874,a[2]=t3,a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[8],tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t10,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,5,lf[290],((C_word*)((C_word*)t0)[12])[1],lf[291],((C_word*)((C_word*)t0)[3])[1],lf[292]));}
else{
t11=t10;
f_8874(2,t11,C_SCHEME_UNDEFINED);}}
else{
t10=(C_word)C_eqp(t2,lf[293]);
if(C_truep(t10)){
t11=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8895,a[2]=t3,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t11,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[294]));}
else{
t12=t11;
f_8895(2,t12,C_SCHEME_UNDEFINED);}}
else{
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(t3,((C_word*)t0)[6],((C_word*)t0)[5],(C_word)C_a_i_list(&a,3,lf[295],((C_word*)((C_word*)t0)[12])[1],lf[296]));}}}}}}}

/* k8893 in k8773 in k8762 in do1605 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8895(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t6=((C_word*)t0)[2];
f_8778(2,t6,t5);}

/* k8872 in k8773 in k8762 in do1605 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8874(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_8778(2,t7,t6);}

/* k8851 in k8773 in k8762 in do1605 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_8778(2,t7,t6);}

/* k8830 in k8773 in k8762 in do1605 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_8778(2,t7,t6);}

/* k8809 in k8773 in k8762 in do1605 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8811(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[6])[1]);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[6])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[6])+1,t3);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[3])[1]);
t7=((C_word*)t0)[2];
f_8778(2,t7,t6);}

/* k8788 in k8773 in k8762 in do1605 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=((C_word*)t0)[2];
f_8778(2,t7,t6);}

/* k8776 in k8773 in k8762 in do1605 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8778(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_8754(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8555(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8555,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_8558,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word*)t0)[12],a[13]=((C_word*)t0)[13],tmp=(C_word)a,a+=14,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=t2;
f_8558(t4,C_SCHEME_UNDEFINED);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[276]);
t5=t2;
f_8558(t5,t4);}}

/* k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8558(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8558,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_8561,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[11],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[13],tmp=(C_word)a,a+=12,tmp);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[3])[1],lf[272]);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8721,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[13],tmp=(C_word)a,a+=6,tmp);
if(C_truep(t3)){
t5=t4;
f_8721(t5,t3);}
else{
t5=(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[275]);
t6=t4;
f_8721(t6,(C_truep(t5)?t5:(C_word)C_eqp(((C_word*)((C_word*)t0)[2])[1],lf[273])));}}

/* k8719 in k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8721(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a;
if(C_truep(t1)){
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[183]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[273]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[182]);
t5=((C_word*)t0)[2];
f_8561(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[184]);
t5=((C_word*)t0)[2];
f_8561(t5,t4);}}
else{
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,lf[161]);
t3=(C_word)C_eqp(((C_word*)((C_word*)t0)[4])[1],lf[274]);
if(C_truep(t3)){
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[171]);
t5=((C_word*)t0)[2];
f_8561(t5,t4);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,lf[181]);
t5=((C_word*)t0)[2];
f_8561(t5,t4);}}}

/* k8559 in k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8561(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8561,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8564,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_not(((C_word*)((C_word*)t0)[2])[1]);
t4=(C_truep(t3)?t3:(C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]));
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8692,a[2]=t2,a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t6=((C_word*)((C_word*)t0)[2])[1];
t7=(C_truep(t6)?t6:C_fix(0));
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t5,((C_word*)t0)[10],t7);}
else{
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8712,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[10],a[6]=((C_word*)t0)[4],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t5,((C_word*)t0)[10],C_SCHEME_FALSE);}}

/* k8710 in k8559 in k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8712,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8564(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k8690 in k8559 in k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8692(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8692,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8564(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k8562 in k8559 in k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8564(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8564,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8567,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],tmp=(C_word)a,a+=11,tmp);
t3=((C_word*)((C_word*)t0)[8])[1];
if(C_truep(t3)){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=t2;
f_8567(t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8657,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t5=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[271]);}}
else{
t4=C_set_block_item(((C_word*)t0)[8],0,C_fix(1));
t5=t2;
f_8567(t5,t4);}}

/* k8655 in k8562 in k8559 in k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8657,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8674,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t1,a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t2,t1,C_SCHEME_FALSE);}

/* k8672 in k8655 in k8562 in k8559 in k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8674(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8674,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[5]);
t8=((C_word*)t0)[2];
f_8567(t8,t7);}

/* k8565 in k8562 in k8559 in k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8567(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8567,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[10])[1],((C_word*)t0)[9],((C_word*)((C_word*)t0)[8])[1]);
t3=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[9],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[8])+1,t3);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8574,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(((C_word*)((C_word*)t0)[5])[1])){
t6=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8606,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=t5,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[2],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 265  gensym");
t7=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t7))(3,t7,t6,lf[270]);}
else{
t6=t5;
f_8574(t6,C_SCHEME_UNDEFINED);}}

/* k8604 in k8565 in k8562 in k8559 in k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8606(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8606,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8609,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t1,a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8624,a[2]=t2,a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t3,t1,((C_word*)((C_word*)t0)[5])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8640,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[5],a[5]=t1,a[6]=((C_word*)t0)[3],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  make-binding");
f_8297(t3,t1,C_SCHEME_FALSE);}}

/* k8638 in k8604 in k8565 in k8562 in k8559 in k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8640(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8640,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_cons(&a,2,t4,((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_8609(t7,((C_word*)((C_word*)t0)[3])[1]);}

/* k8622 in k8604 in k8565 in k8562 in k8559 in k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8624(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8624,2,t0,t1);}
t2=(C_word)C_a_i_cons(&a,2,t1,((C_word*)((C_word*)t0)[3])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8609(t4,((C_word*)((C_word*)t0)[3])[1]);}

/* k8607 in k8604 in k8565 in k8562 in k8559 in k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8609(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8609,NULL,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[6])[1],((C_word*)t0)[5],((C_word*)t0)[4]);
t3=C_mutate(((C_word *)((C_word*)t0)[3])+1,t2);
t4=((C_word*)t0)[2];
f_8574(t4,t3);}

/* k8572 in k8565 in k8562 in k8559 in k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8574(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8574,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8581,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8585,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t4=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)((C_word*)t0)[2])[1]);}

/* k8583 in k8572 in k8565 in k8562 in k8559 in k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8585(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8585,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8589,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  reverse");
t3=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[2])[1]);}

/* k8587 in k8583 in k8572 in k8565 in k8562 in k8559 in k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8589(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[36],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8589,2,t0,t1);}
t2=(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[5])[1]);
t3=((C_word*)((C_word*)t0)[4])[1];
t4=(C_truep(t3)?(C_word)C_a_i_list(&a,1,((C_word*)((C_word*)t0)[4])[1]):C_SCHEME_END_OF_LIST);
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8063(((C_word*)t0)[3],(C_word)C_a_i_list(&a,10,lf[237],lf[269],lf[238],((C_word*)t0)[2],lf[240],t1,lf[243],t2,lf[241],t4));}

/* k8579 in k8572 in k8565 in k8562 in k8559 in k8556 in k8553 in parse-numerical-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8581(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  values");
C_values(4,0,((C_word*)t0)[3],t1,((C_word*)((C_word*)t0)[2])[1]);}

/* parse-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8463(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_8463,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8467,a[2]=t3,a[3]=t4,a[4]=t1,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8285(t5,t6,t4);}

/* k8465 in parse-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8467(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8467,2,t0,t1);}
t2=(C_word)C_i_cdr(((C_word*)t0)[5]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[5],(C_word)C_a_i_list(&a,1,lf[261]));}
else{
t3=(C_word)C_i_cadr(((C_word*)t0)[5]);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8485,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  loop-variable?");
f_8291(t4,t3);}}

/* k8483 in k8465 in parse-for in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8485(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8485,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_cddr(((C_word*)t0)[6]);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,1,lf[262]));}
else{
t3=(C_word)C_i_caddr(((C_word*)t0)[6]);
t4=(C_word)C_i_cdddr(((C_word*)t0)[3]);
t5=(C_word)C_i_assoc(t3,t4);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t5);
t7=t6;
((C_proc5)C_retrieve_proc(t7))(5,t7,((C_word*)t0)[5],((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)t0)[4]);}
else{
t6=(C_word)C_i_caddr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,4,lf[263],t6,lf[264],lf[265]));}}}
else{
t2=(C_word)C_i_cadr(((C_word*)t0)[6]);
C_trace("ChickenBridge.scm: 265  loop-error");
f_8303(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[6],(C_word)C_a_i_list(&a,3,lf[266],t2,lf[267]));}}

/* loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8303(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8303,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8359,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=t3;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8311,a[2]=t2,a[3]=t9,a[4]=t7,a[5]=((C_word)li161),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_8311(t11,t5,((C_word*)t7)[1],C_SCHEME_END_OF_LIST);}

/* do1556 in loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8311(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8311,NULL,4,t0,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]);
t6=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8321,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t4,a[6]=t1,tmp=(C_word)a,a+=7,tmp);
if(C_truep(t5)){
t7=t6;
f_8321(2,t7,t5);}
else{
t7=(C_word)C_eqp(t2,((C_word*)((C_word*)t0)[4])[1]);
if(C_truep(t7)){
t8=t6;
f_8321(2,t8,C_SCHEME_FALSE);}
else{
t8=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 265  loop-op?");
f_8285(t6,t8,((C_word*)t0)[2]);}}}

/* k8319 in do1556 in loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8321(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8321,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 265  reverse");
t2=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_a_i_cons(&a,2,t2,((C_word*)((C_word*)t0)[5])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[5])+1,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)((C_word*)t0)[3])[1];
f_8311(t7,((C_word*)t0)[6],((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}}

/* k8357 in loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8359(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8359,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8362,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  newline");
t3=*((C_word*)lf[252]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k8360 in k8357 in loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8362(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8362,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8365,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 265  display");
t3=*((C_word*)lf[253]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[259]);}

/* k8363 in k8360 in k8357 in loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8365(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8365,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8368,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8440,a[2]=t4,a[3]=((C_word)li160),tmp=(C_word)a,a+=4,tmp));
t6=((C_word*)t4)[1];
f_8440(t6,t2,((C_word*)t0)[2]);}

/* do1566 in k8363 in k8360 in k8357 in loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8440(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8440,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8450,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 265  display");
t5=*((C_word*)lf[253]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}}

/* k8448 in do1566 in k8363 in k8360 in k8357 in loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8450(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8440(t3,((C_word*)t0)[2],t2);}

/* k8366 in k8363 in k8360 in k8357 in loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8368(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8368,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8371,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  newline");
t3=*((C_word*)lf[252]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k8369 in k8366 in k8363 in k8360 in k8357 in loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8371(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8371,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8374,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 265  display");
t3=*((C_word*)lf[253]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[258]);}

/* k8372 in k8369 in k8366 in k8363 in k8360 in k8357 in loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8374(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8374,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8377,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)t0)[2]))){
C_trace("ChickenBridge.scm: 265  display");
t3=*((C_word*)lf[253]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,lf[254]);}
else{
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8394,a[2]=((C_word*)t0)[2],a[3]=t4,a[4]=((C_word)li159),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_8394(t6,t2,((C_word*)t0)[2]);}}

/* do1571 in k8372 in k8369 in k8366 in k8363 in k8360 in k8357 in loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8394(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8394,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8404,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_eqp(t2,((C_word*)t0)[2]);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 265  display");
t5=*((C_word*)lf[253]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,lf[257]);}
else{
t5=t3;
f_8404(2,t5,C_SCHEME_UNDEFINED);}}}

/* k8402 in do1571 in k8372 in k8369 in k8366 in k8363 in k8360 in k8357 in loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8404(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8404,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8407,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_car(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 265  display");
t4=*((C_word*)lf[253]+1);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,t3);}

/* k8405 in k8402 in do1571 in k8372 in k8369 in k8366 in k8363 in k8360 in k8357 in loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8407,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8410,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=(C_word)C_i_nullp(t3);
t5=(C_truep(t4)?lf[255]:lf[256]);
C_trace("ChickenBridge.scm: 265  display");
t6=*((C_word*)lf[253]+1);
((C_proc3)C_retrieve_proc(t6))(3,t6,t2,t5);}

/* k8408 in k8405 in k8402 in do1571 in k8372 in k8369 in k8366 in k8363 in k8360 in k8357 in loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8394(t3,((C_word*)t0)[2],t2);}

/* k8375 in k8372 in k8369 in k8366 in k8363 in k8360 in k8357 in loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8377(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8377,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8380,a[2]=((C_word*)t0)[2],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 265  newline");
t3=*((C_word*)lf[252]+1);
((C_proc2)C_retrieve_proc(t3))(2,t3,t2);}

/* k8378 in k8375 in k8372 in k8369 in k8366 in k8363 in k8360 in k8357 in loop-error in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8380(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[251]);}

/* make-binding in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8297(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8297,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_list(&a,2,t2,t3));}

/* loop-variable? in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8291(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8291,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_symbolp(t2));}

/* loop-op? in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8285(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8285,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_assoc(t2,t3));}

/* gather-clauses in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8214(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8214,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_8216,a[2]=((C_word)li154),tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8255,a[2]=t3,a[3]=t4,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 265  gather-clause");
f_8216(t5,t3,C_retrieve2(lf[227],"loop-bindings"));}

/* k8253 in gather-clauses in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8255(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8255,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_8259,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 265  gather-clause");
f_8216(t2,((C_word*)t0)[2],C_retrieve2(lf[228],"loop-collectors"));}

/* k8257 in k8253 in gather-clauses in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8259(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8259,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_8263,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 265  gather-clause");
f_8216(t2,((C_word*)t0)[2],C_retrieve2(lf[229],"loop-initially"));}

/* k8261 in k8257 in k8253 in gather-clauses in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8263(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8263,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_8267,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 265  gather-clause");
f_8216(t2,((C_word*)t0)[2],C_retrieve2(lf[230],"loop-end-tests"));}

/* k8265 in k8261 in k8257 in k8253 in gather-clauses in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8267(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8267,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_8271,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 265  gather-clause");
f_8216(t2,((C_word*)t0)[2],C_retrieve2(lf[231],"loop-looping"));}

/* k8269 in k8265 in k8261 in k8257 in k8253 in gather-clauses in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8271(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8271,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8275,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 265  gather-clause");
f_8216(t2,((C_word*)t0)[2],C_retrieve2(lf[233],"loop-stepping"));}

/* k8273 in k8269 in k8265 in k8261 in k8257 in k8253 in gather-clauses in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8275(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8275,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_8279,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[10],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 265  gather-clause");
f_8216(t2,((C_word*)t0)[2],C_retrieve2(lf[234],"loop-finally"));}

/* k8277 in k8273 in k8269 in k8265 in k8261 in k8257 in k8253 in gather-clauses in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8279(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8279,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_8283,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[10],a[10]=((C_word*)t0)[11],tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 265  gather-clause");
f_8216(t2,((C_word*)t0)[2],C_retrieve2(lf[235],"loop-returning"));}

/* k8281 in k8277 in k8273 in k8269 in k8265 in k8261 in k8257 in k8253 in gather-clauses in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8283(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[54],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_8283,2,t0,t1);}
C_trace("ChickenBridge.scm: 265  make-loop-clause");
f_8063(((C_word*)t0)[10],(C_word)C_a_i_list(&a,18,lf[237],((C_word*)t0)[9],lf[238],((C_word*)t0)[8],lf[239],((C_word*)t0)[7],lf[240],((C_word*)t0)[6],lf[241],((C_word*)t0)[5],lf[242],((C_word*)t0)[4],lf[243],((C_word*)t0)[3],lf[244],((C_word*)t0)[2],lf[245],t1));}

/* gather-clause in gather-clauses in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8216(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8216,NULL,3,t1,t2,t3);}
t4=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8222,a[2]=t3,a[3]=t6,a[4]=t4,a[5]=((C_word)li153),tmp=(C_word)a,a+=6,tmp));
t8=((C_word*)t6)[1];
f_8222(t8,t1,C_SCHEME_END_OF_LIST);}

/* do1539 in gather-clause in gather-clauses in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8222(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8222,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[4])[1]))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,((C_word*)t3)[1]);}
else{
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_8233,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_8244,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
C_trace("ChickenBridge.scm: 265  accessor");
t7=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t7))(3,t7,t5,t6);}}

/* k8242 in do1539 in gather-clause in gather-clauses in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8244(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 265  append");
t2=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k8231 in do1539 in gather-clause in gather-clauses in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8233(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)((C_word*)t0)[3])[1];
f_8222(t5,((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);}

/* make-loop-clause in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8063(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8063,NULL,2,t1,t2);}
t3=(C_word)C_a_i_vector(&a,9,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST,C_SCHEME_END_OF_LIST);
if(C_truep((C_word)C_i_nullp(t2))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t3);}
else{
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8078,a[2]=t5,a[3]=t3,a[4]=((C_word)li151),tmp=(C_word)a,a+=5,tmp));
t7=((C_word*)t5)[1];
f_8078(t7,t1,t2);}}

/* do1527 in make-loop-clause in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8078(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8078,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[3]);}
else{
t3=(C_word)C_i_car(t2);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_8091,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_eqp(t3,lf[237]);
if(C_truep(t5)){
t6=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 265  loop-operator-set!");
f_7961(t4,((C_word*)t0)[3],t6);}
else{
t6=(C_word)C_eqp(t3,lf[238]);
if(C_truep(t6)){
t7=(C_word)C_i_cadr(t2);
t8=t4;
f_8091(2,t8,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(1),t7));}
else{
t7=(C_word)C_eqp(t3,lf[239]);
if(C_truep(t7)){
t8=(C_word)C_i_cadr(t2);
t9=t4;
f_8091(2,t9,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(2),t8));}
else{
t8=(C_word)C_eqp(t3,lf[240]);
if(C_truep(t8)){
t9=(C_word)C_i_cadr(t2);
t10=t4;
f_8091(2,t10,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(3),t9));}
else{
t9=(C_word)C_eqp(t3,lf[241]);
if(C_truep(t9)){
t10=(C_word)C_i_cadr(t2);
t11=t4;
f_8091(2,t11,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(4),t10));}
else{
t10=(C_word)C_eqp(t3,lf[242]);
if(C_truep(t10)){
t11=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 265  loop-looping-set!");
f_8021(t4,((C_word*)t0)[3],t11);}
else{
t11=(C_word)C_eqp(t3,lf[243]);
if(C_truep(t11)){
t12=(C_word)C_i_cadr(t2);
t13=t4;
f_8091(2,t13,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(6),t12));}
else{
t12=(C_word)C_eqp(t3,lf[244]);
if(C_truep(t12)){
t13=(C_word)C_i_cadr(t2);
t14=t4;
f_8091(2,t14,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(7),t13));}
else{
t13=(C_word)C_eqp(t3,lf[245]);
if(C_truep(t13)){
t14=(C_word)C_i_cadr(t2);
t15=t4;
f_8091(2,t15,(C_word)C_i_vector_set(((C_word*)t0)[3],C_fix(8),t14));}
else{
t14=t4;
f_8091(2,t14,C_SCHEME_UNDEFINED);}}}}}}}}}}}

/* k8089 in do1527 in make-loop-clause in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8091(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_8078(t3,((C_word*)t0)[2],t2);}

/* loop-returning in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8051(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8051,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(8)));}

/* loop-finally in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8039(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8039,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(7)));}

/* loop-stepping in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8027(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8027,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(6)));}

/* loop-looping-set! in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_8021(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_8021,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(5),t3));}

/* loop-looping in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8015(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8015,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(5)));}

/* loop-end-tests in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_8003(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_8003,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(4)));}

/* loop-initially in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7991(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7991,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(3)));}

/* loop-collectors in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7979(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7979,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(2)));}

/* loop-bindings in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7967(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7967,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_vector_ref(t2,C_fix(1)));}

/* loop-operator-set! in k7951 in k7948 in k7945 in k7942 in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7961(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7961,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_vector_set(t2,C_fix(0),t3));}

/* sal:output in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7925(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7925,2,t0,t1);}
C_trace("ChickenBridge.scm: 264  print-error");
t2=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[225]);}

/* sal:open in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7919(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7919,2,t0,t1);}
C_trace("ChickenBridge.scm: 264  print-error");
t2=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t2))(3,t2,t1,lf[223]);}

/* sal:load in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7872(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7872,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7876,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  file-exists?");
t4=C_retrieve(lf[221]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k7874 in sal:load in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7876(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7876,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7879,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
if(C_truep(t1)){
t3=(C_word)C_i_string_length(((C_word*)t0)[2]);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7901,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_greaterp(t3,C_fix(4)))){
t5=(C_word)C_a_i_minus(&a,2,t3,C_fix(4));
C_trace("substring=?");
t6=C_retrieve(lf[217]);
((C_proc7)(void*)(*((C_word*)t6+1)))(7,t6,t4,((C_word*)t0)[2],lf[218],t5,C_fix(0),C_SCHEME_FALSE);}
else{
t5=t4;
f_7901(2,t5,C_SCHEME_FALSE);}}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7892,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  string-append");
t4=*((C_word*)lf[193]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t3,lf[219],((C_word*)t0)[2],lf[220]);}}

/* k7890 in k7874 in sal:load in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7892(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  print-error");
t2=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7899 in k7874 in sal:load in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7901(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 264  load-sal-file");
t2=C_retrieve(lf[215]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 264  load");
t2=C_retrieve(lf[216]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k7877 in k7874 in sal:load in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:chdir in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7863(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_7863,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7867,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  chdir");
t4=C_retrieve(lf[40]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k7865 in sal:chdir in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7867(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal:print in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7684(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+16)){
C_save_and_reclaim((void*)tr2r,(void*)f_7684r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_7684r(t0,t1,t2);}}

static void C_ccall f_7684r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(16);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7687,a[2]=t4,a[3]=((C_word)li134),tmp=(C_word)a,a+=4,tmp));
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7832,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7837,a[2]=t4,a[3]=t8,a[4]=((C_word)li135),tmp=(C_word)a,a+=5,tmp));
t10=((C_word*)t8)[1];
f_7837(t10,t6,t2);}

/* do1355 in sal:print in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7837(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7837,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 264  print-message");
t3=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[212]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7850,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_7687(t5,t3,t4);}}

/* k7848 in do1355 in sal:print in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7850(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7837(t3,((C_word*)t0)[2],t2);}

/* k7830 in sal:print in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7832(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  values");
C_values(2,0,((C_word*)t0)[2]);}

/* printer in sal:print in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7687(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7687,NULL,3,t0,t1,t2);}
t3=t2;
if(C_truep(t3)){
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 264  print-message");
t4=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,lf[205]);}
else{
if(C_truep((C_word)C_i_pairp(t2))){
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7715,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  print-message");
t5=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,lf[208]);}
else{
t4=(C_word)C_eqp(t2,C_SCHEME_TRUE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 264  print-message");
t5=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,lf[209]);}
else{
if(C_truep((C_word)C_i_numberp(t2))){
if(C_truep((C_word)C_i_inexactp(t2))){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7802,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7806,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  decimals");
t7=C_retrieve(lf[57]);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,t2,C_fix(3));}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7813,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  number->string");
C_number_to_string(3,0,t5,t2);}}
else{
if(C_truep((C_word)C_i_stringp(t2))){
C_trace("ChickenBridge.scm: 264  print-message");
t5=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t2);}
else{
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7829,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  sprintf");
t6=C_retrieve(lf[5]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[210],t2);}}}}}}
else{
C_trace("ChickenBridge.scm: 264  print-message");
t4=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,lf[211]);}}

/* k7827 in printer in sal:print in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7829(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  print-message");
t2=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7811 in printer in sal:print in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7813(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  print-message");
t2=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7804 in printer in sal:print in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7806(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  number->string");
C_number_to_string(3,0,((C_word*)t0)[2],t1);}

/* k7800 in printer in sal:print in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7802(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  print-message");
t2=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7713 in printer in sal:print in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7715(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7715,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7718,a[2]=((C_word*)t0)[4],tmp=(C_word)a,a+=3,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7723,a[2]=((C_word*)t0)[3],a[3]=t4,a[4]=((C_word)li133),tmp=(C_word)a,a+=5,tmp));
t6=((C_word*)t4)[1];
f_7723(t6,t2,((C_word*)t0)[2]);}

/* do1347 in k7713 in printer in sal:print in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7723(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7723,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,C_SCHEME_FALSE);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7733,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  printer");
t5=((C_word*)((C_word*)t0)[2])[1];
f_7687(t5,t3,t4);}}

/* k7731 in do1347 in k7713 in printer in sal:print in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7733(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7733,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7736,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t2;
f_7736(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 264  print-message");
t4=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t2,lf[207]);}}

/* k7734 in k7731 in do1347 in k7713 in printer in sal:print in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7736(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_7723(t3,((C_word*)t0)[2],t2);}

/* k7716 in k7713 in printer in sal:print in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7718(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  print-message");
t2=C_retrieve(lf[204]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],lf[206]);}

/* sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7513(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=6) C_bad_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr6,(void*)f_7513,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=C_mutate(&lf[188],t2);
t8=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7519,a[2]=t6,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("map");
t9=*((C_word*)lf[11]+1);
((C_proc4)(void*)(*((C_word*)t9+1)))(4,t9,t8,C_retrieve2(lf[105],"list->token"),t4);}

/* k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7519(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7519,2,t0,t1);}
t2=C_mutate(&lf[189],t1);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7522,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[2])[1],C_fix(0)))){
t4=C_set_block_item(((C_word*)t0)[2],0,C_fix(36608));
t5=t3;
f_7522(t5,t4);}
else{
t4=t3;
f_7522(t4,C_SCHEME_FALSE);}}

/* k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7522(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7522,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_7526,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=((C_word*)((C_word*)t0)[2])[1];
t4=C_retrieve2(lf[189],"*sal-tokens*");
t5=(C_word)C_a_i_list(&a,4,C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,C_SCHEME_FALSE);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5322,a[2]=t4,a[3]=t3,a[4]=((C_word)li131),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  call/cc");
t7=*((C_word*)lf[202]+1);
((C_proc3)C_retrieve_proc(t7))(3,t7,t2,t6);}

/* a5321 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5322(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_5322,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5328,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word)li129),tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5335,a[2]=t2,a[3]=((C_word)li130),tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  call-with-values");
C_call_with_values(4,0,t1,t3,t4);}

/* a5334 in a5321 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5335(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5335,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5342,a[2]=((C_word*)t0)[2],a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t6=(C_word)C_i_nullp(t4);
t7=t5;
f_5342(t7,(C_truep(t6)?t6:C_SCHEME_FALSE));}
else{
t6=t5;
f_5342(t6,C_SCHEME_FALSE);}}

/* k5340 in a5334 in a5321 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5342(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5342,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5349,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  add-emit-info");
f_4979(t2,lf[199],lf[200],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 264  make-parse-error");
f_4799(((C_word*)t0)[4],lf[201],C_retrieve2(lf[155],"*maxtokpos*"));}}

/* k5347 in k5340 in a5334 in a5321 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5349(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5007(((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a5327 in a5321 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5328(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5328,2,t0,t1);}
t2=lf[155]=C_fix(0);;
C_trace("ChickenBridge.scm: 264  parser");
f_5360(t1,((C_word*)t0)[4],((C_word*)t0)[3],C_SCHEME_FALSE,C_fix(0),C_SCHEME_FALSE,((C_word*)t0)[2]);}

/* k7524 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7526(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7526,2,t0,t1);}
t2=C_mutate(&lf[190],t1);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7529,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
t4=C_retrieve2(lf[190],"*sal-output*");
if(C_truep((C_word)C_i_structurep(t4,lf[122]))){
t5=C_retrieve2(lf[188],"*sal-string*");
t6=C_retrieve2(lf[190],"*sal-output*");
t7=(C_word)C_i_string_length(t5);
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7560,a[2]=t7,a[3]=t6,a[4]=t5,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  parse-error-position");
f_4838(t8,t6);}
else{
if(C_truep(((C_word*)t0)[2])){
C_trace("ChickenBridge.scm: 264  pp");
t5=C_retrieve(lf[197]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[190],"*sal-output*"));}
else{
C_trace("ChickenBridge.scm: 264  eval");
t5=C_retrieve(lf[198]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,C_retrieve2(lf[190],"*sal-output*"));}}}

/* k7558 in k7524 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7560(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7560,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,t1,C_fix(1));
t3=t2;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_fix(0);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_7566,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=t6,a[8]=t4,tmp=(C_word)a,a+=9,tmp);
t8=C_SCHEME_UNDEFINED;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_set_block_item(t9,0,(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_7653,a[2]=((C_word*)t0)[4],a[3]=t9,a[4]=t4,a[5]=((C_word)li128),tmp=(C_word)a,a+=6,tmp));
t11=((C_word*)t9)[1];
f_7653(t11,t7,C_SCHEME_FALSE);}

/* do1321 in k7558 in k7524 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7653(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7653,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(-1)));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7663,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[4])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_7663(t10,t9);}
else{
t9=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[4])+1,t9);
t11=t6;
f_7663(t11,t10);}}}

/* k7661 in do1321 in k7558 in k7524 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7663(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_7653(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k7564 in k7558 in k7524 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7566(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7566,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[8])[1],C_fix(1));
t3=C_mutate(((C_word *)((C_word*)t0)[8])+1,t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)t0)[6]);
t5=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7574,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[5],tmp=(C_word)a,a+=8,tmp);
t6=C_SCHEME_UNDEFINED;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_set_block_item(t7,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7623,a[2]=((C_word*)t0)[4],a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=((C_word)li127),tmp=(C_word)a,a+=7,tmp));
t9=((C_word*)t7)[1];
f_7623(t9,t5,C_SCHEME_FALSE);}

/* do1328 in k7564 in k7558 in k7524 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7623(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_7623,NULL,3,t0,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(C_truep(t4)?t4:(C_word)C_i_nequalp(((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]));
if(C_truep(t5)){
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,C_SCHEME_FALSE);}
else{
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_7633,a[2]=t3,a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
t7=(C_word)C_i_string_ref(((C_word*)t0)[2],((C_word*)((C_word*)t0)[5])[1]);
t8=(C_word)C_eqp(t7,C_make_character(10));
if(C_truep(t8)){
t9=C_set_block_item(t3,0,C_SCHEME_TRUE);
t10=t6;
f_7633(t10,t9);}
else{
t9=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[5])[1],C_fix(1));
t10=C_mutate(((C_word *)((C_word*)t0)[5])+1,t9);
t11=t6;
f_7633(t11,t10);}}}

/* k7631 in do1328 in k7564 in k7558 in k7524 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_7633(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[4])[1];
f_7623(t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* k7572 in k7564 in k7558 in k7524 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7574(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7574,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7577,a[2]=((C_word*)t0)[7],tmp=(C_word)a,a+=3,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_7584,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7588,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=t3,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  parse-error-string");
f_4820(t4,((C_word*)t0)[2]);}

/* k7586 in k7572 in k7564 in k7558 in k7524 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7588(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7588,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7592,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  make-string");
t3=*((C_word*)lf[195]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k7590 in k7586 in k7572 in k7564 in k7558 in k7524 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7592(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7592,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_7596,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  substring");
t3=*((C_word*)lf[196]+1);
((C_proc5)C_retrieve_proc(t3))(5,t3,t2,((C_word*)t0)[3],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k7594 in k7590 in k7586 in k7572 in k7564 in k7558 in k7524 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7596,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7600,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  make-string");
t3=*((C_word*)lf[195]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,C_fix(1),C_make_character(10));}

/* k7598 in k7594 in k7590 in k7586 in k7572 in k7564 in k7558 in k7524 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7600(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7600,2,t0,t1);}
t2=(C_word)C_a_i_minus(&a,2,((C_word*)t0)[7],((C_word*)((C_word*)t0)[6])[1]);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_7607,a[2]=t1,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=t2,tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_a_i_plus(&a,2,t2,C_fix(2));
C_trace("ChickenBridge.scm: 264  make-string");
t5=*((C_word*)lf[195]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t3,t4,C_make_character(32));}

/* k7605 in k7598 in k7594 in k7590 in k7586 in k7572 in k7564 in k7558 in k7524 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7607(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_7607,2,t0,t1);}
t2=(C_word)C_i_string_set(t1,((C_word*)t0)[7],C_make_character(94));
t3=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[7],C_fix(1));
t4=(C_word)C_i_string_set(t1,t3,C_make_character(10));
C_trace("ChickenBridge.scm: 264  string-append");
t5=*((C_word*)lf[193]+1);
((C_proc8)C_retrieve_proc(t5))(8,t5,((C_word*)t0)[6],lf[194],((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k7582 in k7572 in k7564 in k7558 in k7524 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7584(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  print-error");
t2=C_retrieve(lf[192]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

/* k7575 in k7572 in k7564 in k7558 in k7524 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7577(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  values");
C_values(2,0,((C_word*)t0)[2]);}

/* k7527 in k7524 in k7520 in k7517 in sal in k7505 in k7502 in k7499 in k7496 in k7493 in k6971 in k6968 in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_7529(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  values");
C_values(2,0,((C_word*)t0)[2]);}

/* sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6449(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word t20;
C_word t21;
C_word t22;
C_word t23;
C_word t24;
C_word t25;
C_word t26;
C_word t27;
C_word t28;
C_word t29;
C_word t30;
C_word t31;
C_word t32;
C_word t33;
C_word t34;
C_word t35;
C_word ab[51],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_6449,4,t0,t1,t2,t3);}
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=C_SCHEME_FALSE;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_SCHEME_FALSE;
t15=(*a=C_VECTOR_TYPE|1,a[1]=t14,tmp=(C_word)a,a+=2,tmp);
t16=C_SCHEME_FALSE;
t17=(*a=C_VECTOR_TYPE|1,a[1]=t16,tmp=(C_word)a,a+=2,tmp);
t18=C_SCHEME_FALSE;
t19=(*a=C_VECTOR_TYPE|1,a[1]=t18,tmp=(C_word)a,a+=2,tmp);
t20=C_SCHEME_FALSE;
t21=(*a=C_VECTOR_TYPE|1,a[1]=t20,tmp=(C_word)a,a+=2,tmp);
t22=C_SCHEME_FALSE;
t23=(*a=C_VECTOR_TYPE|1,a[1]=t22,tmp=(C_word)a,a+=2,tmp);
t24=C_SCHEME_FALSE;
t25=(*a=C_VECTOR_TYPE|1,a[1]=t24,tmp=(C_word)a,a+=2,tmp);
t26=C_SCHEME_FALSE;
t27=(*a=C_VECTOR_TYPE|1,a[1]=t26,tmp=(C_word)a,a+=2,tmp);
t28=C_SCHEME_FALSE;
t29=(*a=C_VECTOR_TYPE|1,a[1]=t28,tmp=(C_word)a,a+=2,tmp);
t30=C_SCHEME_FALSE;
t31=(*a=C_VECTOR_TYPE|1,a[1]=t30,tmp=(C_word)a,a+=2,tmp);
t32=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6456,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t33=(*a=C_CLOSURE_TYPE|18,a[1]=(C_word)f_6462,a[2]=t27,a[3]=t25,a[4]=t29,a[5]=t31,a[6]=t23,a[7]=t19,a[8]=t17,a[9]=t21,a[10]=t15,a[11]=t7,a[12]=t3,a[13]=t2,a[14]=t32,a[15]=t5,a[16]=t13,a[17]=t11,a[18]=t9,tmp=(C_word)a,a+=19,tmp);
t34=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t33,t34,C_fix(23296));}

/* k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6462(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6462,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6466,a[2]=((C_word*)t0)[14],a[3]=((C_word*)t0)[15],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[17],a[6]=((C_word*)t0)[18],tmp=(C_word)a,a+=7,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[12]);}
else{
t2=(*a=C_CLOSURE_TYPE|17,a[1]=(C_word)f_6512,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[16],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[13],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[8],a[12]=((C_word*)t0)[9],a[13]=((C_word*)t0)[14],a[14]=((C_word*)t0)[15],a[15]=((C_word*)t0)[10],a[16]=((C_word*)t0)[18],a[17]=((C_word*)t0)[11],tmp=(C_word)a,a+=18,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[13]);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t2,t3,C_fix(10756));}}

/* k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6512(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6512,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_6516,a[2]=((C_word*)t0)[9],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[12],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[14],a[8]=((C_word*)t0)[15],a[9]=((C_word*)t0)[16],a[10]=((C_word*)t0)[17],tmp=(C_word)a,a+=11,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[10]);}
else{
t2=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_6609,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[10],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[13],a[11]=((C_word*)t0)[14],a[12]=((C_word*)t0)[8],a[13]=((C_word*)t0)[16],a[14]=((C_word*)t0)[17],tmp=(C_word)a,a+=15,tmp);
t3=(C_word)C_i_caddr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t2,t3,C_fix(22784));}}

/* k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6609(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6609,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6613,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[10],a[5]=((C_word*)t0)[11],a[6]=((C_word*)t0)[12],a[7]=((C_word*)t0)[13],a[8]=((C_word*)t0)[14],tmp=(C_word)a,a+=9,tmp);
t3=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t2,t3,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}
else{
t2=(C_word)C_i_length(((C_word*)t0)[9]);
t3=C_mutate(((C_word *)((C_word*)t0)[7])+1,t2);
t4=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_6677,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[9],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[14],tmp=(C_word)a,a+=13,tmp);
t5=(C_word)C_i_cadr(((C_word*)t0)[9]);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[8]);}}

/* k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6677(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6677,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[12])+1,t1);
t3=(C_word)C_a_i_minus(&a,2,((C_word*)((C_word*)t0)[11])[1],C_fix(1));
t4=(C_word)C_i_list_ref(((C_word*)t0)[10],t3);
t5=C_mutate(((C_word *)((C_word*)t0)[9])+1,t4);
t6=(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_6684,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word*)t0)[9],a[9]=((C_word*)t0)[6],a[10]=((C_word*)t0)[12],a[11]=((C_word*)t0)[7],a[12]=((C_word*)t0)[8],tmp=(C_word)a,a+=13,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6934,a[2]=t6,a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
t8=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t7,t8,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t7=C_set_block_item(((C_word*)t0)[9],0,C_fix(1));
t8=t6;
f_6684(t8,t7);}}

/* k6932 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6934(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_6684(t3,t2);}

/* k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6684(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6684,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6687,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[9],a[7]=((C_word*)t0)[10],a[8]=((C_word*)t0)[11],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],C_fix(6)))){
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6873,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t2,a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}
else{
t3=C_set_block_item(((C_word*)t0)[9],0,C_fix(0));
t4=(C_word)C_i_caddr(((C_word*)t0)[2]);
t5=C_mutate(((C_word *)((C_word*)t0)[6])+1,t4);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6922,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t6,t7,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}}

/* k6920 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6922(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_6687(t3,t2);}

/* k6871 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6873(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6873,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[7])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6879,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k6877 in k6871 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6879(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6879,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6903,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t3=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)t0)[2]);}
else{
t2=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t3=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t4=((C_word*)t0)[4];
f_6687(t4,t3);}}

/* k6901 in k6877 in k6871 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6903(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6903,2,t0,t1);}
t2=(C_word)C_i_car(t1);
t3=C_mutate(((C_word *)((C_word*)t0)[6])+1,t2);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6887,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6899,a[2]=((C_word*)t0)[3],a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t6=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t6))(3,t6,t5,((C_word*)t0)[2]);}

/* k6897 in k6901 in k6877 in k6871 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6899(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cadr(t1);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(((C_word*)t0)[3],t2,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k6885 in k6901 in k6877 in k6871 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6887(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_6687(t3,t2);}

/* k6685 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6687(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6687,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6690,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[5])[1]))){
t3=t2;
f_6690(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6849,a[2]=t2,a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[187]);}}

/* k6847 in k6685 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6849(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6849,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6853,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 264  append");
t5=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k6851 in k6847 in k6685 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6853(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_6690(t4,t3);}

/* k6688 in k6685 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6690(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6690,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6693,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[6])[1]))){
t3=t2;
f_6693(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6826,a[2]=t2,a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[186]);}}

/* k6824 in k6688 in k6685 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6826(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6826,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6830,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 264  append");
t5=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k6828 in k6824 in k6688 in k6685 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6830(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_6693(t4,t3);}

/* k6691 in k6688 in k6685 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6693(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6693,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6696,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
if(C_truep(((C_word*)((C_word*)t0)[2])[1])){
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[2])[1]))){
t3=t2;
f_6696(t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6803,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[9],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[185]);}}
else{
t3=t2;
f_6696(t3,C_SCHEME_UNDEFINED);}}

/* k6801 in k6691 in k6688 in k6685 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6803(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6803,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6807,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],tmp=(C_word)a,a+=6,tmp);
t3=(C_word)C_a_i_list(&a,5,t1,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 264  append");
t5=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[4])[1],t4);}

/* k6805 in k6801 in k6691 in k6688 in k6685 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6807(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
f_6696(t4,t3);}

/* k6694 in k6691 in k6688 in k6685 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6696(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6696,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6699,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[8],a[7]=((C_word*)t0)[9],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t3)){
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6728,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[2],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t4,((C_word*)((C_word*)t0)[3])[1],C_fix(21248));}
else{
t4=(C_word)C_a_i_list(&a,3,lf[161],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[5])+1,t5);
t7=t2;
f_6699(t7,t6);}}

/* k6726 in k6694 in k6691 in k6688 in k6685 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6728(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6728,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[171],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[161],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_6699(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6746,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(23552));}}

/* k6744 in k6726 in k6694 in k6691 in k6688 in k6685 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6746(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[35],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6746,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[181],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[161],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_6699(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_6764,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(20992));}}

/* k6762 in k6744 in k6726 in k6694 in k6691 in k6688 in k6685 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6764(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[34],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6764,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[182],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[183],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[4])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[7])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[4])+1,t5);
t7=((C_word*)t0)[3];
f_6699(t7,t6);}
else{
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6782,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t2,((C_word*)((C_word*)t0)[2])[1],C_fix(21760));}}

/* k6780 in k6762 in k6744 in k6726 in k6694 in k6691 in k6688 in k6685 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6782(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6782,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_a_i_list(&a,3,lf[184],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t4=(C_word)C_a_i_list(&a,3,lf[183],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[6])[1],t4);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=((C_word*)t0)[2];
f_6699(t7,t6);}
else{
t2=((C_word*)t0)[2];
f_6699(t2,C_SCHEME_UNDEFINED);}}

/* k6697 in k6694 in k6691 in k6688 in k6685 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6699(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6699,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6703,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[5])[1],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 264  append");
t5=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[7])[1],t4);}

/* k6701 in k6697 in k6694 in k6691 in k6688 in k6685 in k6682 in k6675 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6703(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_6456(t3,t2);}

/* k6611 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6613(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6613,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6617,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[3]);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}

/* k6615 in k6611 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6617(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6617,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6621,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[180]);}

/* k6619 in k6615 in k6611 in k6607 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[72],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6621,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,2,lf[178],((C_word*)((C_word*)t0)[6])[1]);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[6])[1],t3);
t5=(C_word)C_a_i_list(&a,2,lf[179],((C_word*)((C_word*)t0)[6])[1]);
t6=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,t4,t5);
t7=(C_word)C_a_i_list(&a,2,lf[21],((C_word*)((C_word*)t0)[6])[1]);
t8=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[4])[1],t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t8,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,2,t6,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_6456(t12,t11);}

/* k6514 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6516(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6516,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_6520,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[9],tmp=(C_word)a,a+=11,tmp);
t4=(C_word)C_i_cadddr(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t3,t4,C_SCHEME_END_OF_LIST,((C_word*)t0)[3]);}

/* k6518 in k6514 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6520(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6520,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[10])+1,t1);
t3=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_6524,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[10],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 264  fifth");
t4=C_retrieve(lf[28]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,((C_word*)t0)[2]);}

/* k6522 in k6518 in k6514 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6524(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6524,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[9])+1,t1);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6527,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[9])[1])){
t4=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6543,a[2]=t3,a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],a[8]=((C_word*)t0)[9],tmp=(C_word)a,a+=9,tmp);
t5=(C_word)C_i_cadr(((C_word*)((C_word*)t0)[9])[1]);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t4,t5,C_SCHEME_END_OF_LIST,((C_word*)t0)[2]);}
else{
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[5])+1,t4);
t6=t3;
f_6527(t6,t5);}}

/* k6541 in k6522 in k6518 in k6514 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6543,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6547,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[177]);}

/* k6545 in k6541 in k6522 in k6518 in k6514 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6547(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word ab[66],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6547,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[8])[1],C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[6])[1]);
t5=(C_word)C_a_i_list(&a,3,lf[175],t3,t4);
t6=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_a_i_list(&a,4,lf[176],((C_word*)((C_word*)t0)[8])[1],t5,t6);
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[8])[1],C_SCHEME_TRUE,C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t10=(C_word)C_a_i_list(&a,1,t9);
t11=C_mutate(((C_word *)((C_word*)t0)[3])+1,t10);
t12=((C_word*)t0)[2];
f_6527(t12,t11);}

/* k6525 in k6522 in k6518 in k6514 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6527(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6527,NULL,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6531,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[3])[1],C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,1,t3);
C_trace("ChickenBridge.scm: 264  append");
t5=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t5))(4,t5,t2,((C_word*)((C_word*)t0)[5])[1],t4);}

/* k6529 in k6525 in k6522 in k6518 in k6514 in k6510 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6531(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_6456(t3,t2);}

/* k6464 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6466(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6466,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6470,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[174]);}

/* k6468 in k6464 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6470(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6470,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6474,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  gensym");
t4=C_retrieve(lf[172]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,lf[173]);}

/* k6472 in k6468 in k6464 in k6460 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6474(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[63],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6474,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_FALSE);
t4=(C_word)C_a_i_list(&a,3,lf[161],((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t5=(C_word)C_a_i_list(&a,3,lf[170],((C_word*)((C_word*)t0)[4])[1],t4);
t6=(C_word)C_a_i_list(&a,3,lf[171],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[6])[1]);
t7=(C_word)C_a_i_list(&a,5,((C_word*)((C_word*)t0)[4])[1],C_fix(0),C_SCHEME_FALSE,t5,t6);
t8=(C_word)C_a_i_list(&a,2,t3,t7);
t9=C_mutate(((C_word *)((C_word*)t0)[3])+1,t8);
t10=((C_word*)t0)[2];
f_6456(t10,t9);}

/* k6454 in sal-parse-stepping in k6445 in k6442 in k6439 in k6436 in k6433 in k6430 in k6427 in k6424 in k6421 in k6418 in k6415 in k6412 in k6409 in k6406 in k6403 in k6400 in k6397 in k6394 in k6391 in k6388 in k6385 in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6456(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[3],C_fix(33024),((C_word*)((C_word*)t0)[2])[1],C_SCHEME_FALSE);}

/* inf->pre in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6271(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[21],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6271,NULL,2,t1,t2);}
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_FALSE;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_FALSE;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_SCHEME_FALSE;
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_pairp(((C_word*)t3)[1]))){
t12=C_SCHEME_UNDEFINED;
t13=(*a=C_VECTOR_TYPE|1,a[1]=t12,tmp=(C_word)a,a+=2,tmp);
t14=C_set_block_item(t13,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6283,a[2]=t9,a[3]=t13,a[4]=t11,a[5]=t5,a[6]=t7,a[7]=t3,a[8]=((C_word)li124),tmp=(C_word)a,a+=9,tmp));
t15=((C_word*)t13)[1];
f_6283(t15,t1);}
else{
t12=t1;
((C_proc2)(void*)(*((C_word*)t12+1)))(2,t12,((C_word*)t3)[1]);}}

/* do958 in inf->pre in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6283(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6283,NULL,2,t0,t1);}
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]))){
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[7])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,t4);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6302,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[7],a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  is-op?");
f_6250(t6,((C_word*)((C_word*)t0)[5])[1]);}}

/* k6300 in do958 in inf->pre in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6302(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6302,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6305,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_numberp(((C_word*)((C_word*)t0)[8])[1]))){
t4=C_SCHEME_UNDEFINED;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_set_block_item(t5,0,(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6320,a[2]=((C_word*)t0)[8],a[3]=t5,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[5],a[8]=((C_word)li123),tmp=(C_word)a,a+=9,tmp));
t7=((C_word*)t5)[1];
f_6320(t7,t3,C_SCHEME_FALSE,C_SCHEME_TRUE,C_SCHEME_END_OF_LIST);}
else{
t4=C_mutate(((C_word *)((C_word*)t0)[3])+1,((C_word*)((C_word*)t0)[2])[1]);
t5=t3;
f_6305(2,t5,t4);}}

/* do960 in k6300 in do958 in inf->pre in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6320(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6320,NULL,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_i_nullp(((C_word*)((C_word*)t0)[7])[1]);
t9=(C_truep(t8)?t8:(C_word)C_i_not(((C_word*)t6)[1]));
if(C_truep(t9)){
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_6334,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],tmp=(C_word)a,a+=6,tmp);
t11=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6348,a[2]=t10,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  reverse");
t12=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t12))(3,t12,t11,((C_word*)t7)[1]);}
else{
t10=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_6352,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[2],a[4]=t7,a[5]=t6,a[6]=t1,a[7]=((C_word*)t0)[3],a[8]=t5,tmp=(C_word)a,a+=9,tmp);
t11=(C_word)C_i_car(((C_word*)((C_word*)t0)[7])[1]);
C_trace("ChickenBridge.scm: 264  is-op?");
f_6250(t10,t11);}}

/* k6350 in do960 in k6300 in do958 in inf->pre in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6352(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6352,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[8])+1,t1);
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6355,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
t4=(C_truep(((C_word*)((C_word*)t0)[8])[1])?(C_word)C_i_less_or_equalp(((C_word*)((C_word*)t0)[8])[1],((C_word*)((C_word*)t0)[3])[1]):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_FALSE);
t6=t3;
f_6355(t6,t5);}
else{
t5=(C_word)C_i_car(((C_word*)((C_word*)t0)[2])[1]);
t6=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t6);
t8=(C_word)C_a_i_cons(&a,2,t5,((C_word*)((C_word*)t0)[4])[1]);
t9=C_mutate(((C_word *)((C_word*)t0)[4])+1,t8);
t10=t3;
f_6355(t10,t9);}}

/* k6353 in k6350 in do960 in k6300 in do958 in inf->pre in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6355(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[6])[1];
f_6320(t2,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k6346 in do960 in k6300 in do958 in inf->pre in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6348(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  inf->pre");
f_6271(((C_word*)t0)[2],t1);}

/* k6332 in do960 in k6300 in do958 in inf->pre in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6334(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6334,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[5])+1,t1);
t3=(C_truep(((C_word*)((C_word*)t0)[4])[1])?(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[5])[1]):(C_word)C_a_i_list(&a,3,((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_FALSE));
t4=C_mutate(((C_word *)((C_word*)t0)[4])+1,t3);
t5=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,t4);}

/* k6303 in k6300 in do958 in inf->pre in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6305(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_6283(t2,((C_word*)t0)[2]);}

/* is-op? in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6250(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6250,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6257,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  token-unit?");
f_4919(t3,t2);}

/* k6255 in is-op? in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6257(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6257,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_6260,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-type");
f_4871(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k6258 in k6255 in is-op? in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6260(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6260,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_6266,a[2]=t1,a[3]=((C_word*)t0)[2],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  SalOpType?");
f_6027(t2,t1);}

/* k6264 in k6258 in k6255 in is-op? in k6246 in k6243 in k6240 in k6237 in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6266(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6266,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[3];
t3=((C_word*)t0)[2];
t4=t2;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_bitwise_and(&a,2,t3,C_fix(255)));}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* remove-token-type in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6185(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6185,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t5=t4;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_6194,a[2]=t3,a[3]=t6,a[4]=t8,a[5]=t4,a[6]=((C_word)li120),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_6194(t10,t1,t2);}

/* do924 in remove-token-type in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6194(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6194,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(((C_word*)t0)[5]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6207,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_6217,a[2]=((C_word*)t0)[3],a[3]=t2,a[4]=t3,tmp=(C_word)a,a+=5,tmp);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  token-unit-type=?");
f_4935(t4,t5,((C_word*)t0)[2]);}}

/* k6215 in do924 in remove-token-type in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_6217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_6217,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
f_6207(t2,C_SCHEME_FALSE);}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_a_i_list(&a,1,t2);
t4=(C_word)C_i_set_cdr(((C_word*)((C_word*)t0)[2])[1],t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[2])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[2])+1,t5);
t7=((C_word*)t0)[4];
f_6207(t7,t6);}}

/* k6205 in do924 in remove-token-type in k6181 in k6178 in k6175 in k6172 in k6169 in k6166 in k6163 in k6160 in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6207(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_6194(t3,((C_word*)t0)[2],t2);}

/* SalType=? in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6141(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6141,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_arithmetic_shift(&a,2,t2,C_fix(-8));
t5=(C_word)C_a_i_arithmetic_shift(&a,2,t3,C_fix(-8));
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_i_nequalp(t4,t5));}

/* SalRuleType? in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6129(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6129,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(25600),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(38400)):C_SCHEME_FALSE));}

/* SalOpType? in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_6027(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_6027,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(6656),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(11520)):C_SCHEME_FALSE));}

/* SalTokenType? in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5979(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5979,NULL,2,t1,t2);}
t3=(C_word)C_i_lessp(C_fix(0),t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(25600)):C_SCHEME_FALSE));}

/* parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5360(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5360,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t9=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5364,a[2]=t4,a[3]=t7,a[4]=t6,a[5]=t5,a[6]=t8,a[7]=t1,a[8]=t2,tmp=(C_word)a,a+=9,tmp);
if(C_truep(t6)){
C_trace("ChickenBridge.scm: 264  printf");
t10=C_retrieve(lf[164]);
((C_proc6)C_retrieve_proc(t10))(6,t10,t9,lf[165],t5,t2,((C_word*)t8)[1]);}
else{
t10=t9;
f_5364(2,t10,C_SCHEME_UNDEFINED);}}

/* k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5364(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5364,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5367,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  null-tokens?");
f_4539(t2,((C_word*)((C_word*)t0)[6])[1]);}

/* k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5367(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[18],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5367,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5370,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
if(C_truep(t1)){
t3=t2;
f_5370(t3,t1);}
else{
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5785,a[2]=t2,tmp=(C_word)a,a+=3,tmp);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5789,a[2]=t3,tmp=(C_word)a,a+=3,tmp);
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5793,a[2]=t4,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  first-token");
f_4527(t5,((C_word*)((C_word*)t0)[6])[1]);}}

/* k5791 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5793(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  token-position");
f_4486(((C_word*)t0)[2],t1);}

/* k5787 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5789(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  max");
t2=*((C_word*)lf[163]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],C_retrieve2(lf[155],"*maxtokpos*"),t1);}

/* k5783 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5785(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(&lf[155],t1);
t3=((C_word*)t0)[2];
f_5370(t3,t2);}

/* k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5370(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[17],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5370,NULL,2,t0,t1);}
t2=((C_word*)t0)[8];
if(C_truep((C_word)C_i_numberp(t2))){
t3=((C_word*)t0)[8];
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5385,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t3,a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  SalTokenType?");
f_5979(t4,t3);}
else{
t3=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5493,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[2],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 264  pattern-clause?");
f_4681(t3,((C_word*)t0)[8]);}}

/* k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5493(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5493,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5499,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],tmp=(C_word)a,a+=9,tmp);
t3=((C_word*)t0)[2];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4726,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  pattern-clause?");
f_4681(t4,t3);}
else{
C_trace("ChickenBridge.scm: 264  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[6],lf[162],((C_word*)t0)[2]);}}

/* k4724 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4726(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_5499(t3,(C_word)C_eqp(t2,lf[143]));}
else{
t2=((C_word*)t0)[2];
f_5499(t2,C_SCHEME_FALSE);}}

/* k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5499(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[32],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5499,NULL,2,t0,t1);}
t2=(C_truep(t1)?t1:((C_word*)t0)[8]);
if(C_truep(t2)){
t3=C_SCHEME_FALSE;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=((C_word*)((C_word*)t0)[7])[1];
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_SCHEME_END_OF_LIST;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_SCHEME_FALSE;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_5508,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t10,a[7]=((C_word*)t0)[7],a[8]=t6,a[9]=t8,a[10]=t4,a[11]=((C_word*)t0)[6],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 264  pattern-nsubs");
f_4699(t11,((C_word*)t0)[2]);}
else{
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5587,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t4=((C_word*)t0)[2];
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4742,a[2]=t3,a[3]=t4,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  pattern-clause?");
f_4681(t5,t4);}}

/* k4740 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4742(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_5587(t3,(C_word)C_eqp(t2,lf[144]));}
else{
t2=((C_word*)t0)[2];
f_5587(t2,C_SCHEME_FALSE);}}

/* k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5587(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[25],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5587,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_5593,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t7,a[8]=t5,a[9]=((C_word*)t0)[7],a[10]=t3,tmp=(C_word)a,a+=11,tmp);
C_trace("ChickenBridge.scm: 264  pattern-nsubs");
f_4699(t8,((C_word*)t0)[2]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5657,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[2],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  pattern-zero-or-more?");
f_4767(t2,((C_word*)t0)[2]);}}

/* k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5657(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5657,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5660,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],tmp=(C_word)a,a+=8,tmp);
if(C_truep(t1)){
t3=t2;
f_5660(t3,t1);}
else{
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4758,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  pattern-clause?");
f_4681(t4,t3);}}

/* k4756 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_5660(t3,(C_word)C_eqp(t2,lf[161]));}
else{
t2=((C_word*)t0)[2];
f_5660(t2,C_SCHEME_FALSE);}}

/* k5658 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5660(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word t18;
C_word t19;
C_word ab[46],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5660,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_TRUE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_FALSE;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)((C_word*)t0)[7])[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=C_SCHEME_END_OF_LIST;
t9=(*a=C_VECTOR_TYPE|1,a[1]=t8,tmp=(C_word)a,a+=2,tmp);
t10=C_fix(0);
t11=(*a=C_VECTOR_TYPE|1,a[1]=t10,tmp=(C_word)a,a+=2,tmp);
t12=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5666,a[2]=((C_word*)t0)[5],a[3]=t11,a[4]=((C_word*)t0)[7],a[5]=t9,a[6]=t3,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t13=C_SCHEME_UNDEFINED;
t14=(*a=C_VECTOR_TYPE|1,a[1]=t13,tmp=(C_word)a,a+=2,tmp);
t15=C_set_block_item(t14,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_5689,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t5,a[7]=t11,a[8]=t7,a[9]=((C_word*)t0)[7],a[10]=t9,a[11]=t14,a[12]=t3,a[13]=((C_word)li112),tmp=(C_word)a,a+=14,tmp));
t16=((C_word*)t14)[1];
f_5689(t16,t12);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5738,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=((C_word*)t0)[5];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4790,a[2]=t2,a[3]=t3,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  pattern-clause?");
f_4681(t4,t3);}}

/* k4788 in k5658 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4790(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
f_5738(t3,(C_word)C_eqp(t2,lf[160]));}
else{
t2=((C_word*)t0)[2];
f_5738(t2,C_SCHEME_FALSE);}}

/* k5736 in k5658 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5738(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[27],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5738,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_SCHEME_END_OF_LIST;
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=C_SCHEME_END_OF_LIST;
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5747,a[2]=((C_word*)t0)[6],a[3]=t7,a[4]=t5,a[5]=((C_word*)t0)[7],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5758,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[5],a[7]=((C_word)li113),tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5764,a[2]=t7,a[3]=t5,a[4]=t3,a[5]=((C_word)li114),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  call-with-values");
C_call_with_values(4,0,t8,t9,t10);}
else{
t2=((C_word*)t0)[5];
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  error");
t4=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,((C_word*)t0)[7],lf[159],t3);}}

/* a5763 in k5736 in k5658 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5764(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5764,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a5757 in k5736 in k5658 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5758(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5758,2,t0,t1);}
C_trace("ChickenBridge.scm: 264  parser");
f_5360(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5745 in k5736 in k5658 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5747(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_TRUE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[2])[1]);}}

/* do661 in k5658 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5689(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5689,NULL,2,t0,t1);}
t2=(C_word)C_i_not(((C_word*)((C_word*)t0)[12])[1]);
t3=(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_5699,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[7],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[12],a[12]=((C_word*)t0)[11],a[13]=t1,tmp=(C_word)a,a+=14,tmp);
if(C_truep(t2)){
t4=t3;
f_5699(2,t4,t2);}
else{
C_trace("ChickenBridge.scm: 264  null-tokens?");
f_4539(t3,((C_word*)((C_word*)t0)[8])[1]);}}

/* k5697 in do661 in k5658 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5699(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5699,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[13];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}
else{
t2=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_5702,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],a[8]=((C_word*)t0)[13],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
t3=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5719,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word)li110),tmp=(C_word)a,a+=8,tmp);
t4=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5725,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[11],a[5]=((C_word)li111),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  call-with-values");
C_call_with_values(4,0,t2,t3,t4);}}

/* a5724 in k5697 in do661 in k5658 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5725(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5725,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a5718 in k5697 in do661 in k5658 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5719(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5719,2,t0,t1);}
C_trace("ChickenBridge.scm: 264  parser");
f_5360(t1,((C_word*)t0)[6],((C_word*)((C_word*)t0)[5])[1],C_SCHEME_TRUE,((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5700 in k5697 in do661 in k5658 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5702(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[11],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5702,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5705,a[2]=((C_word*)t0)[8],a[3]=((C_word*)t0)[9],tmp=(C_word)a,a+=4,tmp);
if(C_truep(((C_word*)((C_word*)t0)[7])[1])){
t3=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5712,a[2]=t2,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  append");
t4=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t3,((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[2])[1]);}
else{
t3=t2;
f_5705(t3,C_SCHEME_UNDEFINED);}}

/* k5710 in k5700 in k5697 in do661 in k5658 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5712(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5712,2,t0,t1);}
t2=C_mutate(((C_word *)((C_word*)t0)[6])+1,t1);
t3=C_mutate(((C_word *)((C_word*)t0)[5])+1,((C_word*)((C_word*)t0)[4])[1]);
t4=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[3])[1],C_fix(1));
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=((C_word*)t0)[2];
f_5705(t6,t5);}

/* k5703 in k5700 in k5697 in do661 in k5658 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5705(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
f_5689(t2,((C_word*)t0)[2]);}

/* k5664 in k5658 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5666(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[12],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5666,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5669,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5675,a[2]=((C_word*)t0)[5],a[3]=t2,a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  pattern-zero-or-more?");
f_4767(t3,((C_word*)t0)[2]);}

/* k5673 in k5664 in k5658 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5675(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_truep(t1)?t1:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[5])[1],C_fix(0)));
if(C_truep(t2)){
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_TRUE);
t4=((C_word*)t0)[3];
f_5669(t4,t3);}
else{
t3=C_set_block_item(((C_word*)t0)[4],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_END_OF_LIST);
t5=((C_word*)t0)[3];
f_5669(t5,t4);}}

/* k5667 in k5664 in k5658 in k5655 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5669(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k5591 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5593(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[22],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5593,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5596,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],tmp=(C_word)a,a+=7,tmp);
t3=C_SCHEME_UNDEFINED;
t4=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t5=C_set_block_item(t4,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_5611,a[2]=((C_word*)t0)[7],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[5],a[9]=t4,a[10]=t1,a[11]=((C_word*)t0)[10],a[12]=((C_word)li109),tmp=(C_word)a,a+=13,tmp));
t6=((C_word*)t4)[1];
f_5611(t6,t2,C_fix(0));}

/* do641 in k5591 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5611(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[20],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5611,NULL,3,t0,t1,t2);}
t3=((C_word*)((C_word*)t0)[11])[1];
t4=(C_truep(t3)?t3:(C_word)C_i_nequalp(t2,((C_word*)t0)[10]));
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5621,a[2]=t1,a[3]=((C_word*)t0)[9],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5630,a[2]=t2,a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=((C_word)li107),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5644,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[11],a[5]=((C_word)li108),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a5643 in do641 in k5591 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5644(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5644,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a5629 in do641 in k5591 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5630(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5630,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5638,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  pattern-sub");
f_4709(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5636 in a5629 in do641 in k5591 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5638(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5638,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 264  parser");
f_5360(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5619 in do641 in k5591 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5621(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5621,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_5611(t3,((C_word*)t0)[2],t2);}

/* k5594 in k5591 in k5585 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5596(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(((C_word*)((C_word*)t0)[6])[1])){
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);}
else{
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[5],C_SCHEME_FALSE,C_SCHEME_END_OF_LIST,((C_word*)((C_word*)t0)[2])[1]);}}

/* k5506 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5508(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5508,2,t0,t1);}
t2=C_SCHEME_FALSE;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5511,a[2]=((C_word*)t0)[7],a[3]=t3,a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=((C_word*)t0)[10],a[7]=((C_word*)t0)[11],tmp=(C_word)a,a+=8,tmp);
t5=C_SCHEME_UNDEFINED;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=C_set_block_item(t6,0,(*a=C_CLOSURE_TYPE|13,a[1]=(C_word)f_5530,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[9],a[8]=((C_word*)t0)[6],a[9]=((C_word*)t0)[10],a[10]=t6,a[11]=t3,a[12]=t1,a[13]=((C_word)li106),tmp=(C_word)a,a+=14,tmp));
t8=((C_word*)t6)[1];
f_5530(t8,t4,C_fix(0));}

/* do619 in k5506 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5530(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[24],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5530,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nequalp(t2,((C_word*)t0)[12]);
t4=(C_truep(t3)?t3:((C_word*)((C_word*)t0)[11])[1]);
if(C_truep(t4)){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_FALSE);}
else{
t5=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5543,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],a[5]=((C_word*)t0)[9],a[6]=t1,a[7]=((C_word*)t0)[10],a[8]=t2,tmp=(C_word)a,a+=9,tmp);
t6=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_5563,a[2]=t2,a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word)li104),tmp=(C_word)a,a+=9,tmp);
t7=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5577,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[8],a[4]=((C_word*)t0)[9],a[5]=((C_word)li105),tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  call-with-values");
C_call_with_values(4,0,t5,t6,t7);}}

/* a5576 in do619 in k5506 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5577(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5577,5,t0,t1,t2,t3,t4);}
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t2);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t3);
t7=C_mutate(((C_word *)((C_word*)t0)[2])+1,t4);
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,t7);}

/* a5562 in do619 in k5506 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5563(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5563,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5571,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=t1,a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  pattern-sub");
f_4709(t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5569 in a5562 in do619 in k5506 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5571(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5571,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 264  parser");
f_5360(((C_word*)t0)[5],t1,((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5541 in do619 in k5506 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5543(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5543,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5546,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
t3=((C_word*)((C_word*)t0)[5])[1];
if(C_truep(t3)){
t4=(C_word)C_a_i_cons(&a,2,((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[3])+1,t4);
t6=t2;
f_5546(t6,t5);}
else{
t4=C_set_block_item(((C_word*)t0)[2],0,C_SCHEME_TRUE);
t5=t2;
f_5546(t5,t4);}}

/* k5544 in k5541 in do619 in k5506 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5546(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5546,NULL,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[4],C_fix(1));
t3=((C_word*)((C_word*)t0)[3])[1];
f_5530(t3,((C_word*)t0)[2],t2);}

/* k5509 in k5506 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5511(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5511,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5514,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],tmp=(C_word)a,a+=6,tmp);
if(C_truep(((C_word*)((C_word*)t0)[3])[1])){
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_FALSE);
t4=C_set_block_item(((C_word*)t0)[5],0,C_SCHEME_END_OF_LIST);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,((C_word*)((C_word*)t0)[2])[1]);
t6=t2;
f_5514(t6,t5);}
else{
t3=C_set_block_item(((C_word*)t0)[6],0,C_SCHEME_TRUE);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5528,a[2]=t2,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  reverse");
t5=*((C_word*)lf[158]+1);
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[5])[1]);}}

/* k5526 in k5509 in k5506 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5528(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=C_mutate(((C_word *)((C_word*)t0)[3])+1,t1);
t3=((C_word*)t0)[2];
f_5514(t3,t2);}

/* k5512 in k5509 in k5506 in k5497 in k5491 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5514(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* k5383 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5385(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5385,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5391,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  null-tokens?");
f_4539(t2,((C_word*)((C_word*)t0)[6])[1]);}
else{
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5443,a[2]=((C_word*)t0)[5],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[6],a[7]=((C_word*)t0)[4],tmp=(C_word)a,a+=8,tmp);
C_trace("ChickenBridge.scm: 264  SalRuleType?");
f_6129(t2,((C_word*)t0)[5]);}}

/* k5441 in k5383 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5443(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5443,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5446,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],tmp=(C_word)a,a+=7,tmp);
C_trace("ChickenBridge.scm: 264  get-rule");
f_4657(t2,((C_word*)t0)[2],C_SCHEME_END_OF_LIST);}
else{
C_trace("ChickenBridge.scm: 264  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[3],lf[157],((C_word*)t0)[2]);}}

/* k5444 in k5441 in k5383 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5446(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[13],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5446,2,t0,t1);}
t2=t1;
t3=(C_word)C_i_check_structure(t2,lf[111]);
t4=(C_word)C_i_block_ref(t2,C_fix(3));
t5=t1;
t6=(C_word)C_i_check_structure(t5,lf[111]);
t7=(C_word)C_i_block_ref(t5,C_fix(4));
t8=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_5457,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=t4,a[6]=((C_word*)t0)[6],a[7]=((C_word)li102),tmp=(C_word)a,a+=8,tmp);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5467,a[2]=((C_word*)t0)[3],a[3]=t7,a[4]=((C_word)li103),tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  call-with-values");
C_call_with_values(4,0,((C_word*)t0)[2],t8,t9);}

/* a5466 in k5444 in k5441 in k5383 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5467(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5467,5,t0,t1,t2,t3,t4);}
if(C_truep(t2)){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5478,a[2]=t4,a[3]=t2,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(((C_word*)t0)[3])){
C_trace("ChickenBridge.scm: 264  func");
t6=((C_word*)t0)[3];
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,t3,((C_word*)t0)[2]);}
else{
t6=t5;
f_5478(2,t6,t3);}}
else{
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,t1,C_SCHEME_FALSE,C_SCHEME_FALSE,t4);}}

/* k5476 in a5466 in k5444 in k5441 in k5383 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5478(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[4],((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* a5456 in k5444 in k5441 in k5383 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5457(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5457,2,t0,t1);}
t2=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
C_trace("ChickenBridge.scm: 264  parser");
f_5360(t1,((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],C_SCHEME_FALSE,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5389 in k5383 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5391(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5391,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[4],C_SCHEME_FALSE,C_SCHEME_FALSE,C_SCHEME_END_OF_LIST);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5401,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  first-token");
f_4527(t2,((C_word*)((C_word*)t0)[3])[1]);}}

/* k5399 in k5389 in k5383 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5401(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5401,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5407,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5437,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  token-type");
f_4450(t3,t1);}

/* k5435 in k5399 in k5389 in k5383 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5437(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* k5405 in k5399 in k5389 in k5383 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5407(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5407,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5414,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5422,a[2]=((C_word*)t0)[2],a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  token-type");
f_4450(t3,((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[3],C_SCHEME_FALSE,C_SCHEME_FALSE,((C_word*)((C_word*)t0)[4])[1]);}}

/* k5420 in k5405 in k5399 in k5389 in k5383 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5422(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5422,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5426,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  token-string");
f_4468(t2,((C_word*)t0)[2]);}

/* k5424 in k5420 in k5405 in k5399 in k5389 in k5383 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5426(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5426,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5430,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  token-position");
f_4486(t2,((C_word*)t0)[2]);}

/* k5428 in k5424 in k5420 in k5405 in k5399 in k5389 in k5383 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5430(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2],t1);}

/* k5412 in k5405 in k5399 in k5389 in k5383 in k5368 in k5365 in k5362 in parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5414(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=((C_word*)((C_word*)t0)[3])[1];
t3=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 264  values");
C_values(5,0,((C_word*)t0)[2],C_SCHEME_TRUE,t1,t3);}

/* simple-unit-emitter in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5256(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5256,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5258,a[2]=t2,a[3]=((C_word)li100),tmp=(C_word)a,a+=4,tmp));}

/* f_5258 in simple-unit-emitter in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5258(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[9],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_5258,5,t0,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5262,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=t4,a[5]=t3,tmp=(C_word)a,a+=6,tmp);
t6=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5306,a[2]=t5,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t6,t2);}

/* k5304 */
static void C_ccall f_5306(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  append");
t2=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k5260 */
static void C_ccall f_5262(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5262,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)t3)[1];
t5=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5265,a[2]=t3,a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t4,tmp=(C_word)a,a+=7,tmp);
if(C_truep(((C_word*)t0)[2])){
t6=(C_word)C_i_set_car(((C_word*)t3)[1],((C_word*)t0)[2]);
t7=(C_word)C_i_cdr(((C_word*)t3)[1]);
t8=C_set_block_item(t3,0,t7);
t9=t5;
f_5265(t9,t8);}
else{
t6=t5;
f_5265(t6,C_SCHEME_UNDEFINED);}}

/* k5263 in k5260 */
static void C_fcall f_5265(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5265,NULL,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_5270,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[5],a[4]=t3,a[5]=((C_word*)t0)[6],a[6]=((C_word)li99),tmp=(C_word)a,a+=7,tmp));
t5=((C_word*)t3)[1];
f_5270(t5,((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* do576 in k5263 in k5260 */
static void C_fcall f_5270(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5270,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,((C_word*)t0)[5]);}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5291,a[2]=t1,a[3]=((C_word*)t0)[4],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t3,t4,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* k5289 in do576 in k5263 in k5260 */
static void C_ccall f_5291(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word *a;
t2=(C_word)C_i_set_car(((C_word*)t0)[4],t1);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
t4=((C_word*)((C_word*)t0)[3])[1];
f_5270(t4,((C_word*)t0)[2],t3);}

/* simple-unit-parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5248(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5248,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5250,a[2]=t2,a[3]=((C_word)li97),tmp=(C_word)a,a+=4,tmp));}

/* f_5250 in simple-unit-parser in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5250(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_5250,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 264  make-parse-unit");
f_4850(t1,((C_word*)t0)[2],t2,C_SCHEME_FALSE);}

/* emit-list in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5040(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5040,NULL,4,t1,t2,t3,t4);}
if(C_truep((C_word)C_i_nullp(t2))){
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,C_SCHEME_END_OF_LIST);}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5057,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
t6=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 264  emit");
f_5007(t5,t6,t3,t4);}}

/* k5055 in emit-list in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5057(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5057,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5061,a[2]=t1,a[3]=((C_word*)t0)[5],tmp=(C_word)a,a+=4,tmp);
t3=(C_word)C_i_cdr(((C_word*)t0)[4]);
C_trace("ChickenBridge.scm: 264  emit-list");
f_5040(t2,t3,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5059 in k5055 in emit-list in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5061(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5061,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_5007(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_5007,NULL,4,t1,t2,t3,t4);}
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5014,a[2]=t4,a[3]=t3,a[4]=t2,a[5]=t1,tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  token-unit?");
f_4919(t5,t2);}

/* k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5014(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5014,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5085,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-type");
f_4871(t4,t3);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5023,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
t3=((C_word*)t0)[4];
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4958,a[2]=t3,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit?");
f_4856(t4,t3);}}

/* k4956 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4958(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4958,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4965,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-type");
f_4871(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
f_5023(2,t2,C_SCHEME_FALSE);}}

/* k4963 in k4956 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4965(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  SalRuleType?");
f_6129(((C_word*)t0)[2],t1);}

/* k5021 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5023(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5023,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
t3=((C_word*)t0)[4];
t4=((C_word*)t0)[3];
t5=((C_word*)t0)[2];
t6=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5223,a[2]=t5,a[3]=t4,a[4]=t3,a[5]=t2,tmp=(C_word)a,a+=6,tmp);
t7=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5246,a[2]=t6,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-type");
f_4871(t7,t3);}
else{
if(C_truep((C_word)C_i_listp(((C_word*)t0)[4]))){
C_trace("ChickenBridge.scm: 264  emit-list");
f_5040(((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
C_trace("ChickenBridge.scm: 264  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[151],((C_word*)t0)[4]);}}}

/* k5244 in k5021 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5246(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  get-rule");
f_4657(((C_word*)t0)[2],t1,C_SCHEME_END_OF_LIST);}

/* k5221 in k5021 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5223(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5223,2,t0,t1);}
t2=(C_word)C_i_check_structure(t1,lf[111]);
t3=(C_word)C_i_block_ref(t1,C_fix(5));
if(C_truep(t3)){
C_trace("ChickenBridge.scm: 264  meth");
t4=t3;
((C_proc5)C_retrieve_proc(t4))(5,t4,((C_word*)t0)[5],((C_word*)t0)[4],((C_word*)t0)[3],((C_word*)t0)[2]);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5239,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t4,((C_word*)t0)[4]);}}

/* k5237 in k5221 in k5021 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5239(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  emit");
f_5007(((C_word*)t0)[4],t1,((C_word*)t0)[3],((C_word*)t0)[2]);}

/* k5083 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5085(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5085,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5088,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-parsed");
f_4889(t2,((C_word*)t0)[2]);}

/* k5086 in k5083 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5088(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5088,2,t0,t1);}
t2=((C_word*)t0)[4];
t3=(C_word)C_i_lessp(C_fix(2560),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(3584)):C_SCHEME_FALSE);
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 264  string->number");
C_string_to_number(3,0,((C_word*)t0)[3],t1);}
else{
t5=((C_word*)t0)[4];
t6=(C_word)C_i_lessp(C_fix(13056),t5);
t7=(C_truep(t6)?(C_word)C_i_lessp(t5,C_fix(23808)):C_SCHEME_FALSE);
if(C_truep(t7)){
C_trace("ChickenBridge.scm: 264  string->symbol");
t8=*((C_word*)lf[140]+1);
((C_proc3)C_retrieve_proc(t8))(3,t8,((C_word*)t0)[3],t1);}
else{
t8=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5112,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=t1,a[5]=((C_word*)t0)[3],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  SalOpType?");
f_6027(t8,((C_word*)t0)[4]);}}}

/* k5110 in k5086 in k5083 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5112(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5112,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5118,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[3],C_fix(7941));}
else{
t2=((C_word*)t0)[3];
t3=(C_word)C_i_lessp(C_fix(4096),t2);
t4=(C_truep(t3)?(C_word)C_i_lessp(t2,C_fix(4864)):C_SCHEME_FALSE);
if(C_truep(t4)){
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_5163,a[2]=((C_word*)t0)[5],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t5,((C_word*)t0)[3],C_fix(4352));}
else{
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5169,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t5,((C_word*)t0)[3],C_fix(2304));}}}

/* k5167 in k5110 in k5086 in k5083 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5169(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5169,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[5];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5175,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(6144));}}

/* k5173 in k5167 in k5110 in k5086 in k5083 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5175(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5175,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 264  string->keyword");
t2=C_retrieve(lf[146]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5184,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(3840));}}

/* k5182 in k5173 in k5167 in k5110 in k5086 in k5083 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5184(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5184,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 264  string->keyword");
t2=C_retrieve(lf[146]);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5193,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(6400));}}

/* k5191 in k5182 in k5173 in k5167 in k5110 in k5086 in k5083 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5193(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5193,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 264  string->symbol");
t2=*((C_word*)lf[140]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[5],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_5202,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[5],tmp=(C_word)a,a+=6,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(25344));}}

/* k5200 in k5191 in k5182 in k5173 in k5167 in k5110 in k5086 in k5083 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5202(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5202,2,t0,t1);}
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 264  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[5],lf[147],((C_word*)t0)[4]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5211,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(25088));}}

/* k5209 in k5200 in k5191 in k5182 in k5173 in k5167 in k5110 in k5086 in k5083 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5211(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
C_trace("ChickenBridge.scm: 264  string->symbol");
t2=*((C_word*)lf[140]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[4],((C_word*)t0)[3]);}
else{
C_trace("ChickenBridge.scm: 264  error");
t2=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[4],lf[148],((C_word*)t0)[2]);}}

/* k5161 in k5110 in k5086 in k5083 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5163(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_truep(t1)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* k5116 in k5110 in k5086 in k5083 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5118(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5118,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[74]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5124,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(8199));}}

/* k5122 in k5116 in k5110 in k5086 in k5083 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5124(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5124,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[141]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5130,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(10244));}}

/* k5128 in k5122 in k5116 in k5110 in k5086 in k5083 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5130(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5130,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[142]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5136,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(8450));}}

/* k5134 in k5128 in k5122 in k5116 in k5110 in k5086 in k5083 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5136(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5136,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[143]);}
else{
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_5142,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(8705));}}

/* k5140 in k5134 in k5128 in k5122 in k5116 in k5110 in k5086 in k5083 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5142(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_5142,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[144]);}
else{
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_5148,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(t2,((C_word*)t0)[2],C_fix(8963));}}

/* k5146 in k5140 in k5134 in k5128 in k5122 in k5116 in k5110 in k5086 in k5083 in k5012 in emit in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_5148(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(C_truep(t1)){
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,lf[145]);}
else{
C_trace("ChickenBridge.scm: 264  string->symbol");
t2=*((C_word*)lf[140]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[3],((C_word*)t0)[2]);}}

/* set-emit-info! in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4989(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4989,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_i_assoc(t2,t4);
t6=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_4996,a[2]=t3,a[3]=t5,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
if(C_truep(t5)){
t7=t6;
f_4996(2,t7,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 264  error");
t7=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t7))(4,t7,t6,lf[138],t2);}}

/* k4994 in set-emit-info! in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4996(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_set_cdr(((C_word*)t0)[3],((C_word*)t0)[2]));}

/* add-emit-info in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4979(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4979,NULL,4,t1,t2,t3,t4);}
t5=(C_word)C_a_i_cons(&a,2,t2,t3);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_cons(&a,2,t5,t4));}

/* get-emit-info in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4967(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4967,NULL,3,t1,t2,t3);}
t4=(C_word)C_i_assoc(t2,t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_truep(t4)?(C_word)C_i_cdr(t4):C_SCHEME_FALSE));}

/* token-unit-type=? in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4935(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4935,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_4942,a[2]=t2,a[3]=t3,a[4]=t1,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 264  token-unit?");
f_4919(t4,t2);}

/* k4940 in token-unit-type=? in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4942(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4942,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4949,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-type");
f_4871(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[4];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k4947 in k4940 in token-unit-type=? in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4949(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  SalType=?");
f_6141(((C_word*)t0)[3],t1,((C_word*)t0)[2]);}

/* token-unit? in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4919(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4919,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4926,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit?");
f_4856(t3,t2);}

/* k4924 in token-unit? in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4926(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4926,2,t0,t1);}
if(C_truep(t1)){
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4933,a[2]=((C_word*)t0)[3],tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  parse-unit-type");
f_4871(t2,((C_word*)t0)[2]);}
else{
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* k4931 in k4924 in token-unit? in k4915 in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4933(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 264  SalTokenType?");
f_5979(((C_word*)t0)[2],t1);}

/* parse-unit-position in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4907(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4907,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[126]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* parse-unit-parsed in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4889(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4889,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[126]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-unit-type in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4871(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4871,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[126]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* parse-unit? in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4856(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4856,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_structurep(t2,lf[126]));}

/* make-parse-unit in k4846 in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4850(C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4850,NULL,4,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[126],t2,t3,t4));}

/* parse-error-position in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4838(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4838,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[122]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* parse-error-string in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4820(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4820,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[122]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-parse-error in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4799(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4799,NULL,3,t1,t2,t3);}
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_a_i_record(&a,3,lf[122],t2,t3));}

/* pattern-zero-or-more? in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4767(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4767,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4774,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  pattern-clause?");
f_4681(t3,t2);}

/* k4772 in pattern-zero-or-more? in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4774(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_eqp(t2,lf[120]));}
else{
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}}

/* pattern-sub in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4709(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4709,NULL,3,t1,t2,t3);}
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4717,a[2]=t3,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 264  pattern-subs");
f_4693(t4,t2);}

/* k4715 in pattern-sub in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4717(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(t1,((C_word*)t0)[2]));}

/* pattern-nsubs in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4699(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4699,NULL,2,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_4707,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 264  pattern-subs");
f_4693(t3,t2);}

/* k4705 in pattern-nsubs in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4707(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_length(t1));}

/* pattern-subs in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4693(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4693,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_cdr(t2));}

/* pattern-clause? in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4681(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4681,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_pairp(t2));}

/* get-rule in k4653 in k4650 in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4657(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4657,NULL,3,t1,t2,t3);}
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 264  hash-table-ref");
t4=*((C_word*)lf[18]+1);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[109],"*rules*"),t2);}
else{
C_trace("ChickenBridge.scm: 264  hash-table-ref/default");
t4=C_retrieve(lf[114]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,C_retrieve2(lf[109],"*rules*"),t3);}}

/* rule-name in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4570(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4570,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[111]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-rule in k4545 in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4549(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word ab[7],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4549,NULL,6,t1,t2,t3,t4,t5,t6);}
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)C_a_i_record(&a,6,lf[111],t2,t3,t4,t5,t6));}

/* null-tokens? in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4539(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4539,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_nullp(t2));}

/* first-token in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4527(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4527,NULL,2,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_i_car(t2));}

/* list->token in k4494 in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4498(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_4498,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
t4=(C_word)C_eqp(t3,lf[106]);
if(C_truep(t4)){
t5=(C_word)C_i_cdr(t2);
C_apply(4,0,t1,C_retrieve2(lf[100],"make-token"),t5);}
else{
C_apply(4,0,t1,C_retrieve2(lf[100],"make-token"),t2);}}

/* token-position in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4486(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4486,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[101]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(3)));}

/* token-string in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4468(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4468,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[101]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(2)));}

/* token-type in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4450(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4450,NULL,2,t1,t2);}
t3=(C_word)C_i_check_structure(t2,lf[101]);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_block_ref(t2,C_fix(1)));}

/* make-token in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4429(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word ab[5],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_4429,5,t0,t1,t2,t3,t4);}
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_a_i_record(&a,4,lf[101],t2,t3,t4));}

/* ranpink in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4423(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4423,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub217(t2));}

/* ranbrown in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4417(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4417,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub220(t2));}

/* rangamma in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4398(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_4398r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_4398r(t0,t1,t2);}}

static void C_ccall f_4398r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 263  tb:rangamma");
f_3660(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 263  tb:rangamma");
f_3660(t1,t3);}}

/* ranpoisson in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4379(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_4379r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_4379r(t0,t1,t2);}}

static void C_ccall f_4379r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_i_nullp(C_retrieve(lf[96])))){
C_trace("ChickenBridge.scm: 263  tb:ranpoisson");
f_3670(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 263  tb:ranpoisson");
f_3670(t1,t3);}}

/* rancauchy in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4373(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4373,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub210(t2));}

/* rangauss in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4333(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_4333r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_4333r(t0,t1,t2);}}

static void C_ccall f_4333r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 263  tb:rangauss");
f_3631(t1,C_fix(1),C_fix(0));}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 263  tb:rangauss");
f_3631(t1,t4,C_fix(0));}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 263  tb:rangauss");
f_3631(t1,t4,t5);}}}

/* ranexp in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4314(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2rv,(void*)f_4314r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_4314r(t0,t1,t2);}}

static void C_ccall f_4314r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
if(C_truep((C_word)C_vemptyp(t2))){
C_trace("ChickenBridge.scm: 263  tb:ranexp");
f_3642(t1,C_fix(1));}
else{
t3=(C_word)C_i_vector_ref(t2,C_fix(0));
C_trace("ChickenBridge.scm: 263  tb:ranexp");
f_3642(t1,t3);}}

/* ranbeta in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4270(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_4270r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_4270r(t0,t1,t2);}}

static void C_ccall f_4270r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 263  tb:ranbeta");
f_3649(t1,lf[90],lf[91]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 263  tb:ranbeta");
f_3649(t1,t4,t5);}
else{
t4=(C_word)C_i_car(t2);
t5=(C_word)C_i_cadr(t2);
C_trace("ChickenBridge.scm: 263  tb:ranbeta");
f_3649(t1,t4,t5);}}}

/* ranmiddle in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4264(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4264,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub183(t2));}

/* ranhigh in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4258(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4258,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub180(t2));}

/* ranlow in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4252(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[6],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4252,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub177(t2));}

/* pick in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4246(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr2r,(void*)f_4246r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_4246r(t0,t1,t2);}}

static void C_ccall f_4246r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_trace("ChickenBridge.scm: 263  pickl");
t3=C_retrieve(lf[83]);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,t2);}

/* pickl in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4223(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[4],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_4223,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 263  error");
t3=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t1,lf[84],t2);}
else{
t3=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4240,a[2]=t2,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t4=(C_word)C_i_length(t2);
C_trace("ChickenBridge.scm: 263  tb:rani");
f_3586(t3,t4);}}

/* k4238 in pickl in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4240(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* odds in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4165(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+14)){
C_save_and_reclaim((void*)tr3r,(void*)f_4165r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_4165r(t0,t1,t2,t3);}}

static void C_ccall f_4165r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word *a=C_alloc(14);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4182,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
C_trace("ChickenBridge.scm: 263  tb:ranf");
f_3593(t4,lf[80]);}
else{
t4=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_4201,a[2]=t3,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 263  tb:ranf");
f_3593(t5,lf[81]);}
else{
t5=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_4217,a[2]=t3,a[3]=t1,a[4]=t2,tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 263  tb:ranf");
f_3593(t5,lf[82]);}}}

/* k4215 in odds in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4217(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[4]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?(C_word)C_i_car(((C_word*)t0)[2]):(C_word)C_i_cadr(((C_word*)t0)[2])));}

/* k4199 in odds in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4201(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[4]);
t3=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?(C_word)C_i_car(((C_word*)t0)[2]):C_SCHEME_FALSE));}

/* k4180 in odds in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4182(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_lessp(t1,((C_word*)t0)[3]);
t3=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_truep(t2)?C_SCHEME_TRUE:C_SCHEME_FALSE));}

/* between in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4159(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word *a;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_4159,4,t0,t1,t2,t3);}
C_trace("ChickenBridge.scm: 263  ran");
t4=C_retrieve(lf[76]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* ran in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4071(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_4071r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_4071r(t0,t1,t2);}}

static void C_ccall f_4071r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 263  tb:ranf");
f_3593(t1,lf[77]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t4))){
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 263  tb:rani");
f_3586(t1,t5);}
else{
t5=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 263  tb:ranf");
f_3593(t1,t5);}}
else{
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_4117,a[2]=t1,a[3]=t2,tmp=(C_word)a,a+=4,tmp);
t5=(C_word)C_i_car(t2);
if(C_truep((C_word)C_fixnump(t5))){
t6=(C_word)C_i_cadr(t2);
t7=t4;
f_4117(t7,(C_word)C_fixnump(t6));}
else{
t6=t4;
f_4117(t6,C_SCHEME_FALSE);}}}}

/* k4115 in ran in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4117(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4117,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
t5=(C_word)C_i_foreign_fixnum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t4;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub166(C_SCHEME_UNDEFINED,t5,t6));}
else{
t2=(C_word)C_i_car(((C_word*)t0)[3]);
t3=(C_word)C_i_cadr(((C_word*)t0)[3]);
t4=((C_word*)t0)[2];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t2);
t7=(C_word)C_i_foreign_flonum_argumentp(t3);
t8=t4;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)stub172(t5,t6,t7));}}

/* ran-set! in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4065(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_4065,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)stub152(C_SCHEME_UNDEFINED,t2));}

/* steps in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4006(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr4rv,(void*)f_4006r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest_vector(a,C_rest_count(0));
f_4006r(t0,t1,t2,t3,t4);}}

static void C_ccall f_4006r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word *a=C_alloc(12);
t5=(C_word)C_a_i_list(&a,1,C_SCHEME_TRUE);
t6=(C_word)C_block_size(t4);
t7=C_SCHEME_UNDEFINED;
t8=(*a=C_VECTOR_TYPE|1,a[1]=t7,tmp=(C_word)a,a+=2,tmp);
t9=C_set_block_item(t8,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_4019,a[2]=t5,a[3]=t8,a[4]=t4,a[5]=t2,a[6]=((C_word)li48),tmp=(C_word)a,a+=7,tmp));
t10=((C_word*)t8)[1];
f_4019(t10,t1,C_fix(0),t3,t6,t5);}

/* do288 in steps in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_4019(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[16],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_4019,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_lessp(t2,((C_word*)t0)[5]))){
t8=(C_word)C_a_i_list(&a,1,((C_word*)t6)[1]);
t9=(C_word)C_i_set_cdr(((C_word*)t7)[1],t8);
t10=(C_word)C_i_cdr(((C_word*)t7)[1]);
t11=C_set_block_item(t7,0,t10);
t12=(*a=C_CLOSURE_TYPE|8,a[1]=(C_word)f_4055,a[2]=t7,a[3]=t4,a[4]=t1,a[5]=((C_word*)t0)[3],a[6]=t2,a[7]=t6,a[8]=((C_word*)t0)[4],tmp=(C_word)a,a+=9,tmp);
C_trace("ChickenBridge.scm: 263  modulo");
t13=*((C_word*)lf[74]+1);
((C_proc4)C_retrieve_proc(t13))(4,t13,t12,t2,t4);}
else{
t8=t1;
((C_proc2)(void*)(*((C_word*)t8+1)))(2,t8,(C_word)C_i_cdr(((C_word*)t0)[2]));}}

/* k4053 in do288 in steps in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4055(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_4055,2,t0,t1);}
t2=(C_word)C_i_vector_ref(((C_word*)t0)[8],t1);
t3=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[7])[1],t2);
t4=C_mutate(((C_word *)((C_word*)t0)[7])+1,t3);
t5=(C_word)C_a_i_plus(&a,2,((C_word*)t0)[6],C_fix(1));
t6=((C_word*)((C_word*)t0)[5])[1];
f_4019(t6,((C_word*)t0)[4],t5,((C_word*)((C_word*)t0)[7])[1],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1]);}

/* interp in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_4000(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3r,(void*)f_4000r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_4000r(t0,t1,t2,t3);}}

static void C_ccall f_4000r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_trace("ChickenBridge.scm: 263  interpl");
t4=C_retrieve(lf[67]);
((C_proc4)C_retrieve_proc(t4))(4,t4,t1,t2,t3);}

/* interpl in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3905(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,...){
C_word tmp;
C_word t4;
va_list v;
C_word *a,c2=c;
C_save_rest(t3,c2,4);
if(c<4) C_bad_min_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+6)){
C_save_and_reclaim((void*)tr4rv,(void*)f_3905r,4,t0,t1,t2,t3);}
else{
a=C_alloc((c-4)*3);
t4=C_restore_rest_vector(a,C_rest_count(0));
f_3905r(t0,t1,t2,t3,t4);}}

static void C_ccall f_3905r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word *a=C_alloc(6);
t5=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_3909,a[2]=t1,a[3]=t2,a[4]=t3,a[5]=t4,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("ChickenBridge.scm: 263  error");
t6=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t6))(4,t6,t5,lf[71],t3);}
else{
t6=t5;
f_3909(2,t6,(C_word)C_i_car(t3));}}

/* k3907 in interpl in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3909(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[9],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3909,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_3912,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t3,tmp=(C_word)a,a+=7,tmp);
t5=(C_word)C_i_cdr(((C_word*)t0)[4]);
if(C_truep((C_word)C_i_nullp(t5))){
C_trace("ChickenBridge.scm: 263  err");
t6=C_retrieve(lf[69]);
((C_proc4)C_retrieve_proc(t6))(4,t6,t4,lf[70],((C_word*)t0)[4]);}
else{
t6=t4;
f_3912(2,t6,(C_word)C_i_cadr(((C_word*)t0)[4]));}}

/* k3910 in k3907 in interpl in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3912(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[19],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3912,2,t0,t1);}
t2=t1;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=((C_word*)((C_word*)t0)[6])[1];
t5=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t6=((C_word*)t3)[1];
t7=(*a=C_VECTOR_TYPE|1,a[1]=t6,tmp=(C_word)a,a+=2,tmp);
t8=(C_word)C_vemptyp(((C_word*)t0)[5]);
t9=(C_truep(t8)?C_fix(1):(C_word)C_i_vector_ref(((C_word*)t0)[5],C_fix(0)));
t10=(C_word)C_i_cddr(((C_word*)t0)[4]);
t11=C_SCHEME_UNDEFINED;
t12=(*a=C_VECTOR_TYPE|1,a[1]=t11,tmp=(C_word)a,a+=2,tmp);
t13=C_set_block_item(t12,0,(*a=C_CLOSURE_TYPE|10,a[1]=(C_word)f_3924,a[2]=((C_word*)t0)[4],a[3]=t12,a[4]=t9,a[5]=t7,a[6]=t3,a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[3],a[9]=t5,a[10]=((C_word)li45),tmp=(C_word)a,a+=11,tmp));
t14=((C_word*)t12)[1];
f_3924(t14,((C_word*)t0)[2],t10);}

/* do272 in k3910 in k3907 in interpl in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_3924(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word ab[5],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3924,NULL,3,t0,t1,t2);}
t3=(C_word)C_i_nullp(t2);
t4=(C_truep(t3)?t3:(C_word)C_i_greaterp(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]));
if(C_truep(t4)){
C_trace("ChickenBridge.scm: 263  tb:rescale");
f_3450(t1,((C_word*)t0)[8],((C_word*)((C_word*)t0)[7])[1],((C_word*)((C_word*)t0)[9])[1],((C_word*)((C_word*)t0)[6])[1],((C_word*)((C_word*)t0)[5])[1],((C_word*)t0)[4]);}
else{
t5=C_mutate(((C_word *)((C_word*)t0)[7])+1,((C_word*)((C_word*)t0)[9])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[6])+1,((C_word*)((C_word*)t0)[5])[1]);
t7=(C_word)C_i_car(t2);
t8=C_mutate(((C_word *)((C_word*)t0)[9])+1,t7);
t9=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_3946,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t10=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("ChickenBridge.scm: 263  error");
t11=*((C_word*)lf[4]+1);
((C_proc4)C_retrieve_proc(t11))(4,t11,t9,lf[68],((C_word*)t0)[2]);}
else{
t11=(C_word)C_i_cadr(t2);
t12=C_mutate(((C_word *)((C_word*)t0)[5])+1,t11);
t13=t9;
f_3946(2,t13,t12);}}}

/* k3944 in do272 in k3910 in k3907 in interpl in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3946(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cddr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_3924(t3,((C_word*)t0)[2],t2);}

/* hertz->keynum in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3899(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3899,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub147(t3,t4));}

/* keynum->pc in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3893(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3893,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub143(C_SCHEME_UNDEFINED,t3));}

/* keynum->hertz in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3887(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3887,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub138(t3,t4));}

/* scaler->cents in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3881(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3881,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub134(C_SCHEME_UNDEFINED,t3));}

/* cents->scaler in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3875(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3875,3,t0,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_fixnum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub129(t3,t4));}

/* rhythm->seconds in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3815(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+12)){
C_save_and_reclaim((void*)tr3r,(void*)f_3815r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_3815r(t0,t1,t2,t3);}}

static void C_ccall f_3815r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word *a=C_alloc(12);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_3817,a[2]=t2,a[3]=((C_word)li36),tmp=(C_word)a,a+=4,tmp);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_3822,a[2]=t4,a[3]=((C_word)li37),tmp=(C_word)a,a+=4,tmp);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_3827,a[2]=t5,a[3]=((C_word)li38),tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t3))){
C_trace("def-tempo245253");
t7=t6;
f_3827(t7,t1);}
else{
t7=(C_word)C_i_car(t3);
t8=(C_word)C_i_cdr(t3);
if(C_truep((C_word)C_i_nullp(t8))){
C_trace("def-beat246251");
t9=t5;
f_3822(t9,t1,t7);}
else{
t9=(C_word)C_i_car(t8);
t10=(C_word)C_i_cdr(t8);
if(C_truep((C_word)C_i_nullp(t10))){
C_trace("body243248");
t11=t4;
f_3817(t11,t1,t7,t9);}
else{
C_trace("##sys#error");
t11=*((C_word*)lf[61]+1);
((C_proc4)(void*)(*((C_word*)t11+1)))(4,t11,t1,lf[0],t10);}}}}

/* def-tempo245 in rhythm->seconds in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_3827(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3827,NULL,2,t0,t1);}
C_trace("def-beat246251");
t2=((C_word*)t0)[2];
f_3822(t2,t1,lf[60]);}

/* def-beat246 in rhythm->seconds in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_3822(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3822,NULL,3,t0,t1,t2);}
C_trace("body243248");
t3=((C_word*)t0)[2];
f_3817(t3,t1,t2,lf[59]);}

/* body243 in rhythm->seconds in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_3817(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3817,NULL,4,t0,t1,t2,t3);}
t4=((C_word*)t0)[2];
t5=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t6=(C_word)C_i_foreign_flonum_argumentp(t4);
t7=(C_word)C_i_foreign_flonum_argumentp(t2);
t8=(C_word)C_i_foreign_flonum_argumentp(t3);
t9=t1;
((C_proc2)(void*)(*((C_word*)t9+1)))(2,t9,(C_word)stub122(t5,t6,t7,t8));}

/* decimals in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3796(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr3rv,(void*)f_3796r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest_vector(a,C_rest_count(0));
f_3796r(t0,t1,t2,t3);}}

static void C_ccall f_3796r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
if(C_truep((C_word)C_vemptyp(t3))){
C_trace("ChickenBridge.scm: 263  tb:decimals");
f_3511(t1,t2,C_fix(3));}
else{
t4=(C_word)C_i_vector_ref(t3,C_fix(0));
C_trace("ChickenBridge.scm: 263  tb:decimals");
f_3511(t1,t2,t4);}}

/* quantize in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3790(C_word c,C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
if(c!=4) C_bad_argc_2(c,4,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr4,(void*)f_3790,4,t0,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub114(t4,t5,t6));}

/* int in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3784(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3784,3,t0,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub102(C_SCHEME_UNDEFINED,t3));}

/* discrete in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3702(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,...){
C_word tmp;
C_word t6;
va_list v;
C_word *a,c2=c;
C_save_rest(t5,c2,6);
if(c<6) C_bad_min_argc_2(c,6,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr6r,(void*)f_3702r,6,t0,t1,t2,t3,t4,t5);}
else{
a=C_alloc((c-6)*3);
t6=C_restore_rest(a,C_rest_count(0));
f_3702r(t0,t1,t2,t3,t4,t5,t6);}}

static void C_ccall f_3702r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6){
C_word tmp;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word t17;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_pairp(t5))){
t7=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_3716,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
if(C_truep((C_word)C_i_nullp(t6))){
t8=(C_word)C_i_length(t5);
C_trace("ChickenBridge.scm: 263  tb:discrete");
f_3477(t7,t2,t3,t4,C_fix(0),t8,C_fix(1));}
else{
t8=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t8))){
t9=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 263  tb:discrete");
f_3477(t7,t2,t3,t4,C_fix(0),t9,C_fix(1));}
else{
t9=(C_word)C_i_car(t6);
t10=(C_word)C_i_cadr(t6);
C_trace("ChickenBridge.scm: 263  tb:discrete");
f_3477(t7,t2,t3,t4,C_fix(0),t9,t10);}}}
else{
t7=(C_word)C_i_cdr(t6);
if(C_truep((C_word)C_i_nullp(t7))){
t8=(C_word)C_i_car(t6);
C_trace("ChickenBridge.scm: 263  tb:discrete");
f_3477(t1,t2,t3,t4,t5,t8,C_fix(1));}
else{
t8=(C_word)C_i_car(t6);
t9=(C_word)C_i_cadr(t6);
C_trace("ChickenBridge.scm: 263  tb:discrete");
f_3477(t1,t2,t3,t4,t5,t8,t9);}}}

/* k3714 in discrete in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3716(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_i_list_ref(((C_word*)t0)[2],t1));}

/* rescale in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3683(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,...){
C_word tmp;
C_word t7;
va_list v;
C_word *a,c2=c;
C_save_rest(t6,c2,7);
if(c<7) C_bad_min_argc_2(c,7,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+0)){
C_save_and_reclaim((void*)tr7rv,(void*)f_3683r,7,t0,t1,t2,t3,t4,t5,t6);}
else{
a=C_alloc((c-7)*3);
t7=C_restore_rest_vector(a,C_rest_count(0));
f_3683r(t0,t1,t2,t3,t4,t5,t6,t7);}}

static void C_ccall f_3683r(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
if(C_truep((C_word)C_vemptyp(t7))){
C_trace("ChickenBridge.scm: 263  tb:rescale");
f_3450(t1,t2,t3,t4,t5,t6,C_fix(1));}
else{
t8=(C_word)C_i_vector_ref(t7,C_fix(0));
C_trace("ChickenBridge.scm: 263  tb:rescale");
f_3450(t1,t2,t3,t4,t5,t6,t8);}}

/* tb:ranpoisson in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_3670(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3670,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_flonum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub214(C_SCHEME_UNDEFINED,t3));}

/* tb:rangamma in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_3660(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3660,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub206(t3,t4));}

/* tb:ranbeta in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_3649(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3649,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub200(t4,t5,t6));}

/* tb:ranexp in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_3642(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3642,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub194(t3,t4));}

/* tb:rangauss in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_3631(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3631,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_flonum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub188(t4,t5,t6));}

/* tb:ranf in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_3593(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3593,NULL,2,t1,t2);}
t3=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t4=(C_word)C_i_foreign_flonum_argumentp(t2);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)stub160(t3,t4));}

/* tb:rani in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_3586(C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3586,NULL,2,t1,t2);}
t3=(C_word)C_i_foreign_fixnum_argumentp(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)stub156(C_SCHEME_UNDEFINED,t3));}

/* tb:decimals in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_3511(C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3511,NULL,3,t1,t2,t3);}
t4=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t5=(C_word)C_i_foreign_flonum_argumentp(t2);
t6=(C_word)C_i_foreign_fixnum_argumentp(t3);
t7=t1;
((C_proc2)(void*)(*((C_word*)t7+1)))(2,t7,(C_word)stub107(t4,t5,t6));}

/* tb:discrete in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_3477(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word *a;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3477,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_i_foreign_flonum_argumentp(t2);
t9=(C_word)C_i_foreign_flonum_argumentp(t3);
t10=(C_word)C_i_foreign_flonum_argumentp(t4);
t11=(C_word)C_i_foreign_fixnum_argumentp(t5);
t12=(C_word)C_i_foreign_fixnum_argumentp(t6);
t13=(C_word)C_i_foreign_flonum_argumentp(t7);
t14=t1;
((C_proc2)(void*)(*((C_word*)t14+1)))(2,t14,(C_word)stub93(C_SCHEME_UNDEFINED,t8,t9,t10,t11,t12,t13));}

/* tb:rescale in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_3450(C_word t1,C_word t2,C_word t3,C_word t4,C_word t5,C_word t6,C_word t7){
C_word tmp;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word ab[6],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_3450,NULL,7,t1,t2,t3,t4,t5,t6,t7);}
t8=(C_word)C_a_i_bytevector(&a,1,C_fix(4));
t9=(C_word)C_i_foreign_flonum_argumentp(t2);
t10=(C_word)C_i_foreign_flonum_argumentp(t3);
t11=(C_word)C_i_foreign_flonum_argumentp(t4);
t12=(C_word)C_i_foreign_flonum_argumentp(t5);
t13=(C_word)C_i_foreign_flonum_argumentp(t6);
t14=(C_word)C_i_foreign_flonum_argumentp(t7);
t15=t1;
((C_proc2)(void*)(*((C_word*)t15+1)))(2,t15,(C_word)stub78(t8,t9,t10,t11,t12,t13,t14));}

/* chdir in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3421(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr2rv,(void*)f_3421r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest_vector(a,C_rest_count(0));
f_3421r(t0,t1,t2);}}

static void C_ccall f_3421r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t3=(C_word)C_vemptyp(t2);
t4=(C_truep(t3)?lf[41]:(C_word)C_i_vector_ref(t2,C_fix(0)));
t5=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3430,a[2]=((C_word)li19),tmp=(C_word)a,a+=3,tmp);
((C_proc3)(void*)(*((C_word*)t5+1)))(3,t5,t1,t4);}

/* f_3430 in chdir in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3430(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3430,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3435,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
if(C_truep(t2)){
t4=(C_word)C_i_foreign_string_argumentp(t2);
C_trace("##sys#make-c-string");
t5=C_retrieve(lf[42]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t3,t4);}
else{
t4=t3;
f_3435(2,t4,C_SCHEME_FALSE);}}

/* k3433 */
static void C_ccall f_3435(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)t0)[2];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)stub67(C_SCHEME_UNDEFINED,t1));}

/* cwd in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3410(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3410,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3415,a[2]=((C_word)li17),tmp=(C_word)a,a+=3,tmp);
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,t1);}

/* f_3415 in cwd in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3415(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[5],*a=ab;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3415,2,t0,t1);}
t2=(C_word)C_a_i_bytevector(&a,1,C_fix(3));
C_trace("##sys#peek-c-string");
t3=*((C_word*)lf[39]+1);
((C_proc4)(void*)(*((C_word*)t3+1)))(4,t3,t1,(C_word)stub62(t2),C_fix(0));}

/* list* in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3370(C_word c,C_word t0,C_word t1,...){
C_word tmp;
C_word t2;
va_list v;
C_word *a,c2=c;
C_save_rest(t1,c2,2);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+4)){
C_save_and_reclaim((void*)tr2r,(void*)f_3370r,2,t0,t1);}
else{
a=C_alloc((c-2)*3);
t2=C_restore_rest(a,C_rest_count(0));
f_3370r(t0,t1,t2);}}

static void C_ccall f_3370r(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word *a=C_alloc(4);
if(C_truep((C_word)C_i_nullp(t2))){
C_trace("ChickenBridge.scm: 263  error");
t3=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t3))(3,t3,t1,lf[37]);}
else{
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t2));}
else{
t4=(C_word)C_i_car(t2);
t5=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_3400,a[2]=t4,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t6=(C_word)C_i_cdr(t2);
C_apply(4,0,t5,C_retrieve(lf[36]),t6);}}}

/* k3398 in list* in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3400(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3400,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* butlast in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3322(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[7],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3322,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,C_SCHEME_END_OF_LIST);}
else{
t4=(C_word)C_i_cddr(t2);
if(C_truep((C_word)C_i_nullp(t4))){
t5=(C_word)C_i_car(t2);
t6=t1;
((C_proc2)(void*)(*((C_word*)t6+1)))(2,t6,(C_word)C_a_i_list(&a,1,t5));}
else{
t5=(C_word)C_i_car(t2);
t6=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_3356,a[2]=t5,a[3]=t1,tmp=(C_word)a,a+=4,tmp);
t7=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 263  butlast");
t8=C_retrieve(lf[35]);
((C_proc3)C_retrieve_proc(t8))(3,t8,t6,t7);}}}

/* k3354 in butlast in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3356(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word ab[3],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3356,2,t0,t1);}
t2=((C_word*)t0)[3];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[2],t1));}

/* last in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3302(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3302,3,t0,t1,t2);}
t3=(C_word)C_i_cdr(t2);
if(C_truep((C_word)C_i_nullp(t3))){
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,t2);}
else{
t4=(C_word)C_i_cdr(t2);
C_trace("ChickenBridge.scm: 263  last");
t5=C_retrieve(lf[34]);
((C_proc3)C_retrieve_proc(t5))(3,t5,t1,t4);}}

/* tenth in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3282(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3282,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_cadr(t4));}

/* ninth in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3268(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3268,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=(C_word)C_i_cddddr(t3);
t5=t1;
((C_proc2)(void*)(*((C_word*)t5+1)))(2,t5,(C_word)C_i_car(t4));}

/* eighth in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3258(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3258,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadddr(t3));}

/* seventh in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3248(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3248,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_caddr(t3));}

/* sixth in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3238(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3238,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_cadr(t3));}

/* fifth in k3220 in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3228(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3228,3,t0,t1,t2);}
t3=(C_word)C_i_cddddr(t2);
t4=t1;
((C_proc2)(void*)(*((C_word*)t4+1)))(2,t4,(C_word)C_i_car(t3));}

/* expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_2931(C_word c,C_word t0,C_word t1,C_word t2,C_word t3,C_word t4){
C_word tmp;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word ab[17],*a=ab;
if(c!=5) C_bad_argc_2(c,5,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr5,(void*)f_2931,5,t0,t1,t2,t3,t4);}
t5=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t6=t4;
t7=(C_truep(t6)?t6:(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3211,a[2]=((C_word)li0),tmp=(C_word)a,a+=3,tmp));
t8=t4;
t9=(C_truep(t8)?(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3200,a[2]=((C_word)li1),tmp=(C_word)a,a+=3,tmp):(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3209,a[2]=((C_word)li2),tmp=(C_word)a,a+=3,tmp));
t10=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_2941,a[2]=t9,a[3]=t7,a[4]=t1,a[5]=t5,tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_symbolp(t2))){
C_trace("ChickenBridge.scm: 187  symbol->string");
t11=*((C_word*)lf[19]+1);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,t2);}
else{
t11=t10;
f_2941(2,t11,t2);}}

/* k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_2941(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2941,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_2944,a[2]=((C_word*)t0)[2],a[3]=t1,a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],tmp=(C_word)a,a+=7,tmp);
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3192,a[2]=((C_word)li6),tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 188  hash-table-ref");
t4=*((C_word*)lf[18]+1);
((C_proc5)C_retrieve_proc(t4))(5,t4,t2,*((C_word*)lf[2]+1),t1,t3);}

/* a3191 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3192(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
if(c!=2) C_bad_argc_2(c,2,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3192,2,t0,t1);}
t2=t1;
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,C_SCHEME_FALSE);}

/* k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_2944(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2944,2,t0,t1);}
t2=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_2947,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[5],a[6]=t1,a[7]=((C_word*)t0)[6],tmp=(C_word)a,a+=8,tmp);
t3=t1;
if(C_truep(t3)){
t4=t2;
f_2947(2,t4,C_SCHEME_UNDEFINED);}
else{
C_trace("ChickenBridge.scm: 189  ferror");
t4=((C_word*)t0)[4];
((C_proc4)C_retrieve_proc(t4))(4,t4,t2,lf[17],((C_word*)t0)[3]);}}

/* k2945 in k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_2947(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word ab[14],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2947,2,t0,t1);}
t2=((C_word*)((C_word*)t0)[7])[1];
t3=(C_word)C_i_car(((C_word*)t0)[6]);
t4=(C_word)C_i_cdr(((C_word*)t0)[6]);
t5=C_SCHEME_FALSE;
t6=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
t7=(C_word)C_i_length(t4);
t8=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_2962,a[2]=t2,a[3]=t7,a[4]=((C_word*)t0)[2],a[5]=((C_word*)t0)[3],a[6]=((C_word*)t0)[4],a[7]=t6,a[8]=t4,a[9]=((C_word*)t0)[7],a[10]=t3,a[11]=((C_word*)t0)[5],tmp=(C_word)a,a+=12,tmp);
if(C_truep((C_word)C_i_nequalp(t7,C_fix(1)))){
t9=(C_word)C_i_car(t4);
t10=t8;
f_2962(t10,(C_word)C_eqp(t9,lf[16]));}
else{
t9=t8;
f_2962(t9,C_SCHEME_FALSE);}}

/* k2960 in k2945 in k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_2962(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_2962,NULL,2,t0,t1);}
if(C_truep(t1)){
t2=((C_word*)t0)[11];
((C_proc2)(void*)(*((C_word*)t2+1)))(2,t2,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[10],((C_word*)((C_word*)t0)[9])[1]));}
else{
t2=(*a=C_CLOSURE_TYPE|11,a[1]=(C_word)f_2972,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[2],a[4]=((C_word*)t0)[3],a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[8],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[9],tmp=(C_word)a,a+=12,tmp);
C_trace("ChickenBridge.scm: 203  append");
t3=*((C_word*)lf[15]+1);
((C_proc4)C_retrieve_proc(t3))(4,t3,t2,((C_word*)t0)[8],C_SCHEME_END_OF_LIST);}}

/* k2970 in k2960 in k2945 in k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_2972(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_2972,2,t0,t1);}
t2=C_SCHEME_UNDEFINED;
t3=(*a=C_VECTOR_TYPE|1,a[1]=t2,tmp=(C_word)a,a+=2,tmp);
t4=C_set_block_item(t3,0,(*a=C_CLOSURE_TYPE|12,a[1]=(C_word)f_2974,a[2]=((C_word*)t0)[3],a[3]=((C_word*)t0)[4],a[4]=((C_word*)t0)[5],a[5]=((C_word*)t0)[6],a[6]=((C_word*)t0)[7],a[7]=((C_word*)t0)[8],a[8]=t3,a[9]=((C_word*)t0)[9],a[10]=((C_word*)t0)[10],a[11]=((C_word*)t0)[11],a[12]=((C_word)li5),tmp=(C_word)a,a+=13,tmp));
t5=((C_word*)t3)[1];
f_2974(t5,((C_word*)t0)[2],t1,C_SCHEME_FALSE,C_SCHEME_FALSE,C_fix(0));}

/* do25 in k2970 in k2960 in k2945 in k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_2974(C_word t0,C_word t1,C_word t2,C_word t3,C_word t4,C_word t5){
C_word tmp;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word t15;
C_word t16;
C_word ab[38],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_2974,NULL,6,t0,t1,t2,t3,t4,t5);}
t6=(*a=C_VECTOR_TYPE|1,a[1]=t3,tmp=(C_word)a,a+=2,tmp);
t7=(*a=C_VECTOR_TYPE|1,a[1]=t4,tmp=(C_word)a,a+=2,tmp);
t8=(*a=C_VECTOR_TYPE|1,a[1]=t5,tmp=(C_word)a,a+=2,tmp);
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[11])[1]))){
t9=C_SCHEME_UNDEFINED;
t10=(*a=C_VECTOR_TYPE|1,a[1]=t9,tmp=(C_word)a,a+=2,tmp);
t11=C_set_block_item(t10,0,(*a=C_CLOSURE_TYPE|6,a[1]=(C_word)f_2986,a[2]=((C_word*)t0)[9],a[3]=t10,a[4]=t2,a[5]=((C_word*)t0)[10],a[6]=((C_word)li3),tmp=(C_word)a,a+=7,tmp));
t12=((C_word*)t10)[1];
f_2986(t12,t1,t2);}
else{
t9=(*a=C_CLOSURE_TYPE|7,a[1]=(C_word)f_3027,a[2]=t8,a[3]=t7,a[4]=t6,a[5]=t2,a[6]=t1,a[7]=((C_word*)t0)[8],tmp=(C_word)a,a+=8,tmp);
t10=(*a=C_CLOSURE_TYPE|14,a[1]=(C_word)f_3033,a[2]=((C_word*)t0)[2],a[3]=((C_word*)t0)[3],a[4]=t8,a[5]=((C_word*)t0)[4],a[6]=((C_word*)t0)[5],a[7]=((C_word*)t0)[6],a[8]=t2,a[9]=t7,a[10]=((C_word*)t0)[9],a[11]=t6,a[12]=((C_word*)t0)[11],a[13]=t9,a[14]=((C_word*)t0)[7],tmp=(C_word)a,a+=15,tmp);
t11=((C_word*)((C_word*)t0)[7])[1];
if(C_truep(t11)){
t12=t10;
f_3033(2,t12,C_SCHEME_FALSE);}
else{
t12=(C_word)C_i_car(((C_word*)((C_word*)t0)[11])[1]);
C_trace("ChickenBridge.scm: 218  keyword?");
t13=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t13))(3,t13,t10,t12);}}}

/* k3031 in do25 in k2970 in k2960 in k2945 in k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3033(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word t10;
C_word t11;
C_word t12;
C_word t13;
C_word t14;
C_word ab[26],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3033,2,t0,t1);}
if(C_truep(t1)){
t2=C_set_block_item(((C_word*)t0)[14],0,C_SCHEME_TRUE);
t3=((C_word*)t0)[13];
f_3027(t3,t2);}
else{
t2=((C_word*)((C_word*)t0)[14])[1];
if(C_truep(t2)){
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[12])[1]);
t4=C_mutate(((C_word *)((C_word*)t0)[11])+1,t3);
t5=(C_word)C_i_assoc(((C_word*)((C_word*)t0)[11])[1],((C_word*)t0)[10]);
t6=C_mutate(((C_word *)((C_word*)t0)[9])+1,t5);
t7=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[12])[1]);
t8=C_mutate(((C_word *)((C_word*)t0)[12])+1,t7);
t9=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_3087,a[2]=((C_word*)t0)[11],a[3]=((C_word*)t0)[5],a[4]=((C_word*)t0)[6],a[5]=((C_word*)t0)[7],a[6]=((C_word*)t0)[13],a[7]=((C_word*)t0)[12],a[8]=((C_word*)t0)[8],a[9]=((C_word*)t0)[9],tmp=(C_word)a,a+=10,tmp);
t10=(*a=C_CLOSURE_TYPE|9,a[1]=(C_word)f_3160,a[2]=((C_word*)t0)[10],a[3]=((C_word*)t0)[9],a[4]=((C_word*)t0)[11],a[5]=((C_word*)t0)[5],a[6]=((C_word*)t0)[6],a[7]=t9,a[8]=((C_word*)t0)[7],a[9]=((C_word*)t0)[12],tmp=(C_word)a,a+=10,tmp);
C_trace("ChickenBridge.scm: 239  keyword?");
t11=C_retrieve(lf[13]);
((C_proc3)C_retrieve_proc(t11))(3,t11,t10,((C_word*)((C_word*)t0)[11])[1]);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_3043,a[2]=((C_word*)t0)[13],a[3]=((C_word*)t0)[12],a[4]=((C_word*)t0)[4],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
if(C_truep((C_word)C_i_nequalp(((C_word*)((C_word*)t0)[4])[1],((C_word*)t0)[3]))){
t4=(C_word)C_i_length(((C_word*)t0)[2]);
C_trace("ChickenBridge.scm: 229  ferror");
t5=((C_word*)t0)[7];
((C_proc6)C_retrieve_proc(t5))(6,t5,t3,lf[14],((C_word*)t0)[6],((C_word*)t0)[3],t4);}
else{
t4=t3;
f_3043(2,t4,C_SCHEME_UNDEFINED);}}}}

/* k3041 in k3031 in do25 in k2970 in k2960 in k2945 in k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3043(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word t8;
C_word t9;
C_word ab[4],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3043,2,t0,t1);}
t2=(C_word)C_i_list_tail(((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_car(((C_word*)((C_word*)t0)[3])[1]);
t4=(C_word)C_i_set_car(t2,t3);
t5=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[3])[1]);
t6=C_mutate(((C_word *)((C_word*)t0)[3])+1,t5);
t7=(C_word)C_a_i_plus(&a,2,((C_word*)((C_word*)t0)[4])[1],C_fix(1));
t8=C_mutate(((C_word *)((C_word*)t0)[4])+1,t7);
t9=((C_word*)t0)[2];
f_3027(t9,t8);}

/* k3158 in k3031 in do25 in k2970 in k2960 in k2945 in k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3160(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word ab[15],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3160,2,t0,t1);}
if(C_truep(t1)){
if(C_truep((C_word)C_i_nullp(((C_word*)((C_word*)t0)[9])[1]))){
t2=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_3133,a[2]=((C_word*)t0)[6],a[3]=((C_word*)t0)[7],a[4]=((C_word*)t0)[8],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 244  keyname");
t3=((C_word*)t0)[5];
((C_proc3)C_retrieve_proc(t3))(3,t3,t2,((C_word*)((C_word*)t0)[4])[1]);}
else{
t2=((C_word*)((C_word*)t0)[3])[1];
if(C_truep(t2)){
t3=((C_word*)t0)[7];
f_3087(2,t3,C_SCHEME_UNDEFINED);}
else{
t3=(*a=C_CLOSURE_TYPE|5,a[1]=(C_word)f_3146,a[2]=((C_word*)t0)[4],a[3]=((C_word*)t0)[6],a[4]=((C_word*)t0)[7],a[5]=((C_word*)t0)[8],tmp=(C_word)a,a+=6,tmp);
t4=(*a=C_CLOSURE_TYPE|3,a[1]=(C_word)f_3148,a[2]=((C_word*)t0)[5],a[3]=((C_word)li4),tmp=(C_word)a,a+=4,tmp);
C_trace("map");
t5=*((C_word*)lf[11]+1);
((C_proc4)(void*)(*((C_word*)t5+1)))(4,t5,t3,t4,((C_word*)t0)[2]);}}}
else{
C_trace("ChickenBridge.scm: 240  ferror");
t2=((C_word*)t0)[8];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[7],lf[12],((C_word*)t0)[6],((C_word*)((C_word*)t0)[4])[1]);}}

/* a3147 in k3158 in k3031 in do25 in k2970 in k2960 in k2945 in k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3148(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3148,3,t0,t1,t2);}
t3=(C_word)C_i_car(t2);
C_trace("ChickenBridge.scm: 248  keyname");
t4=((C_word*)t0)[2];
((C_proc3)C_retrieve_proc(t4))(3,t4,t1,t3);}

/* k3144 in k3158 in k3031 in do25 in k2970 in k2960 in k2945 in k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3146(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 246  ferror");
t2=((C_word*)t0)[5];
((C_proc6)C_retrieve_proc(t2))(6,t2,((C_word*)t0)[4],lf[10],((C_word*)t0)[3],((C_word*)((C_word*)t0)[2])[1],t1);}

/* k3131 in k3158 in k3031 in do25 in k2970 in k2960 in k2945 in k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3133(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 243  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[9],((C_word*)t0)[2],t1);}

/* k3085 in k3031 in do25 in k2970 in k2960 in k2945 in k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3087(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word ab[10],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr2,(void*)f_3087,2,t0,t1);}
t2=(C_word)C_i_member(((C_word*)((C_word*)t0)[9])[1],((C_word*)t0)[8]);
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_3093,a[2]=((C_word*)t0)[6],a[3]=t2,a[4]=((C_word*)t0)[7],tmp=(C_word)a,a+=5,tmp);
if(C_truep(t2)){
t4=t3;
f_3093(2,t4,C_SCHEME_UNDEFINED);}
else{
t4=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_3114,a[2]=((C_word*)t0)[4],a[3]=t3,a[4]=((C_word*)t0)[5],tmp=(C_word)a,a+=5,tmp);
C_trace("ChickenBridge.scm: 255  keyname");
t5=((C_word*)t0)[3];
((C_proc3)C_retrieve_proc(t5))(3,t5,t4,((C_word*)((C_word*)t0)[2])[1]);}}

/* k3112 in k3085 in k3031 in do25 in k2970 in k2960 in k2945 in k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3114(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 254  ferror");
t2=((C_word*)t0)[4];
((C_proc5)C_retrieve_proc(t2))(5,t2,((C_word*)t0)[3],lf[8],((C_word*)t0)[2],t1);}

/* k3091 in k3085 in k3031 in do25 in k2970 in k2960 in k2945 in k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3093(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word *a;
t2=(C_word)C_i_car(((C_word*)((C_word*)t0)[4])[1]);
t3=(C_word)C_i_set_car(((C_word*)t0)[3],t2);
t4=(C_word)C_i_cdr(((C_word*)((C_word*)t0)[4])[1]);
t5=C_mutate(((C_word *)((C_word*)t0)[4])+1,t4);
t6=((C_word*)t0)[2];
f_3027(t6,t5);}

/* k3025 in do25 in k2970 in k2960 in k2945 in k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_3027(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
t2=((C_word*)((C_word*)t0)[7])[1];
f_2974(t2,((C_word*)t0)[6],((C_word*)t0)[5],((C_word*)((C_word*)t0)[4])[1],((C_word*)((C_word*)t0)[3])[1],((C_word*)((C_word*)t0)[2])[1]);}

/* do31 in do25 in k2970 in k2960 in k2945 in k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_2986(C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word t5;
C_word t6;
C_word t7;
C_word ab[8],*a=ab;
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)trf_2986,NULL,3,t0,t1,t2);}
if(C_truep((C_word)C_i_nullp(t2))){
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,(C_word)C_a_i_cons(&a,2,((C_word*)t0)[5],((C_word*)t0)[4]));}
else{
t3=(*a=C_CLOSURE_TYPE|4,a[1]=(C_word)f_2999,a[2]=t1,a[3]=((C_word*)t0)[3],a[4]=t2,tmp=(C_word)a,a+=5,tmp);
t4=(C_word)C_i_car(t2);
if(C_truep((C_word)C_i_member(t4,((C_word*)t0)[2]))){
t5=(C_word)C_i_car(t2);
t6=(C_word)C_i_cadr(t5);
t7=t3;
f_2999(t7,(C_word)C_i_set_car(t2,t6));}
else{
t5=t3;
f_2999(t5,C_SCHEME_UNDEFINED);}}}

/* k2997 in do31 in do25 in k2970 in k2960 in k2945 in k2942 in k2939 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_fcall f_2999(C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word t3;
C_word *a;
t2=(C_word)C_i_cdr(((C_word*)t0)[4]);
t3=((C_word*)((C_word*)t0)[3])[1];
f_2986(t3,((C_word*)t0)[2],t2);}

/* f_3209 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3209(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word *a;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3209,3,t0,t1,t2);}
t3=t1;
((C_proc2)(void*)(*((C_word*)t3+1)))(2,t3,t2);}

/* f_3200 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3200(C_word c,C_word t0,C_word t1,C_word t2){
C_word tmp;
C_word t3;
C_word t4;
C_word ab[3],*a=ab;
if(c!=3) C_bad_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_stack_probe(&a)){
C_save_and_reclaim((void*)tr3,(void*)f_3200,3,t0,t1,t2);}
t3=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3208,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_trace("ChickenBridge.scm: 185  keyword->string");
t4=C_retrieve(lf[7]);
((C_proc3)C_retrieve_proc(t4))(3,t4,t3,t2);}

/* k3206 */
static void C_ccall f_3208(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 185  sprintf");
t2=C_retrieve(lf[5]);
((C_proc4)C_retrieve_proc(t2))(4,t2,((C_word*)t0)[2],lf[6],t1);}

/* f_3211 in expand-send in k2927 in k2924 in k2920 in k2917 in k2914 in k2911 */
static void C_ccall f_3211(C_word c,C_word t0,C_word t1,C_word t2,...){
C_word tmp;
C_word t3;
va_list v;
C_word *a,c2=c;
C_save_rest(t2,c2,3);
if(c<3) C_bad_min_argc_2(c,3,t0);
C_check_for_interrupt;
if(!C_demand(c*C_SIZEOF_PAIR+3)){
C_save_and_reclaim((void*)tr3r,(void*)f_3211r,3,t0,t1,t2);}
else{
a=C_alloc((c-3)*3);
t3=C_restore_rest(a,C_rest_count(0));
f_3211r(t0,t1,t2,t3);}}

static void C_ccall f_3211r(C_word t0,C_word t1,C_word t2,C_word t3){
C_word tmp;
C_word t4;
C_word t5;
C_word *a=C_alloc(3);
t4=(*a=C_CLOSURE_TYPE|2,a[1]=(C_word)f_3219,a[2]=t1,tmp=(C_word)a,a+=3,tmp);
C_apply(5,0,t4,C_retrieve(lf[5]),t2,t3);}

/* k3217 */
static void C_ccall f_3219(C_word c,C_word t0,C_word t1){
C_word tmp;
C_word t2;
C_word *a;
C_trace("ChickenBridge.scm: 181  error");
t2=*((C_word*)lf[4]+1);
((C_proc3)C_retrieve_proc(t2))(3,t2,((C_word*)t0)[2],t1);}

#ifdef C_ENABLE_PTABLES
static C_PTABLE_ENTRY ptable[1221] = {
{"toplevelChickenBridge.scm",(void*)C_grace_toplevel},
{"f_2913ChickenBridge.scm",(void*)f_2913},
{"f_2916ChickenBridge.scm",(void*)f_2916},
{"f_2919ChickenBridge.scm",(void*)f_2919},
{"f_2922ChickenBridge.scm",(void*)f_2922},
{"f_2926ChickenBridge.scm",(void*)f_2926},
{"f_18113ChickenBridge.scm",(void*)f_18113},
{"f_18160ChickenBridge.scm",(void*)f_18160},
{"f_18150ChickenBridge.scm",(void*)f_18150},
{"f_18117ChickenBridge.scm",(void*)f_18117},
{"f_2929ChickenBridge.scm",(void*)f_2929},
{"f_18107ChickenBridge.scm",(void*)f_18107},
{"f_3222ChickenBridge.scm",(void*)f_3222},
{"f_18093ChickenBridge.scm",(void*)f_18093},
{"f_18101ChickenBridge.scm",(void*)f_18101},
{"f_18105ChickenBridge.scm",(void*)f_18105},
{"f_4496ChickenBridge.scm",(void*)f_4496},
{"f_4547ChickenBridge.scm",(void*)f_4547},
{"f_18083ChickenBridge.scm",(void*)f_18083},
{"f_18091ChickenBridge.scm",(void*)f_18091},
{"f_4652ChickenBridge.scm",(void*)f_4652},
{"f_17980ChickenBridge.scm",(void*)f_17980},
{"f_18043ChickenBridge.scm",(void*)f_18043},
{"f_18047ChickenBridge.scm",(void*)f_18047},
{"f_18061ChickenBridge.scm",(void*)f_18061},
{"f_17983ChickenBridge.scm",(void*)f_17983},
{"f_18003ChickenBridge.scm",(void*)f_18003},
{"f_18007ChickenBridge.scm",(void*)f_18007},
{"f_4655ChickenBridge.scm",(void*)f_4655},
{"f_17966ChickenBridge.scm",(void*)f_17966},
{"f_17974ChickenBridge.scm",(void*)f_17974},
{"f_17978ChickenBridge.scm",(void*)f_17978},
{"f_4848ChickenBridge.scm",(void*)f_4848},
{"f_17940ChickenBridge.scm",(void*)f_17940},
{"f_17944ChickenBridge.scm",(void*)f_17944},
{"f_17950ChickenBridge.scm",(void*)f_17950},
{"f_17961ChickenBridge.scm",(void*)f_17961},
{"f_17957ChickenBridge.scm",(void*)f_17957},
{"f_4917ChickenBridge.scm",(void*)f_4917},
{"f_17918ChickenBridge.scm",(void*)f_17918},
{"f_6162ChickenBridge.scm",(void*)f_6162},
{"f_17898ChickenBridge.scm",(void*)f_17898},
{"f_6165ChickenBridge.scm",(void*)f_6165},
{"f_17858ChickenBridge.scm",(void*)f_17858},
{"f_6168ChickenBridge.scm",(void*)f_6168},
{"f_17764ChickenBridge.scm",(void*)f_17764},
{"f_17768ChickenBridge.scm",(void*)f_17768},
{"f_17771ChickenBridge.scm",(void*)f_17771},
{"f_17789ChickenBridge.scm",(void*)f_17789},
{"f_17792ChickenBridge.scm",(void*)f_17792},
{"f_17823ChickenBridge.scm",(void*)f_17823},
{"f_17795ChickenBridge.scm",(void*)f_17795},
{"f_17801ChickenBridge.scm",(void*)f_17801},
{"f_17754ChickenBridge.scm",(void*)f_17754},
{"f_17748ChickenBridge.scm",(void*)f_17748},
{"f_6171ChickenBridge.scm",(void*)f_6171},
{"f_17656ChickenBridge.scm",(void*)f_17656},
{"f_17658ChickenBridge.scm",(void*)f_17658},
{"f_17662ChickenBridge.scm",(void*)f_17662},
{"f_17665ChickenBridge.scm",(void*)f_17665},
{"f_17668ChickenBridge.scm",(void*)f_17668},
{"f_17708ChickenBridge.scm",(void*)f_17708},
{"f_17700ChickenBridge.scm",(void*)f_17700},
{"f_17671ChickenBridge.scm",(void*)f_17671},
{"f_17674ChickenBridge.scm",(void*)f_17674},
{"f_17677ChickenBridge.scm",(void*)f_17677},
{"f_17648ChickenBridge.scm",(void*)f_17648},
{"f_6174ChickenBridge.scm",(void*)f_6174},
{"f_17620ChickenBridge.scm",(void*)f_17620},
{"f_6177ChickenBridge.scm",(void*)f_6177},
{"f_17584ChickenBridge.scm",(void*)f_17584},
{"f_17596ChickenBridge.scm",(void*)f_17596},
{"f_17592ChickenBridge.scm",(void*)f_17592},
{"f_17566ChickenBridge.scm",(void*)f_17566},
{"f_17560ChickenBridge.scm",(void*)f_17560},
{"f_6180ChickenBridge.scm",(void*)f_6180},
{"f_17474ChickenBridge.scm",(void*)f_17474},
{"f_17478ChickenBridge.scm",(void*)f_17478},
{"f_17481ChickenBridge.scm",(void*)f_17481},
{"f_17484ChickenBridge.scm",(void*)f_17484},
{"f_17497ChickenBridge.scm",(void*)f_17497},
{"f_17443ChickenBridge.scm",(void*)f_17443},
{"f_17447ChickenBridge.scm",(void*)f_17447},
{"f_17462ChickenBridge.scm",(void*)f_17462},
{"f_17437ChickenBridge.scm",(void*)f_17437},
{"f_6183ChickenBridge.scm",(void*)f_6183},
{"f_17323ChickenBridge.scm",(void*)f_17323},
{"f_17339ChickenBridge.scm",(void*)f_17339},
{"f_17350ChickenBridge.scm",(void*)f_17350},
{"f_17317ChickenBridge.scm",(void*)f_17317},
{"f_6239ChickenBridge.scm",(void*)f_6239},
{"f_17184ChickenBridge.scm",(void*)f_17184},
{"f_17207ChickenBridge.scm",(void*)f_17207},
{"f_17204ChickenBridge.scm",(void*)f_17204},
{"f_17178ChickenBridge.scm",(void*)f_17178},
{"f_6242ChickenBridge.scm",(void*)f_6242},
{"f_17032ChickenBridge.scm",(void*)f_17032},
{"f_17050ChickenBridge.scm",(void*)f_17050},
{"f_17059ChickenBridge.scm",(void*)f_17059},
{"f_17026ChickenBridge.scm",(void*)f_17026},
{"f_6245ChickenBridge.scm",(void*)f_6245},
{"f_16979ChickenBridge.scm",(void*)f_16979},
{"f_16983ChickenBridge.scm",(void*)f_16983},
{"f_16986ChickenBridge.scm",(void*)f_16986},
{"f_17002ChickenBridge.scm",(void*)f_17002},
{"f_16961ChickenBridge.scm",(void*)f_16961},
{"f_16955ChickenBridge.scm",(void*)f_16955},
{"f_6248ChickenBridge.scm",(void*)f_6248},
{"f_16879ChickenBridge.scm",(void*)f_16879},
{"f_6387ChickenBridge.scm",(void*)f_6387},
{"f_16805ChickenBridge.scm",(void*)f_16805},
{"f_16812ChickenBridge.scm",(void*)f_16812},
{"f_16799ChickenBridge.scm",(void*)f_16799},
{"f_6390ChickenBridge.scm",(void*)f_6390},
{"f_16695ChickenBridge.scm",(void*)f_16695},
{"f_16703ChickenBridge.scm",(void*)f_16703},
{"f_16669ChickenBridge.scm",(void*)f_16669},
{"f_16686ChickenBridge.scm",(void*)f_16686},
{"f_16677ChickenBridge.scm",(void*)f_16677},
{"f_16663ChickenBridge.scm",(void*)f_16663},
{"f_6393ChickenBridge.scm",(void*)f_6393},
{"f_16619ChickenBridge.scm",(void*)f_16619},
{"f_6396ChickenBridge.scm",(void*)f_6396},
{"f_16537ChickenBridge.scm",(void*)f_16537},
{"f_16548ChickenBridge.scm",(void*)f_16548},
{"f_16550ChickenBridge.scm",(void*)f_16550},
{"f_16579ChickenBridge.scm",(void*)f_16579},
{"f_16515ChickenBridge.scm",(void*)f_16515},
{"f_16531ChickenBridge.scm",(void*)f_16531},
{"f_16509ChickenBridge.scm",(void*)f_16509},
{"f_6399ChickenBridge.scm",(void*)f_6399},
{"f_16462ChickenBridge.scm",(void*)f_16462},
{"f_16466ChickenBridge.scm",(void*)f_16466},
{"f_16473ChickenBridge.scm",(void*)f_16473},
{"f_16440ChickenBridge.scm",(void*)f_16440},
{"f_16456ChickenBridge.scm",(void*)f_16456},
{"f_16434ChickenBridge.scm",(void*)f_16434},
{"f_6402ChickenBridge.scm",(void*)f_6402},
{"f_16302ChickenBridge.scm",(void*)f_16302},
{"f_16342ChickenBridge.scm",(void*)f_16342},
{"f_16306ChickenBridge.scm",(void*)f_16306},
{"f_16322ChickenBridge.scm",(void*)f_16322},
{"f_16334ChickenBridge.scm",(void*)f_16334},
{"f_16338ChickenBridge.scm",(void*)f_16338},
{"f_16330ChickenBridge.scm",(void*)f_16330},
{"f_16241ChickenBridge.scm",(void*)f_16241},
{"f_16288ChickenBridge.scm",(void*)f_16288},
{"f_16248ChickenBridge.scm",(void*)f_16248},
{"f_16259ChickenBridge.scm",(void*)f_16259},
{"f_16235ChickenBridge.scm",(void*)f_16235},
{"f_6405ChickenBridge.scm",(void*)f_6405},
{"f_16215ChickenBridge.scm",(void*)f_16215},
{"f_16209ChickenBridge.scm",(void*)f_16209},
{"f_6408ChickenBridge.scm",(void*)f_6408},
{"f_16189ChickenBridge.scm",(void*)f_16189},
{"f_16193ChickenBridge.scm",(void*)f_16193},
{"f_16181ChickenBridge.scm",(void*)f_16181},
{"f_6411ChickenBridge.scm",(void*)f_6411},
{"f_16161ChickenBridge.scm",(void*)f_16161},
{"f_16165ChickenBridge.scm",(void*)f_16165},
{"f_16153ChickenBridge.scm",(void*)f_16153},
{"f_6414ChickenBridge.scm",(void*)f_6414},
{"f_16133ChickenBridge.scm",(void*)f_16133},
{"f_16137ChickenBridge.scm",(void*)f_16137},
{"f_16125ChickenBridge.scm",(void*)f_16125},
{"f_6417ChickenBridge.scm",(void*)f_6417},
{"f_16105ChickenBridge.scm",(void*)f_16105},
{"f_16109ChickenBridge.scm",(void*)f_16109},
{"f_16097ChickenBridge.scm",(void*)f_16097},
{"f_6420ChickenBridge.scm",(void*)f_6420},
{"f_15996ChickenBridge.scm",(void*)f_15996},
{"f_15966ChickenBridge.scm",(void*)f_15966},
{"f_15990ChickenBridge.scm",(void*)f_15990},
{"f_15960ChickenBridge.scm",(void*)f_15960},
{"f_6423ChickenBridge.scm",(void*)f_6423},
{"f_15910ChickenBridge.scm",(void*)f_15910},
{"f_15912ChickenBridge.scm",(void*)f_15912},
{"f_15916ChickenBridge.scm",(void*)f_15916},
{"f_15944ChickenBridge.scm",(void*)f_15944},
{"f_15936ChickenBridge.scm",(void*)f_15936},
{"f_15932ChickenBridge.scm",(void*)f_15932},
{"f_15919ChickenBridge.scm",(void*)f_15919},
{"f_15902ChickenBridge.scm",(void*)f_15902},
{"f_6426ChickenBridge.scm",(void*)f_6426},
{"f_15849ChickenBridge.scm",(void*)f_15849},
{"f_15851ChickenBridge.scm",(void*)f_15851},
{"f_15855ChickenBridge.scm",(void*)f_15855},
{"f_15886ChickenBridge.scm",(void*)f_15886},
{"f_15878ChickenBridge.scm",(void*)f_15878},
{"f_15874ChickenBridge.scm",(void*)f_15874},
{"f_15858ChickenBridge.scm",(void*)f_15858},
{"f_15861ChickenBridge.scm",(void*)f_15861},
{"f_15841ChickenBridge.scm",(void*)f_15841},
{"f_6429ChickenBridge.scm",(void*)f_6429},
{"f_15791ChickenBridge.scm",(void*)f_15791},
{"f_15805ChickenBridge.scm",(void*)f_15805},
{"f_15797ChickenBridge.scm",(void*)f_15797},
{"f_15756ChickenBridge.scm",(void*)f_15756},
{"f_15789ChickenBridge.scm",(void*)f_15789},
{"f_15750ChickenBridge.scm",(void*)f_15750},
{"f_6432ChickenBridge.scm",(void*)f_6432},
{"f_15697ChickenBridge.scm",(void*)f_15697},
{"f_15701ChickenBridge.scm",(void*)f_15701},
{"f_15714ChickenBridge.scm",(void*)f_15714},
{"f_15706ChickenBridge.scm",(void*)f_15706},
{"f_15654ChickenBridge.scm",(void*)f_15654},
{"f_15687ChickenBridge.scm",(void*)f_15687},
{"f_15648ChickenBridge.scm",(void*)f_15648},
{"f_6435ChickenBridge.scm",(void*)f_6435},
{"f_15568ChickenBridge.scm",(void*)f_15568},
{"f_15562ChickenBridge.scm",(void*)f_15562},
{"f_6438ChickenBridge.scm",(void*)f_6438},
{"f_15331ChickenBridge.scm",(void*)f_15331},
{"f_15335ChickenBridge.scm",(void*)f_15335},
{"f_15343ChickenBridge.scm",(void*)f_15343},
{"f_15366ChickenBridge.scm",(void*)f_15366},
{"f_15369ChickenBridge.scm",(void*)f_15369},
{"f_15372ChickenBridge.scm",(void*)f_15372},
{"f_15375ChickenBridge.scm",(void*)f_15375},
{"f_15435ChickenBridge.scm",(void*)f_15435},
{"f_15442ChickenBridge.scm",(void*)f_15442},
{"f_15452ChickenBridge.scm",(void*)f_15452},
{"f_15462ChickenBridge.scm",(void*)f_15462},
{"f_15476ChickenBridge.scm",(void*)f_15476},
{"f_15486ChickenBridge.scm",(void*)f_15486},
{"f_15496ChickenBridge.scm",(void*)f_15496},
{"f_15506ChickenBridge.scm",(void*)f_15506},
{"f_15378ChickenBridge.scm",(void*)f_15378},
{"f_15402ChickenBridge.scm",(void*)f_15402},
{"f_15381ChickenBridge.scm",(void*)f_15381},
{"f_15288ChickenBridge.scm",(void*)f_15288},
{"f_15321ChickenBridge.scm",(void*)f_15321},
{"f_15282ChickenBridge.scm",(void*)f_15282},
{"f_6441ChickenBridge.scm",(void*)f_6441},
{"f_15200ChickenBridge.scm",(void*)f_15200},
{"f_15204ChickenBridge.scm",(void*)f_15204},
{"f_15210ChickenBridge.scm",(void*)f_15210},
{"f_15230ChickenBridge.scm",(void*)f_15230},
{"f_15174ChickenBridge.scm",(void*)f_15174},
{"f_15184ChickenBridge.scm",(void*)f_15184},
{"f_15168ChickenBridge.scm",(void*)f_15168},
{"f_6444ChickenBridge.scm",(void*)f_6444},
{"f_15045ChickenBridge.scm",(void*)f_15045},
{"f_15049ChickenBridge.scm",(void*)f_15049},
{"f_14977ChickenBridge.scm",(void*)f_14977},
{"f_14996ChickenBridge.scm",(void*)f_14996},
{"f_15031ChickenBridge.scm",(void*)f_15031},
{"f_15002ChickenBridge.scm",(void*)f_15002},
{"f_15006ChickenBridge.scm",(void*)f_15006},
{"f_15020ChickenBridge.scm",(void*)f_15020},
{"f_15009ChickenBridge.scm",(void*)f_15009},
{"f_14990ChickenBridge.scm",(void*)f_14990},
{"f_14971ChickenBridge.scm",(void*)f_14971},
{"f_6447ChickenBridge.scm",(void*)f_6447},
{"f_14699ChickenBridge.scm",(void*)f_14699},
{"f_6970ChickenBridge.scm",(void*)f_6970},
{"f_14651ChickenBridge.scm",(void*)f_14651},
{"f_14643ChickenBridge.scm",(void*)f_14643},
{"f_6973ChickenBridge.scm",(void*)f_6973},
{"f_14523ChickenBridge.scm",(void*)f_14523},
{"f_6979ChickenBridge.scm",(void*)f_6979},
{"f_7454ChickenBridge.scm",(void*)f_7454},
{"f_7488ChickenBridge.scm",(void*)f_7488},
{"f_7480ChickenBridge.scm",(void*)f_7480},
{"f_7476ChickenBridge.scm",(void*)f_7476},
{"f_7461ChickenBridge.scm",(void*)f_7461},
{"f_7465ChickenBridge.scm",(void*)f_7465},
{"f_7458ChickenBridge.scm",(void*)f_7458},
{"f_6997ChickenBridge.scm",(void*)f_6997},
{"f_7447ChickenBridge.scm",(void*)f_7447},
{"f_7443ChickenBridge.scm",(void*)f_7443},
{"f_7004ChickenBridge.scm",(void*)f_7004},
{"f_7318ChickenBridge.scm",(void*)f_7318},
{"f_7339ChickenBridge.scm",(void*)f_7339},
{"f_7341ChickenBridge.scm",(void*)f_7341},
{"f_7355ChickenBridge.scm",(void*)f_7355},
{"f_7408ChickenBridge.scm",(void*)f_7408},
{"f_7358ChickenBridge.scm",(void*)f_7358},
{"f_7393ChickenBridge.scm",(void*)f_7393},
{"f_7361ChickenBridge.scm",(void*)f_7361},
{"f_7374ChickenBridge.scm",(void*)f_7374},
{"f_7386ChickenBridge.scm",(void*)f_7386},
{"f_7378ChickenBridge.scm",(void*)f_7378},
{"f_7364ChickenBridge.scm",(void*)f_7364},
{"f_7328ChickenBridge.scm",(void*)f_7328},
{"f_7007ChickenBridge.scm",(void*)f_7007},
{"f_7282ChickenBridge.scm",(void*)f_7282},
{"f_7308ChickenBridge.scm",(void*)f_7308},
{"f_7293ChickenBridge.scm",(void*)f_7293},
{"f_7010ChickenBridge.scm",(void*)f_7010},
{"f_7014ChickenBridge.scm",(void*)f_7014},
{"f_7226ChickenBridge.scm",(void*)f_7226},
{"f_7236ChickenBridge.scm",(void*)f_7236},
{"f_7239ChickenBridge.scm",(void*)f_7239},
{"f_7260ChickenBridge.scm",(void*)f_7260},
{"f_7242ChickenBridge.scm",(void*)f_7242},
{"f_7246ChickenBridge.scm",(void*)f_7246},
{"f_7017ChickenBridge.scm",(void*)f_7017},
{"f_7020ChickenBridge.scm",(void*)f_7020},
{"f_7189ChickenBridge.scm",(void*)f_7189},
{"f_7197ChickenBridge.scm",(void*)f_7197},
{"f_7193ChickenBridge.scm",(void*)f_7193},
{"f_7023ChickenBridge.scm",(void*)f_7023},
{"f_7051ChickenBridge.scm",(void*)f_7051},
{"f_7054ChickenBridge.scm",(void*)f_7054},
{"f_7057ChickenBridge.scm",(void*)f_7057},
{"f_7060ChickenBridge.scm",(void*)f_7060},
{"f_7063ChickenBridge.scm",(void*)f_7063},
{"f_7122ChickenBridge.scm",(void*)f_7122},
{"f_14477ChickenBridge.scm",(void*)f_14477},
{"f_14493ChickenBridge.scm",(void*)f_14493},
{"f_14496ChickenBridge.scm",(void*)f_14496},
{"f_14499ChickenBridge.scm",(void*)f_14499},
{"f_14502ChickenBridge.scm",(void*)f_14502},
{"f_14513ChickenBridge.scm",(void*)f_14513},
{"f_14471ChickenBridge.scm",(void*)f_14471},
{"f_7495ChickenBridge.scm",(void*)f_7495},
{"f_14332ChickenBridge.scm",(void*)f_14332},
{"f_14371ChickenBridge.scm",(void*)f_14371},
{"f_14345ChickenBridge.scm",(void*)f_14345},
{"f_14326ChickenBridge.scm",(void*)f_14326},
{"f_7498ChickenBridge.scm",(void*)f_7498},
{"f_13914ChickenBridge.scm",(void*)f_13914},
{"f_13918ChickenBridge.scm",(void*)f_13918},
{"f_13930ChickenBridge.scm",(void*)f_13930},
{"f_13988ChickenBridge.scm",(void*)f_13988},
{"f_13991ChickenBridge.scm",(void*)f_13991},
{"f_13994ChickenBridge.scm",(void*)f_13994},
{"f_14206ChickenBridge.scm",(void*)f_14206},
{"f_14144ChickenBridge.scm",(void*)f_14144},
{"f_14178ChickenBridge.scm",(void*)f_14178},
{"f_14153ChickenBridge.scm",(void*)f_14153},
{"f_14164ChickenBridge.scm",(void*)f_14164},
{"f_14160ChickenBridge.scm",(void*)f_14160},
{"f_14003ChickenBridge.scm",(void*)f_14003},
{"f_14081ChickenBridge.scm",(void*)f_14081},
{"f_14122ChickenBridge.scm",(void*)f_14122},
{"f_14126ChickenBridge.scm",(void*)f_14126},
{"f_14130ChickenBridge.scm",(void*)f_14130},
{"f_14085ChickenBridge.scm",(void*)f_14085},
{"f_14089ChickenBridge.scm",(void*)f_14089},
{"f_14116ChickenBridge.scm",(void*)f_14116},
{"f_14092ChickenBridge.scm",(void*)f_14092},
{"f_14006ChickenBridge.scm",(void*)f_14006},
{"f_14078ChickenBridge.scm",(void*)f_14078},
{"f_14020ChickenBridge.scm",(void*)f_14020},
{"f_14022ChickenBridge.scm",(void*)f_14022},
{"f_14070ChickenBridge.scm",(void*)f_14070},
{"f_14041ChickenBridge.scm",(void*)f_14041},
{"f_14058ChickenBridge.scm",(void*)f_14058},
{"f_14044ChickenBridge.scm",(void*)f_14044},
{"f_14037ChickenBridge.scm",(void*)f_14037},
{"f_14009ChickenBridge.scm",(void*)f_14009},
{"f_13939ChickenBridge.scm",(void*)f_13939},
{"f_13949ChickenBridge.scm",(void*)f_13949},
{"f_13955ChickenBridge.scm",(void*)f_13955},
{"f_13927ChickenBridge.scm",(void*)f_13927},
{"f_13875ChickenBridge.scm",(void*)f_13875},
{"f_13892ChickenBridge.scm",(void*)f_13892},
{"f_13908ChickenBridge.scm",(void*)f_13908},
{"f_13886ChickenBridge.scm",(void*)f_13886},
{"f_13869ChickenBridge.scm",(void*)f_13869},
{"f_7501ChickenBridge.scm",(void*)f_7501},
{"f_13793ChickenBridge.scm",(void*)f_13793},
{"f_7504ChickenBridge.scm",(void*)f_7504},
{"f_13769ChickenBridge.scm",(void*)f_13769},
{"f_13781ChickenBridge.scm",(void*)f_13781},
{"f_13777ChickenBridge.scm",(void*)f_13777},
{"f_13755ChickenBridge.scm",(void*)f_13755},
{"f_13763ChickenBridge.scm",(void*)f_13763},
{"f_13749ChickenBridge.scm",(void*)f_13749},
{"f_7507ChickenBridge.scm",(void*)f_7507},
{"f_13741ChickenBridge.scm",(void*)f_13741},
{"f_11297ChickenBridge.scm",(void*)f_11297},
{"f_11300ChickenBridge.scm",(void*)f_11300},
{"f_11466ChickenBridge.scm",(void*)f_11466},
{"f_11462ChickenBridge.scm",(void*)f_11462},
{"f_11452ChickenBridge.scm",(void*)f_11452},
{"f_11307ChickenBridge.scm",(void*)f_11307},
{"f_11311ChickenBridge.scm",(void*)f_11311},
{"f_11314ChickenBridge.scm",(void*)f_11314},
{"f_11325ChickenBridge.scm",(void*)f_11325},
{"f_11333ChickenBridge.scm",(void*)f_11333},
{"f_11405ChickenBridge.scm",(void*)f_11405},
{"f_11413ChickenBridge.scm",(void*)f_11413},
{"f_11409ChickenBridge.scm",(void*)f_11409},
{"f_11401ChickenBridge.scm",(void*)f_11401},
{"f_11397ChickenBridge.scm",(void*)f_11397},
{"f_11369ChickenBridge.scm",(void*)f_11369},
{"f_11365ChickenBridge.scm",(void*)f_11365},
{"f_11329ChickenBridge.scm",(void*)f_11329},
{"f_7944ChickenBridge.scm",(void*)f_7944},
{"f_13727ChickenBridge.scm",(void*)f_13727},
{"f_7947ChickenBridge.scm",(void*)f_7947},
{"f_13698ChickenBridge.scm",(void*)f_13698},
{"f_13702ChickenBridge.scm",(void*)f_13702},
{"f_7950ChickenBridge.scm",(void*)f_7950},
{"f_13695ChickenBridge.scm",(void*)f_13695},
{"f_7953ChickenBridge.scm",(void*)f_7953},
{"f_13553ChickenBridge.scm",(void*)f_13553},
{"f_11479ChickenBridge.scm",(void*)f_11479},
{"f_11611ChickenBridge.scm",(void*)f_11611},
{"f_11482ChickenBridge.scm",(void*)f_11482},
{"f_11493ChickenBridge.scm",(void*)f_11493},
{"f_11501ChickenBridge.scm",(void*)f_11501},
{"f_11525ChickenBridge.scm",(void*)f_11525},
{"f_11528ChickenBridge.scm",(void*)f_11528},
{"f_11536ChickenBridge.scm",(void*)f_11536},
{"f_11544ChickenBridge.scm",(void*)f_11544},
{"f_11564ChickenBridge.scm",(void*)f_11564},
{"f_11560ChickenBridge.scm",(void*)f_11560},
{"f_11540ChickenBridge.scm",(void*)f_11540},
{"f_11532ChickenBridge.scm",(void*)f_11532},
{"f_11521ChickenBridge.scm",(void*)f_11521},
{"f_11497ChickenBridge.scm",(void*)f_11497},
{"f_11473ChickenBridge.scm",(void*)f_11473},
{"f_12463ChickenBridge.scm",(void*)f_12463},
{"f_12466ChickenBridge.scm",(void*)f_12466},
{"f_12469ChickenBridge.scm",(void*)f_12469},
{"f_12472ChickenBridge.scm",(void*)f_12472},
{"f_12475ChickenBridge.scm",(void*)f_12475},
{"f_12478ChickenBridge.scm",(void*)f_12478},
{"f_12481ChickenBridge.scm",(void*)f_12481},
{"f_12484ChickenBridge.scm",(void*)f_12484},
{"f_12487ChickenBridge.scm",(void*)f_12487},
{"f_12490ChickenBridge.scm",(void*)f_12490},
{"f_12493ChickenBridge.scm",(void*)f_12493},
{"f_12618ChickenBridge.scm",(void*)f_12618},
{"f_12621ChickenBridge.scm",(void*)f_12621},
{"f_12624ChickenBridge.scm",(void*)f_12624},
{"f_13547ChickenBridge.scm",(void*)f_13547},
{"f_13101ChickenBridge.scm",(void*)f_13101},
{"f_13104ChickenBridge.scm",(void*)f_13104},
{"f_13382ChickenBridge.scm",(void*)f_13382},
{"f_13490ChickenBridge.scm",(void*)f_13490},
{"f_13402ChickenBridge.scm",(void*)f_13402},
{"f_13411ChickenBridge.scm",(void*)f_13411},
{"f_13415ChickenBridge.scm",(void*)f_13415},
{"f_13419ChickenBridge.scm",(void*)f_13419},
{"f_13427ChickenBridge.scm",(void*)f_13427},
{"f_13423ChickenBridge.scm",(void*)f_13423},
{"f_13392ChickenBridge.scm",(void*)f_13392},
{"f_13107ChickenBridge.scm",(void*)f_13107},
{"f_13110ChickenBridge.scm",(void*)f_13110},
{"f_13113ChickenBridge.scm",(void*)f_13113},
{"f_13116ChickenBridge.scm",(void*)f_13116},
{"f_13119ChickenBridge.scm",(void*)f_13119},
{"f_13376ChickenBridge.scm",(void*)f_13376},
{"f_13275ChickenBridge.scm",(void*)f_13275},
{"f_13282ChickenBridge.scm",(void*)f_13282},
{"f_13284ChickenBridge.scm",(void*)f_13284},
{"f_13356ChickenBridge.scm",(void*)f_13356},
{"f_13308ChickenBridge.scm",(void*)f_13308},
{"f_13311ChickenBridge.scm",(void*)f_13311},
{"f_13332ChickenBridge.scm",(void*)f_13332},
{"f_13298ChickenBridge.scm",(void*)f_13298},
{"f_13122ChickenBridge.scm",(void*)f_13122},
{"f_13264ChickenBridge.scm",(void*)f_13264},
{"f_13252ChickenBridge.scm",(void*)f_13252},
{"f_13248ChickenBridge.scm",(void*)f_13248},
{"f_13129ChickenBridge.scm",(void*)f_13129},
{"f_13086ChickenBridge.scm",(void*)f_13086},
{"f_13545ChickenBridge.scm",(void*)f_13545},
{"f_13076ChickenBridge.scm",(void*)f_13076},
{"f_12739ChickenBridge.scm",(void*)f_12739},
{"f_13080ChickenBridge.scm",(void*)f_13080},
{"f_13018ChickenBridge.scm",(void*)f_13018},
{"f_13036ChickenBridge.scm",(void*)f_13036},
{"f_13046ChickenBridge.scm",(void*)f_13046},
{"f_13022ChickenBridge.scm",(void*)f_13022},
{"f_13009ChickenBridge.scm",(void*)f_13009},
{"f_12717ChickenBridge.scm",(void*)f_12717},
{"f_13013ChickenBridge.scm",(void*)f_13013},
{"f_13003ChickenBridge.scm",(void*)f_13003},
{"f_12699ChickenBridge.scm",(void*)f_12699},
{"f_12994ChickenBridge.scm",(void*)f_12994},
{"f_12708ChickenBridge.scm",(void*)f_12708},
{"f_12998ChickenBridge.scm",(void*)f_12998},
{"f_12931ChickenBridge.scm",(void*)f_12931},
{"f_12956ChickenBridge.scm",(void*)f_12956},
{"f_12664ChickenBridge.scm",(void*)f_12664},
{"f_12944ChickenBridge.scm",(void*)f_12944},
{"f_12763ChickenBridge.scm",(void*)f_12763},
{"f_12882ChickenBridge.scm",(void*)f_12882},
{"f_12877ChickenBridge.scm",(void*)f_12877},
{"f_12765ChickenBridge.scm",(void*)f_12765},
{"f_12872ChickenBridge.scm",(void*)f_12872},
{"f_12876ChickenBridge.scm",(void*)f_12876},
{"f_12868ChickenBridge.scm",(void*)f_12868},
{"f_12836ChickenBridge.scm",(void*)f_12836},
{"f_12861ChickenBridge.scm",(void*)f_12861},
{"f_12865ChickenBridge.scm",(void*)f_12865},
{"f_12846ChickenBridge.scm",(void*)f_12846},
{"f_12825ChickenBridge.scm",(void*)f_12825},
{"f_12795ChickenBridge.scm",(void*)f_12795},
{"f_12767ChickenBridge.scm",(void*)f_12767},
{"f_12744ChickenBridge.scm",(void*)f_12744},
{"f_12749ChickenBridge.scm",(void*)f_12749},
{"f_12754ChickenBridge.scm",(void*)f_12754},
{"f_12722ChickenBridge.scm",(void*)f_12722},
{"f_12726ChickenBridge.scm",(void*)f_12726},
{"f_12678ChickenBridge.scm",(void*)f_12678},
{"f_12682ChickenBridge.scm",(void*)f_12682},
{"f_12669ChickenBridge.scm",(void*)f_12669},
{"f_12673ChickenBridge.scm",(void*)f_12673},
{"f_12657ChickenBridge.scm",(void*)f_12657},
{"f_12654ChickenBridge.scm",(void*)f_12654},
{"f_12640ChickenBridge.scm",(void*)f_12640},
{"f_12645ChickenBridge.scm",(void*)f_12645},
{"f_12626ChickenBridge.scm",(void*)f_12626},
{"f_12631ChickenBridge.scm",(void*)f_12631},
{"f_12609ChickenBridge.scm",(void*)f_12609},
{"f_12614ChickenBridge.scm",(void*)f_12614},
{"f_12552ChickenBridge.scm",(void*)f_12552},
{"f_12585ChickenBridge.scm",(void*)f_12585},
{"f_12565ChickenBridge.scm",(void*)f_12565},
{"f_12573ChickenBridge.scm",(void*)f_12573},
{"f_12556ChickenBridge.scm",(void*)f_12556},
{"f_12495ChickenBridge.scm",(void*)f_12495},
{"f_12528ChickenBridge.scm",(void*)f_12528},
{"f_12508ChickenBridge.scm",(void*)f_12508},
{"f_12516ChickenBridge.scm",(void*)f_12516},
{"f_12499ChickenBridge.scm",(void*)f_12499},
{"f_12405ChickenBridge.scm",(void*)f_12405},
{"f_12459ChickenBridge.scm",(void*)f_12459},
{"f_12454ChickenBridge.scm",(void*)f_12454},
{"f_12417ChickenBridge.scm",(void*)f_12417},
{"f_12423ChickenBridge.scm",(void*)f_12423},
{"f_12449ChickenBridge.scm",(void*)f_12449},
{"f_12453ChickenBridge.scm",(void*)f_12453},
{"f_12429ChickenBridge.scm",(void*)f_12429},
{"f_12447ChickenBridge.scm",(void*)f_12447},
{"f_12444ChickenBridge.scm",(void*)f_12444},
{"f_12440ChickenBridge.scm",(void*)f_12440},
{"f_12433ChickenBridge.scm",(void*)f_12433},
{"f_12390ChickenBridge.scm",(void*)f_12390},
{"f_12395ChickenBridge.scm",(void*)f_12395},
{"f_12362ChickenBridge.scm",(void*)f_12362},
{"f_12367ChickenBridge.scm",(void*)f_12367},
{"f_12334ChickenBridge.scm",(void*)f_12334},
{"f_12339ChickenBridge.scm",(void*)f_12339},
{"f_12306ChickenBridge.scm",(void*)f_12306},
{"f_12311ChickenBridge.scm",(void*)f_12311},
{"f_12278ChickenBridge.scm",(void*)f_12278},
{"f_12283ChickenBridge.scm",(void*)f_12283},
{"f_12250ChickenBridge.scm",(void*)f_12250},
{"f_12255ChickenBridge.scm",(void*)f_12255},
{"f_12222ChickenBridge.scm",(void*)f_12222},
{"f_12227ChickenBridge.scm",(void*)f_12227},
{"f_12194ChickenBridge.scm",(void*)f_12194},
{"f_12199ChickenBridge.scm",(void*)f_12199},
{"f_12166ChickenBridge.scm",(void*)f_12166},
{"f_12171ChickenBridge.scm",(void*)f_12171},
{"f_12138ChickenBridge.scm",(void*)f_12138},
{"f_12143ChickenBridge.scm",(void*)f_12143},
{"f_12115ChickenBridge.scm",(void*)f_12115},
{"f_12120ChickenBridge.scm",(void*)f_12120},
{"f_12119ChickenBridge.scm",(void*)f_12119},
{"f_12096ChickenBridge.scm",(void*)f_12096},
{"f_12101ChickenBridge.scm",(void*)f_12101},
{"f_12041ChickenBridge.scm",(void*)f_12041},
{"f_12048ChickenBridge.scm",(void*)f_12048},
{"f_12051ChickenBridge.scm",(void*)f_12051},
{"f_12075ChickenBridge.scm",(void*)f_12075},
{"f_12055ChickenBridge.scm",(void*)f_12055},
{"f_12045ChickenBridge.scm",(void*)f_12045},
{"f_11994ChickenBridge.scm",(void*)f_11994},
{"f_12001ChickenBridge.scm",(void*)f_12001},
{"f_12004ChickenBridge.scm",(void*)f_12004},
{"f_12024ChickenBridge.scm",(void*)f_12024},
{"f_12008ChickenBridge.scm",(void*)f_12008},
{"f_11971ChickenBridge.scm",(void*)f_11971},
{"f_11976ChickenBridge.scm",(void*)f_11976},
{"f_11975ChickenBridge.scm",(void*)f_11975},
{"f_11952ChickenBridge.scm",(void*)f_11952},
{"f_11957ChickenBridge.scm",(void*)f_11957},
{"f_11929ChickenBridge.scm",(void*)f_11929},
{"f_11934ChickenBridge.scm",(void*)f_11934},
{"f_11933ChickenBridge.scm",(void*)f_11933},
{"f_11910ChickenBridge.scm",(void*)f_11910},
{"f_11915ChickenBridge.scm",(void*)f_11915},
{"f_11891ChickenBridge.scm",(void*)f_11891},
{"f_11896ChickenBridge.scm",(void*)f_11896},
{"f_11895ChickenBridge.scm",(void*)f_11895},
{"f_11876ChickenBridge.scm",(void*)f_11876},
{"f_11881ChickenBridge.scm",(void*)f_11881},
{"f_11857ChickenBridge.scm",(void*)f_11857},
{"f_11862ChickenBridge.scm",(void*)f_11862},
{"f_11861ChickenBridge.scm",(void*)f_11861},
{"f_11842ChickenBridge.scm",(void*)f_11842},
{"f_11847ChickenBridge.scm",(void*)f_11847},
{"f_11823ChickenBridge.scm",(void*)f_11823},
{"f_11828ChickenBridge.scm",(void*)f_11828},
{"f_11808ChickenBridge.scm",(void*)f_11808},
{"f_11813ChickenBridge.scm",(void*)f_11813},
{"f_11790ChickenBridge.scm",(void*)f_11790},
{"f_11798ChickenBridge.scm",(void*)f_11798},
{"f_11794ChickenBridge.scm",(void*)f_11794},
{"f_11624ChickenBridge.scm",(void*)f_11624},
{"f_11787ChickenBridge.scm",(void*)f_11787},
{"f_11628ChickenBridge.scm",(void*)f_11628},
{"f_11784ChickenBridge.scm",(void*)f_11784},
{"f_11631ChickenBridge.scm",(void*)f_11631},
{"f_11781ChickenBridge.scm",(void*)f_11781},
{"f_11634ChickenBridge.scm",(void*)f_11634},
{"f_11778ChickenBridge.scm",(void*)f_11778},
{"f_11637ChickenBridge.scm",(void*)f_11637},
{"f_11775ChickenBridge.scm",(void*)f_11775},
{"f_11640ChickenBridge.scm",(void*)f_11640},
{"f_11772ChickenBridge.scm",(void*)f_11772},
{"f_11643ChickenBridge.scm",(void*)f_11643},
{"f_11649ChickenBridge.scm",(void*)f_11649},
{"f_11742ChickenBridge.scm",(void*)f_11742},
{"f_11746ChickenBridge.scm",(void*)f_11746},
{"f_11715ChickenBridge.scm",(void*)f_11715},
{"f_11684ChickenBridge.scm",(void*)f_11684},
{"f_11653ChickenBridge.scm",(void*)f_11653},
{"f_11279ChickenBridge.scm",(void*)f_11279},
{"f_11119ChickenBridge.scm",(void*)f_11119},
{"f_11154ChickenBridge.scm",(void*)f_11154},
{"f_11164ChickenBridge.scm",(void*)f_11164},
{"f_11168ChickenBridge.scm",(void*)f_11168},
{"f_11171ChickenBridge.scm",(void*)f_11171},
{"f_11232ChickenBridge.scm",(void*)f_11232},
{"f_11223ChickenBridge.scm",(void*)f_11223},
{"f_11174ChickenBridge.scm",(void*)f_11174},
{"f_11193ChickenBridge.scm",(void*)f_11193},
{"f_11200ChickenBridge.scm",(void*)f_11200},
{"f_11177ChickenBridge.scm",(void*)f_11177},
{"f_11183ChickenBridge.scm",(void*)f_11183},
{"f_11152ChickenBridge.scm",(void*)f_11152},
{"f_11127ChickenBridge.scm",(void*)f_11127},
{"f_11126ChickenBridge.scm",(void*)f_11126},
{"f_11287ChickenBridge.scm",(void*)f_11287},
{"f_10865ChickenBridge.scm",(void*)f_10865},
{"f_10887ChickenBridge.scm",(void*)f_10887},
{"f_10902ChickenBridge.scm",(void*)f_10902},
{"f_10905ChickenBridge.scm",(void*)f_10905},
{"f_11081ChickenBridge.scm",(void*)f_11081},
{"f_11075ChickenBridge.scm",(void*)f_11075},
{"f_10908ChickenBridge.scm",(void*)f_10908},
{"f_11057ChickenBridge.scm",(void*)f_11057},
{"f_10911ChickenBridge.scm",(void*)f_10911},
{"f_10914ChickenBridge.scm",(void*)f_10914},
{"f_11050ChickenBridge.scm",(void*)f_11050},
{"f_11038ChickenBridge.scm",(void*)f_11038},
{"f_10934ChickenBridge.scm",(void*)f_10934},
{"f_10941ChickenBridge.scm",(void*)f_10941},
{"f_11011ChickenBridge.scm",(void*)f_11011},
{"f_10997ChickenBridge.scm",(void*)f_10997},
{"f_11005ChickenBridge.scm",(void*)f_11005},
{"f_10944ChickenBridge.scm",(void*)f_10944},
{"f_10983ChickenBridge.scm",(void*)f_10983},
{"f_10947ChickenBridge.scm",(void*)f_10947},
{"f_10976ChickenBridge.scm",(void*)f_10976},
{"f_10953ChickenBridge.scm",(void*)f_10953},
{"f_10956ChickenBridge.scm",(void*)f_10956},
{"f_10960ChickenBridge.scm",(void*)f_10960},
{"f_10921ChickenBridge.scm",(void*)f_10921},
{"f_10924ChickenBridge.scm",(void*)f_10924},
{"f_10734ChickenBridge.scm",(void*)f_10734},
{"f_10743ChickenBridge.scm",(void*)f_10743},
{"f_10691ChickenBridge.scm",(void*)f_10691},
{"f_10697ChickenBridge.scm",(void*)f_10697},
{"f_10760ChickenBridge.scm",(void*)f_10760},
{"f_10846ChickenBridge.scm",(void*)f_10846},
{"f_10833ChickenBridge.scm",(void*)f_10833},
{"f_10841ChickenBridge.scm",(void*)f_10841},
{"f_10763ChickenBridge.scm",(void*)f_10763},
{"f_10767ChickenBridge.scm",(void*)f_10767},
{"f_10810ChickenBridge.scm",(void*)f_10810},
{"f_10772ChickenBridge.scm",(void*)f_10772},
{"f_10738ChickenBridge.scm",(void*)f_10738},
{"f_10633ChickenBridge.scm",(void*)f_10633},
{"f_10640ChickenBridge.scm",(void*)f_10640},
{"f_10671ChickenBridge.scm",(void*)f_10671},
{"f_10667ChickenBridge.scm",(void*)f_10667},
{"f_10659ChickenBridge.scm",(void*)f_10659},
{"f_10542ChickenBridge.scm",(void*)f_10542},
{"f_10549ChickenBridge.scm",(void*)f_10549},
{"f_10617ChickenBridge.scm",(void*)f_10617},
{"f_10560ChickenBridge.scm",(void*)f_10560},
{"f_10587ChickenBridge.scm",(void*)f_10587},
{"f_10571ChickenBridge.scm",(void*)f_10571},
{"f_10476ChickenBridge.scm",(void*)f_10476},
{"f_10487ChickenBridge.scm",(void*)f_10487},
{"f_10490ChickenBridge.scm",(void*)f_10490},
{"f_10497ChickenBridge.scm",(void*)f_10497},
{"f_10470ChickenBridge.scm",(void*)f_10470},
{"f_9924ChickenBridge.scm",(void*)f_9924},
{"f_9955ChickenBridge.scm",(void*)f_9955},
{"f_10419ChickenBridge.scm",(void*)f_10419},
{"f_10425ChickenBridge.scm",(void*)f_10425},
{"f_9966ChickenBridge.scm",(void*)f_9966},
{"f_9851ChickenBridge.scm",(void*)f_9851},
{"f_9876ChickenBridge.scm",(void*)f_9876},
{"f_9811ChickenBridge.scm",(void*)f_9811},
{"f_9824ChickenBridge.scm",(void*)f_9824},
{"f_9865ChickenBridge.scm",(void*)f_9865},
{"f_9970ChickenBridge.scm",(void*)f_9970},
{"f_10407ChickenBridge.scm",(void*)f_10407},
{"f_10403ChickenBridge.scm",(void*)f_10403},
{"f_10399ChickenBridge.scm",(void*)f_10399},
{"f_9973ChickenBridge.scm",(void*)f_9973},
{"f_10193ChickenBridge.scm",(void*)f_10193},
{"f_10302ChickenBridge.scm",(void*)f_10302},
{"f_10367ChickenBridge.scm",(void*)f_10367},
{"f_10309ChickenBridge.scm",(void*)f_10309},
{"f_10313ChickenBridge.scm",(void*)f_10313},
{"f_10317ChickenBridge.scm",(void*)f_10317},
{"f_10359ChickenBridge.scm",(void*)f_10359},
{"f_10355ChickenBridge.scm",(void*)f_10355},
{"f_10333ChickenBridge.scm",(void*)f_10333},
{"f_10196ChickenBridge.scm",(void*)f_10196},
{"f_10199ChickenBridge.scm",(void*)f_10199},
{"f_10098ChickenBridge.scm",(void*)f_10098},
{"f_10181ChickenBridge.scm",(void*)f_10181},
{"f_10148ChickenBridge.scm",(void*)f_10148},
{"f_10174ChickenBridge.scm",(void*)f_10174},
{"f_10156ChickenBridge.scm",(void*)f_10156},
{"f_10104ChickenBridge.scm",(void*)f_10104},
{"f_10144ChickenBridge.scm",(void*)f_10144},
{"f_10086ChickenBridge.scm",(void*)f_10086},
{"f_10057ChickenBridge.scm",(void*)f_10057},
{"f_10079ChickenBridge.scm",(void*)f_10079},
{"f_10065ChickenBridge.scm",(void*)f_10065},
{"f_10019ChickenBridge.scm",(void*)f_10019},
{"f_9976ChickenBridge.scm",(void*)f_9976},
{"f_9987ChickenBridge.scm",(void*)f_9987},
{"f_9991ChickenBridge.scm",(void*)f_9991},
{"f_9995ChickenBridge.scm",(void*)f_9995},
{"f_9999ChickenBridge.scm",(void*)f_9999},
{"f_9983ChickenBridge.scm",(void*)f_9983},
{"f_9943ChickenBridge.scm",(void*)f_9943},
{"f_9938ChickenBridge.scm",(void*)f_9938},
{"f_9933ChickenBridge.scm",(void*)f_9933},
{"f_9765ChickenBridge.scm",(void*)f_9765},
{"f_9776ChickenBridge.scm",(void*)f_9776},
{"f_9791ChickenBridge.scm",(void*)f_9791},
{"f_9727ChickenBridge.scm",(void*)f_9727},
{"f_9738ChickenBridge.scm",(void*)f_9738},
{"f_9753ChickenBridge.scm",(void*)f_9753},
{"f_9660ChickenBridge.scm",(void*)f_9660},
{"f_9680ChickenBridge.scm",(void*)f_9680},
{"f_9690ChickenBridge.scm",(void*)f_9690},
{"f_9703ChickenBridge.scm",(void*)f_9703},
{"f_9671ChickenBridge.scm",(void*)f_9671},
{"f_9678ChickenBridge.scm",(void*)f_9678},
{"f_9467ChickenBridge.scm",(void*)f_9467},
{"f_9527ChickenBridge.scm",(void*)f_9527},
{"f_9537ChickenBridge.scm",(void*)f_9537},
{"f_9651ChickenBridge.scm",(void*)f_9651},
{"f_9616ChickenBridge.scm",(void*)f_9616},
{"f_9608ChickenBridge.scm",(void*)f_9608},
{"f_9579ChickenBridge.scm",(void*)f_9579},
{"f_9557ChickenBridge.scm",(void*)f_9557},
{"f_9560ChickenBridge.scm",(void*)f_9560},
{"f_9548ChickenBridge.scm",(void*)f_9548},
{"f_9474ChickenBridge.scm",(void*)f_9474},
{"f_9525ChickenBridge.scm",(void*)f_9525},
{"f_9517ChickenBridge.scm",(void*)f_9517},
{"f_9477ChickenBridge.scm",(void*)f_9477},
{"f_9488ChickenBridge.scm",(void*)f_9488},
{"f_9492ChickenBridge.scm",(void*)f_9492},
{"f_9484ChickenBridge.scm",(void*)f_9484},
{"f_9325ChickenBridge.scm",(void*)f_9325},
{"f_9373ChickenBridge.scm",(void*)f_9373},
{"f_9383ChickenBridge.scm",(void*)f_9383},
{"f_9394ChickenBridge.scm",(void*)f_9394},
{"f_9431ChickenBridge.scm",(void*)f_9431},
{"f_9406ChickenBridge.scm",(void*)f_9406},
{"f_9397ChickenBridge.scm",(void*)f_9397},
{"f_9335ChickenBridge.scm",(void*)f_9335},
{"f_9371ChickenBridge.scm",(void*)f_9371},
{"f_9342ChickenBridge.scm",(void*)f_9342},
{"f_8974ChickenBridge.scm",(void*)f_8974},
{"f_8981ChickenBridge.scm",(void*)f_8981},
{"f_9215ChickenBridge.scm",(void*)f_9215},
{"f_9225ChickenBridge.scm",(void*)f_9225},
{"f_9236ChickenBridge.scm",(void*)f_9236},
{"f_9248ChickenBridge.scm",(void*)f_9248},
{"f_9251ChickenBridge.scm",(void*)f_9251},
{"f_9239ChickenBridge.scm",(void*)f_9239},
{"f_8987ChickenBridge.scm",(void*)f_8987},
{"f_9213ChickenBridge.scm",(void*)f_9213},
{"f_9209ChickenBridge.scm",(void*)f_9209},
{"f_9155ChickenBridge.scm",(void*)f_9155},
{"f_9120ChickenBridge.scm",(void*)f_9120},
{"f_9136ChickenBridge.scm",(void*)f_9136},
{"f_9091ChickenBridge.scm",(void*)f_9091},
{"f_9015ChickenBridge.scm",(void*)f_9015},
{"f_9018ChickenBridge.scm",(void*)f_9018},
{"f_9082ChickenBridge.scm",(void*)f_9082},
{"f_9078ChickenBridge.scm",(void*)f_9078},
{"f_8998ChickenBridge.scm",(void*)f_8998},
{"f_9009ChickenBridge.scm",(void*)f_9009},
{"f_9005ChickenBridge.scm",(void*)f_9005},
{"f_8927ChickenBridge.scm",(void*)f_8927},
{"f_8960ChickenBridge.scm",(void*)f_8960},
{"f_8942ChickenBridge.scm",(void*)f_8942},
{"f_8954ChickenBridge.scm",(void*)f_8954},
{"f_8545ChickenBridge.scm",(void*)f_8545},
{"f_8754ChickenBridge.scm",(void*)f_8754},
{"f_8764ChickenBridge.scm",(void*)f_8764},
{"f_8775ChickenBridge.scm",(void*)f_8775},
{"f_8895ChickenBridge.scm",(void*)f_8895},
{"f_8874ChickenBridge.scm",(void*)f_8874},
{"f_8853ChickenBridge.scm",(void*)f_8853},
{"f_8832ChickenBridge.scm",(void*)f_8832},
{"f_8811ChickenBridge.scm",(void*)f_8811},
{"f_8790ChickenBridge.scm",(void*)f_8790},
{"f_8778ChickenBridge.scm",(void*)f_8778},
{"f_8555ChickenBridge.scm",(void*)f_8555},
{"f_8558ChickenBridge.scm",(void*)f_8558},
{"f_8721ChickenBridge.scm",(void*)f_8721},
{"f_8561ChickenBridge.scm",(void*)f_8561},
{"f_8712ChickenBridge.scm",(void*)f_8712},
{"f_8692ChickenBridge.scm",(void*)f_8692},
{"f_8564ChickenBridge.scm",(void*)f_8564},
{"f_8657ChickenBridge.scm",(void*)f_8657},
{"f_8674ChickenBridge.scm",(void*)f_8674},
{"f_8567ChickenBridge.scm",(void*)f_8567},
{"f_8606ChickenBridge.scm",(void*)f_8606},
{"f_8640ChickenBridge.scm",(void*)f_8640},
{"f_8624ChickenBridge.scm",(void*)f_8624},
{"f_8609ChickenBridge.scm",(void*)f_8609},
{"f_8574ChickenBridge.scm",(void*)f_8574},
{"f_8585ChickenBridge.scm",(void*)f_8585},
{"f_8589ChickenBridge.scm",(void*)f_8589},
{"f_8581ChickenBridge.scm",(void*)f_8581},
{"f_8463ChickenBridge.scm",(void*)f_8463},
{"f_8467ChickenBridge.scm",(void*)f_8467},
{"f_8485ChickenBridge.scm",(void*)f_8485},
{"f_8303ChickenBridge.scm",(void*)f_8303},
{"f_8311ChickenBridge.scm",(void*)f_8311},
{"f_8321ChickenBridge.scm",(void*)f_8321},
{"f_8359ChickenBridge.scm",(void*)f_8359},
{"f_8362ChickenBridge.scm",(void*)f_8362},
{"f_8365ChickenBridge.scm",(void*)f_8365},
{"f_8440ChickenBridge.scm",(void*)f_8440},
{"f_8450ChickenBridge.scm",(void*)f_8450},
{"f_8368ChickenBridge.scm",(void*)f_8368},
{"f_8371ChickenBridge.scm",(void*)f_8371},
{"f_8374ChickenBridge.scm",(void*)f_8374},
{"f_8394ChickenBridge.scm",(void*)f_8394},
{"f_8404ChickenBridge.scm",(void*)f_8404},
{"f_8407ChickenBridge.scm",(void*)f_8407},
{"f_8410ChickenBridge.scm",(void*)f_8410},
{"f_8377ChickenBridge.scm",(void*)f_8377},
{"f_8380ChickenBridge.scm",(void*)f_8380},
{"f_8297ChickenBridge.scm",(void*)f_8297},
{"f_8291ChickenBridge.scm",(void*)f_8291},
{"f_8285ChickenBridge.scm",(void*)f_8285},
{"f_8214ChickenBridge.scm",(void*)f_8214},
{"f_8255ChickenBridge.scm",(void*)f_8255},
{"f_8259ChickenBridge.scm",(void*)f_8259},
{"f_8263ChickenBridge.scm",(void*)f_8263},
{"f_8267ChickenBridge.scm",(void*)f_8267},
{"f_8271ChickenBridge.scm",(void*)f_8271},
{"f_8275ChickenBridge.scm",(void*)f_8275},
{"f_8279ChickenBridge.scm",(void*)f_8279},
{"f_8283ChickenBridge.scm",(void*)f_8283},
{"f_8216ChickenBridge.scm",(void*)f_8216},
{"f_8222ChickenBridge.scm",(void*)f_8222},
{"f_8244ChickenBridge.scm",(void*)f_8244},
{"f_8233ChickenBridge.scm",(void*)f_8233},
{"f_8063ChickenBridge.scm",(void*)f_8063},
{"f_8078ChickenBridge.scm",(void*)f_8078},
{"f_8091ChickenBridge.scm",(void*)f_8091},
{"f_8051ChickenBridge.scm",(void*)f_8051},
{"f_8039ChickenBridge.scm",(void*)f_8039},
{"f_8027ChickenBridge.scm",(void*)f_8027},
{"f_8021ChickenBridge.scm",(void*)f_8021},
{"f_8015ChickenBridge.scm",(void*)f_8015},
{"f_8003ChickenBridge.scm",(void*)f_8003},
{"f_7991ChickenBridge.scm",(void*)f_7991},
{"f_7979ChickenBridge.scm",(void*)f_7979},
{"f_7967ChickenBridge.scm",(void*)f_7967},
{"f_7961ChickenBridge.scm",(void*)f_7961},
{"f_7925ChickenBridge.scm",(void*)f_7925},
{"f_7919ChickenBridge.scm",(void*)f_7919},
{"f_7872ChickenBridge.scm",(void*)f_7872},
{"f_7876ChickenBridge.scm",(void*)f_7876},
{"f_7892ChickenBridge.scm",(void*)f_7892},
{"f_7901ChickenBridge.scm",(void*)f_7901},
{"f_7879ChickenBridge.scm",(void*)f_7879},
{"f_7863ChickenBridge.scm",(void*)f_7863},
{"f_7867ChickenBridge.scm",(void*)f_7867},
{"f_7684ChickenBridge.scm",(void*)f_7684},
{"f_7837ChickenBridge.scm",(void*)f_7837},
{"f_7850ChickenBridge.scm",(void*)f_7850},
{"f_7832ChickenBridge.scm",(void*)f_7832},
{"f_7687ChickenBridge.scm",(void*)f_7687},
{"f_7829ChickenBridge.scm",(void*)f_7829},
{"f_7813ChickenBridge.scm",(void*)f_7813},
{"f_7806ChickenBridge.scm",(void*)f_7806},
{"f_7802ChickenBridge.scm",(void*)f_7802},
{"f_7715ChickenBridge.scm",(void*)f_7715},
{"f_7723ChickenBridge.scm",(void*)f_7723},
{"f_7733ChickenBridge.scm",(void*)f_7733},
{"f_7736ChickenBridge.scm",(void*)f_7736},
{"f_7718ChickenBridge.scm",(void*)f_7718},
{"f_7513ChickenBridge.scm",(void*)f_7513},
{"f_7519ChickenBridge.scm",(void*)f_7519},
{"f_7522ChickenBridge.scm",(void*)f_7522},
{"f_5322ChickenBridge.scm",(void*)f_5322},
{"f_5335ChickenBridge.scm",(void*)f_5335},
{"f_5342ChickenBridge.scm",(void*)f_5342},
{"f_5349ChickenBridge.scm",(void*)f_5349},
{"f_5328ChickenBridge.scm",(void*)f_5328},
{"f_7526ChickenBridge.scm",(void*)f_7526},
{"f_7560ChickenBridge.scm",(void*)f_7560},
{"f_7653ChickenBridge.scm",(void*)f_7653},
{"f_7663ChickenBridge.scm",(void*)f_7663},
{"f_7566ChickenBridge.scm",(void*)f_7566},
{"f_7623ChickenBridge.scm",(void*)f_7623},
{"f_7633ChickenBridge.scm",(void*)f_7633},
{"f_7574ChickenBridge.scm",(void*)f_7574},
{"f_7588ChickenBridge.scm",(void*)f_7588},
{"f_7592ChickenBridge.scm",(void*)f_7592},
{"f_7596ChickenBridge.scm",(void*)f_7596},
{"f_7600ChickenBridge.scm",(void*)f_7600},
{"f_7607ChickenBridge.scm",(void*)f_7607},
{"f_7584ChickenBridge.scm",(void*)f_7584},
{"f_7577ChickenBridge.scm",(void*)f_7577},
{"f_7529ChickenBridge.scm",(void*)f_7529},
{"f_6449ChickenBridge.scm",(void*)f_6449},
{"f_6462ChickenBridge.scm",(void*)f_6462},
{"f_6512ChickenBridge.scm",(void*)f_6512},
{"f_6609ChickenBridge.scm",(void*)f_6609},
{"f_6677ChickenBridge.scm",(void*)f_6677},
{"f_6934ChickenBridge.scm",(void*)f_6934},
{"f_6684ChickenBridge.scm",(void*)f_6684},
{"f_6922ChickenBridge.scm",(void*)f_6922},
{"f_6873ChickenBridge.scm",(void*)f_6873},
{"f_6879ChickenBridge.scm",(void*)f_6879},
{"f_6903ChickenBridge.scm",(void*)f_6903},
{"f_6899ChickenBridge.scm",(void*)f_6899},
{"f_6887ChickenBridge.scm",(void*)f_6887},
{"f_6687ChickenBridge.scm",(void*)f_6687},
{"f_6849ChickenBridge.scm",(void*)f_6849},
{"f_6853ChickenBridge.scm",(void*)f_6853},
{"f_6690ChickenBridge.scm",(void*)f_6690},
{"f_6826ChickenBridge.scm",(void*)f_6826},
{"f_6830ChickenBridge.scm",(void*)f_6830},
{"f_6693ChickenBridge.scm",(void*)f_6693},
{"f_6803ChickenBridge.scm",(void*)f_6803},
{"f_6807ChickenBridge.scm",(void*)f_6807},
{"f_6696ChickenBridge.scm",(void*)f_6696},
{"f_6728ChickenBridge.scm",(void*)f_6728},
{"f_6746ChickenBridge.scm",(void*)f_6746},
{"f_6764ChickenBridge.scm",(void*)f_6764},
{"f_6782ChickenBridge.scm",(void*)f_6782},
{"f_6699ChickenBridge.scm",(void*)f_6699},
{"f_6703ChickenBridge.scm",(void*)f_6703},
{"f_6613ChickenBridge.scm",(void*)f_6613},
{"f_6617ChickenBridge.scm",(void*)f_6617},
{"f_6621ChickenBridge.scm",(void*)f_6621},
{"f_6516ChickenBridge.scm",(void*)f_6516},
{"f_6520ChickenBridge.scm",(void*)f_6520},
{"f_6524ChickenBridge.scm",(void*)f_6524},
{"f_6543ChickenBridge.scm",(void*)f_6543},
{"f_6547ChickenBridge.scm",(void*)f_6547},
{"f_6527ChickenBridge.scm",(void*)f_6527},
{"f_6531ChickenBridge.scm",(void*)f_6531},
{"f_6466ChickenBridge.scm",(void*)f_6466},
{"f_6470ChickenBridge.scm",(void*)f_6470},
{"f_6474ChickenBridge.scm",(void*)f_6474},
{"f_6456ChickenBridge.scm",(void*)f_6456},
{"f_6271ChickenBridge.scm",(void*)f_6271},
{"f_6283ChickenBridge.scm",(void*)f_6283},
{"f_6302ChickenBridge.scm",(void*)f_6302},
{"f_6320ChickenBridge.scm",(void*)f_6320},
{"f_6352ChickenBridge.scm",(void*)f_6352},
{"f_6355ChickenBridge.scm",(void*)f_6355},
{"f_6348ChickenBridge.scm",(void*)f_6348},
{"f_6334ChickenBridge.scm",(void*)f_6334},
{"f_6305ChickenBridge.scm",(void*)f_6305},
{"f_6250ChickenBridge.scm",(void*)f_6250},
{"f_6257ChickenBridge.scm",(void*)f_6257},
{"f_6260ChickenBridge.scm",(void*)f_6260},
{"f_6266ChickenBridge.scm",(void*)f_6266},
{"f_6185ChickenBridge.scm",(void*)f_6185},
{"f_6194ChickenBridge.scm",(void*)f_6194},
{"f_6217ChickenBridge.scm",(void*)f_6217},
{"f_6207ChickenBridge.scm",(void*)f_6207},
{"f_6141ChickenBridge.scm",(void*)f_6141},
{"f_6129ChickenBridge.scm",(void*)f_6129},
{"f_6027ChickenBridge.scm",(void*)f_6027},
{"f_5979ChickenBridge.scm",(void*)f_5979},
{"f_5360ChickenBridge.scm",(void*)f_5360},
{"f_5364ChickenBridge.scm",(void*)f_5364},
{"f_5367ChickenBridge.scm",(void*)f_5367},
{"f_5793ChickenBridge.scm",(void*)f_5793},
{"f_5789ChickenBridge.scm",(void*)f_5789},
{"f_5785ChickenBridge.scm",(void*)f_5785},
{"f_5370ChickenBridge.scm",(void*)f_5370},
{"f_5493ChickenBridge.scm",(void*)f_5493},
{"f_4726ChickenBridge.scm",(void*)f_4726},
{"f_5499ChickenBridge.scm",(void*)f_5499},
{"f_4742ChickenBridge.scm",(void*)f_4742},
{"f_5587ChickenBridge.scm",(void*)f_5587},
{"f_5657ChickenBridge.scm",(void*)f_5657},
{"f_4758ChickenBridge.scm",(void*)f_4758},
{"f_5660ChickenBridge.scm",(void*)f_5660},
{"f_4790ChickenBridge.scm",(void*)f_4790},
{"f_5738ChickenBridge.scm",(void*)f_5738},
{"f_5764ChickenBridge.scm",(void*)f_5764},
{"f_5758ChickenBridge.scm",(void*)f_5758},
{"f_5747ChickenBridge.scm",(void*)f_5747},
{"f_5689ChickenBridge.scm",(void*)f_5689},
{"f_5699ChickenBridge.scm",(void*)f_5699},
{"f_5725ChickenBridge.scm",(void*)f_5725},
{"f_5719ChickenBridge.scm",(void*)f_5719},
{"f_5702ChickenBridge.scm",(void*)f_5702},
{"f_5712ChickenBridge.scm",(void*)f_5712},
{"f_5705ChickenBridge.scm",(void*)f_5705},
{"f_5666ChickenBridge.scm",(void*)f_5666},
{"f_5675ChickenBridge.scm",(void*)f_5675},
{"f_5669ChickenBridge.scm",(void*)f_5669},
{"f_5593ChickenBridge.scm",(void*)f_5593},
{"f_5611ChickenBridge.scm",(void*)f_5611},
{"f_5644ChickenBridge.scm",(void*)f_5644},
{"f_5630ChickenBridge.scm",(void*)f_5630},
{"f_5638ChickenBridge.scm",(void*)f_5638},
{"f_5621ChickenBridge.scm",(void*)f_5621},
{"f_5596ChickenBridge.scm",(void*)f_5596},
{"f_5508ChickenBridge.scm",(void*)f_5508},
{"f_5530ChickenBridge.scm",(void*)f_5530},
{"f_5577ChickenBridge.scm",(void*)f_5577},
{"f_5563ChickenBridge.scm",(void*)f_5563},
{"f_5571ChickenBridge.scm",(void*)f_5571},
{"f_5543ChickenBridge.scm",(void*)f_5543},
{"f_5546ChickenBridge.scm",(void*)f_5546},
{"f_5511ChickenBridge.scm",(void*)f_5511},
{"f_5528ChickenBridge.scm",(void*)f_5528},
{"f_5514ChickenBridge.scm",(void*)f_5514},
{"f_5385ChickenBridge.scm",(void*)f_5385},
{"f_5443ChickenBridge.scm",(void*)f_5443},
{"f_5446ChickenBridge.scm",(void*)f_5446},
{"f_5467ChickenBridge.scm",(void*)f_5467},
{"f_5478ChickenBridge.scm",(void*)f_5478},
{"f_5457ChickenBridge.scm",(void*)f_5457},
{"f_5391ChickenBridge.scm",(void*)f_5391},
{"f_5401ChickenBridge.scm",(void*)f_5401},
{"f_5437ChickenBridge.scm",(void*)f_5437},
{"f_5407ChickenBridge.scm",(void*)f_5407},
{"f_5422ChickenBridge.scm",(void*)f_5422},
{"f_5426ChickenBridge.scm",(void*)f_5426},
{"f_5430ChickenBridge.scm",(void*)f_5430},
{"f_5414ChickenBridge.scm",(void*)f_5414},
{"f_5256ChickenBridge.scm",(void*)f_5256},
{"f_5258ChickenBridge.scm",(void*)f_5258},
{"f_5306ChickenBridge.scm",(void*)f_5306},
{"f_5262ChickenBridge.scm",(void*)f_5262},
{"f_5265ChickenBridge.scm",(void*)f_5265},
{"f_5270ChickenBridge.scm",(void*)f_5270},
{"f_5291ChickenBridge.scm",(void*)f_5291},
{"f_5248ChickenBridge.scm",(void*)f_5248},
{"f_5250ChickenBridge.scm",(void*)f_5250},
{"f_5040ChickenBridge.scm",(void*)f_5040},
{"f_5057ChickenBridge.scm",(void*)f_5057},
{"f_5061ChickenBridge.scm",(void*)f_5061},
{"f_5007ChickenBridge.scm",(void*)f_5007},
{"f_5014ChickenBridge.scm",(void*)f_5014},
{"f_4958ChickenBridge.scm",(void*)f_4958},
{"f_4965ChickenBridge.scm",(void*)f_4965},
{"f_5023ChickenBridge.scm",(void*)f_5023},
{"f_5246ChickenBridge.scm",(void*)f_5246},
{"f_5223ChickenBridge.scm",(void*)f_5223},
{"f_5239ChickenBridge.scm",(void*)f_5239},
{"f_5085ChickenBridge.scm",(void*)f_5085},
{"f_5088ChickenBridge.scm",(void*)f_5088},
{"f_5112ChickenBridge.scm",(void*)f_5112},
{"f_5169ChickenBridge.scm",(void*)f_5169},
{"f_5175ChickenBridge.scm",(void*)f_5175},
{"f_5184ChickenBridge.scm",(void*)f_5184},
{"f_5193ChickenBridge.scm",(void*)f_5193},
{"f_5202ChickenBridge.scm",(void*)f_5202},
{"f_5211ChickenBridge.scm",(void*)f_5211},
{"f_5163ChickenBridge.scm",(void*)f_5163},
{"f_5118ChickenBridge.scm",(void*)f_5118},
{"f_5124ChickenBridge.scm",(void*)f_5124},
{"f_5130ChickenBridge.scm",(void*)f_5130},
{"f_5136ChickenBridge.scm",(void*)f_5136},
{"f_5142ChickenBridge.scm",(void*)f_5142},
{"f_5148ChickenBridge.scm",(void*)f_5148},
{"f_4989ChickenBridge.scm",(void*)f_4989},
{"f_4996ChickenBridge.scm",(void*)f_4996},
{"f_4979ChickenBridge.scm",(void*)f_4979},
{"f_4967ChickenBridge.scm",(void*)f_4967},
{"f_4935ChickenBridge.scm",(void*)f_4935},
{"f_4942ChickenBridge.scm",(void*)f_4942},
{"f_4949ChickenBridge.scm",(void*)f_4949},
{"f_4919ChickenBridge.scm",(void*)f_4919},
{"f_4926ChickenBridge.scm",(void*)f_4926},
{"f_4933ChickenBridge.scm",(void*)f_4933},
{"f_4907ChickenBridge.scm",(void*)f_4907},
{"f_4889ChickenBridge.scm",(void*)f_4889},
{"f_4871ChickenBridge.scm",(void*)f_4871},
{"f_4856ChickenBridge.scm",(void*)f_4856},
{"f_4850ChickenBridge.scm",(void*)f_4850},
{"f_4838ChickenBridge.scm",(void*)f_4838},
{"f_4820ChickenBridge.scm",(void*)f_4820},
{"f_4799ChickenBridge.scm",(void*)f_4799},
{"f_4767ChickenBridge.scm",(void*)f_4767},
{"f_4774ChickenBridge.scm",(void*)f_4774},
{"f_4709ChickenBridge.scm",(void*)f_4709},
{"f_4717ChickenBridge.scm",(void*)f_4717},
{"f_4699ChickenBridge.scm",(void*)f_4699},
{"f_4707ChickenBridge.scm",(void*)f_4707},
{"f_4693ChickenBridge.scm",(void*)f_4693},
{"f_4681ChickenBridge.scm",(void*)f_4681},
{"f_4657ChickenBridge.scm",(void*)f_4657},
{"f_4570ChickenBridge.scm",(void*)f_4570},
{"f_4549ChickenBridge.scm",(void*)f_4549},
{"f_4539ChickenBridge.scm",(void*)f_4539},
{"f_4527ChickenBridge.scm",(void*)f_4527},
{"f_4498ChickenBridge.scm",(void*)f_4498},
{"f_4486ChickenBridge.scm",(void*)f_4486},
{"f_4468ChickenBridge.scm",(void*)f_4468},
{"f_4450ChickenBridge.scm",(void*)f_4450},
{"f_4429ChickenBridge.scm",(void*)f_4429},
{"f_4423ChickenBridge.scm",(void*)f_4423},
{"f_4417ChickenBridge.scm",(void*)f_4417},
{"f_4398ChickenBridge.scm",(void*)f_4398},
{"f_4379ChickenBridge.scm",(void*)f_4379},
{"f_4373ChickenBridge.scm",(void*)f_4373},
{"f_4333ChickenBridge.scm",(void*)f_4333},
{"f_4314ChickenBridge.scm",(void*)f_4314},
{"f_4270ChickenBridge.scm",(void*)f_4270},
{"f_4264ChickenBridge.scm",(void*)f_4264},
{"f_4258ChickenBridge.scm",(void*)f_4258},
{"f_4252ChickenBridge.scm",(void*)f_4252},
{"f_4246ChickenBridge.scm",(void*)f_4246},
{"f_4223ChickenBridge.scm",(void*)f_4223},
{"f_4240ChickenBridge.scm",(void*)f_4240},
{"f_4165ChickenBridge.scm",(void*)f_4165},
{"f_4217ChickenBridge.scm",(void*)f_4217},
{"f_4201ChickenBridge.scm",(void*)f_4201},
{"f_4182ChickenBridge.scm",(void*)f_4182},
{"f_4159ChickenBridge.scm",(void*)f_4159},
{"f_4071ChickenBridge.scm",(void*)f_4071},
{"f_4117ChickenBridge.scm",(void*)f_4117},
{"f_4065ChickenBridge.scm",(void*)f_4065},
{"f_4006ChickenBridge.scm",(void*)f_4006},
{"f_4019ChickenBridge.scm",(void*)f_4019},
{"f_4055ChickenBridge.scm",(void*)f_4055},
{"f_4000ChickenBridge.scm",(void*)f_4000},
{"f_3905ChickenBridge.scm",(void*)f_3905},
{"f_3909ChickenBridge.scm",(void*)f_3909},
{"f_3912ChickenBridge.scm",(void*)f_3912},
{"f_3924ChickenBridge.scm",(void*)f_3924},
{"f_3946ChickenBridge.scm",(void*)f_3946},
{"f_3899ChickenBridge.scm",(void*)f_3899},
{"f_3893ChickenBridge.scm",(void*)f_3893},
{"f_3887ChickenBridge.scm",(void*)f_3887},
{"f_3881ChickenBridge.scm",(void*)f_3881},
{"f_3875ChickenBridge.scm",(void*)f_3875},
{"f_3815ChickenBridge.scm",(void*)f_3815},
{"f_3827ChickenBridge.scm",(void*)f_3827},
{"f_3822ChickenBridge.scm",(void*)f_3822},
{"f_3817ChickenBridge.scm",(void*)f_3817},
{"f_3796ChickenBridge.scm",(void*)f_3796},
{"f_3790ChickenBridge.scm",(void*)f_3790},
{"f_3784ChickenBridge.scm",(void*)f_3784},
{"f_3702ChickenBridge.scm",(void*)f_3702},
{"f_3716ChickenBridge.scm",(void*)f_3716},
{"f_3683ChickenBridge.scm",(void*)f_3683},
{"f_3670ChickenBridge.scm",(void*)f_3670},
{"f_3660ChickenBridge.scm",(void*)f_3660},
{"f_3649ChickenBridge.scm",(void*)f_3649},
{"f_3642ChickenBridge.scm",(void*)f_3642},
{"f_3631ChickenBridge.scm",(void*)f_3631},
{"f_3593ChickenBridge.scm",(void*)f_3593},
{"f_3586ChickenBridge.scm",(void*)f_3586},
{"f_3511ChickenBridge.scm",(void*)f_3511},
{"f_3477ChickenBridge.scm",(void*)f_3477},
{"f_3450ChickenBridge.scm",(void*)f_3450},
{"f_3421ChickenBridge.scm",(void*)f_3421},
{"f_3430ChickenBridge.scm",(void*)f_3430},
{"f_3435ChickenBridge.scm",(void*)f_3435},
{"f_3410ChickenBridge.scm",(void*)f_3410},
{"f_3415ChickenBridge.scm",(void*)f_3415},
{"f_3370ChickenBridge.scm",(void*)f_3370},
{"f_3400ChickenBridge.scm",(void*)f_3400},
{"f_3322ChickenBridge.scm",(void*)f_3322},
{"f_3356ChickenBridge.scm",(void*)f_3356},
{"f_3302ChickenBridge.scm",(void*)f_3302},
{"f_3282ChickenBridge.scm",(void*)f_3282},
{"f_3268ChickenBridge.scm",(void*)f_3268},
{"f_3258ChickenBridge.scm",(void*)f_3258},
{"f_3248ChickenBridge.scm",(void*)f_3248},
{"f_3238ChickenBridge.scm",(void*)f_3238},
{"f_3228ChickenBridge.scm",(void*)f_3228},
{"f_2931ChickenBridge.scm",(void*)f_2931},
{"f_2941ChickenBridge.scm",(void*)f_2941},
{"f_3192ChickenBridge.scm",(void*)f_3192},
{"f_2944ChickenBridge.scm",(void*)f_2944},
{"f_2947ChickenBridge.scm",(void*)f_2947},
{"f_2962ChickenBridge.scm",(void*)f_2962},
{"f_2972ChickenBridge.scm",(void*)f_2972},
{"f_2974ChickenBridge.scm",(void*)f_2974},
{"f_3033ChickenBridge.scm",(void*)f_3033},
{"f_3043ChickenBridge.scm",(void*)f_3043},
{"f_3160ChickenBridge.scm",(void*)f_3160},
{"f_3148ChickenBridge.scm",(void*)f_3148},
{"f_3146ChickenBridge.scm",(void*)f_3146},
{"f_3133ChickenBridge.scm",(void*)f_3133},
{"f_3087ChickenBridge.scm",(void*)f_3087},
{"f_3114ChickenBridge.scm",(void*)f_3114},
{"f_3093ChickenBridge.scm",(void*)f_3093},
{"f_3027ChickenBridge.scm",(void*)f_3027},
{"f_2986ChickenBridge.scm",(void*)f_2986},
{"f_2999ChickenBridge.scm",(void*)f_2999},
{"f_3209ChickenBridge.scm",(void*)f_3209},
{"f_3200ChickenBridge.scm",(void*)f_3200},
{"f_3208ChickenBridge.scm",(void*)f_3208},
{"f_3211ChickenBridge.scm",(void*)f_3211},
{"f_3219ChickenBridge.scm",(void*)f_3219},
{NULL,NULL}};
#endif

static C_PTABLE_ENTRY *create_ptable(void){
#ifdef C_ENABLE_PTABLES
return ptable;
#else
return NULL;
#endif
}
/* end of file */
